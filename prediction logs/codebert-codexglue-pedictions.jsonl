{"id": 0, "prediction": "Flushes the given value to the queue ."}
{"id": 2, "prediction": "Sorts a list using the provided comparator ."}
{"id": 4, "prediction": "Creates a new multicast processor ."}
{"id": 6, "prediction": "Try to adapt a subscriber to a Publisher ."}
{"id": 8, "prediction": "Resets all resources ."}
{"id": 10, "prediction": "Creates a Maybe from a SingleSource ."}
{"id": 12, "prediction": "Requests that the object is not null ."}
{"id": 14, "prediction": "Convert value to a Callable"}
{"id": 16, "prediction": "Creates a function that casts the given class to the given target class ."}
{"id": 18, "prediction": "Creates a new instance of the given capacity ."}
{"id": 20, "prediction": "Creates a new unicast subject ."}
{"id": 22, "prediction": "Waits for an error ."}
{"id": 24, "prediction": "Drains the queue until it is exhausted ."}
{"id": 26, "prediction": "This method is called when the subscriber completes ."}
{"id": 28, "prediction": "Returns the value of the notification ."}
{"id": 30, "prediction": "Validates that the supplier is not null ."}
{"id": 32, "prediction": "Validates the given Subscription ."}
{"id": 34, "prediction": "Adds a long to the buffer ."}
{"id": 36, "prediction": "Adds the specified number to the specified long ."}
{"id": 38, "prediction": "Adds an object to the list ."}
{"id": 40, "prediction": "Creates a scheduler service ."}
{"id": 42, "prediction": "Emits the queue ."}
{"id": 44, "prediction": "Flatten a Throwable into a List ."}
{"id": 46, "prediction": "Removes all resources ."}
{"id": 48, "prediction": "Subscribes the given Observable with the given Observer ."}
{"id": 50, "prediction": "Accepts the given subscriber and returns true if any ."}
{"id": 52, "prediction": "Starts the queue ."}
{"id": 54, "prediction": "Offers an object to the queue ."}
{"id": 56, "prediction": "Completes the current value ."}
{"id": 58, "prediction": "Completes the current state ."}
{"id": 60, "prediction": "Convenience method for concatenation over the provided map ."}
{"id": 62, "prediction": "Blocks until the consumer is completed ."}
{"id": 64, "prediction": "Adds a subscriber to the list of subscribers ."}
{"id": 66, "prediction": "Adapts a Flowable to a Flowable ."}
{"id": 68, "prediction": "Sets the delay ."}
{"id": 70, "prediction": "Calculates the delay"}
{"id": 72, "prediction": "Returns the HttpMethod instance of the given method ."}
{"id": 74, "prediction": "Encodes a raw password ."}
{"id": 76, "prediction": "Checks if the given version is enabled ."}
{"id": 78, "prediction": "Gets the spring version ."}
{"id": 80, "prediction": "Configure an OAuth2 client ."}
{"id": 82, "prediction": "Returns a ChannelMatcher that will be registered in the application ."}
{"id": 84, "prediction": "Retrieves the entry for the given DN ."}
{"id": 86, "prediction": "Searches for multiple attribute values ."}
{"id": 88, "prediction": "Builds the search controls ."}
{"id": 90, "prediction": "Builds a preAuthenticationDetails object ."}
{"id": 92, "prediction": "Create servlet filter ."}
{"id": 94, "prediction": "Creates a whitelisted type ."}
{"id": 96, "prediction": "Get a token for a given series ."}
{"id": 98, "prediction": "Creates a new cipher ."}
{"id": 100, "prediction": "Perform authentication ."}
{"id": 102, "prediction": "Perform authentication ."}
{"id": 104, "prediction": "Converts a collection of authorities to a set of authorities ."}
{"id": 106, "prediction": "Update authentication defaults ."}
{"id": 108, "prediction": "Maps the given object to a string ."}
{"id": 110, "prediction": "Helper method to encode a cookie ."}
{"id": 112, "prediction": "Resolves a security parameter ."}
{"id": 114, "prediction": "Gets the service port ."}
{"id": 116, "prediction": "Log out the session ."}
{"id": 118, "prediction": "Build a provider URL ."}
{"id": 120, "prediction": "Get the full redirect url ."}
{"id": 122, "prediction": "Initialize the user details ."}
{"id": 124, "prediction": "Adds the parameters to the parameters ."}
{"id": 126, "prediction": "Service authentication request ."}
{"id": 128, "prediction": "Returns true if the authentication token is authenticated ."}
{"id": 130, "prediction": "Creates the securitySecurityExpression root ."}
{"id": 132, "prediction": "Encodes the given string using UTF - 8 encoding ."}
{"id": 134, "prediction": "Load user by assertion ."}
{"id": 136, "prediction": "Concatenate two arrays ."}
{"id": 138, "prediction": "Returns a list of granted authorities ."}
{"id": 140, "prediction": "Gets the collection of granted authorities ."}
{"id": 142, "prediction": "Gets the principal principal ."}
{"id": 144, "prediction": "Build the redirect URL for the given request ."}
{"id": 146, "prediction": "Ensures that the given role has been set ."}
{"id": 148, "prediction": "Process an auto login cookie ."}
{"id": 150, "prediction": "Attempt to switch the user to the specified username ."}
{"id": 152, "prediction": "Sets the exit user URL ."}
{"id": 154, "prediction": "Build the filter chain ."}
{"id": 156, "prediction": "Authorizes the access expression ."}
{"id": 158, "prediction": "Convert a jwt token to a list of authorities ."}
{"id": 160, "prediction": "Display admin permission ."}
{"id": 162, "prediction": "Add a permission ."}
{"id": 164, "prediction": "Returns the role with the given prefix ."}
{"id": 166, "prediction": "Get a list of attribute values ."}
{"id": 168, "prediction": "Encodes a string into a byte array ."}
{"id": 170, "prediction": "Look up an array of parameter names ."}
{"id": 172, "prediction": "Find attributes for the given method ."}
{"id": 174, "prediction": "Get all config attributes ."}
{"id": 176, "prediction": "Configures any of the given request ."}
{"id": 178, "prediction": "Gets a random contact ."}
{"id": 180, "prediction": "Gets the field with the given name ."}
{"id": 182, "prediction": "Create redirect url ."}
{"id": 184, "prediction": "Invoked by the client ."}
{"id": 186, "prediction": "Returns the array of registered types ."}
{"id": 188, "prediction": "Register access manager ."}
{"id": 190, "prediction": "Compares two byte arrays ."}
{"id": 192, "prediction": "Sets the value of the hidden hidden inputs ."}
{"id": 194, "prediction": "Checks if the given URL is an absolute URL ."}
{"id": 196, "prediction": "Converts a ResultSet to an Identifier ."}
{"id": 198, "prediction": "Creates an object identity ."}
{"id": 200, "prediction": "Save request ."}
{"id": 202, "prediction": "Creates a MatchMatcher that matches the given exchange ."}
{"id": 204, "prediction": "Creates a text encryptor for the given password ."}
{"id": 206, "prediction": "Writes the headers to the response ."}
{"id": 208, "prediction": "Determine the target URL ."}
{"id": 210, "prediction": "Gets the directory with the given id ."}
{"id": 212, "prediction": "Creates a map of shared objects ."}
{"id": 214, "prediction": "Gets the current date ."}
{"id": 216, "prediction": "Update cache ."}
{"id": 218, "prediction": "Determines the security name for the given subject ."}
{"id": 220, "prediction": "Change password ."}
{"id": 222, "prediction": "Checks that the session has expired sessions ."}
{"id": 224, "prediction": "Returns all filters for the given request ."}
{"id": 226, "prediction": "Gets the application context ."}
{"id": 228, "prediction": "Sets session attributes ."}
{"id": 230, "prediction": "Adds a list of filters ."}
{"id": 232, "prediction": "Creates a basic authentication scheme ."}
{"id": 234, "prediction": "Creates a new form of the form of the given user ."}
{"id": 236, "prediction": "Prints the response body ."}
{"id": 238, "prediction": "Sets the default encoding parameter ."}
{"id": 240, "prediction": "Sets the object mapper ."}
{"id": 242, "prediction": "Sets the mock config ."}
{"id": 244, "prediction": "Sets the rest mock config ."}
{"id": 246, "prediction": "Sets the rest mock config ."}
{"id": 248, "prediction": "Creates a mock config ."}
{"id": 250, "prediction": "Creates a mock config ."}
{"id": 252, "prediction": "Sets the rest mock config ."}
{"id": 254, "prediction": "Declare a new namespace path ."}
{"id": 1, "prediction": "Wrap an Observable ."}
{"id": 3, "prediction": "Adapts a ConnectableObserver ."}
{"id": 5, "prediction": "Creates a new multicast processor ."}
{"id": 7, "prediction": "Creates a reactive xmap that maps a value to a scalar map ."}
{"id": 9, "prediction": "Creates a Maybe from a CompletableSource ."}
{"id": 11, "prediction": "Retries the given predicate with the given predicate ."}
{"id": 13, "prediction": "Gets the identity function ."}
{"id": 15, "prediction": "Creates a function that returns a value ."}
{"id": 17, "prediction": "Creates a new instance of this instance ."}
{"id": 19, "prediction": "Create a new unicast subject ."}
{"id": 21, "prediction": "Returns the current error if any ."}
{"id": 23, "prediction": "Blocks until the timeout is reached ."}
{"id": 25, "prediction": "Submits a subscription to the given subscription ."}
{"id": 27, "prediction": "Called when the operation is completed ."}
{"id": 29, "prediction": "Gets the error ."}
{"id": 31, "prediction": "Sets the atomic reference to the supplier ."}
{"id": 33, "prediction": "Sets the atomic subscription ."}
{"id": 35, "prediction": "Multiplies a long value ."}
{"id": 37, "prediction": "Converts a Throwable to a NullPointerException ."}
{"id": 39, "prediction": "Shuts down the pool ."}
{"id": 41, "prediction": "Sets a new subscription ."}
{"id": 43, "prediction": "Wrap a Throwable to a RuntimeException ."}
{"id": 45, "prediction": "Throws an exception if the given Throwable is an exception ."}
{"id": 47, "prediction": "Returns the number of resources ."}
{"id": 49, "prediction": "Adapts a scalar map to a scalar map ."}
{"id": 51, "prediction": "Accepts and returns true if the element is null ."}
{"id": 53, "prediction": "Starts the queue ."}
{"id": 55, "prediction": "Gets the disposable ."}
{"id": 57, "prediction": "Sets the error ."}
{"id": 59, "prediction": "Concatenates a map of values to a Publisher ."}
{"id": 61, "prediction": "Sorts the given list using the provided comparator ."}
{"id": 63, "prediction": "Sends a request to the queue ."}
{"id": 65, "prediction": "Removes a subscriber from the list ."}
{"id": 67, "prediction": "Parses the annotations of the given method ."}
{"id": 69, "prediction": "Creates an error response ."}
{"id": 71, "prediction": "Create sample data ."}
{"id": 73, "prediction": "Search for a user ."}
{"id": 75, "prediction": "Returns true if the encoded password matches the encoded password ."}
{"id": 77, "prediction": "Determines whether or not the given version is enabled ."}
{"id": 79, "prediction": "Add an attribute exchangeurer ."}
{"id": 81, "prediction": "Configure the OAuth2 resource server ."}
{"id": 83, "prediction": "Compares the LDAP LDAP query against the specified value ."}
{"id": 85, "prediction": "Search for attribute values ."}
{"id": 87, "prediction": "Search for a single entry in a directory ."}
{"id": 89, "prediction": "Lookup the parents of the given ACLs ."}
{"id": 91, "prediction": "Creates an embedded server definition ."}
{"id": 93, "prediction": "Creates the jaas filter filter ."}
{"id": 95, "prediction": "Registers the spring security filter chain ."}
{"id": 97, "prediction": "Gets a list of authority authorities ."}
{"id": 99, "prediction": "Sets the authentication manager ."}
{"id": 101, "prediction": "Checks if the principal changed ."}
{"id": 103, "prediction": "Check the content length of the response ."}
{"id": 105, "prediction": "Sets the URL for processing processing ."}
{"id": 107, "prediction": "Update the access defaults ."}
{"id": 109, "prediction": "Extracts the cookie from the request ."}
{"id": 111, "prediction": "Sets the cookie ."}
{"id": 113, "prediction": "Gets the query string ."}
{"id": 115, "prediction": "Gets the principal ."}
{"id": 117, "prediction": "Authenticate a user ."}
{"id": 119, "prediction": "Sets environment variables ."}
{"id": 121, "prediction": "Render the tag ."}
{"id": 123, "prediction": "Gets the UserDetailsService ."}
{"id": 125, "prediction": "Checks whether the servlet request is required ."}
{"id": 127, "prediction": "Proxy authentication request ."}
{"id": 129, "prediction": "Determines if the request is a proxy request ."}
{"id": 131, "prediction": "Gets the JWKK set ."}
{"id": 133, "prediction": "Gets the groups based on the current user ."}
{"id": 135, "prediction": "Gets the principal ."}
{"id": 137, "prediction": "Creates a portion of a byte array ."}
{"id": 139, "prediction": "Preprocess a map of attributes ."}
{"id": 141, "prediction": "Adds a collection of roles to the collection ."}
{"id": 143, "prediction": "Returns the shared object associated with the given type ."}
{"id": 145, "prediction": "Invokes the interceptor method ."}
{"id": 147, "prediction": "Converts a list of roles to a list of roles ."}
{"id": 149, "prediction": "On successful login ."}
{"id": 151, "prediction": "Attempt to switch the user to the current user ."}
{"id": 153, "prediction": "Display the public contact"}
{"id": 155, "prediction": "Decodes the given token ."}
{"id": 157, "prediction": "Checks if the URL is authorized by the URL ."}
{"id": 159, "prediction": "Generates a new Csrc token ."}
{"id": 161, "prediction": "Display the add permission for a contact ."}
{"id": 163, "prediction": "Delete a permission ."}
{"id": 165, "prediction": "Creates a new UserDetailsResourceFactory instance ."}
{"id": 167, "prediction": "Returns the first attribute value for the given name ."}
{"id": 169, "prediction": "Decode a byte array ."}
{"id": 171, "prediction": "Add a new contact ."}
{"id": 173, "prediction": "Add a secure method ."}
{"id": 175, "prediction": "Checks if the mapped method name matches the mapped method name ."}
{"id": 177, "prediction": "Handle bind exception ."}
{"id": 179, "prediction": "Clear authentication attributes ."}
{"id": 181, "prediction": "Create service url ."}
{"id": 183, "prediction": "Extracts the prefix of the SHA prefix ."}
{"id": 185, "prediction": "Checks that the filters are duplicated ."}
{"id": 187, "prediction": "Retrieves the cause of the given throwable ."}
{"id": 189, "prediction": "Converts a collection of roles to a Set ."}
{"id": 191, "prediction": "Sets the default failure url ."}
{"id": 193, "prediction": "Build the request URL ."}
{"id": 195, "prediction": "Returns a list of attributes for a given identifier ."}
{"id": 197, "prediction": "Batch entries ."}
{"id": 199, "prediction": "Updates the object identity ."}
{"id": 201, "prediction": "Creates a new server matcher that matches the given patterns ."}
{"id": 203, "prediction": "Creates a TextEncryptor ."}
{"id": 205, "prediction": "Creates a TextEncryptor with the given password ."}
{"id": 207, "prediction": "Determine the target URL ."}
{"id": 209, "prediction": "Sets the target url parameter ."}
{"id": 211, "prediction": "Build a distinguished name ."}
{"id": 213, "prediction": "Configure the login configuration ."}
{"id": 215, "prediction": "Internal method used to parse a date string ."}
{"id": 217, "prediction": "Sets the authentication details ."}
{"id": 219, "prediction": "Get the groups for the given security name ."}
{"id": 221, "prediction": "Build a group dn ."}
{"id": 223, "prediction": "Copy details from another AuthenticationToken ."}
{"id": 225, "prediction": "Returns a list of filters ."}
{"id": 227, "prediction": "Returns the full distinguished name ."}
{"id": 229, "prediction": "Sets the basic authentication scheme ."}
{"id": 231, "prediction": "Adds a filter to the list of filters ."}
{"id": 233, "prediction": "Creates an NTL scheme from the given user ."}
{"id": 235, "prediction": "Adds a proxy to the given URI ."}
{"id": 237, "prediction": "Configures a redirect to a redirect ."}
{"id": 239, "prediction": "Configures the default object mapper ."}
{"id": 241, "prediction": "Sets the mock config ."}
{"id": 243, "prediction": "Sets the RESTMapper config ."}
{"id": 245, "prediction": "Sets the mock config ."}
{"id": 247, "prediction": "Sets the rest mock config ."}
{"id": 249, "prediction": "Creates a mock config ."}
{"id": 251, "prediction": "Sets the mock config ."}
{"id": 253, "prediction": "Sets the certificate authentication settings ."}
{"id": 255, "prediction": "Sets the namespace configuration for the given prefix ."}
{"id": 257, "prediction": "Sets the default headers ."}
{"id": 259, "prediction": "Sets the control name ."}
{"id": 261, "prediction": "Set basic authentication ."}
{"id": 263, "prediction": "Creates a new headers from the given headers ."}
{"id": 265, "prediction": "Sets a header ."}
{"id": 267, "prediction": "Create a new cookieMatcher that matches the given value ."}
{"id": 269, "prediction": "Matches a cookie matcher that matches the given expiry date ."}
{"id": 271, "prediction": "Create a new cookieMatcher that matches the given path ."}
{"id": 273, "prediction": "Creates a new HTTP cookieMatcher that matches the provided http request ."}
{"id": 275, "prediction": "Matches a cookie matcher that matches the maximum age ."}
{"id": 277, "prediction": "Expect that a header has a header value ."}
{"id": 279, "prediction": "Returns a copy of the host ."}
{"id": 281, "prediction": "Sets the default parser configuration ."}
{"id": 283, "prediction": "Enable logging ."}
{"id": 285, "prediction": "Sets the default configuration for this MultiPartition ."}
{"id": 287, "prediction": "Add a header ."}
{"id": 289, "prediction": "Add result handlers ."}
{"id": 291, "prediction": "Add http client parameters ."}
{"id": 293, "prediction": "Sets the HttpClientConfig ."}
{"id": 295, "prediction": "Gets an integer value ."}
{"id": 297, "prediction": "Get a short value ."}
{"id": 299, "prediction": "Get a double value ."}
{"id": 301, "prediction": "Gets a list of objects from a path ."}
{"id": 303, "prediction": "Gets the value of the given path ."}
{"id": 305, "prediction": "Add a cookie to the request ."}
{"id": 307, "prediction": "Adds a parameter to the request ."}
{"id": 309, "prediction": "Logs a response to the given matcher ."}
{"id": 311, "prediction": "Cleans up the state of the set ."}
{"id": 313, "prediction": "Returns the binding for the given key ."}
{"id": 315, "prediction": "Cleans up the bindings for the given binding ."}
{"id": 317, "prediction": "Returns the set of internal dependencies ."}
{"id": 319, "prediction": "Gets all parameters from the given injectors ."}
{"id": 321, "prediction": "Binds a logger to the logger ."}
{"id": 323, "prediction": "Returns true if the given method is overridden ."}
{"id": 325, "prediction": "Returns the type of the provider ."}
{"id": 327, "prediction": "Returns the corresponding type literal for the given type ."}
{"id": 329, "prediction": "Converts a class loader to a system class loader ."}
{"id": 331, "prediction": "Checks if the given member is public ."}
{"id": 333, "prediction": "Requests that an instance of the given object is injected ."}
{"id": 335, "prediction": "Creates a new instance of the constructor ."}
{"id": 337, "prediction": "Creates a factory for the given scope ."}
{"id": 339, "prediction": "Normalize a path ."}
{"id": 341, "prediction": "Determines whether the given annotation is retention ."}
{"id": 343, "prediction": "Returns the binding for the given type ."}
{"id": 345, "prediction": "Initializes the delegate provider ."}
{"id": 347, "prediction": "Returns the constructor for the given constructor ."}
{"id": 349, "prediction": "Creates a new real map ."}
{"id": 351, "prediction": "Creates a new instance of the specified factory ."}
{"id": 353, "prediction": "Creates a module for the given module ."}
{"id": 355, "prediction": "Checks if the given type is a type ."}
{"id": 357, "prediction": "Returns the dependencies of the given type ."}
{"id": 359, "prediction": "Checks if a dependency is valid ."}
{"id": 361, "prediction": "Invokes the method on the proxy ."}
{"id": 363, "prediction": "Creates a new real multibibinder ."}
{"id": 365, "prediction": "Find the next filter ."}
{"id": 367, "prediction": "Gets the internal constructor ."}
{"id": 369, "prediction": "Creates a module for the given module ."}
{"id": 371, "prediction": "Returns the line number of the given member ."}
{"id": 373, "prediction": "Creates a new callable that wraps the provided callable ."}
{"id": 375, "prediction": "Validates that the given object is compatible with the given key ."}
{"id": 377, "prediction": "Creates and returns the members of the given type ."}
{"id": 379, "prediction": "Returns a new Key instance for the given type ."}
{"id": 381, "prediction": "Returns an annotation strategy for the given annotation type ."}
{"id": 383, "prediction": "Gets the binding source ."}
{"id": 385, "prediction": "Creates a new message with the given arguments ."}
{"id": 387, "prediction": "Creates a new message with the given arguments ."}
{"id": 389, "prediction": "Checks if the given class is skipped ."}
{"id": 391, "prediction": "Main entry point ."}
{"id": 393, "prediction": "Push the state for the given key ."}
{"id": 395, "prediction": "Creates a new instance of the given provider ."}
{"id": 397, "prediction": "Adds a new connection event processor ."}
{"id": 399, "prediction": "Lazily registers a throwable ."}
{"id": 401, "prediction": "Registers the default processor ."}
{"id": 403, "prediction": "Try to get a Url for a given URL"}
{"id": 405, "prediction": "Gets all connection pools ."}
{"id": 407, "prediction": "Gets connection pool ."}
{"id": 409, "prediction": "Remove a connection from the pool ."}
{"id": 411, "prediction": "Create connection ."}
{"id": 413, "prediction": "Called when the connection is closed ."}
{"id": 415, "prediction": "Sets the value of an attribute ."}
{"id": 417, "prediction": "Register user processor ."}
{"id": 419, "prediction": "deserialize request"}
{"id": 421, "prediction": "Logs the timeout"}
{"id": 423, "prediction": "Executes the given message ."}
{"id": 425, "prediction": "On invocation ."}
{"id": 427, "prediction": "Convert an integer value to a BitSet ."}
{"id": 429, "prediction": "Stop the process ."}
{"id": 431, "prediction": "Filters a map of connections to a list of connections ."}
{"id": 433, "prediction": "Close the last select connect ."}
{"id": 435, "prediction": "Log an INFO message ."}
{"id": 437, "prediction": "Gets user processor ."}
{"id": 439, "prediction": "Returns the value associated with the given key ."}
{"id": 441, "prediction": "Resolve a response object ."}
{"id": 443, "prediction": "Converts the response to a Throwable ."}
{"id": 445, "prediction": "Create RpcServerException ."}
{"id": 447, "prediction": "Creates a new event loop group ."}
{"id": 449, "prediction": "Parses the given channel ."}
{"id": 451, "prediction": "Parse the remote host name ."}
{"id": 453, "prediction": "Parse the remote port ."}
{"id": 455, "prediction": "Parses the given socket address ."}
{"id": 457, "prediction": "Removes a connection ."}
{"id": 459, "prediction": "Register a custom serializer"}
{"id": 461, "prediction": "Register custom serializer"}
{"id": 463, "prediction": "Start the connection monitor ."}
{"id": 465, "prediction": "Initialize the write buffer ."}
{"id": 467, "prediction": "Writes a web socket to the web socket ."}
{"id": 469, "prediction": "Validates the given payload ."}
{"id": 471, "prediction": "Checks the handshake state ."}
{"id": 473, "prediction": "Translate a single packet size ."}
{"id": 475, "prediction": "Process a continuous frame ."}
{"id": 477, "prediction": "Logs runtime exception ."}
{"id": 479, "prediction": "Process a frame ."}
{"id": 481, "prediction": "Process a close frame ."}
{"id": 483, "prediction": "Gets the payload from the buffer ."}
{"id": 485, "prediction": "Translate a handshake request ."}
{"id": 487, "prediction": "Decodes the packet ."}
{"id": 489, "prediction": "Closes the connection ."}
{"id": 491, "prediction": "Sends a text message to the server ."}
{"id": 493, "prediction": "Starts the read thread ."}
{"id": 495, "prediction": "Send handshake ."}
{"id": 497, "prediction": "Stop connection timeout ."}
{"id": 499, "prediction": "Start the connection timeout ."}
{"id": 501, "prediction": "Cancels the connection lost ."}
{"id": 503, "prediction": "Send ping frame ."}
{"id": 505, "prediction": "Gets the port ."}
{"id": 507, "prediction": "Accepts a connection ."}
{"id": 509, "prediction": "Writes data to the connection ."}
{"id": 511, "prediction": "Ensure that the thread is open ."}
{"id": 256, "prediction": "Sends a request using the default configuration ."}
{"id": 258, "prediction": "Sets the default proxy ."}
{"id": 260, "prediction": "Sets a header with the specified name ."}
{"id": 262, "prediction": "Sets the NTLM for the given host ."}
{"id": 264, "prediction": "Resets the configuration ."}
{"id": 266, "prediction": "Build the REST response ."}
{"id": 268, "prediction": "Matches a cookie matcher that matches the given comment ."}
{"id": 270, "prediction": "Creates a new cookieMatcher that matches the specified domain ."}
{"id": 272, "prediction": "Creates a new cookieMatcher that matches the secured cookie ."}
{"id": 274, "prediction": "Matches a cookie with the given version ."}
{"id": 276, "prediction": "Expect that a header has a header value ."}
{"id": 278, "prediction": "Expect that a cookie has a cookie value ."}
{"id": 280, "prediction": "Configure a JsonPath return type ."}
{"id": 282, "prediction": "Sets the default log stream ."}
{"id": 284, "prediction": "Creates a new HTTP request based on the given URI ."}
{"id": 286, "prediction": "Add an attribute ."}
{"id": 288, "prediction": "Add a multi part ."}
{"id": 290, "prediction": "Sets the http client configuration ."}
{"id": 292, "prediction": "Sets the HttpClientFactory ."}
{"id": 294, "prediction": "Gets the value of the given path ."}
{"id": 296, "prediction": "Returns the byte value for the given path ."}
{"id": 298, "prediction": "Get a float value ."}
{"id": 300, "prediction": "Returns the long value for the given path ."}
{"id": 302, "prediction": "Gets the value for the given path ."}
{"id": 304, "prediction": "Sets the body of the object ."}
{"id": 306, "prediction": "Adds a parameter to the request ."}
{"id": 308, "prediction": "Sets the mock param param ."}
{"id": 310, "prediction": "Creates a new cookies from the given cookies ."}
{"id": 312, "prediction": "Index all implicit bindings ."}
{"id": 314, "prediction": "Convert a string to a constant binding ."}
{"id": 316, "prediction": "Removes a failed JIT binding ."}
{"id": 318, "prediction": "Creates a new binding for the given key ."}
{"id": 320, "prediction": "Binds an injector to the provider ."}
{"id": 322, "prediction": "Checks to see if a binding annotation is annotated ."}
{"id": 324, "prediction": "Initializes the delegate ."}
{"id": 326, "prediction": "Resolves all of the given types ."}
{"id": 328, "prediction": "Prepares the built - converters ."}
{"id": 330, "prediction": "Checks if the class is compatible with the given class loader ."}
{"id": 332, "prediction": "Fixes annotations ."}
{"id": 334, "prediction": "Validates all injected injections ."}
{"id": 336, "prediction": "Wrap the servlet request ."}
{"id": 338, "prediction": "Make a new scoped scope ."}
{"id": 340, "prediction": "Gets the annotation ."}
{"id": 342, "prediction": "Finds scope annotation ."}
{"id": 344, "prediction": "Returns the name of the given key ."}
{"id": 346, "prediction": "Adds the binding binding binding ."}
{"id": 348, "prediction": "Checks if the given interceptor is annotated ."}
{"id": 350, "prediction": "Gets the key for the given key ."}
{"id": 352, "prediction": "Writes the message to the source ."}
{"id": 354, "prediction": "Returns a collection of all methods ."}
{"id": 356, "prediction": "Returns true if the given constructor matches the given constructor ."}
{"id": 358, "prediction": "Removes dependencies from the set of dependencies ."}
{"id": 360, "prediction": "Gets the binding from the injector ."}
{"id": 362, "prediction": "Generates an error message for the given key ."}
{"id": 364, "prediction": "Gets the key for a new item ."}
{"id": 366, "prediction": "Checks if the given Constructor is annotated ."}
{"id": 368, "prediction": "Returns the set of internal dependencies ."}
{"id": 370, "prediction": "Gets the annotated annotation ."}
{"id": 372, "prediction": "Initialize the errors ."}
{"id": 374, "prediction": "Transforms a callable request ."}
{"id": 376, "prediction": "Returns the members of the given type ."}
{"id": 378, "prediction": "Gets the injectors for the given set of injection points ."}
{"id": 380, "prediction": "Returns a strategy instance for the given annotation ."}
{"id": 382, "prediction": "Prune the stack trace of the exception ."}
{"id": 384, "prediction": "Format a list of errors ."}
{"id": 386, "prediction": "Creates a message with the specified detail message and arguments ."}
{"id": 388, "prediction": "Convert an object to an object ."}
{"id": 390, "prediction": "Gets the configuration from a list of modules ."}
{"id": 392, "prediction": "Pushes a dependency ."}
{"id": 394, "prediction": "Creates a new initializable instance ."}
{"id": 396, "prediction": "Process a connection event ."}
{"id": 398, "prediction": "Gets the future task ."}
{"id": 400, "prediction": "Registers a processor for the given command code ."}
{"id": 402, "prediction": "Returns the processor for the given command code ."}
{"id": 404, "prediction": "Decode protocol code ."}
{"id": 406, "prediction": "Scan pool tasks ."}
{"id": 408, "prediction": "Creates a connection pool ."}
{"id": 410, "prediction": "Attempts to heal the connection if necessary ."}
{"id": 412, "prediction": "Closes a connection ."}
{"id": 414, "prediction": "Closes the connection ."}
{"id": 416, "prediction": "Register user processor ."}
{"id": 418, "prediction": "Dispatches an RPC request ."}
{"id": 420, "prediction": "Pre - pre - processing request context ."}
{"id": 422, "prediction": "Logs debug request"}
{"id": 424, "prediction": "Invokes a command on the remote server ."}
{"id": 426, "prediction": "Convert bit set to byte ."}
{"id": 428, "prediction": "Add a reconnect task ."}
{"id": 430, "prediction": "Converts a request to a remote server ."}
{"id": 432, "prediction": "Monitor connection pools ."}
{"id": 434, "prediction": "Gets a boolean property ."}
{"id": 436, "prediction": "Returns true if this request is a request timeout ."}
{"id": 438, "prediction": "Get a random connection from the list of connections ."}
{"id": 440, "prediction": "Gets a property ."}
{"id": 442, "prediction": "Deserialize response object ."}
{"id": 444, "prediction": "Returns the detail error message ."}
{"id": 446, "prediction": "Print the connection trace log"}
{"id": 448, "prediction": "Parse the remote address ."}
{"id": 450, "prediction": "Parse the remote IP address ."}
{"id": 452, "prediction": "Parse the local IP address ."}
{"id": 454, "prediction": "Parse the local port ."}
{"id": 456, "prediction": "Adds a connection ."}
{"id": 458, "prediction": "Returns the connection ."}
{"id": 460, "prediction": "Get custom serializer"}
{"id": 462, "prediction": "Get custom serializer"}
{"id": 464, "prediction": "Check if the remote address is connected ."}
{"id": 466, "prediction": "Creates a new framed data frame ."}
{"id": 468, "prediction": "Sets the status code ."}
{"id": 470, "prediction": "Update the payload ."}
{"id": 472, "prediction": "Translate a single frame length limit ."}
{"id": 474, "prediction": "Generate the final key ."}
{"id": 476, "prediction": "Process a frame ."}
{"id": 478, "prediction": "Process a frame ."}
{"id": 480, "prediction": "Process the next frame ."}
{"id": 482, "prediction": "Checks if the buffer size is exceeded ."}
{"id": 484, "prediction": "Get the total number of bytes ."}
{"id": 486, "prediction": "Translate a handshake request ."}
{"id": 488, "prediction": "Close connection ."}
{"id": 490, "prediction": "Generates the HTTP response for the given error code ."}
{"id": 492, "prediction": "Reset connection ."}
{"id": 494, "prediction": "Returns the port number ."}
{"id": 496, "prediction": "Sets the connection lost ."}
{"id": 498, "prediction": "Start the connection timeout ."}
{"id": 500, "prediction": "Called when a connection is detected ."}
{"id": 502, "prediction": "On handshake handshake ."}
{"id": 504, "prediction": "Stops the server ."}
{"id": 506, "prediction": "Performs additional read read ."}
{"id": 508, "prediction": "Perform a read operation ."}
{"id": 510, "prediction": "Initializes the selector thread ."}
{"id": 513, "prediction": "Get the socket ."}
{"id": 515, "prediction": "Broadcasts a text message to all clients ."}
{"id": 517, "prediction": "Fill the list of frames ."}
{"id": 519, "prediction": "Starts the persistence manager ."}
{"id": 521, "prediction": "Adds a transaction to the transaction manager ."}
{"id": 523, "prediction": "Wrap the given arguments ."}
{"id": 525, "prediction": "Gets a message ."}
{"id": 527, "prediction": "Replies the preferred message for the specified language ."}
{"id": 529, "prediction": "Sets the language ."}
{"id": 531, "prediction": "Adds bindings to the bindings ."}
{"id": 533, "prediction": "Adds the given modules to this module ."}
{"id": 535, "prediction": "Sets the override overrides ."}
{"id": 537, "prediction": "Executes the given request with the given context ."}
{"id": 539, "prediction": "Gets an existing file ."}
{"id": 541, "prediction": "Creates a tuple ."}
{"id": 543, "prediction": "Converts an ExecutionContext to an executor ."}
{"id": 545, "prediction": "Creates a new JPACConfig instance ."}
{"id": 547, "prediction": "Creates a string from a callback ."}
{"id": 549, "prediction": "Adds a new mapped constraint for the given key ."}
{"id": 551, "prediction": "Returns the accessible method for the given method name ."}
{"id": 553, "prediction": "Handle a bad request ."}
{"id": 555, "prediction": "Handles a 404 response ."}
{"id": 557, "prediction": "Logs a server error message ."}
{"id": 559, "prediction": "Handle error error ."}
{"id": 561, "prediction": "Creates a new documentation handler for the given resources ."}
{"id": 563, "prediction": "Creates a new BuildDoc for a given directory ."}
{"id": 565, "prediction": "Create a documentation handler for a given jar file ."}
{"id": 567, "prediction": "Creates an HttpEntity from the given content ."}
{"id": 569, "prediction": "Creates a chunked from the given data source ."}
{"id": 571, "prediction": "Sends a response to a JSON response ."}
{"id": 573, "prediction": "Sends a response to the response ."}
{"id": 575, "prediction": "Finds a user by id ."}
{"id": 577, "prediction": "Creates a unique call ."}
{"id": 579, "prediction": "Returns the absolute URL for the given request ."}
{"id": 581, "prediction": "Adapts a connection to a connection ."}
{"id": 583, "prediction": "Creates a server for the given port ."}
{"id": 585, "prediction": "Converts a JsonNode to an object ."}
{"id": 587, "prediction": "Parse a JsonNode from an input stream ."}
{"id": 589, "prediction": "Returns the canonical path for the given URL ."}
{"id": 591, "prediction": "Parses the given constraint ."}
{"id": 593, "prediction": "Checks if class is assignable ."}
{"id": 595, "prediction": "Get the next interval interval ."}
{"id": 597, "prediction": "Creates a new GuiceApplicationBuilder ."}
{"id": 599, "prediction": "Sets the session ."}
{"id": 601, "prediction": "Qualified binding key ."}
{"id": 603, "prediction": "Converts an object to a binding ."}
{"id": 605, "prediction": "Creates a binding from the given supplier ."}
{"id": 607, "prediction": "Converts a provider to a provider ."}
{"id": 609, "prediction": "Returns the preferred language for the given application ."}
{"id": 611, "prediction": "Creates a new eviction reader for the evolution ."}
{"id": 613, "prediction": "Loads the configuration with the given configuration ."}
{"id": 615, "prediction": "Loads the given modules ."}
{"id": 617, "prediction": "Loads the Guice application ."}
{"id": 619, "prediction": "Creates a GuiceBuilder ."}
{"id": 621, "prediction": "Returns the entity manager ."}
{"id": 623, "prediction": "Pushes an entity to the stack ."}
{"id": 625, "prediction": "Creates a bypassing flow from the given splitter ."}
{"id": 627, "prediction": "Convert the error arguments to a list of error messages ."}
{"id": 629, "prediction": "Gets the validation errors ."}
{"id": 631, "prediction": "Returns the value associated with the given key ."}
{"id": 633, "prediction": "Converts a string to an object ."}
{"id": 635, "prediction": "Print the given object as a String"}
{"id": 637, "prediction": "Print a type ."}
{"id": 639, "prediction": "Register a formatter for the given type ."}
{"id": 641, "prediction": "Encodes a cookie ."}
{"id": 643, "prediction": "Converts a List to a List ."}
{"id": 645, "prediction": "Converts an array of varargs to a sequence ."}
{"id": 647, "prediction": "Accepts and returns a WebSocket as a WebSocket"}
{"id": 649, "prediction": "Calculates the cost of a primitive type promotion ."}
{"id": 651, "prediction": "Calculates the cost cost for a given class ."}
{"id": 653, "prediction": "Gets a message at the specified positions ."}
{"id": 655, "prediction": "Create a parallel SortedSorter ."}
{"id": 657, "prediction": "Merge sort sort sort ."}
{"id": 659, "prediction": "Cast to a numeric type ."}
{"id": 661, "prediction": "Emit a field ."}
{"id": 663, "prediction": "Unbox the given type ."}
{"id": 665, "prediction": "implements the visitor to look for null"}
{"id": 667, "prediction": "Retrieves all methods from the given interfaces ."}
{"id": 669, "prediction": "Sets the super class ."}
{"id": 671, "prediction": "Adds a method signature ."}
{"id": 673, "prediction": "Sets the naming policy ."}
{"id": 675, "prediction": "Resolve relative path ."}
{"id": 677, "prediction": "Sets the host ."}
{"id": 679, "prediction": "Creates a new HTTP request ."}
{"id": 681, "prediction": "Create a POST request ."}
{"id": 683, "prediction": "Create a PATCH request ."}
{"id": 685, "prediction": "Create a HEAD request ."}
{"id": 687, "prediction": "Creates a HTTP OPTIONS request"}
{"id": 689, "prediction": "Sets the cookies header ."}
{"id": 691, "prediction": "Sets the query map ."}
{"id": 693, "prediction": "Get the query string ."}
{"id": 695, "prediction": "Set the basic authentication header ."}
{"id": 697, "prediction": "Creates a new request ."}
{"id": 699, "prediction": "Removes a handler from the list of handlers ."}
{"id": 701, "prediction": "Collect all action interceptors ."}
{"id": 703, "prediction": "Collect the action results ."}
{"id": 705, "prediction": "Sets a simple property ."}
{"id": 707, "prediction": "Extract the property name from the property name ."}
{"id": 709, "prediction": "Sets the object reference ."}
{"id": 711, "prediction": "Lookup an object reference ."}
{"id": 713, "prediction": "Find table descriptor by column name ."}
{"id": 715, "prediction": "Registers a table reference ."}
{"id": 717, "prediction": "Register a hint ."}
{"id": 719, "prediction": "Inject attributes from servlet request ."}
{"id": 721, "prediction": "Inject all uploaded files ."}
{"id": 723, "prediction": "Convert a column name to a property name ."}
{"id": 725, "prediction": "Sets the value stored in the prepared statement ."}
{"id": 727, "prediction": "Gets all wrappers ."}
{"id": 729, "prediction": "Creates a new wrapper instance ."}
{"id": 731, "prediction": "Gets the path from the given filename ."}
{"id": 733, "prediction": "Returns the relative path relative to the target path ."}
{"id": 735, "prediction": "Sets the action config ."}
{"id": 737, "prediction": "Configure default defaults ."}
{"id": 739, "prediction": "Exclude jar files ."}
{"id": 741, "prediction": "Includes all entries in the specified class ."}
{"id": 743, "prediction": "Scans a jar file ."}
{"id": 745, "prediction": "Returns the signature of the given type ."}
{"id": 747, "prediction": "Start scanning files ."}
{"id": 749, "prediction": "Returns the default scope for the given scope ."}
{"id": 751, "prediction": "Creates a new scope for the specified scope ."}
{"id": 753, "prediction": "Prepare a CSRF token ."}
{"id": 755, "prediction": "Checks if the given token is valid ."}
{"id": 757, "prediction": "Creates a copy of this bean ."}
{"id": 759, "prediction": "Registers the table reference ."}
{"id": 761, "prediction": "Register a new Petite ."}
{"id": 763, "prediction": "Removes a bean from the given type ."}
{"id": 765, "prediction": "Registers a bean injection point injection point ."}
{"id": 767, "prediction": "Register a SetInjectionSet for a given property ."}
{"id": 512, "prediction": "Closes the server shutdown ."}
{"id": 514, "prediction": "Broadcasts the given data to the client ."}
{"id": 516, "prediction": "Broadcast data frames ."}
{"id": 518, "prediction": "Transfer bytes to destination ."}
{"id": 520, "prediction": "Returns the entity manager for the given name ."}
{"id": 522, "prediction": "Convert an array of arguments to a Scala object ."}
{"id": 524, "prediction": "Gets the localized message ."}
{"id": 526, "prediction": "Checks if the specified key is defined in the language ."}
{"id": 528, "prediction": "Display the preferred message ."}
{"id": 530, "prediction": "Add bindings to this module ."}
{"id": 532, "prediction": "Sets the bindings ."}
{"id": 534, "prediction": "Adds the given modules to this module ."}
{"id": 536, "prediction": "Disable module classes ."}
{"id": 538, "prediction": "Executes the given request with the given request ."}
{"id": 540, "prediction": "Returns the binding for the given scope ."}
{"id": 542, "prediction": "Factory method for creating a tuple ."}
{"id": 544, "prediction": "Creates a JPACConfig instance ."}
{"id": 546, "prediction": "Creates a new JPACConfig instance from the given map ."}
{"id": 548, "prediction": "Creates a flow from a JSON string ."}
{"id": 550, "prediction": "Creates a new instance of the given key ."}
{"id": 552, "prediction": "Called when a client is completed ."}
{"id": 554, "prediction": "Handle a forbidden page ."}
{"id": 556, "prediction": "Handles a server error ."}
{"id": 558, "prediction": "Converts a throwable to a Handler ."}
{"id": 560, "prediction": "Handle error error ."}
{"id": 562, "prediction": "Creates a new documentation handler for a given directory ."}
{"id": 564, "prediction": "Creates a new documentation handler for a given file ."}
{"id": 566, "prediction": "Consume data from the materializer ."}
{"id": 568, "prediction": "Creates an HttpEntity from the given string ."}
{"id": 570, "prediction": "Creates a status object with the given content ."}
{"id": 572, "prediction": "Creates a response with the specified content ."}
{"id": 574, "prediction": "Sets the status of a file ."}
{"id": 576, "prediction": "Returns the preferred language ."}
{"id": 578, "prediction": "Add a new call to the URL ."}
{"id": 580, "prediction": "Returns the web socket URL ."}
{"id": 582, "prediction": "Creates a connection function ."}
{"id": 584, "prediction": "Convert an object to a JsonNode ."}
{"id": 586, "prediction": "Creates a JsonNode from a String ."}
{"id": 588, "prediction": "Returns the relative path relative to the target path ."}
{"id": 590, "prediction": "Displays the given set of constraints ."}
{"id": 592, "prediction": "Sets the completion stage of the given amount ."}
{"id": 594, "prediction": "Parse Cron expression ."}
{"id": 596, "prediction": "Creates an AHWS client ."}
{"id": 598, "prediction": "Generates a result for a request"}
{"id": 600, "prediction": "Sets the flash value ."}
{"id": 602, "prediction": "Qualify binding key ."}
{"id": 604, "prediction": "Converts this provider to a binding ."}
{"id": 606, "prediction": "Converts the given key to a binding ."}
{"id": 608, "prediction": "Returns a list of available languages ."}
{"id": 610, "prediction": "Creates a new evictions reader ."}
{"id": 612, "prediction": "Cleans up the database ."}
{"id": 614, "prediction": "Adds a loader to the loader ."}
{"id": 616, "prediction": "Loads the Guice application ."}
{"id": 618, "prediction": "Loads Guice application ."}
{"id": 620, "prediction": "Encodes a cookie ."}
{"id": 622, "prediction": "Gets the entity stack ."}
{"id": 624, "prediction": "Applies the given splitter to the given splitter ."}
{"id": 626, "prediction": "Creates a FlowRef ."}
{"id": 628, "prediction": "Creates a new form with the specified value ."}
{"id": 630, "prediction": "Returns the JSON representation of the errors in the given language ."}
{"id": 632, "prediction": "Fill the form with the given values ."}
{"id": 634, "prediction": "Converts a field to a type ."}
{"id": 636, "prediction": "Print a field ."}
{"id": 638, "prediction": "Register converter ."}
{"id": 640, "prediction": "Register converter ."}
{"id": 642, "prediction": "Select nodes by path"}
{"id": 644, "prediction": "Returns a copy of the given array ."}
{"id": 646, "prediction": "Creates a new WebSocketAcceptor for the given class ."}
{"id": 648, "prediction": "Checks if the given object is accessible ."}
{"id": 650, "prediction": "Calculates the total transformation cost for the given arguments ."}
{"id": 652, "prediction": "Gets a localized message ."}
{"id": 654, "prediction": "Create a new database from the given configuration ."}
{"id": 656, "prediction": "Sorts the given index ."}
{"id": 658, "prediction": "Invokes the method with the specified arguments ."}
{"id": 660, "prediction": "Loads the argument at the given index ."}
{"id": 662, "prediction": "Parses the given type ."}
{"id": 664, "prediction": "Process an array element ."}
{"id": 666, "prediction": "Resolves all declared bridges ."}
{"id": 668, "prediction": "Filter all constructors ."}
{"id": 670, "prediction": "Generate a field ."}
{"id": 672, "prediction": "Returns the cardinality of this set ."}
{"id": 674, "prediction": "Finds all methods in the given array and returns them ."}
{"id": 676, "prediction": "Reads a string from a file ."}
{"id": 678, "prediction": "Creates a new HTTP request ."}
{"id": 680, "prediction": "Create a GET request"}
{"id": 682, "prediction": "Create a PUT request ."}
{"id": 684, "prediction": "Create a DELETE request ."}
{"id": 686, "prediction": "Create a TRACE request ."}
{"id": 688, "prediction": "Sets the path ."}
{"id": 690, "prediction": "Add a query parameter ."}
{"id": 692, "prediction": "Set the query string ."}
{"id": 694, "prediction": "Get the host URL ."}
{"id": 696, "prediction": "Sets the host header ."}
{"id": 698, "prediction": "Executes and returns the response ."}
{"id": 700, "prediction": "Gets the length of the exception table ."}
{"id": 702, "prediction": "Collect all action filters ."}
{"id": 704, "prediction": "Collect the actions of the action ."}
{"id": 706, "prediction": "Gets the value of the bean property ."}
{"id": 708, "prediction": "Gets the writer ."}
{"id": 710, "prediction": "Get object reference ."}
{"id": 712, "prediction": "Returns the table descriptor for the given table ."}
{"id": 714, "prediction": "Returns the table alias for the given table ."}
{"id": 716, "prediction": "Lookup the table reference ."}
{"id": 718, "prediction": "Serializes the given value to the JSON ."}
{"id": 720, "prediction": "Inject all parameters in the target request ."}
{"id": 722, "prediction": "Convert a property name to a column name ."}
{"id": 724, "prediction": "Applies the given column to the given column name ."}
{"id": 726, "prediction": "Prepare the value for the given type ."}
{"id": 728, "prediction": "Resolve a wrapper class ."}
{"id": 730, "prediction": "Convert path to system separators ."}
{"id": 732, "prediction": "Split the given filename into an array of strings ."}
{"id": 734, "prediction": "Registers a new class ."}
{"id": 736, "prediction": "Starts the web app ."}
{"id": 738, "prediction": "Registers the Madvocable app ."}
{"id": 740, "prediction": "Includes all jars included in the jar ."}
{"id": 742, "prediction": "Excludes entries that are excluded ."}
{"id": 744, "prediction": "Scans the classpath ."}
{"id": 746, "prediction": "Scan classes ."}
{"id": 748, "prediction": "Creates a new transaction with the given scope ."}
{"id": 750, "prediction": "Gets or creates a new scope ."}
{"id": 752, "prediction": "Decode a char array ."}
{"id": 754, "prediction": "Ensure that the token has expired ."}
{"id": 756, "prediction": "Creates a new bean copy ."}
{"id": 758, "prediction": "overrides the visitor to set the property value"}
{"id": 760, "prediction": "Resolves a scope for a specific type ."}
{"id": 762, "prediction": "Register a bean definition ."}
{"id": 764, "prediction": "Resolve bean names ."}
{"id": 766, "prediction": "Register a property injection point for a bean ."}
{"id": 769, "prediction": "Register all init methods for the given bean ."}
{"id": 771, "prediction": "Register a Petiteite ."}
{"id": 773, "prediction": "Iterates over the given bean type ."}
{"id": 775, "prediction": "Intercept the action ."}
{"id": 777, "prediction": "Push an integer to the stack ."}
{"id": 779, "prediction": "Generate advice field name ."}
{"id": 781, "prediction": "Load the special method arguments ."}
{"id": 783, "prediction": "Load virtual method arguments ."}
{"id": 785, "prediction": "Store a method argument ."}
{"id": 787, "prediction": "Create a key signature key ."}
{"id": 789, "prediction": "Stores an array into the stack ."}
{"id": 791, "prediction": "Returns true if the given flags are empty ."}
{"id": 793, "prediction": "Requests that the given realm is required ."}
{"id": 795, "prediction": "Sets the response content ."}
{"id": 797, "prediction": "Read request body from request ."}
{"id": 799, "prediction": "Store the current context path in the request context ."}
{"id": 801, "prediction": "Checks if the given name is a query parameter ."}
{"id": 803, "prediction": "Copy the attributes from the servlet request ."}
{"id": 805, "prediction": "Render the content of the given fragment ."}
{"id": 807, "prediction": "Invokes all init methods ."}
{"id": 809, "prediction": "Creates a new bean instance ."}
{"id": 811, "prediction": "Rewrite the action path ."}
{"id": 813, "prediction": "Put a value into the map ."}
{"id": 815, "prediction": "Put a profile property ."}
{"id": 817, "prediction": "Resolves the given macro names ."}
{"id": 819, "prediction": "Reads a word from a byte array ."}
{"id": 821, "prediction": "Checks the given plain text ."}
{"id": 823, "prediction": "Copies max bytes to the output stream ."}
{"id": 825, "prediction": "Resolve action config ."}
{"id": 827, "prediction": "Read action interceptors ."}
{"id": 829, "prediction": "Read package action action path ."}
{"id": 831, "prediction": "Parse the method alias ."}
{"id": 833, "prediction": "Sets the last modified date ."}
{"id": 835, "prediction": "Inject a proxy object into a proxy ."}
{"id": 837, "prediction": "Resolves the real name of the given json name ."}
{"id": 839, "prediction": "Looks up the type for the given class ."}
{"id": 841, "prediction": "Find the type data ."}
{"id": 843, "prediction": "Resolves the real name of the given type ."}
{"id": 845, "prediction": "Copy the bootstrap methods ."}
{"id": 847, "prediction": "Put constant pool ."}
{"id": 849, "prediction": "Adds a constant field reference to this class ."}
{"id": 851, "prediction": "Adds a constant reference to the pool ."}
{"id": 853, "prediction": "Adds a constant to the map ."}
{"id": 855, "prediction": "Adds a constant to the map ."}
{"id": 857, "prediction": "Adds a constant name and descriptor ."}
{"id": 859, "prediction": "Adds a constant ."}
{"id": 861, "prediction": "Adds a constant handle to the pool ."}
{"id": 863, "prediction": "Adds a constant to the bootstrap method ."}
{"id": 865, "prediction": "Add a constant to the dynamic pool ."}
{"id": 867, "prediction": "Adds a constant to the cache ."}
{"id": 869, "prediction": "Add a bootstrap method ."}
{"id": 871, "prediction": "Returns the hash code for the given name ."}
{"id": 873, "prediction": "Gets all values for the given name ."}
{"id": 875, "prediction": "Returns a list of all entries in this map ."}
{"id": 877, "prediction": "Appends a CharSequence to the buffer ."}
{"id": 879, "prediction": "Visit a proxy method ."}
{"id": 881, "prediction": "Create the delegate chain delegate method ."}
{"id": 883, "prediction": "Adds a field to the path ."}
{"id": 885, "prediction": "Execute the method ."}
{"id": 887, "prediction": "Create a bean definition for the proxy ."}
{"id": 889, "prediction": "Read property ."}
{"id": 891, "prediction": "Appends a buffer to the buffer ."}
{"id": 893, "prediction": "Writes the given list to the output stream ."}
{"id": 895, "prediction": "Returns the string value associated with the given key ."}
{"id": 897, "prediction": "Gets a long ."}
{"id": 899, "prediction": "Gets a float value ."}
{"id": 901, "prediction": "Adds a JsonObject to the map ."}
{"id": 903, "prediction": "Receive messages from the specified filter ."}
{"id": 905, "prediction": "Close the folder ."}
{"id": 907, "prediction": "Create the alias for the target"}
{"id": 909, "prediction": "Adds a violation ."}
{"id": 911, "prediction": "Sets the download file ."}
{"id": 913, "prediction": "Sets the target class name ."}
{"id": 915, "prediction": "Processes proxied proxy data ."}
{"id": 917, "prediction": "Defines the proxied proxy ."}
{"id": 919, "prediction": "Writes the class to the specified debug folder ."}
{"id": 921, "prediction": "Sets the recipient address ."}
{"id": 923, "prediction": "Sets the reply to the specified email address ."}
{"id": 925, "prediction": "Adds a text message ."}
{"id": 927, "prediction": "Adds a header value ."}
{"id": 929, "prediction": "Get a boolean value ."}
{"id": 931, "prediction": "Get long value ."}
{"id": 933, "prediction": "Serialize a single key value ."}
{"id": 935, "prediction": "Resolve alias ."}
{"id": 937, "prediction": "Resolve the result path ."}
{"id": 939, "prediction": "Returns the last index of the given dot ."}
{"id": 941, "prediction": "Removes the last letter from the given name ."}
{"id": 943, "prediction": "Resolve column names ."}
{"id": 945, "prediction": "Multiply the x y ."}
{"id": 947, "prediction": "Sets the key for the given index ."}
{"id": 949, "prediction": "Encrypt a block ."}
{"id": 951, "prediction": "Removes any boundary from the string ."}
{"id": 953, "prediction": "Create zlib file ."}
{"id": 955, "prediction": "Unzip a file ."}
{"id": 957, "prediction": "Unzip a zip file ."}
{"id": 959, "prediction": "Adds the given content to the zip file ."}
{"id": 961, "prediction": "Gets a property descriptor ."}
{"id": 963, "prediction": "Sets the locale ."}
{"id": 965, "prediction": "Filters all parameters for the given bean name ."}
{"id": 967, "prediction": "Reads a long from the buffer at the given offset ."}
{"id": 969, "prediction": "Reads a label ."}
{"id": 971, "prediction": "Read element values ."}
{"id": 973, "prediction": "Read all bootstrap methods ."}
{"id": 975, "prediction": "Gets ctor descriptor ."}
{"id": 977, "prediction": "Creates a map of request attributes ."}
{"id": 979, "prediction": "Initialize decoder ."}
{"id": 981, "prediction": "Add a file to the search path ."}
{"id": 983, "prediction": "Applies the specified patterns to this rule ."}
{"id": 985, "prediction": "Adds a path to the list ."}
{"id": 987, "prediction": "Initialize the rules ."}
{"id": 989, "prediction": "Resolves the bean for the given type ."}
{"id": 991, "prediction": "Returns the output writer ."}
{"id": 993, "prediction": "Returns the class name ."}
{"id": 995, "prediction": "Returns the method descriptor for the given argument types ."}
{"id": 997, "prediction": "Appends the descriptor to the string builder ."}
{"id": 999, "prediction": "Compute the number of arguments for a method descriptor ."}
{"id": 1001, "prediction": "Commit the given transaction ."}
{"id": 1003, "prediction": "Request a resource for a given resource type ."}
{"id": 1005, "prediction": "Write a string ."}
{"id": 1007, "prediction": "Write a single character sequence ."}
{"id": 1009, "prediction": "Start the region ."}
{"id": 1011, "prediction": "Register a pseudo pseudo function ."}
{"id": 1013, "prediction": "overrides the creation of the class"}
{"id": 1015, "prediction": "Make the static init instruction ."}
{"id": 1017, "prediction": "Processes super classes ."}
{"id": 1019, "prediction": "On append string ."}
{"id": 1021, "prediction": "Collect all attributes ."}
{"id": 1023, "prediction": "Registers the given type ."}
{"id": 768, "prediction": "Registers a new Petite injection point ."}
{"id": 770, "prediction": "Registers the destroy method with the given bean name ."}
{"id": 772, "prediction": "Registers a new provider with the given type ."}
{"id": 774, "prediction": "Defines the parameters ."}
{"id": 776, "prediction": "Resolves the java version number ."}
{"id": 778, "prediction": "Checks the argument index ."}
{"id": 780, "prediction": "Generate advice method name ."}
{"id": 782, "prediction": "Load static method arguments ."}
{"id": 784, "prediction": "Load the stack argument ."}
{"id": 786, "prediction": "Prepare the value of the return value ."}
{"id": 788, "prediction": "Generates a new array ."}
{"id": 790, "prediction": "Extract encoding from content type ."}
{"id": 792, "prediction": "Resolve the auth bearer token ."}
{"id": 794, "prediction": "Prepares the response to the response ."}
{"id": 796, "prediction": "Get all cookies matching the given name ."}
{"id": 798, "prediction": "Read request body from request ."}
{"id": 800, "prediction": "Store the current context path variable ."}
{"id": 802, "prediction": "Prepare parameters ."}
{"id": 804, "prediction": "Invokes a tag ."}
{"id": 806, "prediction": "Renders the given body as a string ."}
{"id": 808, "prediction": "Call all destroy methods ."}
{"id": 810, "prediction": "Inject parameters from bean manager ."}
{"id": 812, "prediction": "Add header ."}
{"id": 814, "prediction": "Put base property ."}
{"id": 816, "prediction": "Gets a profile property ."}
{"id": 818, "prediction": "Extracts a map from a profile ."}
{"id": 820, "prediction": "Hash password ."}
{"id": 822, "prediction": "Reads all bytes from the stream ."}
{"id": 824, "prediction": "Parse the action ."}
{"id": 826, "prediction": "Detect alias ."}
{"id": 828, "prediction": "Read action filters ."}
{"id": 830, "prediction": "Read action action path ."}
{"id": 832, "prediction": "Create action runtime ."}
{"id": 834, "prediction": "Apply an advice to the proxy class ."}
{"id": 836, "prediction": "Visit an annotation ."}
{"id": 838, "prediction": "Resolves the real name for the given real name ."}
{"id": 840, "prediction": "Looks up the type for the given class ."}
{"id": 842, "prediction": "Resolve the name for the given type ."}
{"id": 844, "prediction": "Gets the content of the temp file ."}
{"id": 846, "prediction": "Sets the major version of the class ."}
{"id": 848, "prediction": "Puts the bootstrap methods ."}
{"id": 850, "prediction": "Adds a constant reference to this class ."}
{"id": 852, "prediction": "Adds a constant reference to the constant pool ."}
{"id": 854, "prediction": "Adds a constant to the map ."}
{"id": 856, "prediction": "Adds a constant entry to the cache ."}
{"id": 858, "prediction": "Adds a constant name and descriptor ."}
{"id": 860, "prediction": "Adds a constant ."}
{"id": 862, "prediction": "Adds a constant handle to the map ."}
{"id": 864, "prediction": "Adds a constant to the bootstrap method ."}
{"id": 866, "prediction": "Adds a constant reference to the constant pool ."}
{"id": 868, "prediction": "Adds a constant reference to the cache ."}
{"id": 870, "prediction": "Add a merged type to the map ."}
{"id": 872, "prediction": "Removes all mappings from this map ."}
{"id": 874, "prediction": "Returns an iterator over the entries ."}
{"id": 876, "prediction": "Grows the buffer with the given minimum capacity ."}
{"id": 878, "prediction": "Visits an annotation ."}
{"id": 880, "prediction": "Create proxy delegate chain ."}
{"id": 882, "prediction": "Parse a path ."}
{"id": 884, "prediction": "Configure the servlet context ."}
{"id": 886, "prediction": "Gets the field descriptors ."}
{"id": 888, "prediction": "Convert the given JAXTransactionMode to a DBTransactionMode ."}
{"id": 890, "prediction": "Copies all values from the given map into the given map ."}
{"id": 892, "prediction": "Writes the contents of the given writer to the given writer ."}
{"id": 894, "prediction": "Writes all data to the output stream ."}
{"id": 896, "prediction": "Returns the integer value associated with the given key ."}
{"id": 898, "prediction": "Gets a double value ."}
{"id": 900, "prediction": "Gets the value associated with the given key ."}
{"id": 902, "prediction": "Use this method to connect to a folder ."}
{"id": 904, "prediction": "Updates the flags of the specified mailbox ."}
{"id": 906, "prediction": "Look up a named parameter by name ."}
{"id": 908, "prediction": "Perform validation ."}
{"id": 910, "prediction": "Sets the mime type ."}
{"id": 912, "prediction": "Sets the target input stream ."}
{"id": 914, "prediction": "Sets the target class ."}
{"id": 916, "prediction": "Create proxy ."}
{"id": 918, "prediction": "Creates a new proxy instance ."}
{"id": 920, "prediction": "Creates a new address from the given email ."}
{"id": 922, "prediction": "Add a new address to the specified person ."}
{"id": 924, "prediction": "Sets the cc address ."}
{"id": 926, "prediction": "Sets the HTML message with the specified encoding ."}
{"id": 928, "prediction": "Gets a system property ."}
{"id": 930, "prediction": "Gets a long value ."}
{"id": 932, "prediction": "Returns the array of parameters ."}
{"id": 934, "prediction": "Lookup the alias for an action ."}
{"id": 936, "prediction": "Resolve result path ."}
{"id": 938, "prediction": "Returns the index of the last occurrence of a given string ."}
{"id": 940, "prediction": "Returns the index of the dot after the given dot ."}
{"id": 942, "prediction": "Resolve the schema name ."}
{"id": 944, "prediction": "Initializes the sketch with the given key ."}
{"id": 946, "prediction": "Modify x y ."}
{"id": 948, "prediction": "Initializes the key ."}
{"id": 950, "prediction": "Converts a byte array into a long array ."}
{"id": 952, "prediction": "Returns the path ."}
{"id": 954, "prediction": "Gzip a file ."}
{"id": 956, "prediction": "List all the entries in a zip file ."}
{"id": 958, "prediction": "Adds a file to the zip output stream ."}
{"id": 960, "prediction": "Gets the field descriptor ."}
{"id": 962, "prediction": "Sets the request bundle name for the request ."}
{"id": 964, "prediction": "Gets the locale from the session ."}
{"id": 966, "prediction": "Add profiles ."}
{"id": 968, "prediction": "Reads data from an input stream ."}
{"id": 970, "prediction": "Reads the type of a type annotation ."}
{"id": 972, "prediction": "Read verification type information ."}
{"id": 974, "prediction": "Returns an array of constructor descriptors ."}
{"id": 976, "prediction": "Gets the request map ."}
{"id": 978, "prediction": "Convert an array to a long array ."}
{"id": 980, "prediction": "Adds a file consumer to the file ."}
{"id": 982, "prediction": "Add a path to the container ."}
{"id": 984, "prediction": "Exclude patterns ."}
{"id": 986, "prediction": "Find all the files in the directory ."}
{"id": 988, "prediction": "Returns an iterator over all files ."}
{"id": 990, "prediction": "Resolve bean name ."}
{"id": 992, "prediction": "Returns the output stream ."}
{"id": 994, "prediction": "Returns the descriptor for the given constructor ."}
{"id": 996, "prediction": "Gets the method descriptor ."}
{"id": 998, "prediction": "Returns the size of this object ."}
{"id": 1000, "prediction": "Sets the rollback only ."}
{"id": 1002, "prediction": "Rollback all resources ."}
{"id": 1004, "prediction": "Pushes a single name ."}
{"id": 1006, "prediction": "Writes a character ."}
{"id": 1008, "prediction": "Sets the parsing error log level ."}
{"id": 1010, "prediction": "Checks if the given string contains the given value ."}
{"id": 1012, "prediction": "Looks up a pseudo pseudo function ."}
{"id": 1014, "prediction": "Visits an annotation ."}
{"id": 1016, "prediction": "Create proxy constructor ."}
{"id": 1018, "prediction": "Find the last element in the range"}
{"id": 1020, "prediction": "Replace the ASM instructions ."}
{"id": 1022, "prediction": "Register default values ."}
{"id": 1025, "prediction": "Lookup the SQL type ."}
{"id": 1027, "prediction": "Creates a proxy proxy ."}
{"id": 1029, "prediction": "Returns the total number of threads ."}
{"id": 1031, "prediction": "Associates a new transaction ."}
{"id": 1033, "prediction": "Lookup a resource manager for the given resource type ."}
{"id": 1035, "prediction": "Appends the path to the path ."}
{"id": 1037, "prediction": "Converts a value to a string representation ."}
{"id": 1039, "prediction": "Formats a paragraph ."}
{"id": 1041, "prediction": "Escape a string ."}
{"id": 1043, "prediction": "Gets the bean ."}
{"id": 1045, "prediction": "Initialize bean definition ."}
{"id": 1047, "prediction": "Registers a bean with the specified name ."}
{"id": 1049, "prediction": "Gets the bean property ."}
{"id": 1051, "prediction": "Resolve method parameters ."}
{"id": 1053, "prediction": "Returns the value of the profile ."}
{"id": 1055, "prediction": "Creates a new element ."}
{"id": 1057, "prediction": "Removes the last child node if it is empty ."}
{"id": 1059, "prediction": "Gets the class name ."}
{"id": 1061, "prediction": "Iterate over the collection ."}
{"id": 1063, "prediction": "Replaces all occurrences of a string with the given string ."}
{"id": 1065, "prediction": "Replaces all occurrences of a string with the given substring ."}
{"id": 1067, "prediction": "Replaces the first occurrence of a string with the given character ."}
{"id": 1069, "prediction": "Replaces all occurrences of a string with the given character ."}
{"id": 1071, "prediction": "Removes the specified character from the specified string ."}
{"id": 1073, "prediction": "Checks if all strings are blank ."}
{"id": 1075, "prediction": "Change the first character of the first character ."}
{"id": 1077, "prediction": "Compresses the given string with the given character ."}
{"id": 1079, "prediction": "Returns true if the string ends with the given character ."}
{"id": 1081, "prediction": "Compare two strings ."}
{"id": 1083, "prediction": "Strip a leading character from a string ."}
{"id": 1085, "prediction": "Remove a character from the string ."}
{"id": 1087, "prediction": "Strip a character from a string ."}
{"id": 1089, "prediction": "Removes whitespace from string ."}
{"id": 1091, "prediction": "Returns the index of the first occurrence of the specified string ."}
{"id": 1093, "prediction": "Joins the given array with the given separator ."}
{"id": 1095, "prediction": "Checks if the given string is equal to the given index ."}
{"id": 1097, "prediction": "Prefix string ."}
{"id": 1099, "prediction": "Cut the string to the given string ."}
{"id": 1101, "prediction": "Cut a string from a string ."}
{"id": 1103, "prediction": "Cut a string from a string ."}
{"id": 1105, "prediction": "Repeats a string to a string ."}
{"id": 1107, "prediction": "Returns the maximum common prefix of two strings ."}
{"id": 1109, "prediction": "Shortcut to shorten a string ."}
{"id": 1111, "prediction": "Remove quotes from a string ."}
{"id": 1113, "prediction": "Convert a string to a byte array ."}
{"id": 1115, "prediction": "Visit a property ."}
{"id": 1117, "prediction": "Visit an annotation ."}
{"id": 1119, "prediction": "Registers an entity ."}
{"id": 1121, "prediction": "Creates an entity instance ."}
{"id": 1123, "prediction": "Inject target field ."}
{"id": 1125, "prediction": "Detect database ."}
{"id": 1127, "prediction": "Writes a byte to the output stream ."}
{"id": 1129, "prediction": "Gets the name ."}
{"id": 1131, "prediction": "Writes the mail source to the file ."}
{"id": 1133, "prediction": "Appends the argument to the given descriptor ."}
{"id": 1135, "prediction": "Change return type ."}
{"id": 1137, "prediction": "Register a type converter ."}
{"id": 1139, "prediction": "Selects nodes from a query ."}
{"id": 1141, "prediction": "Processes selected nodes ."}
{"id": 1143, "prediction": "Iterates over all descendants of the given list ."}
{"id": 1145, "prediction": "Selects a node ."}
{"id": 1147, "prediction": "Zips a map in a string array ."}
{"id": 1149, "prediction": "Generate a page data ."}
{"id": 1151, "prediction": "Removes the FROM FROM clause ."}
{"id": 1153, "prediction": "Decode a string ."}
{"id": 1155, "prediction": "Builds the ORDER BY clause ."}
{"id": 1157, "prediction": "Resolve column mappings ."}
{"id": 1159, "prediction": "Find column descriptors ."}
{"id": 1161, "prediction": "Gets column name ."}
{"id": 1163, "prediction": "Sets the id property ."}
{"id": 1165, "prediction": "Appends a string to the buffer ."}
{"id": 1167, "prediction": "Expand the contents of the array ."}
{"id": 1169, "prediction": "Creates and returns the message message ."}
{"id": 1171, "prediction": "Runs the loop body ."}
{"id": 1173, "prediction": "Checks if the given file is acceptable ."}
{"id": 1175, "prediction": "Start the timer ."}
{"id": 1177, "prediction": "Adds an enumeration to the list ."}
{"id": 1179, "prediction": "Puts the field information into the byte buffer ."}
{"id": 1181, "prediction": "Write property value ."}
{"id": 1183, "prediction": "Parses a page content ."}
{"id": 1185, "prediction": "Writes the content of the decoder ."}
{"id": 1187, "prediction": "Runs the given process ."}
{"id": 1189, "prediction": "Creates the output stream ."}
{"id": 1191, "prediction": "Append alias ."}
{"id": 1193, "prediction": "Adds a new rule ."}
{"id": 1195, "prediction": "Processes the given value ."}
{"id": 1197, "prediction": "Gets the pseudo class name ."}
{"id": 1199, "prediction": "Find the insertion point for the given object ."}
{"id": 1201, "prediction": "Registers a new action ."}
{"id": 1203, "prediction": "Adds an action to the consumer ."}
{"id": 1205, "prediction": "Validates the value of the specified type ."}
{"id": 1207, "prediction": "Remove all child elements from the table ."}
{"id": 1209, "prediction": "Gets the session map ."}
{"id": 1211, "prediction": "Adds an advice method ."}
{"id": 1213, "prediction": "Adds a line to the section ."}
{"id": 1215, "prediction": "Applies the given key to the given value ."}
{"id": 1217, "prediction": "Converts a type reference to a type reference ."}
{"id": 1219, "prediction": "Convert a type to a type reference ."}
{"id": 1221, "prediction": "Creates a new collection ."}
{"id": 1223, "prediction": "Convert value to collection"}
{"id": 1225, "prediction": "Convert a primitive value to a collection ."}
{"id": 1227, "prediction": "Visits a MethodVisitor ."}
{"id": 1229, "prediction": "Adds a forward reference to the stack ."}
{"id": 1231, "prediction": "Mark the given subroutine ."}
{"id": 1233, "prediction": "Compare two strings ."}
{"id": 1235, "prediction": "Puts a byte into the buffer ."}
{"id": 1237, "prediction": "Puts a short value into the buffer ."}
{"id": 1239, "prediction": "Puts a byte vector into the buffer ."}
{"id": 1241, "prediction": "Put two byte arrays into the buffer ."}
{"id": 1243, "prediction": "Puts a byte array into the buffer ."}
{"id": 1245, "prediction": "Authenticate user ."}
{"id": 1247, "prediction": "Authenticate user ."}
{"id": 1249, "prediction": "Gets the resource bundle ."}
{"id": 1251, "prediction": "Sets the entity id ."}
{"id": 1253, "prediction": "Updates an entity ."}
{"id": 1255, "prediction": "Updates the specified property ."}
{"id": 1257, "prediction": "Finds an entity by name ."}
{"id": 1259, "prediction": "Delete an entity ."}
{"id": 1261, "prediction": "Counts the number of entities ."}
{"id": 1263, "prediction": "Decreases the specified property ."}
{"id": 1265, "prediction": "List all entities ."}
{"id": 1267, "prediction": "Returns a set of entries ."}
{"id": 1269, "prediction": "Removes an object from the cache ."}
{"id": 1271, "prediction": "Get the stack trace of the given exception ."}
{"id": 1273, "prediction": "Gets the exception chain for the given throwable ."}
{"id": 1275, "prediction": "Converts a Throwable to a String"}
{"id": 1277, "prediction": "Unwraps a Throwable ."}
{"id": 1279, "prediction": "Accepts a controller class ."}
{"id": 1024, "prediction": "Lookup the type of the given class ."}
{"id": 1026, "prediction": "Creates a proxy for a proxy ."}
{"id": 1028, "prediction": "Create a new proxy ."}
{"id": 1030, "prediction": "Returns the total number of threads in the given status ."}
{"id": 1032, "prediction": "Continue transaction ."}
{"id": 1034, "prediction": "Create proxy object ."}
{"id": 1036, "prediction": "Aligns the given text to the given size ."}
{"id": 1038, "prediction": "Converts a string to camel case ."}
{"id": 1040, "prediction": "Converts a line to spaces ."}
{"id": 1042, "prediction": "Unescapes a string ."}
{"id": 1044, "prediction": "Gets a bean by name ."}
{"id": 1046, "prediction": "Invokes a provider ."}
{"id": 1048, "prediction": "Sets a bean property ."}
{"id": 1050, "prediction": "Shuts down the context ."}
{"id": 1052, "prediction": "Process the body ."}
{"id": 1054, "prediction": "Ends the closing tag ."}
{"id": 1056, "prediction": "Tag a tag ."}
{"id": 1058, "prediction": "Returns the query string ."}
{"id": 1060, "prediction": "Calculates the number of bytes to the given count ."}
{"id": 1062, "prediction": "Iterate over the elements of an array ."}
{"id": 1064, "prediction": "Replaces all occurrences of a given string with the given character ."}
{"id": 1066, "prediction": "Replaces the first occurrence of a string with the given string ."}
{"id": 1068, "prediction": "Replaces the last string with the given string ."}
{"id": 1070, "prediction": "Removes the given string from the given string ."}
{"id": 1072, "prediction": "Checks if all strings are empty ."}
{"id": 1074, "prediction": "Convert an object to a String array ."}
{"id": 1076, "prediction": "Converts a string to a title ."}
{"id": 1078, "prediction": "Checks if the string starts with the given substring ignoring case ."}
{"id": 1080, "prediction": "Counts the number of occurrences of a substring ignoring case ."}
{"id": 1082, "prediction": "Returns the index of the first occurrence of the specified string ."}
{"id": 1084, "prediction": "Remove trailing character from string ."}
{"id": 1086, "prediction": "Strip a character from a string ."}
{"id": 1088, "prediction": "Crop all strings in the given array ."}
{"id": 1090, "prediction": "Removes whitespace from string ."}
{"id": 1092, "prediction": "Joins the given collection using the given separator ."}
{"id": 1094, "prediction": "Convert source charset to string ."}
{"id": 1096, "prediction": "Surrounds a string with the given prefix ."}
{"id": 1098, "prediction": "Appends a string with the given suffix ."}
{"id": 1100, "prediction": "Cut a string from a string ."}
{"id": 1102, "prediction": "Cut off a string ."}
{"id": 1104, "prediction": "Inserts a string into a string ."}
{"id": 1106, "prediction": "Reverse the string ."}
{"id": 1108, "prediction": "Find common prefix ."}
{"id": 1110, "prediction": "Converts a string to upper case ."}
{"id": 1112, "prediction": "Converts a byte array to a hexadecimal string ."}
{"id": 1114, "prediction": "Detect quote character ."}
{"id": 1116, "prediction": "Visit enum enum ."}
{"id": 1118, "prediction": "Register a new entity descriptor ."}
{"id": 1120, "prediction": "Removes the given entity descriptor ."}
{"id": 1122, "prediction": "Sets the target interface ."}
{"id": 1124, "prediction": "Looks up all properties for a given type ."}
{"id": 1126, "prediction": "Closes the output stream ."}
{"id": 1128, "prediction": "Filter session id ."}
{"id": 1130, "prediction": "Returns the byte array as a byte array ."}
{"id": 1132, "prediction": "Writes the data to the output stream ."}
{"id": 1134, "prediction": "Prepend the argument to the given type ."}
{"id": 1136, "prediction": "Applies the given text to the given text ."}
{"id": 1138, "prediction": "Lookup a type converter ."}
{"id": 1140, "prediction": "Selects a collection of CSS nodes ."}
{"id": 1142, "prediction": "Selects the first node ."}
{"id": 1144, "prediction": "Recursively walk the root node ."}
{"id": 1146, "prediction": "Filter results in a CSS selector ."}
{"id": 1148, "prediction": "Fills the buffered buffer ."}
{"id": 1150, "prediction": "Remove select statement ."}
{"id": 1152, "prediction": "Remove last order by sql ."}
{"id": 1154, "prediction": "Detects the name of an entity ."}
{"id": 1156, "prediction": "Builds a SELECT statement ."}
{"id": 1158, "prediction": "Find column descriptors ."}
{"id": 1160, "prediction": "Gets the property name ."}
{"id": 1162, "prediction": "Returns the value of the id property ."}
{"id": 1164, "prediction": "Returns the key value for the given object ."}
{"id": 1166, "prediction": "Sets the index ."}
{"id": 1168, "prediction": "Calculates the length of the array ."}
{"id": 1170, "prediction": "Creates a scoped proxy bean ."}
{"id": 1172, "prediction": "Initialize the map ."}
{"id": 1174, "prediction": "Sets the watch file to use ."}
{"id": 1176, "prediction": "Process a change event ."}
{"id": 1178, "prediction": "Compute the size of the field info ."}
{"id": 1180, "prediction": "Creates a new target instance ."}
{"id": 1182, "prediction": "Parses the page content into a decoded page ."}
{"id": 1184, "prediction": "Writes the page content to the page ."}
{"id": 1186, "prediction": "Starts the server ."}
{"id": 1188, "prediction": "Gets the store store ."}
{"id": 1190, "prediction": "Initializes the hint ."}
{"id": 1192, "prediction": "Append column name ."}
{"id": 1194, "prediction": "Applies the given value to the rules ."}
{"id": 1196, "prediction": "Processes the given value ."}
{"id": 1198, "prediction": "Adds all elements to this collection ."}
{"id": 1200, "prediction": "Bind an annotation ."}
{"id": 1202, "prediction": "Lookup an action for the given action type ."}
{"id": 1204, "prediction": "Sets system properties ."}
{"id": 1206, "prediction": "Find the last table element ."}
{"id": 1208, "prediction": "Registers the bean beans ."}
{"id": 1210, "prediction": "Initializes this proxy ."}
{"id": 1212, "prediction": "Ends the bundle ."}
{"id": 1214, "prediction": "Extract profiles from key and value"}
{"id": 1216, "prediction": "Convert a typed descriptor to a class name ."}
{"id": 1218, "prediction": "Convert a typed descriptor to a signature ."}
{"id": 1220, "prediction": "Adds the given consumers to the list ."}
{"id": 1222, "prediction": "Convert a value to a single collection ."}
{"id": 1224, "prediction": "Convert a collection to a collection ."}
{"id": 1226, "prediction": "Adds the line number ."}
{"id": 1228, "prediction": "Puts the given instruction into the buffer ."}
{"id": 1230, "prediction": "Resolves the ASM instruction ."}
{"id": 1232, "prediction": "Add a subroutine to this block ."}
{"id": 1234, "prediction": "Fixes the given character ."}
{"id": 1236, "prediction": "Put two byte arrays ."}
{"id": 1238, "prediction": "Puts a byte into the buffer ."}
{"id": 1240, "prediction": "Puts an integer into the buffer ."}
{"id": 1242, "prediction": "Puts a long into the buffer ."}
{"id": 1244, "prediction": "Increases the size of the specified size ."}
{"id": 1246, "prediction": "Authenticate user ."}
{"id": 1248, "prediction": "Find the default message for the given key ."}
{"id": 1250, "prediction": "Returns the value at the specified index ."}
{"id": 1252, "prediction": "Save an entity ."}
{"id": 1254, "prediction": "Updates an entity property ."}
{"id": 1256, "prediction": "Finds an entity by id ."}
{"id": 1258, "prediction": "Finds an entity by its criteria ."}
{"id": 1260, "prediction": "Deletes the given ID ."}
{"id": 1262, "prediction": "Increase the value of a property ."}
{"id": 1264, "prediction": "Find all related objects for the given source object ."}
{"id": 1266, "prediction": "Removes all entries from the cache ."}
{"id": 1268, "prediction": "Sets the value associated with the given key ."}
{"id": 1270, "prediction": "Returns the current stack trace ."}
{"id": 1272, "prediction": "Gets stack trace chain ."}
{"id": 1274, "prediction": "Convert an exception to a string ."}
{"id": 1276, "prediction": "Builds a message ."}
{"id": 1278, "prediction": "Registers a new parser ."}
{"id": 1281, "prediction": "Gets the resource as a stream ."}
{"id": 1283, "prediction": "Gets the resource as a stream ."}
{"id": 1285, "prediction": "Add a new route chunk ."}
{"id": 1287, "prediction": "Parse request parameters ."}
{"id": 1289, "prediction": "Invokes the setter method ."}
{"id": 1291, "prediction": "Creates a bean property ."}
{"id": 1293, "prediction": "Stops the authentication cookie ."}
{"id": 1295, "prediction": "Converts a local date to a date ."}
{"id": 1297, "prediction": "Define proxy ."}
{"id": 1299, "prediction": "Resolve validation context ."}
{"id": 1301, "prediction": "Collect annotation checks ."}
{"id": 1303, "prediction": "Copy default check properties ."}
{"id": 1305, "prediction": "Encodes a string ."}
{"id": 1307, "prediction": "Encodes the host ."}
{"id": 1309, "prediction": "Encodes a path ."}
{"id": 1311, "prediction": "Encodes a query parameter ."}
{"id": 1313, "prediction": "Returns a map of all properties of the class ."}
{"id": 1315, "prediction": "Returns the set of cookies ."}
{"id": 1317, "prediction": "Closes the HTTP connection ."}
{"id": 1319, "prediction": "Prints all the routes ."}
{"id": 1321, "prediction": "Decrypt the encrypted content ."}
{"id": 1323, "prediction": "Generate a list of the given type ."}
{"id": 1325, "prediction": "Generate a map ."}
{"id": 1327, "prediction": "Set default header ."}
{"id": 1329, "prediction": "Sends a request ."}
{"id": 1331, "prediction": "Reads cookies from http response ."}
{"id": 1333, "prediction": "Send an email ."}
{"id": 1335, "prediction": "Set the sent date ."}
{"id": 1337, "prediction": "Sets the members of the given email ."}
{"id": 1339, "prediction": "Add body data ."}
{"id": 1341, "prediction": "Create message body part ."}
{"id": 1343, "prediction": "Save the result set ."}
{"id": 1345, "prediction": "Closes the query ."}
{"id": 1347, "prediction": "Sets the fetch size of the query ."}
{"id": 1349, "prediction": "Executes the given update ."}
{"id": 1351, "prediction": "Gets the generated columns ."}
{"id": 1353, "prediction": "Creates an instance of the given aspect class ."}
{"id": 1355, "prediction": "Creates a stream from the given iterator ."}
{"id": 1357, "prediction": "Sets the default wiring mode ."}
{"id": 1359, "prediction": "Returns the caller class name ."}
{"id": 1361, "prediction": "Sets the excluded types ."}
{"id": 1363, "prediction": "Serialize an object into a string ."}
{"id": 1365, "prediction": "Writes an object to a file ."}
{"id": 1367, "prediction": "Serializes an object to a byte array ."}
{"id": 1369, "prediction": "Resolve the table names for the given types ."}
{"id": 1371, "prediction": "Read column value ."}
{"id": 1373, "prediction": "Resolve provider for a given type ."}
{"id": 1375, "prediction": "Checks whether a connection is valid ."}
{"id": 1377, "prediction": "Gets the target target ."}
{"id": 1379, "prediction": "Gets the output stream ."}
{"id": 1381, "prediction": "Sets the content type ."}
{"id": 1383, "prediction": "Login ."}
{"id": 1385, "prediction": "Logs a user ."}
{"id": 1387, "prediction": "Convert a URL to a file ."}
{"id": 1389, "prediction": "Creates a directory ."}
{"id": 1391, "prediction": "Copy a directory ."}
{"id": 1393, "prediction": "Moves a directory to the destination directory ."}
{"id": 1395, "prediction": "Reads characters from a file ."}
{"id": 1397, "prediction": "Write chars to a file ."}
{"id": 1399, "prediction": "Append a string to a file ."}
{"id": 1401, "prediction": "Write bytes to a file ."}
{"id": 1403, "prediction": "Copies a file to a destination directory ."}
{"id": 1405, "prediction": "Creates a temporary directory ."}
{"id": 1407, "prediction": "Checks if source directory exists ."}
{"id": 1409, "prediction": "Prints usage ."}
{"id": 1411, "prediction": "Registers an action ."}
{"id": 1413, "prediction": "Move the next value to the next iteration ."}
{"id": 1415, "prediction": "Executes the proxy ."}
{"id": 1417, "prediction": "Creates a CharSequenceSequence ."}
{"id": 1419, "prediction": "Sets the BCC recipients ."}
{"id": 1421, "prediction": "Looks up the serializer for the given type ."}
{"id": 1423, "prediction": "Gets a request parameter ."}
{"id": 1425, "prediction": "Gets a file upload request ."}
{"id": 1427, "prediction": "Initialize the filter ."}
{"id": 1429, "prediction": "Returns the index end of the given template ."}
{"id": 1431, "prediction": "Build query string ."}
{"id": 1433, "prediction": "Prepare header parameter name ."}
{"id": 1435, "prediction": "Convert an appendable to a HTML string ."}
{"id": 1437, "prediction": "Configure parameters ."}
{"id": 1439, "prediction": "Sets lazy state ."}
{"id": 1441, "prediction": "Parses the given string ."}
{"id": 1443, "prediction": "Resolves the value of the given value ."}
{"id": 1445, "prediction": "Parse a string ."}
{"id": 1447, "prediction": "Parses a unicode character ."}
{"id": 1449, "prediction": "Parse a number ."}
{"id": 1451, "prediction": "Create empty constructor ."}
{"id": 1453, "prediction": "Resolve raw type name ."}
{"id": 1455, "prediction": "Resolve references to the given parameters ."}
{"id": 1457, "prediction": "Build the default bean references ."}
{"id": 1459, "prediction": "Remove duplicate names ."}
{"id": 1461, "prediction": "Converts an annotation value into an array of beans ."}
{"id": 1463, "prediction": "Finds a method with the given name ."}
{"id": 1465, "prediction": "Resolve all interfaces ."}
{"id": 1467, "prediction": "Force access ."}
{"id": 1469, "prediction": "Get all superclasses of a given type ."}
{"id": 1471, "prediction": "Returns the jar file for the given class ."}
{"id": 1473, "prediction": "Sleep for the current thread ."}
{"id": 1475, "prediction": "Creates a thread factory ."}
{"id": 1477, "prediction": "Visit a parameter ."}
{"id": 1479, "prediction": "Visit a TypeAnnotation ."}
{"id": 1481, "prediction": "Visit a field instruction ."}
{"id": 1483, "prediction": "Visit a dynamic invoke method ."}
{"id": 1485, "prediction": "Generate a multi - dimensional array ."}
{"id": 1487, "prediction": "Visit a local variable annotation ."}
{"id": 1489, "prediction": "Processes the input stream ."}
{"id": 1491, "prediction": "Move to next element ."}
{"id": 1493, "prediction": "Join an array of arrays ."}
{"id": 1495, "prediction": "Append a new element to the buffer ."}
{"id": 1497, "prediction": "Returns the index of the first occurrence of the given char array ."}
{"id": 1499, "prediction": "Returns the index of the first occurrence of the given byte array ."}
{"id": 1501, "prediction": "Parses the content of a string ."}
{"id": 1503, "prediction": "Compute the maximum stack of exception blocks ."}
{"id": 1505, "prediction": "Collect attribute definitions ."}
{"id": 1507, "prediction": "Register a pseudo class ."}
{"id": 1509, "prediction": "Invokes an action ."}
{"id": 1511, "prediction": "Visit properties ."}
{"id": 1513, "prediction": "Resolve method injection points ."}
{"id": 1515, "prediction": "Sends a bundle file to the response ."}
{"id": 1517, "prediction": "Looks up the gzip file for the given file ."}
{"id": 1519, "prediction": "Creates a hash for the given source ."}
{"id": 1521, "prediction": "Clears the bundle files ."}
{"id": 1523, "prediction": "Update column ."}
{"id": 1525, "prediction": "Gets the current transaction session ."}
{"id": 1527, "prediction": "Parse the signature for a signature ."}
{"id": 1529, "prediction": "Returns true if the given property is ignored ."}
{"id": 1531, "prediction": "Opens the transaction ."}
{"id": 1533, "prediction": "Commits a transaction ."}
{"id": 1535, "prediction": "Loads properties from a file ."}
{"id": 1280, "prediction": "Get the system class loader ."}
{"id": 1282, "prediction": "Gets the resource as a stream ."}
{"id": 1284, "prediction": "Gets the resource as a stream ."}
{"id": 1286, "prediction": "Find the child with the given value ."}
{"id": 1288, "prediction": "Convert a value to a collection ."}
{"id": 1290, "prediction": "Sets the array for the given array property ."}
{"id": 1292, "prediction": "Extract the type from the bean property ."}
{"id": 1294, "prediction": "Starts the session ."}
{"id": 1296, "prediction": "Converts a LocalDateTime to a Calendar ."}
{"id": 1298, "prediction": "Adds a new check ."}
{"id": 1300, "prediction": "Adds all annotation checks ."}
{"id": 1302, "prediction": "Collect annotation checks ."}
{"id": 1304, "prediction": "Encodes a URI into a string ."}
{"id": 1306, "prediction": "Encodes the scheme ."}
{"id": 1308, "prediction": "Encodes the given URI ."}
{"id": 1310, "prediction": "Encodes the given URI ."}
{"id": 1312, "prediction": "Encodes a fragment ."}
{"id": 1314, "prediction": "Gets all property descriptors ."}
{"id": 1316, "prediction": "Unzip the response ."}
{"id": 1318, "prediction": "Accepts a reference to the given scope ."}
{"id": 1320, "prediction": "Encrypt a byte array ."}
{"id": 1322, "prediction": "Convert a map to a bean"}
{"id": 1324, "prediction": "Sets the value of a property ."}
{"id": 1326, "prediction": "Compares two column names ."}
{"id": 1328, "prediction": "Sends a request ."}
{"id": 1330, "prediction": "Adds the default headers ."}
{"id": 1332, "prediction": "Add cookies ."}
{"id": 1334, "prediction": "Set the subject ."}
{"id": 1336, "prediction": "Sets headers ."}
{"id": 1338, "prediction": "Sets the recipient addresses ."}
{"id": 1340, "prediction": "Sets the content of the given email message ."}
{"id": 1342, "prediction": "Gets the content type from the data header ."}
{"id": 1344, "prediction": "Closes the result set ."}
{"id": 1346, "prediction": "Closes the connection ."}
{"id": 1348, "prediction": "Sets the maximum number of rows ."}
{"id": 1350, "prediction": "Execute the count ."}
{"id": 1352, "prediction": "Gets the query string ."}
{"id": 1354, "prediction": "Creates a collection from the given iterator ."}
{"id": 1356, "prediction": "Compares two objects ."}
{"id": 1358, "prediction": "Prints a message ."}
{"id": 1360, "prediction": "Shortcut to shorten a class name ."}
{"id": 1362, "prediction": "Serialize an object to a JSON string ."}
{"id": 1364, "prediction": "Clone an object ."}
{"id": 1366, "prediction": "Reads an object from a file ."}
{"id": 1368, "prediction": "Converts a byte array to an object ."}
{"id": 1370, "prediction": "Create table names ."}
{"id": 1372, "prediction": "Cache entities ."}
{"id": 1374, "prediction": "Applies the given table to the given table name ."}
{"id": 1376, "prediction": "Render the view ."}
{"id": 1378, "prediction": "Gets the writer ."}
{"id": 1380, "prediction": "Write content to response ."}
{"id": 1382, "prediction": "Prints a string ."}
{"id": 1384, "prediction": "Returns the JSON representation of the given authentication token ."}
{"id": 1386, "prediction": "Stops the user ."}
{"id": 1388, "prediction": "Creates a directory ."}
{"id": 1390, "prediction": "Copies a file to a destination file ."}
{"id": 1392, "prediction": "Moves a file to the destination directory ."}
{"id": 1394, "prediction": "Deletes a directory ."}
{"id": 1396, "prediction": "Reads characters from a file ."}
{"id": 1398, "prediction": "Write a string to a file ."}
{"id": 1400, "prediction": "Read a number of bytes from a file ."}
{"id": 1402, "prediction": "Append bytes to a file ."}
{"id": 1404, "prediction": "Deletes a file ."}
{"id": 1406, "prediction": "Checks if the given file is binary ."}
{"id": 1408, "prediction": "Checks if source file exists ."}
{"id": 1410, "prediction": "Resolve action method ."}
{"id": 1412, "prediction": "Register a path alias ."}
{"id": 1414, "prediction": "Creates a CharSequenceSequence from the given char array ."}
{"id": 1416, "prediction": "Checks if the input string matches the input target ."}
{"id": 1418, "prediction": "Creates an array of URLs from a class loader ."}
{"id": 1420, "prediction": "Registers a type serializer for the given type ."}
{"id": 1422, "prediction": "Parse a multipart upload request ."}
{"id": 1424, "prediction": "Gets the values of a parameter ."}
{"id": 1426, "prediction": "Gets a list of uploaded files ."}
{"id": 1428, "prediction": "Parse the template ."}
{"id": 1430, "prediction": "Counts the number of escapes ."}
{"id": 1432, "prediction": "Parses the given query string ."}
{"id": 1434, "prediction": "Extract media type from content type ."}
{"id": 1436, "prediction": "Convert an appendable to an inner HTML string ."}
{"id": 1438, "prediction": "Resets the state ."}
{"id": 1440, "prediction": "Replaces the target type for the given path ."}
{"id": 1442, "prediction": "Parses a JSON string into a Map ."}
{"id": 1444, "prediction": "Skip object ."}
{"id": 1446, "prediction": "Parse string content ."}
{"id": 1448, "prediction": "Parse a string content ."}
{"id": 1450, "prediction": "Parse an array content ."}
{"id": 1452, "prediction": "Create a simple method wrapper ."}
{"id": 1454, "prediction": "Resolves a reference to the given property name ."}
{"id": 1456, "prediction": "Read all references from a method annotation ."}
{"id": 1458, "prediction": "Build default bean reference ."}
{"id": 1460, "prediction": "Convert a list of references to an array of references ."}
{"id": 1462, "prediction": "Starts a JoyJoy ."}
{"id": 1464, "prediction": "Finds a constructor with the given parameter types ."}
{"id": 1466, "prediction": "Compare two parameters ."}
{"id": 1468, "prediction": "Creates a new instance of the given parameters ."}
{"id": 1470, "prediction": "Returns the child class of the given class ."}
{"id": 1472, "prediction": "Sleep in milliseconds ."}
{"id": 1474, "prediction": "Wait until the specified object is interrupted ."}
{"id": 1476, "prediction": "Gets the value of the supplier ."}
{"id": 1478, "prediction": "Visit an annotation ."}
{"id": 1480, "prediction": "Visit a parameter annotation ."}
{"id": 1482, "prediction": "Visit a method instruction ."}
{"id": 1484, "prediction": "Visit a jump instruction ."}
{"id": 1486, "prediction": "Visit a try catch block ."}
{"id": 1488, "prediction": "Converts a writer to a writer ."}
{"id": 1490, "prediction": "Moves the next element to the next element ."}
{"id": 1492, "prediction": "Joins the given arrays into a single array ."}
{"id": 1494, "prediction": "Resize an array of the specified size ."}
{"id": 1496, "prediction": "Removes an element from the specified array ."}
{"id": 1498, "prediction": "Returns the index of the first element in the array"}
{"id": 1500, "prediction": "Enable XML mode ."}
{"id": 1502, "prediction": "Parses the LagoParser ."}
{"id": 1504, "prediction": "Ends basic block block ."}
{"id": 1506, "prediction": "Inject a target object into the context ."}
{"id": 1508, "prediction": "Looks up a pseudo pseudo class ."}
{"id": 1510, "prediction": "Get bean property names ."}
{"id": 1512, "prediction": "Checks whether the given property matches the given property name ."}
{"id": 1514, "prediction": "Read filter parameters ."}
{"id": 1516, "prediction": "Looks up the bundle file for the given bundle id ."}
{"id": 1518, "prediction": "Registers a bundle id ."}
{"id": 1520, "prediction": "Create a bundle file ."}
{"id": 1522, "prediction": "Fixes the content of a CSS file ."}
{"id": 1524, "prediction": "Create table name ."}
{"id": 1526, "prediction": "Convert an object to an array ."}
{"id": 1528, "prediction": "Resolve set injections for a given type ."}
{"id": 1530, "prediction": "Opens a connection to the database ."}
{"id": 1532, "prediction": "Closes the transaction ."}
{"id": 1534, "prediction": "Rollback a transaction ."}
{"id": 1537, "prediction": "Loads properties from a string ."}
{"id": 1539, "prediction": "Create a Properties object from the classpath ."}
{"id": 1541, "prediction": "Resolve all variables ."}
{"id": 1543, "prediction": "Resolve scope ."}
{"id": 1545, "prediction": "Registers annotation types ."}
{"id": 1547, "prediction": "Checks if the node matches the given selector ."}
{"id": 1549, "prediction": "Checks if the node matches the given selector ."}
{"id": 1551, "prediction": "Build the JRE packages ."}
{"id": 1553, "prediction": "Removes this node from its parent ."}
{"id": 1555, "prediction": "Inserts a child node at the given index ."}
{"id": 1557, "prediction": "Inserts a new child of the given child ."}
{"id": 1559, "prediction": "Inserts a new child of the new child of this node ."}
{"id": 1561, "prediction": "Find the child node with the given name ."}
{"id": 1563, "prediction": "Checks if this node is a child node ."}
{"id": 1565, "prediction": "Initialize sibling names ."}
{"id": 1567, "prediction": "Change the owner document ."}
{"id": 1569, "prediction": "Returns the text content of this node ."}
{"id": 1571, "prediction": "Get the inner body of this element ."}
{"id": 1573, "prediction": "Get the CSS path ."}
{"id": 1575, "prediction": "On start tag ."}
{"id": 1577, "prediction": "Add an AspectAspect"}
{"id": 1579, "prediction": "Adds the root package for the given action class ."}
{"id": 1581, "prediction": "Resolve validation message ."}
{"id": 1583, "prediction": "Add a named properties file ."}
{"id": 1585, "prediction": "Iterates through all targets and passes them to the given scope ."}
{"id": 1587, "prediction": "Extract the parameter values from the target object ."}
{"id": 1589, "prediction": "Create an action method argument ."}
{"id": 1591, "prediction": "Called when a session has been destroyed ."}
{"id": 1593, "prediction": "Adds the given JsonArray to the list ."}
{"id": 1595, "prediction": "Resolve target ."}
{"id": 1597, "prediction": "Convert a value to a string ."}
{"id": 1599, "prediction": "Gets the pseudo function name ."}
{"id": 1601, "prediction": "Creates a proxy socket for a proxy ."}
{"id": 1603, "prediction": "Gets all actions ."}
{"id": 1605, "prediction": "Find the first index of the first character in the given index ."}
{"id": 1607, "prediction": "Add command line arguments ."}
{"id": 1609, "prediction": "Runs the process ."}
{"id": 1611, "prediction": "Copy this frame from another frame ."}
{"id": 1613, "prediction": "Gets the abstract type from the descriptor ."}
{"id": 1615, "prediction": "Returns the local type for the given local index ."}
{"id": 1617, "prediction": "Pushes the given abstract type ."}
{"id": 1619, "prediction": "Removes elements from the input stack ."}
{"id": 1621, "prediction": "Adds the initialized type ."}
{"id": 1623, "prediction": "Puts the given abstract type into the buffer ."}
{"id": 1625, "prediction": "Schedule the prune ."}
{"id": 1627, "prediction": "Visit a nest host ."}
{"id": 1629, "prediction": "Visit an annotation ."}
{"id": 1631, "prediction": "Visit an inner class ."}
{"id": 1633, "prediction": "Get the current thread session ."}
{"id": 1635, "prediction": "Creates the execution array ."}
{"id": 1637, "prediction": "Read request body ."}
{"id": 1639, "prediction": "Calculates the first index of the first page of a page request ."}
{"id": 1641, "prediction": "Converts char array to byte array ."}
{"id": 1643, "prediction": "Resolve node name ."}
{"id": 1645, "prediction": "Renders an attribute ."}
{"id": 1647, "prediction": "Loads properties from a file ."}
{"id": 1649, "prediction": "Load properties from a map ."}
{"id": 1651, "prediction": "Load properties from classpath ."}
{"id": 1653, "prediction": "Sets a property value ."}
{"id": 1655, "prediction": "Extract properties from a map ."}
{"id": 1657, "prediction": "Extracts a map of key profiles ."}
{"id": 1659, "prediction": "Resolve active profiles ."}
{"id": 1661, "prediction": "Returns a list of profiles for the given property name ."}
{"id": 1663, "prediction": "Adds a set of SetInjection ."}
{"id": 1665, "prediction": "Add init methods ."}
{"id": 1667, "prediction": "Resolve the target class ."}
{"id": 1669, "prediction": "Get the target wrapper type ."}
{"id": 1671, "prediction": "Returns the type of the field ."}
{"id": 1673, "prediction": "Resolves the component type ."}
{"id": 1675, "prediction": "Creates a JsonResult from an exception ."}
{"id": 1677, "prediction": "Match pattern string ."}
{"id": 1679, "prediction": "Resolves the resource using the given strategy ."}
{"id": 1681, "prediction": "Returns the URL of the given resource ."}
{"id": 1683, "prediction": "Detect annotation type ."}
{"id": 1685, "prediction": "Visits all the fields in the given class ."}
{"id": 1687, "prediction": "Sets the bean ."}
{"id": 1689, "prediction": "Loads the property descriptor ."}
{"id": 1691, "prediction": "Returns the setter for the given property ."}
{"id": 1693, "prediction": "Adds an iterator to the list ."}
{"id": 1695, "prediction": "Stop the joyo server ."}
{"id": 1697, "prediction": "Creates a new SSLSocket connection ."}
{"id": 1699, "prediction": "Gets the socket factory ."}
{"id": 1701, "prediction": "Generates a random string with the specified number of characters ."}
{"id": 1703, "prediction": "Creates a new collection instance ."}
{"id": 1705, "prediction": "Convert value to target type ."}
{"id": 1707, "prediction": "Creates a default type cache ."}
{"id": 1709, "prediction": "Gets all method descriptors ."}
{"id": 1711, "prediction": "Parses an IP address as an integer ."}
{"id": 1713, "prediction": "Resolve host name ."}
{"id": 1715, "prediction": "Downloads a string from a URL ."}
{"id": 1717, "prediction": "Inject an action request into the target scope ."}
{"id": 1719, "prediction": "Creates a socket connection ."}
{"id": 1721, "prediction": "Gets the index of the primitive class name ."}
{"id": 1723, "prediction": "Load an array class by its name ."}
{"id": 1725, "prediction": "Returns a binary search for the given array ."}
{"id": 1727, "prediction": "Sets the exclude rules ."}
{"id": 1729, "prediction": "Includes template properties ."}
{"id": 1731, "prediction": "Registers a bean with the given name ."}
{"id": 1733, "prediction": "Preprocess SQL string ."}
{"id": 1735, "prediction": "Find the generated key for the given type ."}
{"id": 1737, "prediction": "Create bean wrapper ."}
{"id": 1739, "prediction": "Sets the query parameters ."}
{"id": 1741, "prediction": "Inserts the given chunk into this chunk ."}
{"id": 1743, "prediction": "Returns the table descriptor for the given column reference ."}
{"id": 1745, "prediction": "Resolves a class ."}
{"id": 1747, "prediction": "Returns an enumeration of the file parameter names ."}
{"id": 1749, "prediction": "Gets the servlet path ."}
{"id": 1751, "prediction": "Resolve parameter names ."}
{"id": 1753, "prediction": "Stops the repository ."}
{"id": 1755, "prediction": "Filter message id ."}
{"id": 1757, "prediction": "Filter to recipient address ."}
{"id": 1759, "prediction": "Filter a BCC address ."}
{"id": 1761, "prediction": "Add a flag ."}
{"id": 1763, "prediction": "Method allow to filter date ."}
{"id": 1765, "prediction": "Create a new AND filter with the given email filters ."}
{"id": 1767, "prediction": "Add a NotFilter to be sent ."}
{"id": 1769, "prediction": "Encodes a byte array ."}
{"id": 1771, "prediction": "Determines if the request is eligible for the request ."}
{"id": 1773, "prediction": "Runs all violations in the given context ."}
{"id": 1775, "prediction": "Set the enabled profiles ."}
{"id": 1777, "prediction": "Parses the request body ."}
{"id": 1779, "prediction": "Add two dates ."}
{"id": 1781, "prediction": "Sets the value at the given index ."}
{"id": 1783, "prediction": "Emit a comment ."}
{"id": 1785, "prediction": "Create a hash of the given password ."}
{"id": 1787, "prediction": "Converts a hex string to a byte array ."}
{"id": 1789, "prediction": "Sets the name of the attachment ."}
{"id": 1791, "prediction": "Resolve content type ."}
{"id": 1536, "prediction": "Create a Properties object from a String ."}
{"id": 1538, "prediction": "Returns a subset of properties with the given prefix ."}
{"id": 1540, "prediction": "Get the value of a property ."}
{"id": 1542, "prediction": "Resolve property value ."}
{"id": 1544, "prediction": "Returns the transaction mode for the given method name ."}
{"id": 1546, "prediction": "Reads a transaction annotation ."}
{"id": 1548, "prediction": "Checks if the element is a match ."}
{"id": 1550, "prediction": "Unescape the given value ."}
{"id": 1552, "prediction": "Clone this node ."}
{"id": 1554, "prediction": "Add child nodes ."}
{"id": 1556, "prediction": "Inserts a new child before this node ."}
{"id": 1558, "prediction": "Inserts a new child after a new child ."}
{"id": 1560, "prediction": "Remove all child nodes from this node ."}
{"id": 1562, "prediction": "Filters children of the given predicate ."}
{"id": 1564, "prediction": "Initializes child elements ."}
{"id": 1566, "prediction": "Initialize child nodes ."}
{"id": 1568, "prediction": "Returns the previous sibling of this node ."}
{"id": 1570, "prediction": "Gets the HTML fragment ."}
{"id": 1572, "prediction": "Visit child nodes ."}
{"id": 1574, "prediction": "On decoder tag ."}
{"id": 1576, "prediction": "Define decoder ."}
{"id": 1578, "prediction": "Adds a new root package to the mapping ."}
{"id": 1580, "prediction": "Find the root package for the given action path ."}
{"id": 1582, "prediction": "Returns a copy of the names of this bean ."}
{"id": 1584, "prediction": "Iterates over all targets ."}
{"id": 1586, "prediction": "Iterates through all targets and passes them to the target scope ."}
{"id": 1588, "prediction": "Creates and returns a list of targets ."}
{"id": 1590, "prediction": "Called when a session is created ."}
{"id": 1592, "prediction": "Adds a new value to the list ."}
{"id": 1594, "prediction": "Removes a position from the list ."}
{"id": 1596, "prediction": "Called when an action is not found ."}
{"id": 1598, "prediction": "Filter the given action filter ."}
{"id": 1600, "prediction": "Resolve property injection points ."}
{"id": 1602, "prediction": "Gets the attribute count ."}
{"id": 1604, "prediction": "Checks if the given character is equal ."}
{"id": 1606, "prediction": "Find the first index of the first occurrence of the given character ."}
{"id": 1608, "prediction": "Sets environment variable ."}
{"id": 1610, "prediction": "Invokes a listener ."}
{"id": 1612, "prediction": "Gets the abstract type from the API ."}
{"id": 1614, "prediction": "Sets the input frame from the api format ."}
{"id": 1616, "prediction": "Sets the local variable ."}
{"id": 1618, "prediction": "Push a symbol table ."}
{"id": 1620, "prediction": "Pop the last argument ."}
{"id": 1622, "prediction": "Returns the initialized type for the given abstract type ."}
{"id": 1624, "prediction": "Removes all entries from the cache ."}
{"id": 1626, "prediction": "Visit a module ."}
{"id": 1628, "prediction": "Visit an outer class ."}
{"id": 1630, "prediction": "Visit a nest member ."}
{"id": 1632, "prediction": "Visit a field ."}
{"id": 1634, "prediction": "Close the current thread ."}
{"id": 1636, "prediction": "Invokes the action method ."}
{"id": 1638, "prediction": "Calculates the index of the first item in the page size ."}
{"id": 1640, "prediction": "Returns true if the value matches the given value ."}
{"id": 1642, "prediction": "Find the first index of the first occurrence of the given source ."}
{"id": 1644, "prediction": "Resolve attribute name ."}
{"id": 1646, "prediction": "Loads properties from a file ."}
{"id": 1648, "prediction": "Load props from an input stream ."}
{"id": 1650, "prediction": "Loads properties from a map ."}
{"id": 1652, "prediction": "Returns the value of the profile ."}
{"id": 1654, "prediction": "Extract properties from the map ."}
{"id": 1656, "prediction": "Extract sub props from the target map ."}
{"id": 1658, "prediction": "Adds an inner map to the map ."}
{"id": 1660, "prediction": "Get the list of profiles"}
{"id": 1662, "prediction": "Adds a property injection point ."}
{"id": 1664, "prediction": "Adds a method injection point ."}
{"id": 1666, "prediction": "Add destroy method points ."}
{"id": 1668, "prediction": "Inject target object into target object ."}
{"id": 1670, "prediction": "Find the field descriptor ."}
{"id": 1672, "prediction": "Resolves the key type ."}
{"id": 1674, "prediction": "Creates a JsonResult from an object ."}
{"id": 1676, "prediction": "Resolve the HTTP method name ."}
{"id": 1678, "prediction": "Resolve the given strategy ."}
{"id": 1680, "prediction": "Tries to load a class ."}
{"id": 1682, "prediction": "Wait for the end of the queue ."}
{"id": 1684, "prediction": "Builds an InjectionPoint ."}
{"id": 1686, "prediction": "Returns an array of URLs for the given class ."}
{"id": 1688, "prediction": "Update the bean ."}
{"id": 1690, "prediction": "Returns the getter for the given property ."}
{"id": 1692, "prediction": "Connect to the database ."}
{"id": 1694, "prediction": "Prints the logo logo"}
{"id": 1696, "prediction": "Creates a socket ."}
{"id": 1698, "prediction": "Get the default SSL socket factory ."}
{"id": 1700, "prediction": "Generates a random string ."}
{"id": 1702, "prediction": "Generates a random number of characters ."}
{"id": 1704, "prediction": "Inject a value into the target object ."}
{"id": 1706, "prediction": "Visit a provider ."}
{"id": 1708, "prediction": "Put a value into the cache ."}
{"id": 1710, "prediction": "Resolve IP address ."}
{"id": 1712, "prediction": "Checks if the given string is valid ."}
{"id": 1714, "prediction": "Downloads bytes from a URL ."}
{"id": 1716, "prediction": "Downloads a file from a URL ."}
{"id": 1718, "prediction": "Inject an action request ."}
{"id": 1720, "prediction": "Connects to the specified hostname ."}
{"id": 1722, "prediction": "Tries to load a class ."}
{"id": 1724, "prediction": "Shuts down the container ."}
{"id": 1726, "prediction": "Returns a binary search for the given array ."}
{"id": 1728, "prediction": "Applies the given rules to this rule ."}
{"id": 1730, "prediction": "Set the start tag ."}
{"id": 1732, "prediction": "Resolve column type ."}
{"id": 1734, "prediction": "Create a new ResultSetMapper ."}
{"id": 1736, "prediction": "Populate generated keys ."}
{"id": 1738, "prediction": "Set bean ."}
{"id": 1740, "prediction": "Sets the array of objects ."}
{"id": 1742, "prediction": "Lookup the type of an entity ."}
{"id": 1744, "prediction": "Resolve table name ."}
{"id": 1746, "prediction": "Appends a space to the output builder ."}
{"id": 1748, "prediction": "Includes the given page ."}
{"id": 1750, "prediction": "Gets the request URI ."}
{"id": 1752, "prediction": "Starts the launcher ."}
{"id": 1754, "prediction": "Filter the subject ."}
{"id": 1756, "prediction": "Filter from email address ."}
{"id": 1758, "prediction": "Filter a cc address ."}
{"id": 1760, "prediction": "Add flags to the filter ."}
{"id": 1762, "prediction": "Method allow to filter date ."}
{"id": 1764, "prediction": "Appends a filter to the email address ."}
{"id": 1766, "prediction": "Create a new OrFilter with the given email filters ."}
{"id": 1768, "prediction": "Concatenate a search term ."}
{"id": 1770, "prediction": "Convert a value to a byte array ."}
{"id": 1772, "prediction": "Validates the target object ."}
{"id": 1774, "prediction": "Use this method to enable the specified profile ."}
{"id": 1776, "prediction": "Checks if the given set of profiles are enabled ."}
{"id": 1778, "prediction": "Returns the millisecond value in milliseconds ."}
{"id": 1780, "prediction": "Subtract two dates ."}
{"id": 1782, "prediction": "Initializes the parser ."}
{"id": 1784, "prediction": "Add an error message ."}
{"id": 1786, "prediction": "Generates a Pk2K2 key ."}
{"id": 1788, "prediction": "Resolve provider definitions ."}
{"id": 1790, "prediction": "Set the content id from the email ."}
{"id": 1793, "prediction": "Compute the size of the attribute table ."}
{"id": 1795, "prediction": "Decodes a string ."}
{"id": 1797, "prediction": "Starts the database ."}
{"id": 1799, "prediction": "Creates a new method annotation ."}
{"id": 1801, "prediction": "Create a method signature visitor ."}
{"id": 1803, "prediction": "Convert a line to a string array ."}
{"id": 1805, "prediction": "Creates a class reader ."}
{"id": 1807, "prediction": "Encrypt a string ."}
{"id": 1809, "prediction": "Gets a logger ."}
{"id": 1811, "prediction": "Create an action request ."}
{"id": 1813, "prediction": "Destroy bean ."}
{"id": 1815, "prediction": "Get all emails from the given folder ."}
{"id": 1817, "prediction": "Run the report ."}
{"id": 1819, "prediction": "Print rate ."}
{"id": 1821, "prediction": "Closes the replay ."}
{"id": 1823, "prediction": "Returns the position of the log ."}
{"id": 1825, "prediction": "Appends the padding to the buffer ."}
{"id": 1827, "prediction": "Waits for error response ."}
{"id": 1829, "prediction": "Display an available image ."}
{"id": 1831, "prediction": "Creates a status indicator for a given channel ."}
{"id": 1833, "prediction": "Sets the limit ."}
{"id": 1835, "prediction": "This method is called from the server ."}
{"id": 1837, "prediction": "Snapshot stream ."}
{"id": 1839, "prediction": "Write key ."}
{"id": 1841, "prediction": "Connects to the server ."}
{"id": 1843, "prediction": "Adds a session to the session ."}
{"id": 1845, "prediction": "Stop recording recording ."}
{"id": 1847, "prediction": "Stops the replay request ."}
{"id": 1849, "prediction": "List records for URI requests ."}
{"id": 1851, "prediction": "Extend a recording request ."}
{"id": 1853, "prediction": "Gets stop position ."}
{"id": 1855, "prediction": "Checks if the given UDP channel matches the given UDP channel ."}
{"id": 1857, "prediction": "Returns the description of this UDPChannel ."}
{"id": 1859, "prediction": "Inserts a packet ."}
{"id": 1861, "prediction": "Sets the value for the given key ."}
{"id": 1863, "prediction": "Gets the entity tag ."}
{"id": 1865, "prediction": "Gets tag ."}
{"id": 1867, "prediction": "Update the publisher limit ."}
{"id": 1869, "prediction": "Returns the label name for the given type ."}
{"id": 1871, "prediction": "Resets this builder ."}
{"id": 1873, "prediction": "Sets the prefix ."}
{"id": 1875, "prediction": "Sets the control mode ."}
{"id": 1877, "prediction": "Sets the term offset ."}
{"id": 1879, "prediction": "Opens the datagram channel ."}
{"id": 1881, "prediction": "Checks if the given buffer is valid ."}
{"id": 1883, "prediction": "Handles a retransmit request ."}
{"id": 1885, "prediction": "Returns the status of the given status ."}
{"id": 1887, "prediction": "Resets this vector ."}
{"id": 1889, "prediction": "Validates the length of a vector ."}
{"id": 1891, "prediction": "Validates the socket buffers ."}
{"id": 1893, "prediction": "Validate session id ."}
{"id": 1895, "prediction": "Set the error code ."}
{"id": 1897, "prediction": "Encodes a list of cluster members ."}
{"id": 1899, "prediction": "Closes the given cluster members ."}
{"id": 1901, "prediction": "Gets the quorum position ."}
{"id": 1903, "prediction": "Checks to see if there are at least one position ."}
{"id": 1905, "prediction": "Returns true if the given cluster member has the majority vote ."}
{"id": 1907, "prediction": "Validates the members of the given member ."}
{"id": 1909, "prediction": "Returns true if the cluster member is a member of the given cluster ."}
{"id": 1911, "prediction": "Checks if the endpoints are duplicated ."}
{"id": 1913, "prediction": "Removes a member from the list ."}
{"id": 1915, "prediction": "Maps a CNCCNC file to a CNC file ."}
{"id": 1917, "prediction": "Check if the driver is active ."}
{"id": 1919, "prediction": "Requests the driver termination ."}
{"id": 1921, "prediction": "Write the frame length to the buffer ."}
{"id": 1923, "prediction": "Write flags to the buffer ."}
{"id": 1925, "prediction": "Write term id ."}
{"id": 1927, "prediction": "Find counter by session id ."}
{"id": 1929, "prediction": "Checks if the given counter is active ."}
{"id": 1931, "prediction": "Reload entries ."}
{"id": 1933, "prediction": "Creates a recovery plan ."}
{"id": 1935, "prediction": "Append term ."}
{"id": 1937, "prediction": "Commits a log position ."}
{"id": 1939, "prediction": "Closes the session ."}
{"id": 1941, "prediction": "Unblock a log ."}
{"id": 1943, "prediction": "Set the channel ."}
{"id": 1945, "prediction": "Checks that the given page size is valid ."}
{"id": 1947, "prediction": "Compute the position of the term ."}
{"id": 1949, "prediction": "Stores the default frame header ."}
{"id": 1951, "prediction": "Rotate log ."}
{"id": 1953, "prediction": "Calculates the term offset based on the given length ."}
{"id": 1955, "prediction": "Sets the raw tail tail of the raw tail of the metadata ."}
{"id": 1957, "prediction": "Allocates the counter ."}
{"id": 1959, "prediction": "Checks if the given counter is a replay state ."}
{"id": 1961, "prediction": "Converts a set of flags to a character array ."}
{"id": 1963, "prediction": "Offers the buffer at the given position ."}
{"id": 1965, "prediction": "Commits the frame length ."}
{"id": 1967, "prediction": "Starts the driver ."}
{"id": 1969, "prediction": "Returns the position of this term ."}
{"id": 1971, "prediction": "Find counter id ."}
{"id": 1973, "prediction": "Allocate a AtomicCounter ."}
{"id": 1975, "prediction": "Dispatch recording descriptor ."}
{"id": 1977, "prediction": "Sets the value at the specified index ."}
{"id": 1979, "prediction": "Calculates RowRanges ."}
{"id": 1981, "prediction": "Convert a struct type to a group type ."}
{"id": 1983, "prediction": "Ends the previous run of the previous run ."}
{"id": 1985, "prediction": "Reads the list of footers from the given configuration file ."}
{"id": 1987, "prediction": "Reads the footer from a file ."}
{"id": 1989, "prediction": "Reads the next row group ."}
{"id": 1991, "prediction": "Adds a new writer to the pool ."}
{"id": 1993, "prediction": "Updates the total allocation size ."}
{"id": 1995, "prediction": "Starts the stream ."}
{"id": 1997, "prediction": "Starts a new column ."}
{"id": 1999, "prediction": "Write a data page ."}
{"id": 2001, "prediction": "Ends a block ."}
{"id": 2003, "prediction": "Ends the file ."}
{"id": 2005, "prediction": "Merges the metadata file with the given configuration ."}
{"id": 2007, "prediction": "Merges the metadata into a new file ."}
{"id": 2009, "prediction": "Returns true if the given schema is null ."}
{"id": 2011, "prediction": "Convert a string to a value ."}
{"id": 2013, "prediction": "Creates a ThriftMetaData from a Thrift class ."}
{"id": 2015, "prediction": "Write null value ."}
{"id": 2017, "prediction": "Initializes the values from the stream ."}
{"id": 2019, "prediction": "Check enum value ."}
{"id": 2021, "prediction": "Throws an exception if the given type is an exception ."}
{"id": 2023, "prediction": "Returns a builder for a given primitive type ."}
{"id": 2025, "prediction": "Gets the non null value ."}
{"id": 2027, "prediction": "Invokes a method on the given object ."}
{"id": 2029, "prediction": "Merges the fields of this group with the given type ."}
{"id": 2031, "prediction": "Gets the filter ."}
{"id": 2033, "prediction": "Generates a list of ParquetSplit splits ."}
{"id": 2035, "prediction": "Validates that the given descriptor has the same schema ."}
{"id": 2037, "prediction": "Creates a new direct codec factory ."}
{"id": 2039, "prediction": "Checks the set ."}
{"id": 2041, "prediction": "Closes the record writer ."}
{"id": 2043, "prediction": "Adds a class to the class ."}
{"id": 2045, "prediction": "Checks to see if the given value is an integer ."}
{"id": 2047, "prediction": "Creates a schema mapping from a parquet schema ."}
{"id": 1792, "prediction": "Parse a type signature ."}
{"id": 1794, "prediction": "Puts the contents of the module ."}
{"id": 1796, "prediction": "Decodes the given source ."}
{"id": 1798, "prediction": "Check database connection provider ."}
{"id": 1800, "prediction": "overrides the visitor to look for superclasses"}
{"id": 1802, "prediction": "Convert an array of objects to a CSV string ."}
{"id": 1804, "prediction": "Resolve the ctor point ."}
{"id": 1806, "prediction": "Gets the cached advice class reader ."}
{"id": 1808, "prediction": "Decrypt a string ."}
{"id": 1810, "prediction": "Sets the cookie name ."}
{"id": 1812, "prediction": "Create bean filter ."}
{"id": 1814, "prediction": "Shuts down the bean ."}
{"id": 1816, "prediction": "Starts the ClusteringService ."}
{"id": 1818, "prediction": "Prints error message ."}
{"id": 1820, "prediction": "Maps a file to a file ."}
{"id": 1822, "prediction": "Performs the actual work ."}
{"id": 1824, "prediction": "Adds a new position to the buffer ."}
{"id": 1826, "prediction": "Closes the session ."}
{"id": 1828, "prediction": "Stop the replay session ."}
{"id": 1830, "prediction": "Display an unavailable image ."}
{"id": 1832, "prediction": "Creates a new receive status indicator ."}
{"id": 1834, "prediction": "Append a byte buffer to the buffer ."}
{"id": 1836, "prediction": "Creates a copy of the coverage report file ."}
{"id": 1838, "prediction": "Create default header ."}
{"id": 1840, "prediction": "Write the label buffer ."}
{"id": 1842, "prediction": "Attempts to connect to the server ."}
{"id": 1844, "prediction": "Start recording ."}
{"id": 1846, "prediction": "Adds a message to the buffer ."}
{"id": 1848, "prediction": "List records ."}
{"id": 1850, "prediction": "List recording records ."}
{"id": 1852, "prediction": "Gets the recording position ."}
{"id": 1854, "prediction": "List subscriptions ."}
{"id": 1856, "prediction": "Returns the destination address for the given channel ."}
{"id": 1858, "prediction": "Add a destination image ."}
{"id": 1860, "prediction": "Finds a ControlToggleToggle ."}
{"id": 1862, "prediction": "Gets the channel tag ."}
{"id": 1864, "prediction": "Add session id ."}
{"id": 1866, "prediction": "Appends the padding to the buffer ."}
{"id": 1868, "prediction": "Allocate a temp buffer ."}
{"id": 1870, "prediction": "Scans the buffer for available bytes ."}
{"id": 1872, "prediction": "Validates the input URI ."}
{"id": 1874, "prediction": "Sets the media media ."}
{"id": 1876, "prediction": "Sets the term length ."}
{"id": 1878, "prediction": "Sets the value of the socket ."}
{"id": 1880, "prediction": "Closes the connection ."}
{"id": 1882, "prediction": "Receive a message from the network ."}
{"id": 1884, "prediction": "Processes the timeout ."}
{"id": 1886, "prediction": "Allocate a AtomicCounter ."}
{"id": 1888, "prediction": "Validates the buffer ."}
{"id": 1890, "prediction": "Calculates the size of the producer window ."}
{"id": 1892, "prediction": "Validate the page size ."}
{"id": 1894, "prediction": "Validate timeout ."}
{"id": 1896, "prediction": "Resets the state ."}
{"id": 1898, "prediction": "Adds the status of the members of the given channel ."}
{"id": 1900, "prediction": "Checks if the cluster members are active ."}
{"id": 1902, "prediction": "Resets log positions ."}
{"id": 1904, "prediction": "Checks to see if the given number of votes on the given node ."}
{"id": 1906, "prediction": "Determine the given member members ."}
{"id": 1908, "prediction": "Checks if two clusters are identical ."}
{"id": 1910, "prediction": "Returns true if the given cluster member is a candidate cluster ."}
{"id": 1912, "prediction": "Finds the index of a member ."}
{"id": 1914, "prediction": "Returns the highest id of the cluster member ."}
{"id": 1916, "prediction": "Check if the driver is active ."}
{"id": 1918, "prediction": "Check if the driver is active ."}
{"id": 1920, "prediction": "Returns the frame length of the buffer ."}
{"id": 1922, "prediction": "Write a frame type to the buffer ."}
{"id": 1924, "prediction": "Write a buffer offset to the buffer ."}
{"id": 1926, "prediction": "Finds the counter id for the given recording ."}
{"id": 1928, "prediction": "Returns the record id for the given counter ."}
{"id": 1930, "prediction": "Sets the application specific header ."}
{"id": 1932, "prediction": "Returns the last entry ."}
{"id": 1934, "prediction": "Creates a recovery plan ."}
{"id": 1936, "prediction": "Append a snapshot ."}
{"id": 1938, "prediction": "Removes a tombstone entry ."}
{"id": 1940, "prediction": "Inserts a vector into this buffer ."}
{"id": 1942, "prediction": "Get the channel ."}
{"id": 1944, "prediction": "Checks that the given term is valid ."}
{"id": 1946, "prediction": "Sets the active active term count ."}
{"id": 1948, "prediction": "Compute the log length for the given term ."}
{"id": 1950, "prediction": "Applies default header to the term ."}
{"id": 1952, "prediction": "Initializes the tail term with the given term id ."}
{"id": 1954, "prediction": "Gets the long tail of the given metadata ."}
{"id": 1956, "prediction": "Writes the token buffer to the token buffer ."}
{"id": 1958, "prediction": "Find counter id ."}
{"id": 1960, "prediction": "Gets the snapshot record id ."}
{"id": 1962, "prediction": "Set the channel ."}
{"id": 1964, "prediction": "Wrap the given buffer ."}
{"id": 1966, "prediction": "Aborts the frame ."}
{"id": 1968, "prediction": "Close all resources ."}
{"id": 1970, "prediction": "Allocate a counter ."}
{"id": 1972, "prediction": "Creates a snapshot of all streams ."}
{"id": 1974, "prediction": "Closes the connection ."}
{"id": 1976, "prediction": "Adds a slab to the slab ."}
{"id": 1978, "prediction": "Add statistics ."}
{"id": 1980, "prediction": "Convert an array element to a group type ."}
{"id": 1982, "prediction": "Annotation for a message ."}
{"id": 1984, "prediction": "Read a single struct ."}
{"id": 1986, "prediction": "Read a list of footers from a file ."}
{"id": 1988, "prediction": "Reads the next row group ."}
{"id": 1990, "prediction": "Reads a Dictionary page ."}
{"id": 1992, "prediction": "Removes a writer ."}
{"id": 1994, "prediction": "Registers the given callbacks ."}
{"id": 1996, "prediction": "Starts a new block ."}
{"id": 1998, "prediction": "Write a Dictionary page ."}
{"id": 2000, "prediction": "Writes a column ."}
{"id": 2002, "prediction": "Copies bytes from the input stream to the given position ."}
{"id": 2004, "prediction": "Merges metadata files into a single file ."}
{"id": 2006, "prediction": "Write job summary file ."}
{"id": 2008, "prediction": "Reads the value of the value ."}
{"id": 2010, "prediction": "Returns the first non - null if any ."}
{"id": 2012, "prediction": "Creates a ThriftMetaData from the given extra meta data ."}
{"id": 2014, "prediction": "Returns the extra meta data ."}
{"id": 2016, "prediction": "Writes the next page ."}
{"id": 2018, "prediction": "Allocates the values in the buffer ."}
{"id": 2020, "prediction": "Calculate bit widths for a mini block buffer ."}
{"id": 2022, "prediction": "Gets statistics ."}
{"id": 2024, "prediction": "Merge statistics ."}
{"id": 2026, "prediction": "Creates a new TaskAttemptContext ."}
{"id": 2028, "prediction": "Writes the fields to the given string ."}
{"id": 2030, "prediction": "Initialize counter from reporter ."}
{"id": 2032, "prediction": "Read all footers from a file ."}
{"id": 2034, "prediction": "Writes a record to the output stream ."}
{"id": 2036, "prediction": "Serialize a message ."}
{"id": 2038, "prediction": "Makes sure that the required fields are required ."}
{"id": 2040, "prediction": "Reads the file meta data from the input stream ."}
{"id": 2042, "prediction": "Sets the schema for the given job ."}
{"id": 2044, "prediction": "Throws an exception if the column is a valid type ."}
{"id": 2046, "prediction": "Creates a schema mapping from an arrow schema ."}
{"id": 2049, "prediction": "Write a page header to the output stream ."}
{"id": 2051, "prediction": "Writes the object to the given configuration ."}
{"id": 2053, "prediction": "Put a new value into the cache ."}
{"id": 2055, "prediction": "Writes the given avro schema ."}
{"id": 2057, "prediction": "Set the globals ."}
{"id": 2059, "prediction": "Opens an input stream ."}
{"id": 2061, "prediction": "Convert a struct to a schema type ."}
{"id": 2063, "prediction": "Creates a group type ."}
{"id": 2065, "prediction": "Creates a new ParquetSplit ."}
{"id": 2067, "prediction": "Resolve the schema access to the requested schema ."}
{"id": 2069, "prediction": "Checks that the parquet files are valid ."}
{"id": 2071, "prediction": "Creates a page filter that matches the specified start position ."}
{"id": 2073, "prediction": "Initialize the plan ."}
{"id": 2075, "prediction": "Summarizes a tuple of tuples"}
{"id": 2077, "prediction": "Reads a map entry ."}
{"id": 2079, "prediction": "Reads a little endian int from the buffer ."}
{"id": 2081, "prediction": "Creates a topic if it exists ."}
{"id": 2083, "prediction": "Create a stage bean ."}
{"id": 2085, "prediction": "Create interceptor ."}
{"id": 2087, "prediction": "Convert milliseconds to days ."}
{"id": 2089, "prediction": "Updates the data format ."}
{"id": 2091, "prediction": "Copy blob resources from the given pipeline ."}
{"id": 2093, "prediction": "Report the thread health report ."}
{"id": 2095, "prediction": "Stores the configuration of a control hub ."}
{"id": 2097, "prediction": "Updates the pipeline if necessary ."}
{"id": 2099, "prediction": "Upgrade the given stage ."}
{"id": 2101, "prediction": "Updates the stage if necessary ."}
{"id": 2103, "prediction": "Checks if the class is a system class ."}
{"id": 2105, "prediction": "Adds the specified element to the evict ."}
{"id": 2107, "prediction": "Adds the list of errors to the stage ."}
{"id": 2109, "prediction": "Gets all file descriptors ."}
{"id": 2111, "prediction": "Gets the descriptor for a given message type ."}
{"id": 2113, "prediction": "Converts a record to a protobuf message ."}
{"id": 2115, "prediction": "Upgrade the configuration to a new configuration"}
{"id": 2117, "prediction": "Convert a KUUID to a FieldType ."}
{"id": 2119, "prediction": "Intercept a list of records ."}
{"id": 2121, "prediction": "Adds missing configurations to the given stage ."}
{"id": 2123, "prediction": "Adds the response headers to the record ."}
{"id": 2125, "prediction": "Write response header ."}
{"id": 2127, "prediction": "Configure the client ."}
{"id": 2129, "prediction": "Increments the source offset offset ."}
{"id": 2131, "prediction": "Adds the response headers to the response ."}
{"id": 2133, "prediction": "Process the response ."}
{"id": 2135, "prediction": "Converts a DataParser to a RecoverableParserException ."}
{"id": 2137, "prediction": "Gets credentials ."}
{"id": 2139, "prediction": "Copy the buffer to the buffer ."}
{"id": 2141, "prediction": "Clears the current batch ."}
{"id": 2143, "prediction": "Resolves a multi - line chunk ."}
{"id": 2145, "prediction": "Escape a string ."}
{"id": 2147, "prediction": "Gets the channel provider provider ."}
{"id": 2149, "prediction": "Compile the given expression ."}
{"id": 2151, "prediction": "Adds a dictionary ."}
{"id": 2153, "prediction": "Stop the aggregated data ."}
{"id": 2155, "prediction": "Serialize an object ."}
{"id": 2157, "prediction": "Deserialize an object from a file ."}
{"id": 2159, "prediction": "Resolves an EL expression ."}
{"id": 2161, "prediction": "Returns the table name of the given metadata record ."}
{"id": 2163, "prediction": "Gets the internal field ."}
{"id": 2165, "prediction": "Retrieves whether or not the given metadata record exists ."}
{"id": 2167, "prediction": "Get the data format for the given metadata record ."}
{"id": 2169, "prediction": "Validate partition information ."}
{"id": 2171, "prediction": "Serialize a HDF schema to a HDF schema file ."}
{"id": 2173, "prediction": "Get configuration information"}
{"id": 2175, "prediction": "Formats a template with the given parameters ."}
{"id": 2177, "prediction": "Checks to see if the record is present in the record map ."}
{"id": 2179, "prediction": "Send an error event to the given record ."}
{"id": 2181, "prediction": "Parse a URL ."}
{"id": 2183, "prediction": "Closes the client ."}
{"id": 2185, "prediction": "Get a label from a string representation ."}
{"id": 2187, "prediction": "Reads a secret ."}
{"id": 2189, "prediction": "Write document ."}
{"id": 2191, "prediction": "Generate the SQL for alter table ."}
{"id": 2193, "prediction": "Returns the next messages from the queue ."}
{"id": 2195, "prediction": "Called when an error occurs ."}
{"id": 2197, "prediction": "Get definitions ."}
{"id": 2199, "prediction": "Format a column name ."}
{"id": 2201, "prediction": "Get information about a pipeline"}
{"id": 2203, "prediction": "Get a list of pipelines"}
{"id": 2205, "prediction": "Returns the file path for the given record ."}
{"id": 2207, "prediction": "Returns the field path for the given column ."}
{"id": 2209, "prediction": "Returns the next runner ."}
{"id": 2211, "prediction": "Return a runner to the pipeline ."}
{"id": 2213, "prediction": "Validates that the container has been destroyed ."}
{"id": 2215, "prediction": "Gets the last shard id ."}
{"id": 2217, "prediction": "Handle SQL exception ."}
{"id": 2219, "prediction": "Compare two files ."}
{"id": 2221, "prediction": "Validates the set of fields to ensure that they are valid ."}
{"id": 2223, "prediction": "Rolls the active stats ."}
{"id": 2225, "prediction": "Ensures that the given path exists ."}
{"id": 2227, "prediction": "Writes a batch of batch to the given batch ."}
{"id": 2229, "prediction": "Generates no more data event ."}
{"id": 2231, "prediction": "Updates the record for a record ."}
{"id": 2233, "prediction": "Checks if the given stage is the same version ."}
{"id": 2235, "prediction": "Configure auth client ."}
{"id": 2237, "prediction": "Evaluate a HttpMethod expression ."}
{"id": 2239, "prediction": "Gets the value of the field from a record ."}
{"id": 2241, "prediction": "Registers a schema ."}
{"id": 2243, "prediction": "Gets the schema id from the given subject ."}
{"id": 2245, "prediction": "Write a schema id ."}
{"id": 2247, "prediction": "Get default values from a schema"}
{"id": 2249, "prediction": "Logs details about the validation results ."}
{"id": 2251, "prediction": "Initialize the configuration ."}
{"id": 2253, "prediction": "Gets the list of edge vertices for the given vertex ."}
{"id": 2255, "prediction": "Deserialize a Map from a String"}
{"id": 2257, "prediction": "Gets a report ."}
{"id": 2259, "prediction": "Write offsets to the given checkpoint file ."}
{"id": 2261, "prediction": "Handles an error ."}
{"id": 2263, "prediction": "Gets the reader ."}
{"id": 2265, "prediction": "Sets the DPM base URL ."}
{"id": 2267, "prediction": "Parse a date string ."}
{"id": 2269, "prediction": "Gets the client ."}
{"id": 2271, "prediction": "Get the table metadata ."}
{"id": 2273, "prediction": "Creates a new EventBuilder ."}
{"id": 2275, "prediction": "Convert an SQL string to an operation code ."}
{"id": 2277, "prediction": "Adds jar files to the given configuration ."}
{"id": 2279, "prediction": "Checks if the given field matches the given condition ."}
{"id": 2281, "prediction": "Called by instrumentation ."}
{"id": 2283, "prediction": "Runs a BigQuery ."}
{"id": 2285, "prediction": "Get the table description"}
{"id": 2287, "prediction": "Get the column type for a field ."}
{"id": 2289, "prediction": "Get the schema for the table"}
{"id": 2291, "prediction": "Returns the class for the given type name ."}
{"id": 2293, "prediction": "Gets the topic ."}
{"id": 2295, "prediction": "Gets the input stream ."}
{"id": 2297, "prediction": "Returns true if the file exists ."}
{"id": 2299, "prediction": "Validates that all the services are valid ."}
{"id": 2301, "prediction": "Gets the aggregator unit ."}
{"id": 2303, "prediction": "Creates a GroupBy using the provided data provider ."}
{"id": 2048, "prediction": "Creates a SchemaMappingMapping for the given ArquetSchemaSchema ."}
{"id": 2050, "prediction": "Skips over the current record ."}
{"id": 2052, "prediction": "Removes a value from the cache ."}
{"id": 2054, "prediction": "Returns the current value for the given key ."}
{"id": 2056, "prediction": "Write value ."}
{"id": 2058, "prediction": "Outputs a string to a file ."}
{"id": 2060, "prediction": "Creates a filter that filters the given column path ."}
{"id": 2062, "prediction": "Create a new group type ."}
{"id": 2064, "prediction": "Gets the merged key metadata ."}
{"id": 2066, "prediction": "Returns a map of fields with the given name ."}
{"id": 2068, "prediction": "Get the input files from a list of files"}
{"id": 2070, "prediction": "Get the list of files from a directory"}
{"id": 2072, "prediction": "Creates a list that consumes the given type ."}
{"id": 2074, "prediction": "Merges all tuples into a tuple ."}
{"id": 2076, "prediction": "Read a struct ."}
{"id": 2078, "prediction": "Write an integer ."}
{"id": 2080, "prediction": "Sets the schema for the given job ."}
{"id": 2082, "prediction": "Create a new PipelineStageBean ."}
{"id": 2084, "prediction": "Create interceptors for the given stage ."}
{"id": 2086, "prediction": "Parse Avro schema ."}
{"id": 2088, "prediction": "Gets the Avro schema from a header ."}
{"id": 2090, "prediction": "Returns the length of the sequence ."}
{"id": 2092, "prediction": "Resets the state ."}
{"id": 2094, "prediction": "Registers a thread - gauge ."}
{"id": 2096, "prediction": "Login credential ."}
{"id": 2098, "prediction": "Upgrade the given library ."}
{"id": 2100, "prediction": "Updates the services if necessary ."}
{"id": 2102, "prediction": "Gets the list of fields that need to be null ."}
{"id": 2104, "prediction": "Adds the specified element to the list ."}
{"id": 2106, "prediction": "Returns the value of the given key or null if not found ."}
{"id": 2108, "prediction": "Create a descriptor from a file descriptor ."}
{"id": 2110, "prediction": "Populate the default values for the given file descriptor ."}
{"id": 2112, "prediction": "Converts a protobuf field to a Sdc field ."}
{"id": 2114, "prediction": "Converts a protobuf field to protobuf ."}
{"id": 2116, "prediction": "Check connection ."}
{"id": 2118, "prediction": "Create a Field ."}
{"id": 2120, "prediction": "Returns the current line ."}
{"id": 2122, "prediction": "Parse the response ."}
{"id": 2124, "prediction": "Write response header ."}
{"id": 2126, "prediction": "Saves metadata ."}
{"id": 2128, "prediction": "Parses the HTTP headers ."}
{"id": 2130, "prediction": "Parse the pagination result ."}
{"id": 2132, "prediction": "Resolve request headers ."}
{"id": 2134, "prediction": "Checks if the given configuration is defined ."}
{"id": 2136, "prediction": "Converts a DataGeneratorException to a DataGeneratorException ."}
{"id": 2138, "prediction": "Get preview information for a pipeline"}
{"id": 2140, "prediction": "Removes duplicate duplicates from the given set of packages ."}
{"id": 2142, "prediction": "Find the next main main line ."}
{"id": 2144, "prediction": "Closes the connection ."}
{"id": 2146, "prediction": "Returns the flow control settings ."}
{"id": 2148, "prediction": "Puts a batch into the buffer ."}
{"id": 2150, "prediction": "Extracts a regular expression from a regular expression ."}
{"id": 2152, "prediction": "Adds a dictionary to the dictionary ."}
{"id": 2154, "prediction": "Rolls a new data window ."}
{"id": 2156, "prediction": "Deserialize a string ."}
{"id": 2158, "prediction": "Write a record to the output stream ."}
{"id": 2160, "prediction": "Generate inner field from H2Pair"}
{"id": 2162, "prediction": "Returns the name of the database ."}
{"id": 2164, "prediction": "Retrieves the location of the record ."}
{"id": 2166, "prediction": "Retrieves the Avro schema from a metadata file ."}
{"id": 2168, "prediction": "Creates a new schema builder ."}
{"id": 2170, "prediction": "Generates a path for a partition ."}
{"id": 2172, "prediction": "Set the parameters for the given operation ."}
{"id": 2174, "prediction": "Parses a timestamp from a string ."}
{"id": 2176, "prediction": "Starts a batch context ."}
{"id": 2178, "prediction": "Filter field names ."}
{"id": 2180, "prediction": "Parse a jar name from a jar ."}
{"id": 2182, "prediction": "Create a new instance of CouchbaseConnector ."}
{"id": 2184, "prediction": "Validate configuration ."}
{"id": 2186, "prediction": "Verifies that a dependency definition exists ."}
{"id": 2188, "prediction": "Gets the operation type from the header ."}
{"id": 2190, "prediction": "Builds a subdocument ."}
{"id": 2192, "prediction": "Configure the SASL authentication ."}
{"id": 2194, "prediction": "Commits the given offset ."}
{"id": 2196, "prediction": "Inject the given stage to the given stage ."}
{"id": 2198, "prediction": "Retrieves the definition of the publisher ."}
{"id": 2200, "prediction": "Format a string value ."}
{"id": 2202, "prediction": "Create a draft fragment ."}
{"id": 2204, "prediction": "Imports a pipeline fragment ."}
{"id": 2206, "prediction": "Gets the operation code from the given record ."}
{"id": 2208, "prediction": "Polls an event ."}
{"id": 2210, "prediction": "Get the next runner from the queue ."}
{"id": 2212, "prediction": "Destroys the runner ."}
{"id": 2214, "prediction": "Checks if the given stream exists ."}
{"id": 2216, "prediction": "Process the queue ."}
{"id": 2218, "prediction": "Returns the column hash code for the given record ."}
{"id": 2220, "prediction": "Retrieves the PID value for the given process ."}
{"id": 2222, "prediction": "Gets the proxy user ."}
{"id": 2224, "prediction": "Creates a snapshot of the active stats ."}
{"id": 2226, "prediction": "Writes a batch of records to the given batch ."}
{"id": 2228, "prediction": "Writes all records to the given iterator ."}
{"id": 2230, "prediction": "Detect new partition information ."}
{"id": 2232, "prediction": "Process a group ."}
{"id": 2234, "prediction": "Main entry point ."}
{"id": 2236, "prediction": "Resolve request headers ."}
{"id": 2238, "prediction": "Fill null values ."}
{"id": 2240, "prediction": "Load schema from registry ."}
{"id": 2242, "prediction": "Loads the schema from the registry ."}
{"id": 2244, "prediction": "Load schema from registry ."}
{"id": 2246, "prediction": "Detect schema id ."}
{"id": 2248, "prediction": "Parses all fields of a message ."}
{"id": 2250, "prediction": "Get a list of error records from an error sink ."}
{"id": 2252, "prediction": "Gets the collection vertices for the given vertex ."}
{"id": 2254, "prediction": "Serialize an offset map ."}
{"id": 2256, "prediction": "Queues a WS response ."}
{"id": 2258, "prediction": "Checks if the backup point is valid ."}
{"id": 2260, "prediction": "Deletes the given blob ."}
{"id": 2262, "prediction": "Copy the given blob to the archive"}
{"id": 2264, "prediction": "Releases the reader ."}
{"id": 2266, "prediction": "Add a default header ."}
{"id": 2268, "prediction": "Escape a string ."}
{"id": 2270, "prediction": "Initialize connection ."}
{"id": 2272, "prediction": "Create bulk informer ."}
{"id": 2274, "prediction": "Builds a schema from the given fields ."}
{"id": 2276, "prediction": "Add jars to the job ."}
{"id": 2278, "prediction": "Check field order by name ."}
{"id": 2280, "prediction": "Gets the lag for a file offset ."}
{"id": 2282, "prediction": "Get the parallelism of the producer ."}
{"id": 2284, "prediction": "Convert the fields to a map ."}
{"id": 2286, "prediction": "Validates that the table should be inserted ."}
{"id": 2288, "prediction": "Checks if the field is nullable ."}
{"id": 2290, "prediction": "Get the column properties"}
{"id": 2292, "prediction": "Initialize AerospikeClient"}
{"id": 2294, "prediction": "Updates the data format ."}
{"id": 2296, "prediction": "Gets the output stream ."}
{"id": 2298, "prediction": "Parse a file permission ."}
{"id": 2300, "prediction": "Creates an instance of SimpleAggregator ."}
{"id": 2302, "prediction": "Creates an aggregator data ."}
{"id": 2305, "prediction": "Stops the aggregator ."}
{"id": 2307, "prediction": "Acquire a login manager ."}
{"id": 2309, "prediction": "Converts a glob to a regular expression ."}
{"id": 2311, "prediction": "Stop the pipeline ."}
{"id": 2313, "prediction": "Creates a failure batch snapshot ."}
{"id": 2315, "prediction": "Sets the configuration ."}
{"id": 2317, "prediction": "Handles partitioning mode ."}
{"id": 2319, "prediction": "Rolls a new usage timer ."}
{"id": 2321, "prediction": "Disable DPM authentication ."}
{"id": 2323, "prediction": "Retrieves a user token from the given url and password ."}
{"id": 2325, "prediction": "Update the app token file ."}
{"id": 2327, "prediction": "Returns the schema field for the given field ."}
{"id": 2329, "prediction": "Get decimal scale value ."}
{"id": 2331, "prediction": "Initialize metrics ."}
{"id": 2333, "prediction": "Returns the index of the specified group ."}
{"id": 2335, "prediction": "Returns whether the given string is escaped or not ."}
{"id": 2337, "prediction": "Checks if the given character is inside a string ."}
{"id": 2339, "prediction": "Extract group info from a named pattern ."}
{"id": 2341, "prediction": "Handle GET request ."}
{"id": 2343, "prediction": "Determines whether a transaction is expired ."}
{"id": 2345, "prediction": "Reads the next line from the stream ."}
{"id": 2347, "prediction": "Convert a string to a number ."}
{"id": 2349, "prediction": "Parses the values ."}
{"id": 2351, "prediction": "Create custom field mappings ."}
{"id": 2353, "prediction": "Gets the table name ."}
{"id": 2355, "prediction": "Handle SQL exception ."}
{"id": 2357, "prediction": "Prepare the pipeline context ."}
{"id": 2359, "prediction": "Flattens a field recursively ."}
{"id": 2361, "prediction": "Execute action ."}
{"id": 2363, "prediction": "Gets the join condition for a partition ."}
{"id": 2365, "prediction": "Gets the list of registered generators ."}
{"id": 2367, "prediction": "Gets the operation ."}
{"id": 2369, "prediction": "Scans a live file ."}
{"id": 2371, "prediction": "Checks if the given name is whitelist ."}
{"id": 2373, "prediction": "Main entry point ."}
{"id": 2375, "prediction": "Validates the report description ."}
{"id": 2377, "prediction": "Creates a new JdbcRecordWriter ."}
{"id": 2379, "prediction": "Extract named groups from raw data ."}
{"id": 2381, "prediction": "Creates the embedded SDC ."}
{"id": 2383, "prediction": "Gets the list of all registered pipelines ."}
{"id": 2385, "prediction": "Create a gauge ."}
{"id": 2387, "prediction": "Generate header attributes ."}
{"id": 2389, "prediction": "Deletes old temp file ."}
{"id": 2391, "prediction": "Creates a DataFileReader from an input stream ."}
{"id": 2393, "prediction": "Checks if the input field is valid ."}
{"id": 2395, "prediction": "Ensures that the input field is encrypted ."}
{"id": 2397, "prediction": "Prepare the encryption of the field ."}
{"id": 2399, "prediction": "Appends a replacement string to the builder ."}
{"id": 2401, "prediction": "Replaces all occurrences of this pattern ."}
{"id": 2403, "prediction": "Get the global variable value"}
{"id": 2405, "prediction": "Create a stop event record ."}
{"id": 2407, "prediction": "Extracts the value of a field ."}
{"id": 2409, "prediction": "Execute setter for alter table properties ."}
{"id": 2411, "prediction": "Executes the given query ."}
{"id": 2413, "prediction": "Executes a batch of pipes ."}
{"id": 2415, "prediction": "Gets offset commit trigger ."}
{"id": 2417, "prediction": "Accepts a pipe ."}
{"id": 2419, "prediction": "Get value from field ."}
{"id": 2421, "prediction": "Sets the value in a record ."}
{"id": 2423, "prediction": "Handles a single part of the S3 file ."}
{"id": 2425, "prediction": "Helper method to create a new instance of the class loader ."}
{"id": 2427, "prediction": "Log out the user ."}
{"id": 2429, "prediction": "Replace all variables in the given path ."}
{"id": 2431, "prediction": "Main entry point ."}
{"id": 2433, "prediction": "Renames a temporary file system ."}
{"id": 2435, "prediction": "Matches the given string with the given pattern ."}
{"id": 2437, "prediction": "Returns the remaining wait time in milliseconds ."}
{"id": 2439, "prediction": "Creates and initializes the runtime library ."}
{"id": 2441, "prediction": "Creates a new instance of the given stage ."}
{"id": 2443, "prediction": "Find the end of the header ."}
{"id": 2445, "prediction": "Save a byte buffer"}
{"id": 2447, "prediction": "Returns the mime type for a file ."}
{"id": 2449, "prediction": "Stops the server ."}
{"id": 2451, "prediction": "Sends the response to the output stream ."}
{"id": 2453, "prediction": "Creates a new response with the given data ."}
{"id": 2455, "prediction": "Sets a new cookie ."}
{"id": 2457, "prediction": "Decode the base64 encoded value ."}
{"id": 2459, "prediction": "Sets the table name ."}
{"id": 2461, "prediction": "Registers the default session filter ."}
{"id": 2463, "prediction": "Gets a session ."}
{"id": 2465, "prediction": "Get canonical parameter types ."}
{"id": 2467, "prediction": "Called after the completion of the pre - completion synced synchronization ."}
{"id": 2469, "prediction": "Deploys the module factories ."}
{"id": 2471, "prediction": "Returns a list of server config names ."}
{"id": 2473, "prediction": "Increment the read lock count ."}
{"id": 2475, "prediction": "Sets the next expiration calculation ."}
{"id": 2477, "prediction": "Make the top level of the top level from the root module ."}
{"id": 2479, "prediction": "Sets config name ."}
{"id": 2481, "prediction": "Gets servlets mappings ."}
{"id": 2483, "prediction": "Resolves the view ."}
{"id": 2485, "prediction": "Parse core environment element ."}
{"id": 2487, "prediction": "Returns the path address for the given operation ."}
{"id": 2489, "prediction": "Returns the value of the attribute ."}
{"id": 2491, "prediction": "Create a composite operation ."}
{"id": 2493, "prediction": "Creates an ADD operation ."}
{"id": 2495, "prediction": "Creates a write operation ."}
{"id": 2497, "prediction": "Returns the value associated with this context ."}
{"id": 2499, "prediction": "Removes a URLContextFactory from the given scheme ."}
{"id": 2501, "prediction": "Modify the deployment context ."}
{"id": 2503, "prediction": "Modifies the context root of the deployment ."}
{"id": 2505, "prediction": "Sets the runAs of the given principal ."}
{"id": 2507, "prediction": "Process management services ."}
{"id": 2509, "prediction": "Checks if the given class type matches the given property type ."}
{"id": 2511, "prediction": "Finds the field with the given name and type ."}
{"id": 2513, "prediction": "Derives information from the request ."}
{"id": 2515, "prediction": "Collect the JVM report ."}
{"id": 2517, "prediction": "Unregisters a resource adapter ."}
{"id": 2519, "prediction": "Writes the parameters to the output stream ."}
{"id": 2521, "prediction": "Gets the lock owner ."}
{"id": 2523, "prediction": "Add a new log"}
{"id": 2525, "prediction": "Gets the component view ."}
{"id": 2527, "prediction": "Gets the component view ."}
{"id": 2529, "prediction": "Creates a new resource ."}
{"id": 2531, "prediction": "Get the domain domain ."}
{"id": 2533, "prediction": "Sets the IDL name ."}
{"id": 2535, "prediction": "Creates an instance of JNDI name ."}
{"id": 2537, "prediction": "Handle the request ."}
{"id": 2539, "prediction": "Gets the transaction registry ."}
{"id": 2541, "prediction": "Gets the last component ."}
{"id": 2543, "prediction": "Factory method to create a NameNotFoundException ."}
{"id": 2545, "prediction": "Creates a naming exception ."}
{"id": 2547, "prediction": "Creates a naming Enumeration ."}
{"id": 2549, "prediction": "Gets the activeMQ component ."}
{"id": 2551, "prediction": "Creates a component instance ."}
{"id": 2553, "prediction": "Resolve runtime name ."}
{"id": 2555, "prediction": "Gets the primitive analysis analysis ."}
{"id": 2557, "prediction": "Returns a list of URL patterns ."}
{"id": 2559, "prediction": "Gets the servlet mappings ."}
{"id": 2304, "prediction": "Starts the data provider ."}
{"id": 2306, "prediction": "Rolls the aggregator data ."}
{"id": 2308, "prediction": "Release the login manager ."}
{"id": 2310, "prediction": "Lists a list of objects in the given bucket ."}
{"id": 2312, "prediction": "Generates a new empty batch of idle runners for idle runners ."}
{"id": 2314, "prediction": "Converts a record to a BoundStatement ."}
{"id": 2316, "prediction": "Generate a lookup key ."}
{"id": 2318, "prediction": "Reads a line ."}
{"id": 2320, "prediction": "Enable DPM authentication ."}
{"id": 2322, "prediction": "Normalize the dpm base url ."}
{"id": 2324, "prediction": "Log out the user"}
{"id": 2326, "prediction": "Update dpm properties ."}
{"id": 2328, "prediction": "Creates a complex schema for the given field ."}
{"id": 2330, "prediction": "Returns the default value for the given schema ."}
{"id": 2332, "prediction": "Compares two files ."}
{"id": 2334, "prediction": "Gets the list of group names ."}
{"id": 2336, "prediction": "Returns whether the given character is escaped ."}
{"id": 2338, "prediction": "Counts the number of open parens ."}
{"id": 2340, "prediction": "Replaces the regular expression with the given regular expression ."}
{"id": 2342, "prediction": "Refresh the given schema ."}
{"id": 2344, "prediction": "Returns the offset of the file ."}
{"id": 2346, "prediction": "Create an empty detached stage ."}
{"id": 2348, "prediction": "Parse part ."}
{"id": 2350, "prediction": "Lookup the primary key columns ."}
{"id": 2352, "prediction": "Returns the SQL type name for the given field ."}
{"id": 2354, "prediction": "Set primary keys ."}
{"id": 2356, "prediction": "Executes the given offsets for the given offsets ."}
{"id": 2358, "prediction": "Finish the pipeline ."}
{"id": 2360, "prediction": "Create a detached stage runtime runtime ."}
{"id": 2362, "prediction": "Returns a map of column names to map ."}
{"id": 2364, "prediction": "Validates the given offset ."}
{"id": 2366, "prediction": "Gets non - empty array arguments ."}
{"id": 2368, "prediction": "Converts the given bytes to a human readable format ."}
{"id": 2370, "prediction": "Returns the number of pending files in the current file ."}
{"id": 2372, "prediction": "Checks if the expected version matches the expected version ."}
{"id": 2374, "prediction": "Propagate runtime configuration ."}
{"id": 2376, "prediction": "Create a JdbcRecordWriter for the given operation ."}
{"id": 2378, "prediction": "Updates the configuration ."}
{"id": 2380, "prediction": "Commits a commit commit ."}
{"id": 2382, "prediction": "Sets fields in the record ."}
{"id": 2384, "prediction": "Creates a remote event collector ."}
{"id": 2386, "prediction": "Gets the map of columns to the given operation ."}
{"id": 2388, "prediction": "Validate a record ."}
{"id": 2390, "prediction": "Get avro input stream ."}
{"id": 2392, "prediction": "Write parquet file ."}
{"id": 2394, "prediction": "Checks the input field ."}
{"id": 2396, "prediction": "Ensures that the input field is encrypted ."}
{"id": 2398, "prediction": "Sets the pattern to use ."}
{"id": 2400, "prediction": "Returns a map of all names of the matched pattern ."}
{"id": 2402, "prediction": "Ensures that the avro schema exists ."}
{"id": 2404, "prediction": "Create start event record ."}
{"id": 2406, "prediction": "Fix offset ."}
{"id": 2408, "prediction": "Execute alter table query ."}
{"id": 2410, "prediction": "Execute a database ."}
{"id": 2412, "prediction": "Executes the given query ."}
{"id": 2414, "prediction": "Iterate over all pipes from the pipeline ."}
{"id": 2416, "prediction": "Determine if the pipeline should be stopped ."}
{"id": 2418, "prediction": "Get the row id for the given record ."}
{"id": 2420, "prediction": "Sets the fragment in a record ."}
{"id": 2422, "prediction": "Sets the n1QL query for the given record ."}
{"id": 2424, "prediction": "Checks if the given group contains transactions ."}
{"id": 2426, "prediction": "Sets the stage creator ."}
{"id": 2428, "prediction": "Load exceptions from the configuration ."}
{"id": 2430, "prediction": "Ensure that the given path is valid for the given directory ."}
{"id": 2432, "prediction": "Returns the path for the given date ."}
{"id": 2434, "prediction": "Checks if the record is rolled ."}
{"id": 2436, "prediction": "Gets the offsets for this file ."}
{"id": 2438, "prediction": "Gets the offsets for the given map ."}
{"id": 2440, "prediction": "Create a delegate definition for the given stage ."}
{"id": 2442, "prediction": "Get the value of the metric from the given metrics ."}
{"id": 2444, "prediction": "Gets the size of the body ."}
{"id": 2446, "prediction": "Creates a new SSLSocket socket factory ."}
{"id": 2448, "prediction": "Handles the http session ."}
{"id": 2450, "prediction": "Add the mappings ."}
{"id": 2452, "prediction": "Sends the body to the output stream ."}
{"id": 2454, "prediction": "Returns true if the request should be used ."}
{"id": 2456, "prediction": "Unload the queue ."}
{"id": 2458, "prediction": "Base64 encoded value ."}
{"id": 2460, "prediction": "Returns the name of the principal ."}
{"id": 2462, "prediction": "Resolve principal name ."}
{"id": 2464, "prediction": "Get the JNDI name from the model ."}
{"id": 2466, "prediction": "Registers a Synchronized synchronization ."}
{"id": 2468, "prediction": "Get the current transaction ."}
{"id": 2470, "prediction": "Determines if the specified persistence region name is in the cache ."}
{"id": 2472, "prediction": "Decrement the read lock count ."}
{"id": 2474, "prediction": "Add a new service ."}
{"id": 2476, "prediction": "Add the search dependencies to the deployment ."}
{"id": 2478, "prediction": "Creates the JSE archive metadata ."}
{"id": 2480, "prediction": "Gets the list of security metadata ."}
{"id": 2482, "prediction": "Gets the servlets mappings for the given POJO ."}
{"id": 2484, "prediction": "Returns the list of available connections ."}
{"id": 2486, "prediction": "Parse the processId ."}
{"id": 2488, "prediction": "Sets the path address ."}
{"id": 2490, "prediction": "Returns true if the operation should be included in the operation ."}
{"id": 2492, "prediction": "Create an add operation ."}
{"id": 2494, "prediction": "Creates a read operation ."}
{"id": 2496, "prediction": "Create an undefine attribute ."}
{"id": 2498, "prediction": "Adds a URL context factory for the given scheme ."}
{"id": 2500, "prediction": "Loads the providers ."}
{"id": 2502, "prediction": "Configure the endpoints for the given deployment ."}
{"id": 2504, "prediction": "Gets the transport class name ."}
{"id": 2506, "prediction": "Populate the runAs from the security context ."}
{"id": 2508, "prediction": "Inject an object with the specified property name and value ."}
{"id": 2510, "prediction": "Finds a method with the given name and type ."}
{"id": 2512, "prediction": "Initialize options ."}
{"id": 2514, "prediction": "Runs JCR report ."}
{"id": 2516, "prediction": "Registers a resource adapter ."}
{"id": 2518, "prediction": "Register the transformer ."}
{"id": 2520, "prediction": "Read an exception from an input stream ."}
{"id": 2522, "prediction": "Release lock ."}
{"id": 2524, "prediction": "Add CDI information to the CDI ."}
{"id": 2526, "prediction": "Invokes the given endpoint ."}
{"id": 2528, "prediction": "Checks if the source method matches the target method ."}
{"id": 2530, "prediction": "Gets the EJB security meta data ."}
{"id": 2532, "prediction": "Ensure that the security domains are equal ."}
{"id": 2534, "prediction": "Returns the absolute path ."}
{"id": 2536, "prediction": "Process the JBoss deployment ."}
{"id": 2538, "prediction": "Returns true if the transaction is in the transaction registry ."}
{"id": 2540, "prediction": "Gets the connection factory ."}
{"id": 2542, "prediction": "Checks if the given name is empty ."}
{"id": 2544, "prediction": "Creates a naming exception ."}
{"id": 2546, "prediction": "Creates a new exception ."}
{"id": 2548, "prediction": "Rebinds an object with the given name ."}
{"id": 2550, "prediction": "Parse connection attributes ."}
{"id": 2552, "prediction": "Gets the rest of the resource ."}
{"id": 2554, "prediction": "Create a listener builder ."}
{"id": 2556, "prediction": "Shuts down the component ."}
{"id": 2558, "prediction": "Get the servlet metadata ."}
{"id": 2561, "prediction": "Gets login meta metadata ."}
{"id": 2563, "prediction": "Gets the metadata collection metadata ."}
{"id": 2565, "prediction": "Creates a new SecurityConstraints object ."}
{"id": 2567, "prediction": "Creates a new servlet ."}
{"id": 2569, "prediction": "New auth meta data ."}
{"id": 2571, "prediction": "Creates a new ParameterMetaMetaMetaMetaData object ."}
{"id": 2573, "prediction": "Registers the interceptor bean interceptors ."}
{"id": 2575, "prediction": "Stop the container ."}
{"id": 2577, "prediction": "Resolves a simple attribute ."}
{"id": 2579, "prediction": "Determine if a managed connection factory can be created ."}
{"id": 2581, "prediction": "Gets the activeMQ server name ."}
{"id": 2583, "prediction": "Starts the activity ."}
{"id": 2585, "prediction": "Suspend the active transaction ."}
{"id": 2587, "prediction": "Called when the transaction is completed ."}
{"id": 2589, "prediction": "Called when the resource is started ."}
{"id": 2591, "prediction": "Get the capability name for the given capability ."}
{"id": 2593, "prediction": "Get the class loader class loader ."}
{"id": 2595, "prediction": "Returns true if the given persistence unit is true false otherwise false ."}
{"id": 2597, "prediction": "Determine whether the m_synchronization type should be skipped ."}
{"id": 2599, "prediction": "Initializes the ORB for the given application ."}
{"id": 2601, "prediction": "Set the active naming store ."}
{"id": 2603, "prediction": "Checks the type of the given parameter ."}
{"id": 2605, "prediction": "Validate the base type ."}
{"id": 2607, "prediction": "Converts a transaction status to a string representation ."}
{"id": 2609, "prediction": "Extract database dialects ."}
{"id": 2611, "prediction": "Identify dialect ."}
{"id": 2613, "prediction": "Converts a string expression to a date date ."}
{"id": 2615, "prediction": "Mark the deployment unit ."}
{"id": 2617, "prediction": "Writes an object to the output stream ."}
{"id": 2619, "prediction": "Performs a lookup of the given class ."}
{"id": 2621, "prediction": "Ends the top - level call ."}
{"id": 2623, "prediction": "Push the given entity manager to the current state manager ."}
{"id": 2625, "prediction": "Gets the current SFS call ."}
{"id": 2627, "prediction": "Process managed beans ."}
{"id": 2629, "prediction": "Returns the IDL for the given class ."}
{"id": 2631, "prediction": "Convert Java name to IDL name ."}
{"id": 2633, "prediction": "Returns the signature for the given class ."}
{"id": 2635, "prediction": "Returns the identifier for the given primitive type ."}
{"id": 2637, "prediction": "Gets the transaction manager ."}
{"id": 2639, "prediction": "Converts a string to a security role ."}
{"id": 2641, "prediction": "Load timers from a timed object ."}
{"id": 2643, "prediction": "Adds a listener to the target scope ."}
{"id": 2645, "prediction": "Fire an event ."}
{"id": 2647, "prediction": "Adds a private credential ."}
{"id": 2649, "prediction": "Add transaction interceptor for a view ."}
{"id": 2651, "prediction": "Creates the transport configuration ."}
{"id": 2653, "prediction": "Returns the root deployment unit ."}
{"id": 2655, "prediction": "Creates a new ViewConfiguration instance ."}
{"id": 2657, "prediction": "Gets the view interceptors for the given method ."}
{"id": 2659, "prediction": "Adds a view interceptor to the view ."}
{"id": 2661, "prediction": "Adds a client interceptor to the client ."}
{"id": 2663, "prediction": "Put private data ."}
{"id": 2665, "prediction": "Retrieves the list of all JAXB - WS - WS - WS - WWS - WS - WWS - WS - deployment ."}
{"id": 2667, "prediction": "Gets the endpoint name ."}
{"id": 2669, "prediction": "Returns the servlet for the given name ."}
{"id": 2671, "prediction": "Gets an optional attachment ."}
{"id": 2673, "prediction": "Gets the JBossPort component metadata component ."}
{"id": 2675, "prediction": "Gets the context root root context ."}
{"id": 2677, "prediction": "Returns the URL of the resource ."}
{"id": 2679, "prediction": "List all resources for a given path ."}
{"id": 2681, "prediction": "Get the entity manager ."}
{"id": 2683, "prediction": "Process the deployment annotations ."}
{"id": 2685, "prediction": "Checks if all fields are public ."}
{"id": 2687, "prediction": "Creates a new deployment for the given unit ."}
{"id": 2689, "prediction": "Sets the next expiration time ."}
{"id": 2691, "prediction": "Merges the deployment data ."}
{"id": 2693, "prediction": "Add a remote transaction dependency ."}
{"id": 2695, "prediction": "Checks if the given method is a method level ."}
{"id": 2697, "prediction": "Returns the type of the given class ."}
{"id": 2699, "prediction": "Creates a new Elasticsearch key definition ."}
{"id": 2701, "prediction": "Gets the trust trust manager definition ."}
{"id": 2703, "prediction": "Convert a string to a vector of components ."}
{"id": 2705, "prediction": "Deactivates this object ."}
{"id": 2707, "prediction": "Authenticate a security identity ."}
{"id": 2709, "prediction": "Lookup a binding ."}
{"id": 2711, "prediction": "Instantiates a bean ."}
{"id": 2713, "prediction": "Dispatch a lifecycle endpoint ."}
{"id": 2715, "prediction": "Converts a name to a bean name ."}
{"id": 2717, "prediction": "Returns the class with the given name ."}
{"id": 2719, "prediction": "Sets the location of the persistence process ."}
{"id": 2721, "prediction": "Creates the deployment descriptor ."}
{"id": 2723, "prediction": "Gets authentication method ."}
{"id": 2725, "prediction": "Handle a stateless session ."}
{"id": 2727, "prediction": "Returns an anonymous object id for an anonymous object ."}
{"id": 2729, "prediction": "Clears the cache for the given deployment class loader ."}
{"id": 2731, "prediction": "Find the parent class of the given class loader"}
{"id": 2733, "prediction": "Add persistence service ."}
{"id": 2735, "prediction": "Get persistence provider adapter adapter ."}
{"id": 2737, "prediction": "Lookup the persistence provider for the given deployment ."}
{"id": 2739, "prediction": "Build the EJB archive metadata ."}
{"id": 2741, "prediction": "Refresh the participant ."}
{"id": 2743, "prediction": "Lookup the container for the given class"}
{"id": 2745, "prediction": "Gets the ID of the module ."}
{"id": 2747, "prediction": "Converts a long to a string ."}
{"id": 2749, "prediction": "Returns true if the method is a mutable method ."}
{"id": 2751, "prediction": "Returns the name of an attribute ."}
{"id": 2753, "prediction": "Determine the operation names for the operation ."}
{"id": 2755, "prediction": "Escapes the given name as a string ."}
{"id": 2757, "prediction": "Parses the default context element ."}
{"id": 2759, "prediction": "Load PersistenceProvider from the given module name ."}
{"id": 2761, "prediction": "Deploys the deployment module ."}
{"id": 2763, "prediction": "Gets the methodIntInt ."}
{"id": 2765, "prediction": "Extracts the destination name from the given address ."}
{"id": 2767, "prediction": "Gets the job names ."}
{"id": 2769, "prediction": "Get the request URI ."}
{"id": 2771, "prediction": "Lookup an object by name ."}
{"id": 2773, "prediction": "Unbind the given path ."}
{"id": 2775, "prediction": "Call this method ."}
{"id": 2777, "prediction": "Bind a new context to the context ."}
{"id": 2779, "prediction": "Lookup a link ."}
{"id": 2781, "prediction": "Removes a property from the environment ."}
{"id": 2783, "prediction": "Parse credential ."}
{"id": 2785, "prediction": "Lookup the JNDI from the JNDI context ."}
{"id": 2787, "prediction": "Creates a module reference ."}
{"id": 2789, "prediction": "Get a local IDL type ."}
{"id": 2791, "prediction": "Compute the mask for the password ."}
{"id": 2793, "prediction": "Start the vault session ."}
{"id": 2795, "prediction": "Display the vault configuration ."}
{"id": 2797, "prediction": "Checks that the given value is not null ."}
{"id": 2799, "prediction": "Inserts a value into a String ."}
{"id": 2801, "prediction": "Gets the action string ."}
{"id": 2803, "prediction": "Send a state change notification ."}
{"id": 2805, "prediction": "Returns the value of the given type ."}
{"id": 2807, "prediction": "Get all interceptors ."}
{"id": 2809, "prediction": "Adds a dependency ."}
{"id": 2811, "prediction": "Gets the list of interceptors associated with a timeout ."}
{"id": 2813, "prediction": "Adds an interceptor to the interceptor ."}
{"id": 2815, "prediction": "Add a preDestroyInterceptor ."}
{"id": 2817, "prediction": "Add a post - activate interceptor to the given priority ."}
{"id": 2819, "prediction": "Remove JNDI aliases ."}
{"id": 2821, "prediction": "Get the context service name ."}
{"id": 2823, "prediction": "Returns the bind info for the given environment ."}
{"id": 2825, "prediction": "Returns the cache for the authenticated user ."}
{"id": 2827, "prediction": "Gets the value of the value members of this type ."}
{"id": 2829, "prediction": "Parses a configuration element ."}
{"id": 2831, "prediction": "Adds the WeldIntegrator ."}
{"id": 2833, "prediction": "Add a component ."}
{"id": 2835, "prediction": "Get all components for a given view type"}
{"id": 2837, "prediction": "Gets all components of a given view ."}
{"id": 2839, "prediction": "Build transformers ."}
{"id": 2841, "prediction": "Rename attribute ."}
{"id": 2843, "prediction": "Loads the module IDs ."}
{"id": 2845, "prediction": "Compute slot ."}
{"id": 2847, "prediction": "Add a type code ."}
{"id": 2849, "prediction": "Add interfaces to the container ."}
{"id": 2851, "prediction": "Add a class ."}
{"id": 2853, "prediction": "Add a value to the class ."}
{"id": 2855, "prediction": "Gets the class level annotation ."}
{"id": 2857, "prediction": "Starts the service ."}
{"id": 2859, "prediction": "Checks if the given method is allowed ."}
{"id": 2861, "prediction": "Get all component classes ."}
{"id": 2863, "prediction": "Get extra parameters ."}
{"id": 2865, "prediction": "Converts a type to a Class ."}
{"id": 2867, "prediction": "Returns the types of the given values ."}
{"id": 2869, "prediction": "Returns the next binding ."}
{"id": 2871, "prediction": "Maps a binding to a name ."}
{"id": 2873, "prediction": "Closes the health check ."}
{"id": 2875, "prediction": "Returns the handle object for the given locator ."}
{"id": 2877, "prediction": "Skips the given amount of bytes ."}
{"id": 2879, "prediction": "Adds a component to the module ."}
{"id": 2881, "prediction": "Unbind a component ."}
{"id": 2883, "prediction": "Returns the names of the given name ."}
{"id": 2885, "prediction": "Adds a factory to the factory ."}
{"id": 2887, "prediction": "Create an IO subsystem ."}
{"id": 2889, "prediction": "Gets the bean instance ."}
{"id": 2891, "prediction": "Collect metrics for a resource ."}
{"id": 2893, "prediction": "Perform the deployment ."}
{"id": 2895, "prediction": "Stops the web application ."}
{"id": 2897, "prediction": "Registers an endpoint ."}
{"id": 2899, "prediction": "Called after the timer has expired ."}
{"id": 2901, "prediction": "Get the declared fields of a class ."}
{"id": 2903, "prediction": "Gets a method ."}
{"id": 2905, "prediction": "Returns true if the parameter is allowed to be allowed for the given resource type ."}
{"id": 2907, "prediction": "Cancel the current thread ."}
{"id": 2909, "prediction": "Sets the type of the property ."}
{"id": 2911, "prediction": "Estimates the count of the given class ."}
{"id": 2913, "prediction": "Get the class of the given interface ."}
{"id": 2915, "prediction": "Evaluate the record ."}
{"id": 2917, "prediction": "Update record ."}
{"id": 2919, "prediction": "Get the minimal set of nodes for a local query ."}
{"id": 2921, "prediction": "Adds the ORDER BY clause to the order of the projection ."}
{"id": 2923, "prediction": "Checks if the cluster is from the cluster ."}
{"id": 2925, "prediction": "Checks if the class is a diamond hierarchy ."}
{"id": 2927, "prediction": "Checks to see if there are multiple indexes ."}
{"id": 2929, "prediction": "Builds the indexDescriptor for a full block ."}
{"id": 2931, "prediction": "Creates a new instance of type handling strategy ."}
{"id": 2933, "prediction": "Checks if a rule is defined ."}
{"id": 2935, "prediction": "Initialize system database ."}
{"id": 2937, "prediction": "Remove a member from the cluster ."}
{"id": 2939, "prediction": "Assigns the lock manager to the cluster manager ."}
{"id": 2941, "prediction": "Rollback the rollback ."}
{"id": 2943, "prediction": "Update record cache ."}
{"id": 2945, "prediction": "Performs atomic move operation ."}
{"id": 2947, "prediction": "Checks if the local scenario should be executed ."}
{"id": 2949, "prediction": "Returns true if the connection is connected ."}
{"id": 2951, "prediction": "Splits a short into two buffers ."}
{"id": 2953, "prediction": "Adds a single value to the index ."}
{"id": 2955, "prediction": "Execute the query ."}
{"id": 2957, "prediction": "Creates the stream ."}
{"id": 2959, "prediction": "Replaces the content of the file with the given content ."}
{"id": 2961, "prediction": "End the request ."}
{"id": 2963, "prediction": "Begin a new request ."}
{"id": 2965, "prediction": "Get a new connection"}
{"id": 2967, "prediction": "Interrupts a new channel ."}
{"id": 2969, "prediction": "Push the DistributedConfig to the client"}
{"id": 2971, "prediction": "Closes all locks ."}
{"id": 2973, "prediction": "Update metadata ."}
{"id": 2975, "prediction": "Reads next character ."}
{"id": 2977, "prediction": "Set the async replication error ."}
{"id": 2979, "prediction": "Gets the number of open files ."}
{"id": 2981, "prediction": "Moves the contents of this buffer to the specified position ."}
{"id": 2983, "prediction": "Execute the last step ."}
{"id": 2985, "prediction": "Evaluate a record ."}
{"id": 2987, "prediction": "Loads the configuration from the given configuration ."}
{"id": 2989, "prediction": "Executes the request ."}
{"id": 2991, "prediction": "Add a composite index definition ."}
{"id": 2993, "prediction": "Determines the type of the given result ."}
{"id": 2995, "prediction": "Returns the string value ."}
{"id": 2997, "prediction": "Execute the command ."}
{"id": 2999, "prediction": "Check if the passed password matches the password ."}
{"id": 3001, "prediction": "Checks if the given algorithm is supported ."}
{"id": 3003, "prediction": "Get all vertices in the graph"}
{"id": 3005, "prediction": "Gets the partition key ."}
{"id": 3007, "prediction": "Gets the features ."}
{"id": 3009, "prediction": "Parse timeout ."}
{"id": 3011, "prediction": "Create a new cluster ."}
{"id": 3013, "prediction": "Start profiling ."}
{"id": 3015, "prediction": "Returns an OScriptResultSet with the given entity ."}
{"id": 3017, "prediction": "Revoke a role ."}
{"id": 3019, "prediction": "Bind parameter values ."}
{"id": 3021, "prediction": "Returns the index of the specified item ."}
{"id": 3023, "prediction": "Creates a new index ."}
{"id": 3025, "prediction": "Gets the index ."}
{"id": 3027, "prediction": "Serializes the document ."}
{"id": 3029, "prediction": "Register a database ."}
{"id": 3031, "prediction": "Creates a copy of this database ."}
{"id": 3033, "prediction": "Replace the tree with the given object ."}
{"id": 3035, "prediction": "Execute the command ."}
{"id": 3037, "prediction": "Called when the storage is closed ."}
{"id": 3039, "prediction": "Get the set of collate names ."}
{"id": 3041, "prediction": "Get the field size from the current position"}
{"id": 3043, "prediction": "Write headers ."}
{"id": 3045, "prediction": "Write record ."}
{"id": 3047, "prediction": "Send a stream to the response ."}
{"id": 3049, "prediction": "Closes the database ."}
{"id": 3051, "prediction": "Completes the component operation ."}
{"id": 3053, "prediction": "Pushes a WritesCacheCounters to the snapshot ."}
{"id": 3055, "prediction": "Pushes the given WALCounters to the snapshot ."}
{"id": 3057, "prediction": "Stop the write cache ."}
{"id": 3059, "prediction": "Stop the full checkpoint timer ."}
{"id": 3061, "prediction": "Called when a WAL record is started ."}
{"id": 3063, "prediction": "Parses an OSQL statement ."}
{"id": 3065, "prediction": "Initialize the server disconnect ."}
{"id": 3067, "prediction": "Sets the property ."}
{"id": 3069, "prediction": "Checks if class exists in the database ."}
{"id": 3071, "prediction": "Define a new vertex attribute ."}
{"id": 2560, "prediction": "Gets the SecurityConstraints metadata for the given JBoss ."}
{"id": 2562, "prediction": "Gets the context params from the jboss metadata ."}
{"id": 2564, "prediction": "Gets the init params from the ServletMetaMetaData ."}
{"id": 2566, "prediction": "Creates a new WebResourceCollectionMetaCollection ."}
{"id": 2568, "prediction": "Creates a new servlet mapping ."}
{"id": 2570, "prediction": "Creates a new UserDataConstraints object ."}
{"id": 2572, "prediction": "Creates a new ParameterMetaMetaData instance ."}
{"id": 2574, "prediction": "Process injection targets ."}
{"id": 2576, "prediction": "Get JNDI name from the model ."}
{"id": 2578, "prediction": "Determine the type of the pattern ."}
{"id": 2580, "prediction": "Determine if an external connection factory can be used ."}
{"id": 2582, "prediction": "Returns the default persistence unit name ."}
{"id": 2584, "prediction": "Unregister the activity ."}
{"id": 2586, "prediction": "Resumes the request ."}
{"id": 2588, "prediction": "Registers the given transaction ."}
{"id": 2590, "prediction": "Stop the resource ."}
{"id": 2592, "prediction": "Creates the resources for the deployment ."}
{"id": 2594, "prediction": "Returns true if the persistence unit file transformer is required ."}
{"id": 2596, "prediction": "Returns true if the default data source is allowed for the given persistence unit ."}
{"id": 2598, "prediction": "Creates a CORBA object based on the environment properties ."}
{"id": 2600, "prediction": "Initialize interface methods"}
{"id": 2602, "prediction": "Validate default values ."}
{"id": 2604, "prediction": "Look up the defaultValue annotation ."}
{"id": 2606, "prediction": "Gets the deferred entity managers ."}
{"id": 2608, "prediction": "Add cache dependencies ."}
{"id": 2610, "prediction": "Determine the dialect ."}
{"id": 2612, "prediction": "Checks if the database exists ."}
{"id": 2614, "prediction": "Set node name ."}
{"id": 2616, "prediction": "Read parameters from an InputStream ."}
{"id": 2618, "prediction": "Writes an exception to the output stream ."}
{"id": 2620, "prediction": "Start the creation of the SFSB ."}
{"id": 2622, "prediction": "Returns the current SFS call stack invocation ."}
{"id": 2624, "prediction": "Removes the current SFS call ."}
{"id": 2626, "prediction": "Deploys the beans ."}
{"id": 2628, "prediction": "Process phase configuration files ."}
{"id": 2630, "prediction": "Inserts an object into a collection ."}
{"id": 2632, "prediction": "Returns true if the given string contains reserved keywords ."}
{"id": 2634, "prediction": "Get the signature of a method ."}
{"id": 2636, "prediction": "Returns a BatchPermission for the given name ."}
{"id": 2638, "prediction": "Sets the value associated with the given key ."}
{"id": 2640, "prediction": "Returns the most recent entity version ."}
{"id": 2642, "prediction": "Returns the directory for the given timed object id ."}
{"id": 2644, "prediction": "Remove a listener ."}
{"id": 2646, "prediction": "Creates a consumer that closes the given value ."}
{"id": 2648, "prediction": "Gets an object instance ."}
{"id": 2650, "prediction": "Substitute string substring ."}
{"id": 2652, "prediction": "Add the name prefix to the deployment ."}
{"id": 2654, "prediction": "Get service name ."}
{"id": 2656, "prediction": "Create an InjectionSource ."}
{"id": 2658, "prediction": "Adds a view interceptor to the proxy ."}
{"id": 2660, "prediction": "Gets the client interceptors for the given method ."}
{"id": 2662, "prediction": "Adds a client interceptor to the client ."}
{"id": 2664, "prediction": "Throw an exception ."}
{"id": 2666, "prediction": "Gets the list of JAXP endpoint objects ."}
{"id": 2668, "prediction": "Gets the endpoint class name ."}
{"id": 2670, "prediction": "Gets the required attachment ."}
{"id": 2672, "prediction": "Gets the JBoss web meta data ."}
{"id": 2674, "prediction": "Gets the web service metadata ."}
{"id": 2676, "prediction": "Returns the class for the given name ."}
{"id": 2678, "prediction": "Gets a collection of resources ."}
{"id": 2680, "prediction": "Pop off the entity manager ."}
{"id": 2682, "prediction": "Register cleanup listener ."}
{"id": 2684, "prediction": "Update server config ."}
{"id": 2686, "prediction": "Creates a new HTTP endpoint ."}
{"id": 2688, "prediction": "Determines if the deployment is a JAX - deployment deployment ."}
{"id": 2690, "prediction": "Sets the timer state ."}
{"id": 2692, "prediction": "Deploys the JBoss deployment"}
{"id": 2694, "prediction": "Gets all the container interceptors ."}
{"id": 2696, "prediction": "Checks if two elements have one of one element ."}
{"id": 2698, "prediction": "Returns the component type of the given parameter ."}
{"id": 2700, "prediction": "Gets the Eron key manager definition ."}
{"id": 2702, "prediction": "Parse a name from a string ."}
{"id": 2704, "prediction": "Parses a component ."}
{"id": 2706, "prediction": "Convert an object to a reference ."}
{"id": 2708, "prediction": "Checks if the given class matches the given class ."}
{"id": 2710, "prediction": "Unbind the given name ."}
{"id": 2712, "prediction": "Configure properties ."}
{"id": 2714, "prediction": "Returns the current context selector ."}
{"id": 2716, "prediction": "Returns the service name for the given class ."}
{"id": 2718, "prediction": "Processes annotations ."}
{"id": 2720, "prediction": "Validates a descriptor ."}
{"id": 2722, "prediction": "Create web application descriptor ."}
{"id": 2724, "prediction": "Deploys the JBoss deployment ."}
{"id": 2726, "prediction": "Create a stub for the given class ."}
{"id": 2728, "prediction": "Get the list of persistence providers ."}
{"id": 2730, "prediction": "Add a persistence provider for the given class loader ."}
{"id": 2732, "prediction": "Deploys the deployment ."}
{"id": 2734, "prediction": "Sets the annotation indexes ."}
{"id": 2736, "prediction": "Saves the persistence provider for the given deployment unit ."}
{"id": 2738, "prediction": "Gets annotated classes ."}
{"id": 2740, "prediction": "Build the enterprise bean metadata ."}
{"id": 2742, "prediction": "Get the container for the given class ."}
{"id": 2744, "prediction": "Creates the work in progress ."}
{"id": 2746, "prediction": "Convert an integer to a hex string ."}
{"id": 2748, "prediction": "Determines if the method is an accessor method ."}
{"id": 2750, "prediction": "Returns true if the method is non - null ."}
{"id": 2752, "prediction": "Returns the attribute name for the given attribute ."}
{"id": 2754, "prediction": "Fixes the name of the case where the name of the lower case ."}
{"id": 2756, "prediction": "Parses the XML environment element ."}
{"id": 2758, "prediction": "Process XML attributes ."}
{"id": 2760, "prediction": "Creates an add operation handler ."}
{"id": 2762, "prediction": "Marshals an attribute ."}
{"id": 2764, "prediction": "Creates a session ."}
{"id": 2766, "prediction": "Registers a set of endpoint handlers ."}
{"id": 2768, "prediction": "Initialize the job ."}
{"id": 2770, "prediction": "Creates a resolver from a URL ."}
{"id": 2772, "prediction": "Bind an object to the given name ."}
{"id": 2774, "prediction": "Returns a list of bindings for the given name ."}
{"id": 2776, "prediction": "Destroy a subcontext ."}
{"id": 2778, "prediction": "Creates a new context ."}
{"id": 2780, "prediction": "Adds a property to the environment ."}
{"id": 2782, "prediction": "Add transformations to the resource ."}
{"id": 2784, "prediction": "Remove a security domain"}
{"id": 2786, "prediction": "Creates a new modifiable reference ."}
{"id": 2788, "prediction": "Creates a new modifiable reference ."}
{"id": 2790, "prediction": "Waits until the service is available ."}
{"id": 2792, "prediction": "Initialize the security vault ."}
{"id": 2794, "prediction": "Print the description of the attribute ."}
{"id": 2796, "prediction": "Returns the configuration string ."}
{"id": 2798, "prediction": "Get the deployment service name ."}
{"id": 2800, "prediction": "Returns true if this permission implies the given permission ."}
{"id": 2802, "prediction": "Gets the name of the log ."}
{"id": 2804, "prediction": "Convert a CORBA object to a CORBA object"}
{"id": 2806, "prediction": "Gets the context service name ."}
{"id": 2808, "prediction": "Add a MethodDescriptor to this method ."}
{"id": 2810, "prediction": "Returns all interceptors for the given method ."}
{"id": 2812, "prediction": "Adds a timeout interceptor to the request ."}
{"id": 2814, "prediction": "Add a post - construct interceptor ."}
{"id": 3073, "prediction": "Get new records by class name ."}
{"id": 3075, "prediction": "Add a new index entry ."}
{"id": 3077, "prediction": "Update the record ."}
{"id": 3079, "prediction": "Prepare keys ."}
{"id": 3081, "prediction": "Reads a page from the cache ."}
{"id": 3083, "prediction": "Opens the file ."}
{"id": 3085, "prediction": "Gets the new instance strategy ."}
{"id": 3087, "prediction": "Checks whether the given cluster is read ."}
{"id": 3089, "prediction": "Get the set of servers ."}
{"id": 3091, "prediction": "Checks if a server contains a given cluster ."}
{"id": 3093, "prediction": "Get all configured servers ."}
{"id": 3095, "prediction": "Get all clusters owned by this server ."}
{"id": 3097, "prediction": "Get the cluster owner ."}
{"id": 3099, "prediction": "Returns the set of registered servers ."}
{"id": 3101, "prediction": "Gets the write quorum ."}
{"id": 3103, "prediction": "Gets server servers ."}
{"id": 3105, "prediction": "Get the global read ."}
{"id": 3107, "prediction": "Get the cluster configuration ."}
{"id": 3109, "prediction": "Clear initialization stack ."}
{"id": 3111, "prediction": "Drop an index ."}
{"id": 3113, "prediction": "Adds an edge to the graph ."}
{"id": 3115, "prediction": "Get the vertices of the specified class ."}
{"id": 3117, "prediction": "Gets an edge by id ."}
{"id": 3119, "prediction": "Shuts down the database ."}
{"id": 3121, "prediction": "Get the vertex type ."}
{"id": 3123, "prediction": "Drop a vertex type"}
{"id": 3125, "prediction": "Create an edge type ."}
{"id": 3127, "prediction": "Drop a key index ."}
{"id": 3129, "prediction": "Removes the specified exception listener ."}
{"id": 3131, "prediction": "Stop monitoring ."}
{"id": 3133, "prediction": "Unregister MBean"}
{"id": 3135, "prediction": "Fetches the system statistics for all threads ."}
{"id": 3137, "prediction": "Compress a JSON string ."}
{"id": 3139, "prediction": "Detaches an object from this object ."}
{"id": 3141, "prediction": "Execute this command ."}
{"id": 3143, "prediction": "Unset the dirty document ."}
{"id": 3145, "prediction": "Returns the set of index engines ."}
{"id": 3147, "prediction": "Get the list of conflict responses ."}
{"id": 3149, "prediction": "Compute the quorum response ."}
{"id": 3151, "prediction": "Gets the execution plan ."}
{"id": 3153, "prediction": "Get library library ."}
{"id": 3155, "prediction": "Gets the next page position ."}
{"id": 3157, "prediction": "Gets the value at the given index ."}
{"id": 3159, "prediction": "Returns the index of the first occurence of the specified string ."}
{"id": 3161, "prediction": "Returns the jump position ."}
{"id": 3163, "prediction": "Enqueue a record ."}
{"id": 3165, "prediction": "Enqueue a cluster ."}
{"id": 3167, "prediction": "Create a new pojo instance ."}
{"id": 3169, "prediction": "Registers a class ."}
{"id": 3171, "prediction": "Acquires a database ."}
{"id": 3173, "prediction": "Acquires a database ."}
{"id": 3175, "prediction": "Returns an iterator with the given class loader ."}
{"id": 3177, "prediction": "Creates a vertex from a JSON object ."}
{"id": 3179, "prediction": "Creates a JSONObject from a given element ."}
{"id": 3181, "prediction": "Executes an import job ."}
{"id": 3183, "prediction": "Gets the active data center map ."}
{"id": 3185, "prediction": "Creates an OSymmetric key from a configuration file ."}
{"id": 3187, "prediction": "Creates an OKey from an input stream ."}
{"id": 3189, "prediction": "Save the Base64 encoded key ."}
{"id": 3191, "prediction": "Set child ."}
{"id": 3193, "prediction": "Get the object as a map ."}
{"id": 3195, "prediction": "Get an object from the map ."}
{"id": 3197, "prediction": "Reads the current record ."}
{"id": 3199, "prediction": "Get the graph ."}
{"id": 3201, "prediction": "Get the property ."}
{"id": 3203, "prediction": "Parse a statement ."}
{"id": 3205, "prediction": "Returns the token at the given index ."}
{"id": 3207, "prediction": "Get all vertices in the graph"}
{"id": 3209, "prediction": "Adds an edge to the graph ."}
{"id": 3211, "prediction": "Get the connection class name ."}
{"id": 3213, "prediction": "Process a set of rids ."}
{"id": 3215, "prediction": "Executes a local request on a local node ."}
{"id": 3217, "prediction": "Perform backup operation ."}
{"id": 3219, "prediction": "Gets the argument ."}
{"id": 3221, "prediction": "Connect to a server ."}
{"id": 3223, "prediction": "Retrieves information about the server ."}
{"id": 3225, "prediction": "Drop a remote database ."}
{"id": 3227, "prediction": "Releases a remote database ."}
{"id": 3229, "prediction": "Execute the given index ."}
{"id": 3231, "prediction": "Parse retry ."}
{"id": 3233, "prediction": "Delete record ."}
{"id": 3235, "prediction": "Authenticate user ."}
{"id": 3237, "prediction": "Run the server ."}
{"id": 3239, "prediction": "Sets the bucket pointer ."}
{"id": 3241, "prediction": "End the atomic operation ."}
{"id": 3243, "prediction": "Change the maximum amount of memory in memory ."}
{"id": 3245, "prediction": "Read the parameters ."}
{"id": 3247, "prediction": "Adds a new item ."}
{"id": 3249, "prediction": "Acquire a lock entry ."}
{"id": 3251, "prediction": "Removes all entries from the cache ."}
{"id": 3253, "prediction": "Empty read buffers ."}
{"id": 3255, "prediction": "Called when the read is written ."}
{"id": 3257, "prediction": "Returns the closest power of the given value ."}
{"id": 3259, "prediction": "Convert this object to an object ."}
{"id": 3261, "prediction": "Gets the serializer for the given type ."}
{"id": 3263, "prediction": "Returns the engine for the given engine name ."}
{"id": 3265, "prediction": "Executes the query ."}
{"id": 3267, "prediction": "Authenticate user ."}
{"id": 3269, "prediction": "Acquires a read lock ."}
{"id": 3271, "prediction": "Returns the id of this element ."}
{"id": 3273, "prediction": "Removes an element from the graph ."}
{"id": 3275, "prediction": "Deletes all sub - trees ."}
{"id": 3277, "prediction": "Creates a vertex ."}
{"id": 3279, "prediction": "Get the positions of an embedded collection ."}
{"id": 3281, "prediction": "Checks if a link value is linked to a link ."}
{"id": 3283, "prediction": "Set the version of the record ."}
{"id": 3285, "prediction": "Initialize database instance ."}
{"id": 3287, "prediction": "Execute query query ."}
{"id": 3289, "prediction": "Registers the server instance ."}
{"id": 3291, "prediction": "Analyze filter condition ."}
{"id": 3293, "prediction": "Attaches this object to the given object ."}
{"id": 3295, "prediction": "Send next value to the cache"}
{"id": 3297, "prediction": "Add a base class ."}
{"id": 3299, "prediction": "Write an object to the stream ."}
{"id": 3301, "prediction": "Checks to see if there are no memory leaks ."}
{"id": 3303, "prediction": "Convert a byte array to an integer ."}
{"id": 3305, "prediction": "Installs a cluster on the database ."}
{"id": 3307, "prediction": "Finds the index of the given object in the array ."}
{"id": 3309, "prediction": "Gets the set of clusters ."}
{"id": 3311, "prediction": "Get the temporary RID counter for this query ."}
{"id": 3313, "prediction": "Parse the fetch plan ."}
{"id": 3315, "prediction": "Optimize the sort order ."}
{"id": 3317, "prediction": "Executes the command ."}
{"id": 3319, "prediction": "Puts an indexed value into the cache ."}
{"id": 3321, "prediction": "Executes the given command ."}
{"id": 3323, "prediction": "Set a property ."}
{"id": 3325, "prediction": "Executes the sync database ."}
{"id": 3327, "prediction": "Callback for the hook ."}
{"id": 2816, "prediction": "Adds a pre - pass interceptor to the pipeline ."}
{"id": 2818, "prediction": "Sets the component factory ."}
{"id": 2820, "prediction": "Add a builder to the builder ."}
{"id": 2822, "prediction": "Returns the context service name for the given module ."}
{"id": 2824, "prediction": "Returns the BindInfo for the given JNDI ."}
{"id": 2826, "prediction": "Gets the value of the value members ."}
{"id": 2828, "prediction": "Create the root node ."}
{"id": 2830, "prediction": "Start the naming context ."}
{"id": 2832, "prediction": "Returns JobOperator service name ."}
{"id": 2834, "prediction": "Add a message destination ."}
{"id": 2836, "prediction": "Get all components of a given component ."}
{"id": 2838, "prediction": "Resolve a message destination destination ."}
{"id": 2840, "prediction": "Sets the defined attribute with the given definition ."}
{"id": 2842, "prediction": "Pop the identity from the context cache ."}
{"id": 2844, "prediction": "Checks if the module is missing ."}
{"id": 2846, "prediction": "Returns the type code for the given constant ."}
{"id": 2848, "prediction": "Creates a package definition ."}
{"id": 2850, "prediction": "This method is used to add a base value to the list of abstract base values ."}
{"id": 2852, "prediction": "Add an interface definition ."}
{"id": 2854, "prediction": "Add an exception ."}
{"id": 2856, "prediction": "Checks if the JTS is enabled ."}
{"id": 2858, "prediction": "Closes the root context ."}
{"id": 2860, "prediction": "Checks the synchronization status of the transaction ."}
{"id": 2862, "prediction": "Returns a map of timers associated with this transaction ."}
{"id": 2864, "prediction": "Gets the parameters from the map ."}
{"id": 2866, "prediction": "Convert a value to a value ."}
{"id": 2868, "prediction": "Checks if the given array names are equal ."}
{"id": 2870, "prediction": "Gets the next binding ."}
{"id": 2872, "prediction": "Observes the health check for the health check ."}
{"id": 2874, "prediction": "Returns the reference for the given locator ."}
{"id": 2876, "prediction": "Returns an enum value from the given model node ."}
{"id": 2878, "prediction": "Checks that two elements are not equal ."}
{"id": 2880, "prediction": "Add class loaders ."}
{"id": 2882, "prediction": "Lookup an object by name ."}
{"id": 2884, "prediction": "Returns a list of bindings for the given name ."}
{"id": 2886, "prediction": "Save setup context ."}
{"id": 2888, "prediction": "Create welcome content handler ."}
{"id": 2890, "prediction": "Calculate the operation analysis map ."}
{"id": 2892, "prediction": "This method is used to create a web endpoint ."}
{"id": 2894, "prediction": "Publish the web app ."}
{"id": 2896, "prediction": "Start the deployment ."}
{"id": 2898, "prediction": "Executes the retry timeout ."}
{"id": 2900, "prediction": "Get the declared methods ."}
{"id": 2902, "prediction": "Returns the constructor for the given class ."}
{"id": 2904, "prediction": "Adds the messaging extension to the messaging engine ."}
{"id": 2906, "prediction": "Migrate the generic transport factory ."}
{"id": 2908, "prediction": "Runs the current thread ."}
{"id": 2910, "prediction": "Returns true if the index should be executed ."}
{"id": 2912, "prediction": "Find all classes in the given directory ."}
{"id": 2914, "prediction": "Gets the generic type for the given field ."}
{"id": 2916, "prediction": "Derives the type of a field ."}
{"id": 2918, "prediction": "Find record by ID ."}
{"id": 2920, "prediction": "Moves the left AND clause to the left AND clause ."}
{"id": 2922, "prediction": "Extract sub queries ."}
{"id": 2924, "prediction": "Handle the class with the given index ."}
{"id": 2926, "prediction": "Retrieves the order direction of the query ."}
{"id": 2928, "prediction": "Finds the best index for the given block ."}
{"id": 2930, "prediction": "Calculate the common factor factors for the given index ."}
{"id": 2932, "prediction": "Allow the given operation to be allowed for the given resource ."}
{"id": 2934, "prediction": "Gets the compact server status ."}
{"id": 2936, "prediction": "Load local databases ."}
{"id": 2938, "prediction": "Retrieves a new lock manager ."}
{"id": 2940, "prediction": "Commits the micro - transaction ."}
{"id": 2942, "prediction": "Updates the identity of the record ."}
{"id": 2944, "prediction": "Create file creation ."}
{"id": 2946, "prediction": "Returns a list of disjoints from this node ."}
{"id": 2948, "prediction": "Append the given character sequence ."}
{"id": 2950, "prediction": "Merge two buffers ."}
{"id": 2952, "prediction": "Execute the command ."}
{"id": 2954, "prediction": "Removes the specified key from the map ."}
{"id": 2956, "prediction": "Execute the first query ."}
{"id": 2958, "prediction": "Checks to see if the region is within the range ."}
{"id": 2960, "prediction": "Execute the command ."}
{"id": 2962, "prediction": "Add the host to the server ."}
{"id": 2964, "prediction": "Gets the OObject transaction ."}
{"id": 2966, "prediction": "Kill a connection ."}
{"id": 2968, "prediction": "Disconnect a channel ."}
{"id": 2970, "prediction": "Swap the given value at the given index ."}
{"id": 2972, "prediction": "Synchronize schema ."}
{"id": 2974, "prediction": "Returns the last record ."}
{"id": 2976, "prediction": "Execute the query ."}
{"id": 2978, "prediction": "Register a new compression algorithm ."}
{"id": 2980, "prediction": "Checks if the given expression is allowed to be executed ."}
{"id": 2982, "prediction": "Fill the buffer with the specified length ."}
{"id": 2984, "prediction": "Execute a full step ."}
{"id": 2986, "prediction": "Execute the command ."}
{"id": 2988, "prediction": "Parse the command ."}
{"id": 2990, "prediction": "Updates the schedule starting at the end of the graph ."}
{"id": 2992, "prediction": "Split the expression into the composite"}
{"id": 2994, "prediction": "Gets the collate ."}
{"id": 2996, "prediction": "Advances the probe ."}
{"id": 2998, "prediction": "Build an ODocument from a file ."}
{"id": 3000, "prediction": "Create a hash with the given algorithm ."}
{"id": 3002, "prediction": "Creates new index ."}
{"id": 3004, "prediction": "Get all edges in the graph"}
{"id": 3006, "prediction": "Gets the distributed timeout ."}
{"id": 3008, "prediction": "Checks to see if the given page has been filled ."}
{"id": 3010, "prediction": "Parses the lock ."}
{"id": 3012, "prediction": "Frees the cluster ."}
{"id": 3014, "prediction": "Shutdown the system ."}
{"id": 3016, "prediction": "Grant a role ."}
{"id": 3018, "prediction": "Evaluate the record ."}
{"id": 3020, "prediction": "Reset the table ."}
{"id": 3022, "prediction": "Spread a random number ."}
{"id": 3024, "prediction": "Drops all indexes of the property ."}
{"id": 3026, "prediction": "Returns the linked class ."}
{"id": 3028, "prediction": "Removes a listener ."}
{"id": 3030, "prediction": "timeout"}
{"id": 3032, "prediction": "Try to merge the given value ."}
{"id": 3034, "prediction": "Transform result ."}
{"id": 3036, "prediction": "Closes the pool ."}
{"id": 3038, "prediction": "Returns a set of function names ."}
{"id": 3040, "prediction": "Returns a set of command names ."}
{"id": 3042, "prediction": "Write status code ."}
{"id": 3044, "prediction": "Write records ."}
{"id": 3046, "prediction": "Send response ."}
{"id": 3048, "prediction": "Open ODB database ."}
{"id": 3050, "prediction": "This method is called when the collection has changed ."}
{"id": 3052, "prediction": "Pushes the component counters to the given component ."}
{"id": 3054, "prediction": "Pushes a StorageCounters onto the snapshot ."}
{"id": 3056, "prediction": "Push the given component to the given component ."}
{"id": 3058, "prediction": "Stop the fuzzy checkpoint timer ."}
{"id": 3060, "prediction": "Stop the commit timer ."}
{"id": 3062, "prediction": "Stop the wal timer ."}
{"id": 3064, "prediction": "Initialize receive messages ."}
{"id": 3066, "prediction": "Removes the record from the graph ."}
{"id": 3068, "prediction": "Remove a property from this vertex ."}
{"id": 3070, "prediction": "Wrap the given index changes to the given index ."}
{"id": 3329, "prediction": "Count the view of the view ."}
{"id": 3331, "prediction": "Activate the current document ."}
{"id": 3333, "prediction": "Returns the relative position of the given position ."}
{"id": 3335, "prediction": "Parses the next word ."}
{"id": 3337, "prediction": "Parse an optional keyword ."}
{"id": 3339, "prediction": "Execute the DELETE command ."}
{"id": 3341, "prediction": "Gets the offset of this buffer ."}
{"id": 3343, "prediction": "Acquires an access token ."}
{"id": 3345, "prediction": "Checks if there is no more characters ."}
{"id": 3347, "prediction": "Reads a line from the buffer ."}
{"id": 3349, "prediction": "Skips n bytes ."}
{"id": 3351, "prediction": "Merges two arrays ."}
{"id": 3353, "prediction": "Perform parallelism ."}
{"id": 3355, "prediction": "Hashes a long ."}
{"id": 3357, "prediction": "Truncate the file to the given size ."}
{"id": 3359, "prediction": "Called when a consumer has expired metrics ."}
{"id": 3361, "prediction": "Finds all fields matching the query ."}
{"id": 3363, "prediction": "Clean up snapshots ."}
{"id": 3365, "prediction": "Checks if two fields are equal ."}
{"id": 3367, "prediction": "Called when an announcement completes ."}
{"id": 3369, "prediction": "Read header tags ."}
{"id": 3371, "prediction": "Removes all entries from the set ."}
{"id": 3373, "prediction": "Returns the size of the bit set ."}
{"id": 3375, "prediction": "Copies the contents of a byte array to the destination ."}
{"id": 3377, "prediction": "Compares two byte arrays ."}
{"id": 3379, "prediction": "Orders data from src to dest ."}
{"id": 3381, "prediction": "Writes bytes to the output stream ."}
{"id": 3383, "prediction": "Returns the position of a field ."}
{"id": 3385, "prediction": "Returns true if the given dataset is contained in the given dataset ."}
{"id": 3387, "prediction": "Generate the files for the given dataset ."}
{"id": 3389, "prediction": "Read record key ."}
{"id": 3391, "prediction": "Create a field path for a hash index ."}
{"id": 3393, "prediction": "Associates an object with the given ordinal value ."}
{"id": 3395, "prediction": "Returns true if this key contains the specified key ."}
{"id": 3397, "prediction": "Adds a field to the filter ."}
{"id": 3399, "prediction": "Initialize the default version of the next major version ."}
{"id": 3401, "prediction": "Finds all records that match the given field name ."}
{"id": 3403, "prediction": "Sets the elements of the element match ."}
{"id": 3405, "prediction": "Calculate the index ."}
{"id": 3407, "prediction": "Runs the cycle ."}
{"id": 3409, "prediction": "Removes all referenced objects from the given state ."}
{"id": 3411, "prediction": "Calculate the type metrics ."}
{"id": 3413, "prediction": "Write a fixed length integer ."}
{"id": 3415, "prediction": "Add an ordinal to the pool ."}
{"id": 3417, "prediction": "Calculates a hash for a given key ."}
{"id": 3419, "prediction": "Resizes a fixed size array ."}
{"id": 3421, "prediction": "Prepare the cache for writing ."}
{"id": 3423, "prediction": "Increases the size of the key array ."}
{"id": 3425, "prediction": "Creates an empty key array ."}
{"id": 3427, "prediction": "Finds a match by key ."}
{"id": 3429, "prediction": "Calculate the hash table size ."}
{"id": 3431, "prediction": "Writes a snapshot to the output stream ."}
{"id": 3433, "prediction": "Adds a set of schema names to a collection of primitive types ."}
{"id": 3435, "prediction": "Reindexed hash index ."}
{"id": 3437, "prediction": "Triggers a random refresh ."}
{"id": 3439, "prediction": "Adds a type diff to the database ."}
{"id": 3441, "prediction": "Writes a long to the output stream ."}
{"id": 3443, "prediction": "Write a VInt to a byte array ."}
{"id": 3445, "prediction": "Read a long value from the stream ."}
{"id": 3447, "prediction": "Refresh the size of the loading view ."}
{"id": 3449, "prediction": "Pull the pull event ."}
{"id": 3451, "prediction": "Adds a rule to this rule ."}
{"id": 3453, "prediction": "Creates a new builder with the given rule type ."}
{"id": 3455, "prediction": "Returns a new rule builder with the given rule type ."}
{"id": 3457, "prediction": "Creates a new rule with the given name ."}
{"id": 3459, "prediction": "Applies a rule to the given action ."}
{"id": 3461, "prediction": "Gets the annotated field ."}
{"id": 3463, "prediction": "Gets the annotated annotation ."}
{"id": 3465, "prediction": "Update audit status ."}
{"id": 3467, "prediction": "Specify the rule type ."}
{"id": 3469, "prediction": "Add an action to this rule ."}
{"id": 3471, "prediction": "Creates a new rule with the given rule type ."}
{"id": 3473, "prediction": "Reads an empty line from the table ."}
{"id": 3475, "prediction": "Get the ports from the build configuration ."}
{"id": 3477, "prediction": "Parses the port mapping ."}
{"id": 3479, "prediction": "Removes the given port from the list ."}
{"id": 3481, "prediction": "Append an image stream to a file ."}
{"id": 3483, "prediction": "Converts the given service name to a port variable ."}
{"id": 3485, "prediction": "Adds a value to the map ."}
{"id": 3487, "prediction": "Merge two maps ."}
{"id": 3489, "prediction": "Waits for a pod ."}
{"id": 3491, "prediction": "Convert an entity to a List ."}
{"id": 3493, "prediction": "Checks if the given pod is ready ."}
{"id": 3495, "prediction": "Checks if the given name is a route ."}
{"id": 3497, "prediction": "Read a fragment from a file ."}
{"id": 3499, "prediction": "Merge two resources ."}
{"id": 3501, "prediction": "Checks if a pod spec is local ."}
{"id": 3503, "prediction": "Adds a port if it is not valid ."}
{"id": 3505, "prediction": "Gets the plugin configuration ."}
{"id": 3507, "prediction": "Download a file from the given URL ."}
{"id": 3509, "prediction": "Merges the processor configuration with the given configuration ."}
{"id": 3511, "prediction": "Read profile from classpath ."}
{"id": 3513, "prediction": "Finds the profile yaml file ."}
{"id": 3515, "prediction": "Reads a list of profiles from an input stream ."}
{"id": 3517, "prediction": "Checks if the current shift mode is open ."}
{"id": 3519, "prediction": "Returns the first child element with the given name ."}
{"id": 3521, "prediction": "Remove tag by name ."}
{"id": 3523, "prediction": "Applies a project to a project ."}
{"id": 3525, "prediction": "Gets the namespace ."}
{"id": 3527, "prediction": "Creates a builder ."}
{"id": 3529, "prediction": "Gets environment variables ."}
{"id": 3531, "prediction": "Parse a duration ."}
{"id": 3533, "prediction": "Disable OpenShift features ."}
{"id": 3535, "prediction": "Parses the given input stream into a serialized map ."}
{"id": 3537, "prediction": "Extracts the generator config ."}
{"id": 3539, "prediction": "Extract enforcer config ."}
{"id": 3541, "prediction": "Recursively copies the app config files ."}
{"id": 3543, "prediction": "Gets the spring bootstrap version ."}
{"id": 3545, "prediction": "Enrich Enumerator ."}
{"id": 3547, "prediction": "Converts a map into a flattened map ."}
{"id": 3549, "prediction": "Get the singleton template from a list of resources ."}
{"id": 3551, "prediction": "Gets the value of a property ."}
{"id": 3553, "prediction": "Prepares a list of processors ."}
{"id": 3555, "prediction": "Returns default from mode ."}
{"id": 3557, "prediction": "Gets the registry registry ."}
{"id": 3559, "prediction": "Gets the external service URL ."}
{"id": 3561, "prediction": "Creates a JEST client ."}
{"id": 3563, "prediction": "Scan plugins ."}
{"id": 3565, "prediction": "Gets the request balance ."}
{"id": 3567, "prediction": "Perform a HTTP GET request ."}
{"id": 3569, "prediction": "Creates a new VenmoConfiguration object from a JSON object ."}
{"id": 3571, "prediction": "Collect device data ."}
{"id": 3573, "prediction": "Get PayPal client metadata id"}
{"id": 3575, "prediction": "Get a string value from a JSONObject ."}
{"id": 3577, "prediction": "Gets the checkout config ."}
{"id": 3579, "prediction": "Executes a GET request ."}
{"id": 3581, "prediction": "Perform a POST request ."}
{"id": 3583, "prediction": "Accepts a local payment request ."}
{"id": 3072, "prediction": "Define an edge attribute ."}
{"id": 3074, "prediction": "Get the list of records that have been created ."}
{"id": 3076, "prediction": "Merge two sets ."}
{"id": 3078, "prediction": "Determines if the index should be executed ."}
{"id": 3080, "prediction": "Writes a page to the cache ."}
{"id": 3082, "prediction": "Truncate the specified page ."}
{"id": 3084, "prediction": "Check if the cluster is active ."}
{"id": 3086, "prediction": "Is the execution mode?"}
{"id": 3088, "prediction": "Get the server cluster map ."}
{"id": 3090, "prediction": "Checks if a server is contained in the cluster ."}
{"id": 3092, "prediction": "Get master servers ."}
{"id": 3094, "prediction": "Get the cluster on the server ."}
{"id": 3096, "prediction": "Get the cluster owner ."}
{"id": 3098, "prediction": "Get the list of servers ."}
{"id": 3100, "prediction": "Returns the set of data centers ."}
{"id": 3102, "prediction": "Checks if the cluster is sharded ."}
{"id": 3104, "prediction": "Gets the data center of a server ."}
{"id": 3106, "prediction": "Get the write quorum for the given cluster ."}
{"id": 3108, "prediction": "Gets the data center configuration ."}
{"id": 3110, "prediction": "Gets an indexed index ."}
{"id": 3112, "prediction": "Adds a new vertex to the graph ."}
{"id": 3114, "prediction": "Gets the vertex id ."}
{"id": 3116, "prediction": "Get the edges of the specified class ."}
{"id": 3118, "prediction": "Reset the database ."}
{"id": 3120, "prediction": "Gets the vertex type ."}
{"id": 3122, "prediction": "Create a new vertex type ."}
{"id": 3124, "prediction": "Gets the edge type ."}
{"id": 3126, "prediction": "Gets an element by id ."}
{"id": 3128, "prediction": "Create a new key index ."}
{"id": 3130, "prediction": "Fires a background exception event ."}
{"id": 3132, "prediction": "Registers a MBean ."}
{"id": 3134, "prediction": "Gets the write cache counters ."}
{"id": 3136, "prediction": "Fetches all component counters for the given component ."}
{"id": 3138, "prediction": "Get the value of the property ."}
{"id": 3140, "prediction": "Returns the version of the given object ."}
{"id": 3142, "prediction": "Sets the dirty dirty object ."}
{"id": 3144, "prediction": "Gets the index types ."}
{"id": 3146, "prediction": "Gets the list of nodes in the response ."}
{"id": 3148, "prediction": "Gets the best response group ."}
{"id": 3150, "prediction": "Get the list of received responses ."}
{"id": 3152, "prediction": "Checks if the given expression is allowed to be executed ."}
{"id": 3154, "prediction": "Release the database engine ."}
{"id": 3156, "prediction": "Update the size of the changes ."}
{"id": 3158, "prediction": "Checks if the given index is valid for the given index ."}
{"id": 3160, "prediction": "Move the whitespace between whitespace characters ."}
{"id": 3162, "prediction": "Sets the fetch plan ."}
{"id": 3164, "prediction": "Cancel a record"}
{"id": 3166, "prediction": "Gets the dependencies of the given pattern ."}
{"id": 3168, "prediction": "Register entity classes ."}
{"id": 3170, "prediction": "Set the class handler ."}
{"id": 3172, "prediction": "Get the number of available connections ."}
{"id": 3174, "prediction": "Executes the update ."}
{"id": 3176, "prediction": "Check the cache configuration ."}
{"id": 3178, "prediction": "Creates an edge from a JSON representation ."}
{"id": 3180, "prediction": "Creates a GraphNode from a given element ."}
{"id": 3182, "prediction": "Get the current job ."}
{"id": 3184, "prediction": "Split the cipher transform ."}
{"id": 3186, "prediction": "Creates a key from a file ."}
{"id": 3188, "prediction": "Encrypts the given bytes using the given transformation ."}
{"id": 3190, "prediction": "Saves the keystore to the given OutputStream ."}
{"id": 3192, "prediction": "Adds an object to the database ."}
{"id": 3194, "prediction": "Authenticate user ."}
{"id": 3196, "prediction": "Gets the record ."}
{"id": 3198, "prediction": "Get the transaction graph"}
{"id": 3200, "prediction": "Setup the pool ."}
{"id": 3202, "prediction": "Stops the transaction ."}
{"id": 3204, "prediction": "Gets the next token ."}
{"id": 3206, "prediction": "Generate a parse exception ."}
{"id": 3208, "prediction": "Remove this record from the graph ."}
{"id": 3210, "prediction": "Adds an edge to the graph ."}
{"id": 3212, "prediction": "Get the connection class"}
{"id": 3214, "prediction": "Gets the console methods ."}
{"id": 3216, "prediction": "Get the number of nodes with the given status ."}
{"id": 3218, "prediction": "Wait for next retry ."}
{"id": 3220, "prediction": "Check if all parameters have been set ."}
{"id": 3222, "prediction": "List all databases ."}
{"id": 3224, "prediction": "Check if a remote database exists ."}
{"id": 3226, "prediction": "Free the given remote storage ."}
{"id": 3228, "prediction": "Get the cluster status"}
{"id": 3230, "prediction": "Gets the current graph ."}
{"id": 3232, "prediction": "Save the record ."}
{"id": 3234, "prediction": "Gets authentication header ."}
{"id": 3236, "prediction": "Check if the user is authorized or not ."}
{"id": 3238, "prediction": "Adjusts the start line of the start line ."}
{"id": 3240, "prediction": "Gets the bucket pointer ."}
{"id": 3242, "prediction": "Acquires exclusive lock ."}
{"id": 3244, "prediction": "Starts listening on a connection ."}
{"id": 3246, "prediction": "Shuts down the LogManager ."}
{"id": 3248, "prediction": "Removes the entry from the cache ."}
{"id": 3250, "prediction": "Returns the value associated with the given key ."}
{"id": 3252, "prediction": "Closes the specified key ."}
{"id": 3254, "prediction": "Called when the write is finished ."}
{"id": 3256, "prediction": "Puts an entry into the cache ."}
{"id": 3258, "prediction": "Process an event ."}
{"id": 3260, "prediction": "Convenience method to convert all possible values from the underlying class ."}
{"id": 3262, "prediction": "Initialize shutdown handler ."}
{"id": 3264, "prediction": "Synchronizes the database ."}
{"id": 3266, "prediction": "Creates a new reader entry ."}
{"id": 3268, "prediction": "Creates the metadata ."}
{"id": 3270, "prediction": "Get the vertex at the specified direction ."}
{"id": 3272, "prediction": "Sets the value of the given element ."}
{"id": 3274, "prediction": "Clears the tree ."}
{"id": 3276, "prediction": "Ends the batch ."}
{"id": 3278, "prediction": "Parse strategy ."}
{"id": 3280, "prediction": "Execute the command ."}
{"id": 3282, "prediction": "Create a new instance of the record ."}
{"id": 3284, "prediction": "Get record type ."}
{"id": 3286, "prediction": "Print the exception stack trace ."}
{"id": 3288, "prediction": "Convert the link to a record ."}
{"id": 3290, "prediction": "Create the OServerUserConfiguration object from the given user document ."}
{"id": 3292, "prediction": "Create an indexed property ."}
{"id": 3294, "prediction": "Gets the index class ."}
{"id": 3296, "prediction": "Truncate the table ."}
{"id": 3298, "prediction": "Add the polymorphic cluster ids ."}
{"id": 3300, "prediction": "Releases a pointer to the pool ."}
{"id": 3302, "prediction": "Clears the cache ."}
{"id": 3304, "prediction": "Starts the database ."}
{"id": 3306, "prediction": "Dumps server status information ."}
{"id": 3308, "prediction": "Finds the index of an object in the array ."}
{"id": 3310, "prediction": "Handle a record ."}
{"id": 3312, "prediction": "Report the tip ."}
{"id": 3314, "prediction": "Parse the command ."}
{"id": 3316, "prediction": "Returns the status of this batch ."}
{"id": 3318, "prediction": "Handle a JVM error ."}
{"id": 3320, "prediction": "Rolls the given micro - transaction ."}
{"id": 3322, "prediction": "Registers a new cluster ."}
{"id": 3324, "prediction": "Execute the given class ."}
{"id": 3326, "prediction": "Delete the record ."}
{"id": 3585, "prediction": "Remove a listener ."}
{"id": 3587, "prediction": "Called when an activity is received ."}
{"id": 3589, "prediction": "Adds a dictionary to the dictionary ."}
{"id": 3591, "prediction": "Convert tokens into Java string ."}
{"id": 3593, "prediction": "Convert a list of tokens ."}
{"id": 3595, "prediction": "Joins a list of bytes into a buffer ."}
{"id": 3597, "prediction": "Returns the profile for the given index ."}
{"id": 3599, "prediction": "Reads the next marker ."}
{"id": 3601, "prediction": "Returns the maximum available frame ."}
{"id": 3603, "prediction": "Copy a file to a file ."}
{"id": 3605, "prediction": "Convert a frame to a time value"}
{"id": 3607, "prediction": "Calculates the edited time of a movie"}
{"id": 3609, "prediction": "Convert a video frame to a TV frame"}
{"id": 3611, "prediction": "Convert a timecode frame to a timecode frame ."}
{"id": 3613, "prediction": "Calculate a 7 - bit integer ."}
{"id": 3615, "prediction": "Returns true if this color matches the given color space ."}
{"id": 3617, "prediction": "Creates a new MPPOMer ."}
{"id": 3619, "prediction": "Create a WIFF header ."}
{"id": 3621, "prediction": "Parse the AACDecoder configuration ."}
{"id": 3623, "prediction": "Reads the decoder marker data ."}
{"id": 3625, "prediction": "Decode a single frame ."}
{"id": 3627, "prediction": "Determines the bits of two blocks ."}
{"id": 3629, "prediction": "Encodes a long value into a byte array ."}
{"id": 3631, "prediction": "Adds a packet ."}
{"id": 3633, "prediction": "Decodes a binary bit ."}
{"id": 3635, "prediction": "Gets a marker from the buffer ."}
{"id": 3637, "prediction": "Sets the plane ."}
{"id": 3639, "prediction": "Computes the coefficients of a block ."}
{"id": 3641, "prediction": "Concatenates two bits ."}
{"id": 3643, "prediction": "Rewards a range of int values ."}
{"id": 3645, "prediction": "Get a picture of the video buffer"}
{"id": 3647, "prediction": "Converts a byte array into an integer array ."}
{"id": 3649, "prediction": "Converts a buffer into a float buffer ."}
{"id": 3651, "prediction": "Interprets the input buffer into the output buffer ."}
{"id": 3653, "prediction": "Gets the video size ."}
{"id": 3655, "prediction": "Builds a map of group maps ."}
{"id": 3657, "prediction": "Reads a 32 - bit integer from the given byte buffer ."}
{"id": 3659, "prediction": "Encodes a picture into a frame ."}
{"id": 3661, "prediction": "Encodes a PNG frame into a PNG file ."}
{"id": 3663, "prediction": "Gets the supported tags ."}
{"id": 3665, "prediction": "Delete all internal references ."}
{"id": 3667, "prediction": "Loads a library ."}
{"id": 3669, "prediction": "Deletes temporary files ."}
{"id": 3671, "prediction": "Gets the channel from a layout ."}
{"id": 3673, "prediction": "Get the version information ."}
{"id": 3675, "prediction": "Creates a new DELExer ."}
{"id": 3677, "prediction": "Display a video at the specified time ."}
{"id": 3679, "prediction": "Prints an option to a PrintStream"}
{"id": 3681, "prediction": "Generates a unique identifier ."}
{"id": 3683, "prediction": "Gets the supported video frames ."}
{"id": 3685, "prediction": "Gets the supported audio sample rates ."}
{"id": 3687, "prediction": "Gets the supported audio channels ."}
{"id": 3689, "prediction": "Sets a flag2 flag ."}
{"id": 3691, "prediction": "Get the deserializer"}
{"id": 3693, "prediction": "Make a filter graph ."}
{"id": 3695, "prediction": "Gets a byte buffer at the specified offset ."}
{"id": 3697, "prediction": "Resample a media picture ."}
{"id": 3699, "prediction": "Validates a media picture ."}
{"id": 3701, "prediction": "Get the meta data ."}
{"id": 3703, "prediction": "Get the CPU architecture from a GNU string ."}
{"id": 3705, "prediction": "Gets the OSGi family family ."}
{"id": 3707, "prediction": "Loads a library ."}
{"id": 3709, "prediction": "Attempts to load a library from a list of libraries ."}
{"id": 3711, "prediction": "Check if a library has been loaded ."}
{"id": 3713, "prediction": "Deletes the reference ."}
{"id": 3715, "prediction": "Get the muxer ."}
{"id": 3717, "prediction": "Decodes a base64 encoded string ."}
{"id": 3719, "prediction": "Returns information about a transaction ."}
{"id": 3721, "prediction": "Returns the list of transactions for a given address ."}
{"id": 3723, "prediction": "Gets a block ."}
{"id": 3725, "prediction": "Sets the script ."}
{"id": 3727, "prediction": "Write primitive array ."}
{"id": 3729, "prediction": "Writes an object to the output stream ."}
{"id": 3731, "prediction": "Writes an object to the output buffer ."}
{"id": 3733, "prediction": "Returns the specificity of the given class ."}
{"id": 3735, "prediction": "Removes a binary key from the cache ."}
{"id": 3737, "prediction": "Sets the output stream ."}
{"id": 3739, "prediction": "Creates a StructConfiguration"}
{"id": 3741, "prediction": "Clear all cached objects ."}
{"id": 3743, "prediction": "Gets an object input ."}
{"id": 3745, "prediction": "Gets the object output ."}
{"id": 3747, "prediction": "Returns the preferred name for the given class ."}
{"id": 3749, "prediction": "Write an unsigned integer ."}
{"id": 3751, "prediction": "Writes a primitive array ."}
{"id": 3753, "prediction": "Get the cached field info ."}
{"id": 3755, "prediction": "Called when the object has been written ."}
{"id": 3757, "prediction": "Write array ."}
{"id": 3759, "prediction": "Write primitive array ."}
{"id": 3761, "prediction": "Snapshot changes ."}
{"id": 3763, "prediction": "Writes an object to the output stream ."}
{"id": 3765, "prediction": "Read a byte array from the buffer ."}
{"id": 3767, "prediction": "Moves the specified number of bytes from the queue ."}
{"id": 3769, "prediction": "Starts Cassandra Cassandra ."}
{"id": 3771, "prediction": "Copies a resource to a directory ."}
{"id": 3773, "prediction": "Tests if a remote port is available ."}
{"id": 3775, "prediction": "Gets map descriptor descriptors ."}
{"id": 3777, "prediction": "Computes the logical AND condition ."}
{"id": 3779, "prediction": "Computes the AND condition for a given condition"}
{"id": 3781, "prediction": "Applies a condition to a condition"}
{"id": 3783, "prediction": "Convert the properties to a flat buffer ."}
{"id": 3785, "prediction": "Convert a collection of properties to a flat array"}
{"id": 3787, "prediction": "Sets the first exception ."}
{"id": 3789, "prediction": "Partition a list of data set ."}
{"id": 3791, "prediction": "Shuts down the transport ."}
{"id": 3793, "prediction": "Convert an image to an image ."}
{"id": 3795, "prediction": "Creates a compression descriptor from a byte buffer ."}
{"id": 3797, "prediction": "Validates the given arrays"}
{"id": 3799, "prediction": "Searches for a range of indices ."}
{"id": 3801, "prediction": "Binary product products ."}
{"id": 3803, "prediction": "Creates a complex array with the specified number ."}
{"id": 3805, "prediction": "Returns true if the replication should be replicated ."}
{"id": 3807, "prediction": "Computes the two complex number of complex numbers ."}
{"id": 3809, "prediction": "Negates a complex number ."}
{"id": 3811, "prediction": "Parses a power number ."}
{"id": 3813, "prediction": "Binarize the feature matrix ."}
{"id": 3815, "prediction": "Gets the memory footprint of this feature ."}
{"id": 3817, "prediction": "Returns the simple hostname for the given hostname ."}
{"id": 3819, "prediction": "Converts a byte array to a hex string ."}
{"id": 3821, "prediction": "Splits a string into an array of strings ."}
{"id": 3823, "prediction": "Find the next character in the given string ."}
{"id": 3825, "prediction": "Joins the given strings into a single string ."}
{"id": 3827, "prediction": "Replaces all tokens with the given pattern ."}
{"id": 3829, "prediction": "Invert a matrix ."}
{"id": 3831, "prediction": "Returns true if the host is on the host side"}
{"id": 3833, "prediction": "Create the shape information for the shape"}
{"id": 3835, "prediction": "Checks if the shape is a vector ."}
{"id": 3837, "prediction": "Returns the offset for the given index"}
{"id": 3839, "prediction": "Gets a short at the specified index ."}
{"id": 3328, "prediction": "Delete the record ."}
{"id": 3330, "prediction": "Count the number of classes in the database ."}
{"id": 3332, "prediction": "Register an encryption algorithm ."}
{"id": 3334, "prediction": "Parses the next word ."}
{"id": 3336, "prediction": "Parses the next character ."}
{"id": 3338, "prediction": "Check if separator is valid ."}
{"id": 3340, "prediction": "Clears the configuration file ."}
{"id": 3342, "prediction": "Extracts the token from the OAuth2 token ."}
{"id": 3344, "prediction": "Copy the access token ."}
{"id": 3346, "prediction": "Reads a line from a byte array ."}
{"id": 3348, "prediction": "Skips n bytes ."}
{"id": 3350, "prediction": "Ensures that the given array index is valid ."}
{"id": 3352, "prediction": "Swaps the elements of a swap ."}
{"id": 3354, "prediction": "Convenience method for MurmurHash"}
{"id": 3356, "prediction": "Write a byte buffer to the file ."}
{"id": 3358, "prediction": "Sets the position of the file ."}
{"id": 3360, "prediction": "Waits for all pending tasks ."}
{"id": 3362, "prediction": "Find the compact targets that are compacted ."}
{"id": 3364, "prediction": "Returns the hash code for the given field ."}
{"id": 3366, "prediction": "Removes all referenced schemas from the given closure ."}
{"id": 3368, "prediction": "Called when a cycle completes ."}
{"id": 3370, "prediction": "Extracts the record primary key from the given object ."}
{"id": 3372, "prediction": "Read all ordinal values from the stream ."}
{"id": 3374, "prediction": "Gets the value of a field ."}
{"id": 3376, "prediction": "Copy data from dest to dest ."}
{"id": 3378, "prediction": "Copies the source byte array to the destination ."}
{"id": 3380, "prediction": "Reads segments from the given InputStream ."}
{"id": 3382, "prediction": "Ensures that the segment is allocated ."}
{"id": 3384, "prediction": "Calculates the total number of buckets ."}
{"id": 3386, "prediction": "Generate the files ."}
{"id": 3388, "prediction": "Checks if the given ordinal matches the given ordinal value ."}
{"id": 3390, "prediction": "Creates a FieldPath for a given type ."}
{"id": 3392, "prediction": "Create a field path for a given prefix ."}
{"id": 3394, "prediction": "Initializes the average word ."}
{"id": 3396, "prediction": "Gets the percentage of the given cardinality ."}
{"id": 3398, "prediction": "Creates a list of dependent schemas ."}
{"id": 3400, "prediction": "Returns the value at the given index ."}
{"id": 3402, "prediction": "Finds and returns the matching record for the given field name ."}
{"id": 3404, "prediction": "Sets the elements of the elements of the elements ."}
{"id": 3406, "prediction": "Restore the state of the last state ."}
{"id": 3408, "prediction": "Excludes the given key index ."}
{"id": 3410, "prediction": "Writes the HBlobuf header to the stream ."}
{"id": 3412, "prediction": "Writes the data to the buffer ."}
{"id": 3414, "prediction": "Write a fixed length of a fixed length ."}
{"id": 3416, "prediction": "Sorts the free algorithm ."}
{"id": 3418, "prediction": "Hashes a key ."}
{"id": 3420, "prediction": "Find the free ordinal for the preferred ordinal ."}
{"id": 3422, "prediction": "Compares a serialized representation of a serialized key ."}
{"id": 3424, "prediction": "Rehashes a key in the cache ."}
{"id": 3426, "prediction": "Checks if two fields are equal ."}
{"id": 3428, "prediction": "Swaps the current state of the current state ."}
{"id": 3430, "prediction": "Run the compaction cycle ."}
{"id": 3432, "prediction": "Write delta ."}
{"id": 3434, "prediction": "Normalize a field path ."}
{"id": 3436, "prediction": "Searches for objects matching the given query ."}
{"id": 3438, "prediction": "Trigger refresh refresh ."}
{"id": 3440, "prediction": "Calculate the diff differences ."}
{"id": 3442, "prediction": "Writes an integer to the output stream ."}
{"id": 3444, "prediction": "Read an integer from the stream ."}
{"id": 3446, "prediction": "Add a child view ."}
{"id": 3448, "prediction": "Update the UI ."}
{"id": 3450, "prediction": "Performs an operation on a scroll ."}
{"id": 3452, "prediction": "Specifies that the given rule is assigned to this rule ."}
{"id": 3454, "prediction": "Creates a new rule builder ."}
{"id": 3456, "prediction": "Returns a new builder with the given rule type ."}
{"id": 3458, "prediction": "Creates a new RuleBuilder with the given name ."}
{"id": 3460, "prediction": "Returns an instance of the given class ."}
{"id": 3462, "prediction": "Gets the annotated method ."}
{"id": 3464, "prediction": "Registers an audit record ."}
{"id": 3466, "prediction": "Gets the audit status map ."}
{"id": 3468, "prediction": "Add an action to this rule ."}
{"id": 3470, "prediction": "Resets the default value ."}
{"id": 3472, "prediction": "Gets the pojo rules ."}
{"id": 3474, "prediction": "Convert a list of services to an array ."}
{"id": 3476, "prediction": "Extract the list of port ports from config ."}
{"id": 3478, "prediction": "Adds the given port if it is not null ."}
{"id": 3480, "prediction": "Adds missing parts to the service ."}
{"id": 3482, "prediction": "Checks if the given port port matches the given port ."}
{"id": 3484, "prediction": "Get the host and port ."}
{"id": 3486, "prediction": "Merge the given map with the given map ."}
{"id": 3488, "prediction": "Put all values in the map if not null ."}
{"id": 3490, "prediction": "Validates the given key id ."}
{"id": 3492, "prediction": "Gets the resource version ."}
{"id": 3494, "prediction": "Gets the current context ."}
{"id": 3496, "prediction": "Checks if a project has a resource ."}
{"id": 3498, "prediction": "Convert a map of environment variables to a list of Envars ."}
{"id": 3500, "prediction": "Merge the map with empty strings ."}
{"id": 3502, "prediction": "Reads configuration from a file ."}
{"id": 3504, "prediction": "Gets docker configuration string ."}
{"id": 3506, "prediction": "Gets the secret configuration ."}
{"id": 3508, "prediction": "Compare two versions ."}
{"id": 3510, "prediction": "Lookup a profile by name ."}
{"id": 3512, "prediction": "Read profiles from classpath ."}
{"id": 3514, "prediction": "Get the list of MetaInfos profiles"}
{"id": 3516, "prediction": "Returns the image pull policy ."}
{"id": 3518, "prediction": "Retrieves the replica count for the deployment ."}
{"id": 3520, "prediction": "Installs a template"}
{"id": 3522, "prediction": "Apply a namespace to the given entity ."}
{"id": 3524, "prediction": "Apply a project request to the project ."}
{"id": 3526, "prediction": "Called when an exception is thrown ."}
{"id": 3528, "prediction": "Merges the metadata ."}
{"id": 3530, "prediction": "Convert duration into seconds ."}
{"id": 3532, "prediction": "Scans the given patterns ."}
{"id": 3534, "prediction": "Checks if a service is in the service ."}
{"id": 3536, "prediction": "Gets the generator context ."}
{"id": 3538, "prediction": "Gets the enher context ."}
{"id": 3540, "prediction": "Gets the default icon ."}
{"id": 3542, "prediction": "Reads a Properties object from a URL ."}
{"id": 3544, "prediction": "Creates a list of service objects ."}
{"id": 3546, "prediction": "Gets raw config ."}
{"id": 3548, "prediction": "Extracts the watcher config ."}
{"id": 3550, "prediction": "Get the current build date ."}
{"id": 3552, "prediction": "Returns a map with the given name ."}
{"id": 3554, "prediction": "Add from builder ."}
{"id": 3556, "prediction": "Gets the image name ."}
{"id": 3558, "prediction": "Determines whether or not ."}
{"id": 3560, "prediction": "Get a boolean from the global properties ."}
{"id": 3562, "prediction": "Create internal node ."}
{"id": 3564, "prediction": "Convert a JSON string representation of a JSON string ."}
{"id": 3566, "prediction": "Creates a PayPal payment resource ."}
{"id": 3568, "prediction": "Performs HTTP POST request ."}
{"id": 3570, "prediction": "Collects data from a fragment ."}
{"id": 3572, "prediction": "Collect payment device data ."}
{"id": 3574, "prediction": "Checks if the given package is valid ."}
{"id": 3576, "prediction": "Parses a list of payment methods ."}
{"id": 3578, "prediction": "Gets the browser configuration for the browser ."}
{"id": 3580, "prediction": "Perform a HTTP POST request ."}
{"id": 3582, "prediction": "Starts a payment request ."}
{"id": 3841, "prediction": "Copies the given number of bytes from the given buffer to the given buffer ."}
{"id": 3843, "prediction": "Gets the Kafka uri ."}
{"id": 3845, "prediction": "Log a vector"}
{"id": 3847, "prediction": "max"}
{"id": 3849, "prediction": "Computes the minimum of two arrays ."}
{"id": 3851, "prediction": "Compute the expm1 function ."}
{"id": 3853, "prediction": "Prepare the bounds"}
{"id": 3855, "prediction": "Returns next batch set ."}
{"id": 3857, "prediction": "Build the allocation shape ."}
{"id": 3859, "prediction": "Reads the data from the stream ."}
{"id": 3861, "prediction": "Creates an ndarray from a pointer"}
{"id": 3863, "prediction": "Allocates a dummy workspace ."}
{"id": 3865, "prediction": "Returns true if the server is started ."}
{"id": 3867, "prediction": "Flush the queue ."}
{"id": 3869, "prediction": "Returns the device id for the given thread"}
{"id": 3871, "prediction": "Get the next device ."}
{"id": 3873, "prediction": "Calculates the ARCH type ."}
{"id": 3875, "prediction": "Start the application ."}
{"id": 3877, "prediction": "Intercept data type ."}
{"id": 3879, "prediction": "Process a message ."}
{"id": 3881, "prediction": "Creates a depth - 1 - 1 - 2D convolution function ."}
{"id": 3883, "prediction": "Returns the class for the given op ."}
{"id": 3885, "prediction": "Get the shape of the variable"}
{"id": 3887, "prediction": "Compress an array"}
{"id": 3889, "prediction": "Center the given shape"}
{"id": 3891, "prediction": "Pads the given ndarray to the given target shape"}
{"id": 3893, "prediction": "Broadcast an array to a vector"}
{"id": 3895, "prediction": "Calculates the gamma for the given precision ."}
{"id": 3897, "prediction": "Convert a BigDecimal to a BigInteger ."}
{"id": 3899, "prediction": "Returns the exponent of the given value ."}
{"id": 3901, "prediction": "Computes the power of the given number of factors ."}
{"id": 3903, "prediction": "Calculate the sin of a BigDecimal ."}
{"id": 3905, "prediction": "Calculates the cosine of the given value ."}
{"id": 3907, "prediction": "Returns the tanh value of a given number ."}
{"id": 3909, "prediction": "Calculates the absolute value of the given x ."}
{"id": 3911, "prediction": "This method is used to perform the broadestraction of a BigDecoder ."}
{"id": 3913, "prediction": "Scales a BigDecimal ."}
{"id": 3915, "prediction": "Put a function with the given id"}
{"id": 3917, "prediction": "Update an array for the given variable name"}
{"id": 3919, "prediction": "Associates an INDArray with the given INDArray"}
{"id": 3921, "prediction": "Add a property for the given function"}
{"id": 3923, "prediction": "Add arguments for a given function"}
{"id": 3925, "prediction": "Evaluates the input variables ."}
{"id": 3927, "prediction": "Creates an array with the given name"}
{"id": 3929, "prediction": "Remove an argument from the function ."}
{"id": 3931, "prediction": "Average pooling function ."}
{"id": 3933, "prediction": "Executes the given list of operators ."}
{"id": 3935, "prediction": "Execute a function ."}
{"id": 3937, "prediction": "Execute the backward operation ."}
{"id": 3939, "prediction": "Allocates memory allocated to memory ."}
{"id": 3941, "prediction": "Returns the descriptor for the given allocation mode ."}
{"id": 3943, "prediction": "Returns the number of operations defined by the given name ."}
{"id": 3945, "prediction": "Print the allocation statistics for the current thread ."}
{"id": 3947, "prediction": "Receive an INDArray"}
{"id": 3949, "prediction": "Performs a threshold decoder ."}
{"id": 3951, "prediction": "Invokes the shape information on the shape"}
{"id": 3953, "prediction": "Returns the negative log likelihood of the given labels ."}
{"id": 3955, "prediction": "Tries to send a TOEEEETE request to the current state ."}
{"id": 3957, "prediction": "Returns the current access state ."}
{"id": 3959, "prediction": "Called when a task completes ."}
{"id": 3961, "prediction": "Initialize host threads ."}
{"id": 3963, "prediction": "Synchronizes the host data to the given host ."}
{"id": 3965, "prediction": "Wait for the given allocation point ."}
{"id": 3967, "prediction": "Gets the properties for this function ."}
{"id": 3969, "prediction": "Computes the difference between two lists ."}
{"id": 3971, "prediction": "Imports a graph ."}
{"id": 3973, "prediction": "Load an array from a blob ."}
{"id": 3975, "prediction": "Copies the real vector to the given vector ."}
{"id": 3977, "prediction": "Computes the difference between two numbers ."}
{"id": 3979, "prediction": "Gets the rows of a matrix ."}
{"id": 3981, "prediction": "Puts a vector into the matrix ."}
{"id": 3983, "prediction": "Add this vector to another ."}
{"id": 3985, "prediction": "Add the elements of this vector to another ."}
{"id": 3987, "prediction": "Returns an array containing the imaginary dimension ."}
{"id": 3989, "prediction": "Computes the generalized eigenvalues of a matrix ."}
{"id": 3991, "prediction": "Copies the contents of two arrays ."}
{"id": 3993, "prediction": "This method is used to process a single message ."}
{"id": 3995, "prediction": "Performs a reduction on the given reduction ."}
{"id": 3997, "prediction": "Returns the constructor for the given class ."}
{"id": 3999, "prediction": "Gets an annotation from the given type ."}
{"id": 4001, "prediction": "Checks if the given class is present ."}
{"id": 4003, "prediction": "Loads an entity from the context ."}
{"id": 4005, "prediction": "Creates a proxy service instance ."}
{"id": 4007, "prediction": "Queries the keys in the database ."}
{"id": 4009, "prediction": "Performs a normal query ."}
{"id": 4011, "prediction": "Query count ."}
{"id": 4013, "prediction": "Loads all keys from the iterator ."}
{"id": 4015, "prediction": "Create a new key ."}
{"id": 4017, "prediction": "Convert raw data to a Key ."}
{"id": 4019, "prediction": "Gets the kind ."}
{"id": 4021, "prediction": "Checks if the given type is a super type ."}
{"id": 4023, "prediction": "Capture a type ."}
{"id": 4025, "prediction": "Gets the populator ."}
{"id": 4027, "prediction": "Checks if the given method is an annotation ."}
{"id": 4029, "prediction": "Gets the key metadata ."}
{"id": 4031, "prediction": "Execute the round ."}
{"id": 4033, "prediction": "Adds the discriminators for the given class ."}
{"id": 4035, "prediction": "Returns the type of the given collection ."}
{"id": 4037, "prediction": "Creates a forward path from the given path ."}
{"id": 4039, "prediction": "Returns the path as a string ."}
{"id": 4041, "prediction": "Put all updates in the given collection ."}
{"id": 4043, "prediction": "Cache the given buckets ."}
{"id": 4045, "prediction": "Gets the keys of a collection of buckets ."}
{"id": 4047, "prediction": "Sets the key ."}
{"id": 4049, "prediction": "Gets the parent raw parent ."}
{"id": 4051, "prediction": "Determines whether two types have the same type ."}
{"id": 4053, "prediction": "Returns the annotation for the given type ."}
{"id": 4055, "prediction": "Loads the specified key ."}
{"id": 4057, "prediction": "Translates the result into a Map ."}
{"id": 4059, "prediction": "Load an entity ."}
{"id": 4061, "prediction": "Returns the raw key ."}
{"id": 4063, "prediction": "Parses the given url string ."}
{"id": 4065, "prediction": "Creates a new transaction ."}
{"id": 4067, "prediction": "Returns true if the condition matches the given conditions ."}
{"id": 4069, "prediction": "Get the async datastore ."}
{"id": 4071, "prediction": "Allocate a key range ."}
{"id": 4073, "prediction": "Closes this object ."}
{"id": 4075, "prediction": "Creates a new Reflection instance ."}
{"id": 4077, "prediction": "Add a value to the map ."}
{"id": 4079, "prediction": "Generates the IF conditions for a given field ."}
{"id": 4081, "prediction": "Returns the container at the given path ."}
{"id": 4083, "prediction": "Unwraps an exception ."}
{"id": 4085, "prediction": "Gets the root translator ."}
{"id": 4087, "prediction": "Loads a property from the container ."}
{"id": 4089, "prediction": "Sets the value of a property ."}
{"id": 4091, "prediction": "Gets value ."}
{"id": 4093, "prediction": "Write content category ."}
{"id": 4095, "prediction": "Processes a snippet ."}
{"id": 3584, "prediction": "Adds a listener ."}
{"id": 3586, "prediction": "Request a Billing Agreement"}
{"id": 3588, "prediction": "Parses the PayPal account ."}
{"id": 3590, "prediction": "Remove a word from a dictionary ."}
{"id": 3592, "prediction": "Extracts the phonetic phrases from the given tokens ."}
{"id": 3594, "prediction": "Fetches a buffer from the given channel ."}
{"id": 3596, "prediction": "Joins a list of NAL units into a buffer ."}
{"id": 3598, "prediction": "Normalizes a fixed precision ."}
{"id": 3600, "prediction": "Reads the next marker from the buffer ."}
{"id": 3602, "prediction": "Modify a file ."}
{"id": 3604, "prediction": "Gets the duration of the edit box ."}
{"id": 3606, "prediction": "Convert a time value to a frame ."}
{"id": 3608, "prediction": "Calculates the edited time for a movie"}
{"id": 3610, "prediction": "Get the time of a movie"}
{"id": 3612, "prediction": "Formats the timecode for a trackcode"}
{"id": 3614, "prediction": "Set a value in a list ."}
{"id": 3616, "prediction": "Returns the size of the given component ."}
{"id": 3618, "prediction": "Reads the next byte ."}
{"id": 3620, "prediction": "Creates a WAV header ."}
{"id": 3622, "prediction": "Encode a symbol ."}
{"id": 3624, "prediction": "Splits and returns a list of edit events"}
{"id": 3626, "prediction": "Sets the big endian flag ."}
{"id": 3628, "prediction": "Encodes a video frame ."}
{"id": 3630, "prediction": "Calculates the length of the given long ."}
{"id": 3632, "prediction": "Reposition the file position ."}
{"id": 3634, "prediction": "Decide a byte array ."}
{"id": 3636, "prediction": "Returns the SampleFrequency for the given integer ."}
{"id": 3638, "prediction": "Starts a block ."}
{"id": 3640, "prediction": "Performs the multiplication of two blocks ."}
{"id": 3642, "prediction": "Rewind a long value ."}
{"id": 3644, "prediction": "Seeks to seek to the specified frame ."}
{"id": 3646, "prediction": "Returns the change ID for the given gain ."}
{"id": 3648, "prediction": "Convert an array to a byte array ."}
{"id": 3650, "prediction": "Converts a float buffer into a float buffer ."}
{"id": 3652, "prediction": "Interprets the input buffer into the output buffer ."}
{"id": 3654, "prediction": "Builds out the out of the box map ."}
{"id": 3656, "prediction": "Reads a ULBatch from the given byte buffer ."}
{"id": 3658, "prediction": "Calculates the MVD for the prediction"}
{"id": 3660, "prediction": "Encode an IDRID frame ."}
{"id": 3662, "prediction": "Gets the supported codecs ."}
{"id": 3664, "prediction": "Adds a reference to the lock ."}
{"id": 3666, "prediction": "Flushes all references to the cache ."}
{"id": 3668, "prediction": "Unpack a library ."}
{"id": 3670, "prediction": "Get the default layout for the given number of channels ."}
{"id": 3672, "prediction": "Creates a new media packet ."}
{"id": 3674, "prediction": "Get the default time base ."}
{"id": 3676, "prediction": "Play a video stream ."}
{"id": 3678, "prediction": "Creates a new VideoDescriptor for the given ID ."}
{"id": 3680, "prediction": "Registers a factory for the given protocol prefix ."}
{"id": 3682, "prediction": "Create a new MediaAudioResample"}
{"id": 3684, "prediction": "Gets the supported video pixel format ."}
{"id": 3686, "prediction": "Gets the supported audio formats ."}
{"id": 3688, "prediction": "Sets a flag ."}
{"id": 3690, "prediction": "Get the decoder for this stream ."}
{"id": 3692, "prediction": "Gets the list of formats ."}
{"id": 3694, "prediction": "Get the bit filter type ."}
{"id": 3696, "prediction": "Creates a new AudioFrame instance ."}
{"id": 3698, "prediction": "Validates the image ."}
{"id": 3700, "prediction": "Get the filter graph ."}
{"id": 3702, "prediction": "Parses the given string ."}
{"id": 3704, "prediction": "Get the operating system family ."}
{"id": 3706, "prediction": "Play a sound stream ."}
{"id": 3708, "prediction": "Set the loaded library ."}
{"id": 3710, "prediction": "Initializes search paths ."}
{"id": 3712, "prediction": "Record a screenshot of a screenshot ."}
{"id": 3714, "prediction": "Get a stream for the specified position ."}
{"id": 3716, "prediction": "Creates a set script transaction ."}
{"id": 3718, "prediction": "Generate a random seed ."}
{"id": 3720, "prediction": "Returns a list of transactions in the given address ."}
{"id": 3722, "prediction": "Retrieves a list of blocks from the range ."}
{"id": 3724, "prediction": "Send a transaction ."}
{"id": 3726, "prediction": "Compile a script ."}
{"id": 3728, "prediction": "Flush the buffer ."}
{"id": 3730, "prediction": "Read the last class info ."}
{"id": 3732, "prediction": "Sets the MMF data ."}
{"id": 3734, "prediction": "Resize the memory ."}
{"id": 3736, "prediction": "Writes a string in ascending order ."}
{"id": 3738, "prediction": "Creates a JSTConfiguration instance ."}
{"id": 3740, "prediction": "Calculate the size of an object ."}
{"id": 3742, "prediction": "Get an object input stream ."}
{"id": 3744, "prediction": "Get a copy of an object from a byte array"}
{"id": 3746, "prediction": "Register a cross - class mapping ."}
{"id": 3748, "prediction": "Write an integer to the stream ."}
{"id": 3750, "prediction": "Write an integer to the stream ."}
{"id": 3752, "prediction": "Writes a byte array to the stream ."}
{"id": 3754, "prediction": "Called when the object has been written ."}
{"id": 3756, "prediction": "Get the FSTClazzInfo for the given class ."}
{"id": 3758, "prediction": "Sets the string to the buffer ."}
{"id": 3760, "prediction": "Closes the changes tracking ."}
{"id": 3762, "prediction": "Register an object to be written ."}
{"id": 3764, "prediction": "Read an object from a byte array ."}
{"id": 3766, "prediction": "Read an int from the stream ."}
{"id": 3768, "prediction": "Enable thread pool ."}
{"id": 3770, "prediction": "Clean data embedded in Cassandra ."}
{"id": 3772, "prediction": "Prints the current thread dump information ."}
{"id": 3774, "prediction": "Returns an empty subscriber state ."}
{"id": 3776, "prediction": "Calculate the output shape"}
{"id": 3778, "prediction": "Computes the logical AND condition"}
{"id": 3780, "prediction": "Performs an OR operation on the given condition ."}
{"id": 3782, "prediction": "Returns the first index of the given condition ."}
{"id": 3784, "prediction": "Creates a FunctionProperties from a properties object ."}
{"id": 3786, "prediction": "Sets the exception ."}
{"id": 3788, "prediction": "Merge two coordinates ."}
{"id": 3790, "prediction": "Convert an nd4jmx4jmx4jx4j 4 ."}
{"id": 3792, "prediction": "Get the current device architecture ."}
{"id": 3794, "prediction": "Performs a pooling on the image ."}
{"id": 3796, "prediction": "Split a list of lists into a list of batches ."}
{"id": 3798, "prediction": "Sets the type of this operation ."}
{"id": 3800, "prediction": "Converts a collection of matrices into a flattened array ."}
{"id": 3802, "prediction": "Create a complex ndarray ."}
{"id": 3804, "prediction": "Creates a complex array with the given shape ."}
{"id": 3806, "prediction": "Subtract two complex numbers ."}
{"id": 3808, "prediction": "Returns the number of complex numbers ."}
{"id": 3810, "prediction": "Returns the absolute value of the complex number ."}
{"id": 3812, "prediction": "Gets the context ."}
{"id": 3814, "prediction": "Sample dataset ."}
{"id": 3816, "prediction": "Convert an exception to a string ."}
{"id": 3818, "prediction": "Convert an array of Strings into a String"}
{"id": 3820, "prediction": "Converts a string into a list of strings ."}
{"id": 3822, "prediction": "Splits a string into an array of strings ."}
{"id": 3824, "prediction": "Escapes a string ."}
{"id": 3826, "prediction": "Converts a string to camel case ."}
{"id": 3828, "prediction": "Gets stack trace ."}
{"id": 3830, "prediction": "Support the subscript operator ."}
{"id": 3832, "prediction": "Returns true if the device is on the device side ."}
{"id": 3834, "prediction": "Returns the shape information for the shape"}
{"id": 3836, "prediction": "Get the order of the ndarray"}
{"id": 3838, "prediction": "Converts an array of indices to an index ."}
{"id": 4097, "prediction": "Returns the bid bid with the given id ."}
{"id": 4099, "prediction": "Removes all bids from the given filter ."}
{"id": 4101, "prediction": "Read extensions ."}
{"id": 4103, "prediction": "Registers an extension reader ."}
{"id": 4105, "prediction": "Processes the SnippetRequest ."}
{"id": 4107, "prediction": "Updates the given object with the given update ."}
{"id": 4109, "prediction": "Returns the current name of the current JsonParser ."}
{"id": 4111, "prediction": "Start an array ."}
{"id": 4113, "prediction": "Write a boolean field ."}
{"id": 4115, "prediction": "Write a list of integers ."}
{"id": 4117, "prediction": "Writes the given list of enum messages ."}
{"id": 4119, "prediction": "Fixes the base URL for the target query ."}
{"id": 4121, "prediction": "Get the host name from the URL ."}
{"id": 4123, "prediction": "Loads a list of properties from storm configuration"}
{"id": 4125, "prediction": "Returns the protocol for the given URL ."}
{"id": 4127, "prediction": "Extract refresh url ."}
{"id": 4129, "prediction": "Filter the given metadata ."}
{"id": 4131, "prediction": "Remove field name ."}
{"id": 4133, "prediction": "Extract charset from content ."}
{"id": 4135, "prediction": "Checks if the content is sniffed ."}
{"id": 4137, "prediction": "Gets the first value of the given metadata ."}
{"id": 4139, "prediction": "Checks if the domain matches the given cookie name ."}
{"id": 4141, "prediction": "Get the robot rules from the cache ."}
{"id": 4143, "prediction": "Called when a tuple is acknowledged ."}
{"id": 4145, "prediction": "Filters the substitution string ."}
{"id": 4147, "prediction": "Process query elements ."}
{"id": 4149, "prediction": "Adds a new record format ."}
{"id": 4151, "prediction": "Checks if the max query should be triggered ."}
{"id": 4153, "prediction": "Appends a new node to the document ."}
{"id": 4155, "prediction": "Processes a processing instruction ."}
{"id": 4157, "prediction": "Append the content of a CDATA section ."}
{"id": 4159, "prediction": "start namespace mapping"}
{"id": 4161, "prediction": "Trims the specified text ."}
{"id": 4163, "prediction": "Create URL filters from storm conf file ."}
{"id": 4165, "prediction": "Resolve size and state ."}
{"id": 4167, "prediction": "Set the current angle ."}
{"id": 4169, "prediction": "Invalidate the drawer item ."}
{"id": 4171, "prediction": "Updates the angle ."}
{"id": 4173, "prediction": "Clamp the value to the given value ."}
{"id": 4175, "prediction": "Returns the byte array as a byte array ."}
{"id": 4177, "prediction": "Makes a string representation of an array of strings ."}
{"id": 4179, "prediction": "Create a new ArrayCharArray from a String array ."}
{"id": 4181, "prediction": "Get the time interval offset ."}
{"id": 4183, "prediction": "Show if this button is not visible ."}
{"id": 4185, "prediction": "Main entry point ."}
{"id": 4187, "prediction": "Creates a new unit name ."}
{"id": 4189, "prediction": "Returns true if the specified date is included ."}
{"id": 4191, "prediction": "Extend a date range ."}
{"id": 4193, "prediction": "Sets the start ."}
{"id": 4195, "prediction": "Sets the duration ."}
{"id": 4197, "prediction": "Add a map ."}
{"id": 4199, "prediction": "Gets the name of the NCD component ."}
{"id": 4201, "prediction": "Opens a file ."}
{"id": 4203, "prediction": "Synchronize the UI ."}
{"id": 4205, "prediction": "Register a watcher ."}
{"id": 4207, "prediction": "Sets the reference date ."}
{"id": 4209, "prediction": "Wrap a FeatureDescriptor"}
{"id": 4211, "prediction": "Find the feature type from the netcdffile ."}
{"id": 4213, "prediction": "Convert a catalog to HTML ."}
{"id": 4215, "prediction": "Gets the user header ."}
{"id": 4217, "prediction": "Adds all global services to the catalog ."}
{"id": 4219, "prediction": "Get content as string ."}
{"id": 4221, "prediction": "Gets the front page ."}
{"id": 4223, "prediction": "Extracts the geospatial coordinate from a group ."}
{"id": 4225, "prediction": "Returns true if two coordinates are equal ."}
{"id": 4227, "prediction": "Parse an attribute ."}
{"id": 4229, "prediction": "Convert two shorts to an int ."}
{"id": 4231, "prediction": "Utility method to get a date ."}
{"id": 4233, "prediction": "Checks if the given string is a valid Java object name ."}
{"id": 4235, "prediction": "Reads the data structure from a section ."}
{"id": 4237, "prediction": "Fills the non - variable variables in the map ."}
{"id": 4239, "prediction": "Creates a TimeStruct from a Calendar ."}
{"id": 4241, "prediction": "Adds a function ."}
{"id": 4243, "prediction": "Returns the BTF function associated with the given name ."}
{"id": 4245, "prediction": "Returns the level name of the grid ."}
{"id": 4247, "prediction": "Gets the level unit ."}
{"id": 4249, "prediction": "Checks if a grid coordinate is a vertical coordinate ."}
{"id": 4251, "prediction": "Creates a coordinate transformation ."}
{"id": 4253, "prediction": "Creates a projection for a grid transformation ."}
{"id": 4255, "prediction": "Saves the info table ."}
{"id": 4257, "prediction": "Write count ."}
{"id": 4259, "prediction": "Write bytes to disk ."}
{"id": 4261, "prediction": "Finish initialization of the grid ."}
{"id": 4263, "prediction": "Creates a GDS Grib2D ."}
{"id": 4265, "prediction": "Parse a text ."}
{"id": 4267, "prediction": "Reads a matrix from a grid ."}
{"id": 4269, "prediction": "Write an attribute ."}
{"id": 4271, "prediction": "Writes the operation ."}
{"id": 4273, "prediction": "Scans a log file ."}
{"id": 4275, "prediction": "Find grid record ."}
{"id": 4277, "prediction": "Unpack data ."}
{"id": 4279, "prediction": "Unpack data ."}
{"id": 4281, "prediction": "Print grid grids ."}
{"id": 4283, "prediction": "Constructs a CalendarDate from the given Calendar ."}
{"id": 4285, "prediction": "Creates a CalendarDate from the given milliseconds ."}
{"id": 4287, "prediction": "Parses a calendar ."}
{"id": 4289, "prediction": "Create a new AtomicVarAtom"}
{"id": 4291, "prediction": "Escapes a string ."}
{"id": 4293, "prediction": "Unwraps a file ."}
{"id": 4295, "prediction": "Compute the effective shape"}
{"id": 4297, "prediction": "Returns the scaled unit of this unit ."}
{"id": 4299, "prediction": "Returns the scaled unit of this unit ."}
{"id": 4301, "prediction": "Convert this unit to another unit ."}
{"id": 4303, "prediction": "Convert a monetary unit to another ."}
{"id": 4305, "prediction": "Reads the data from the given section ."}
{"id": 4307, "prediction": "Flattens a set of points to a list of stations ."}
{"id": 4309, "prediction": "Get gate size ."}
{"id": 4311, "prediction": "Get the number of gateways ."}
{"id": 4313, "prediction": "Returns the preferred size of the specified component ."}
{"id": 4315, "prediction": "Generate a proxy resolver"}
{"id": 4317, "prediction": "Creates a new CalendarUnit with the specified calendar ."}
{"id": 4319, "prediction": "Calculates the offset from a reference date ."}
{"id": 4321, "prediction": "Returns the quantity of this factor ."}
{"id": 4323, "prediction": "Reads a map of stanza names from a file ."}
{"id": 4325, "prediction": "Read an array of integers from the given layout ."}
{"id": 4327, "prediction": "Calculate the elevation of the given angle ."}
{"id": 4329, "prediction": "Calculates the degrees of the given longitude ."}
{"id": 4331, "prediction": "Calculate the nyquist ."}
{"id": 4333, "prediction": "Set debug flags ."}
{"id": 4335, "prediction": "Reads the data from the given variables ."}
{"id": 4337, "prediction": "Returns the LatLon bounding box for this projection ."}
{"id": 4339, "prediction": "Transforms a string to a tab buffer ."}
{"id": 4341, "prediction": "Pad an integer to a string ."}
{"id": 4343, "prediction": "Format a byte size ."}
{"id": 4345, "prediction": "Prints the difference between decimal places ."}
{"id": 4347, "prediction": "Finalize the slice ."}
{"id": 4349, "prediction": "Compose two slices ."}
{"id": 4351, "prediction": "Dumps bytes into a byte buffer ."}
{"id": 3840, "prediction": "Allocate the data buffer ."}
{"id": 3842, "prediction": "Gets a constant buffer ."}
{"id": 3844, "prediction": "Computes the power of ndarray"}
{"id": 3846, "prediction": "max"}
{"id": 3848, "prediction": "Returns the minimum value of the ndarray ."}
{"id": 3850, "prediction": "Stabilizes the given ndarray"}
{"id": 3852, "prediction": "Returns a log1 p1 ."}
{"id": 3854, "prediction": "Adjusts the scheme to use for a scheme"}
{"id": 3856, "prediction": "Sets the Sqq qr q ."}
{"id": 3858, "prediction": "Checks if a name exists in a directory ."}
{"id": 3860, "prediction": "Tries to sweep events ."}
{"id": 3862, "prediction": "Creates a ndarray from a file"}
{"id": 3864, "prediction": "Attaches an object to this object ."}
{"id": 3866, "prediction": "Executes the given operator ."}
{"id": 3868, "prediction": "Gets the input stream ."}
{"id": 3870, "prediction": "Attaches a thread to the device ."}
{"id": 3872, "prediction": "Returns the name of the operating system ."}
{"id": 3874, "prediction": "Publish an INDArray"}
{"id": 3876, "prediction": "Creates a new DataBuffer ."}
{"id": 3878, "prediction": "Add two complex numbers ."}
{"id": 3880, "prediction": "Average pooling function ."}
{"id": 3882, "prediction": "Resets the state ."}
{"id": 3884, "prediction": "Store an array of ndarray"}
{"id": 3886, "prediction": "Evaluates the SDVariable ."}
{"id": 3888, "prediction": "Convert a complex array to an array"}
{"id": 3890, "prediction": "Truncate the ndarray"}
{"id": 3892, "prediction": "Returns the maximum value of an array ."}
{"id": 3894, "prediction": "Processes a single row ."}
{"id": 3896, "prediction": "Returns the square root of the given x ."}
{"id": 3898, "prediction": "Computes the root of the root ."}
{"id": 3900, "prediction": "Returns the exponent of the given precision ."}
{"id": 3902, "prediction": "Round the number of rounding down to the specified number ."}
{"id": 3904, "prediction": "Calculates the tan of a given number ."}
{"id": 3906, "prediction": "Calculate the sin of a BigDecimal ."}
{"id": 3908, "prediction": "Calculates the angle of the given x ."}
{"id": 3910, "prediction": "Computes the Gamma ."}
{"id": 3912, "prediction": "Scales a BigDecimal ."}
{"id": 3914, "prediction": "Convert an error to an error ."}
{"id": 3916, "prediction": "Gets the input arguments for the given function ."}
{"id": 3918, "prediction": "Put a shape for a variable"}
{"id": 3920, "prediction": "Gets the property for the given function instance ."}
{"id": 3922, "prediction": "Adds a function to the outgoing functions ."}
{"id": 3924, "prediction": "Returns true if the input function has no arguments"}
{"id": 3926, "prediction": "Creates a new variable with the specified shape ."}
{"id": 3928, "prediction": "Create a zeros array with the given name"}
{"id": 3930, "prediction": "Set the gradient for the given variable"}
{"id": 3932, "prediction": "Create a gruell variable"}
{"id": 3934, "prediction": "Creates a WhileStatement for a loop ."}
{"id": 3936, "prediction": "Executes the given diff function ."}
{"id": 3938, "prediction": "Adds a variable to the place holder ."}
{"id": 3940, "prediction": "Returns the length for the given data type ."}
{"id": 3942, "prediction": "Gets the data type from the context ."}
{"id": 3944, "prediction": "Destroy all workspaces for the current thread ."}
{"id": 3946, "prediction": "Truncate a matrix"}
{"id": 3948, "prediction": "Applies the accumulation function to the accumulation ."}
{"id": 3950, "prediction": "Gets the node name ."}
{"id": 3952, "prediction": "Asserts that the current workspace is active ."}
{"id": 3954, "prediction": "Request a ticker to the queue ."}
{"id": 3956, "prediction": "Releases the current state ."}
{"id": 3958, "prediction": "Build environment ."}
{"id": 3960, "prediction": "Initializes the input dataset"}
{"id": 3962, "prediction": "Returns the pointer pointer of the device ."}
{"id": 3964, "prediction": "Applies an updater to the view"}
{"id": 3966, "prediction": "Creates an array index from an index ."}
{"id": 3968, "prediction": "Checks if there is any placeholders for this command ."}
{"id": 3970, "prediction": "Format the given INDArray"}
{"id": 3972, "prediction": "Convert the given complex NDArray to a blob"}
{"id": 3974, "prediction": "Saves the given array with the given ID ."}
{"id": 3976, "prediction": "Copies the imag matrix to the given matrix ."}
{"id": 3978, "prediction": "Assigns this matrix to another ."}
{"id": 3980, "prediction": "Puts a row into the matrix ."}
{"id": 3982, "prediction": "Subtract the elements of this vector ."}
{"id": 3984, "prediction": "Subtract the result of another vector ."}
{"id": 3986, "prediction": "Assigns the given value to this matrix ."}
{"id": 3988, "prediction": "Computes the eigenvalues of a matrix ."}
{"id": 3990, "prediction": "Returns the maximum value of the given complex array ."}
{"id": 3992, "prediction": "Scales a scalar vector ."}
{"id": 3994, "prediction": "Returns the number of non - zero counts"}
{"id": 3996, "prediction": "Get the no - arg constructor"}
{"id": 3998, "prediction": "Invokes the given method handle with the given parameters ."}
{"id": 4000, "prediction": "Returns the declared annotation for the given class ."}
{"id": 4002, "prediction": "Creates a new proxy instance ."}
{"id": 4004, "prediction": "Save entity ."}
{"id": 4006, "prediction": "Gets the metadata for the given kind ."}
{"id": 4008, "prediction": "Performs a hybrid query ."}
{"id": 4010, "prediction": "Queries a projection query ."}
{"id": 4012, "prediction": "Partition the given Iterator ."}
{"id": 4014, "prediction": "Creates a formatted message ."}
{"id": 4016, "prediction": "Compares two objects ."}
{"id": 4018, "prediction": "Gets the key ."}
{"id": 4020, "prediction": "Returns true if the type parameter is missing ."}
{"id": 4022, "prediction": "Returns the exact types of the given type ."}
{"id": 4024, "prediction": "Returns a translator for the given type ."}
{"id": 4026, "prediction": "Checks if the given class is annotated ."}
{"id": 4028, "prediction": "Returns a list of properties for a given class ."}
{"id": 4030, "prediction": "Gets the value associated with the given key ."}
{"id": 4032, "prediction": "Fetches all pending pending requests ."}
{"id": 4034, "prediction": "Register a subclass translator ."}
{"id": 4036, "prediction": "Get the map key type ."}
{"id": 4038, "prediction": "Returns the final path ."}
{"id": 4040, "prediction": "Returns the depth of this path ."}
{"id": 4042, "prediction": "Adds keys to the cache ."}
{"id": 4044, "prediction": "Gets all values from the cache ."}
{"id": 4046, "prediction": "Find the key fields for the given class ."}
{"id": 4048, "prediction": "Sets the id of a property ."}
{"id": 4050, "prediction": "Register a subclass ."}
{"id": 4052, "prediction": "Transforms the owner of the given class ."}
{"id": 4054, "prediction": "Adds all values to this session ."}
{"id": 4056, "prediction": "Executes the next round ."}
{"id": 4058, "prediction": "Fetches the keys from the given set ."}
{"id": 4060, "prediction": "Creates a raw key for a given ID ."}
{"id": 4062, "prediction": "Gets the id value for the given key ."}
{"id": 4064, "prediction": "Creates a transactional transaction ."}
{"id": 4066, "prediction": "Performs a transactional transaction ."}
{"id": 4068, "prediction": "Returns an object for the transaction ."}
{"id": 4070, "prediction": "Gets the metadata for the given object ."}
{"id": 4072, "prediction": "Opens a new object ."}
{"id": 4074, "prediction": "Homogenize the list of indexes in the list ."}
{"id": 4076, "prediction": "Returns the object associated with the given key ."}
{"id": 4078, "prediction": "Returns true if the future is completed ."}
{"id": 4080, "prediction": "Called by the engine ."}
{"id": 4082, "prediction": "Get a Stat for the given kind ."}
{"id": 4084, "prediction": "Returns a translator for the given type ."}
{"id": 4086, "prediction": "Create a new translator ."}
{"id": 4088, "prediction": "Retrieves the value from the container ."}
{"id": 4090, "prediction": "Saves the property in the database ."}
{"id": 4092, "prediction": "Write extensions ."}
{"id": 4094, "prediction": "Write content categories ."}
{"id": 4353, "prediction": "Gets the type of the given name ."}
{"id": 4355, "prediction": "Decode a variable length into a vector ."}
{"id": 4357, "prediction": "Extract a list of URLs from a URL ."}
{"id": 4359, "prediction": "Filters meta tags ."}
{"id": 4361, "prediction": "Adds all attributes to the list ."}
{"id": 4363, "prediction": "Removes an attribute from the list ."}
{"id": 4365, "prediction": "Add an ActionListener to this ActionListener ."}
{"id": 4367, "prediction": "Retrieves the date from the given text ."}
{"id": 4369, "prediction": "Gets the date ."}
{"id": 4371, "prediction": "Calculate the value of the time unit ."}
{"id": 4373, "prediction": "Get the grid spacing ."}
{"id": 4375, "prediction": "Add a coordinate axis ."}
{"id": 4377, "prediction": "Adds the GDS parameters to the GDS ."}
{"id": 4379, "prediction": "Creates a new LatL coordinate ."}
{"id": 4381, "prediction": "Creates a projection projection ."}
{"id": 4383, "prediction": "Sets the x y coordinate of a coordinate ."}
{"id": 4385, "prediction": "Read a dataset scan ."}
{"id": 4387, "prediction": "Gets the level type 1 ."}
{"id": 4389, "prediction": "Write a byte array to the stream ."}
{"id": 4391, "prediction": "Returns the coordinate name of a coordinate type ."}
{"id": 4393, "prediction": "Builds the response ."}
{"id": 4395, "prediction": "Splits a level of levels into a list of levels ."}
{"id": 4397, "prediction": "Creates new variables ."}
{"id": 4399, "prediction": "Removes bits from the given bit mask ."}
{"id": 4401, "prediction": "Wrap the given ncdfcdfs ."}
{"id": 4403, "prediction": "Clear all coordinate systems ."}
{"id": 4405, "prediction": "Finds a coordinate axis with the given name ."}
{"id": 4407, "prediction": "Find a coordinate transformation by name ."}
{"id": 4409, "prediction": "Sets the values of a variable ."}
{"id": 4411, "prediction": "Create a new array with the given values ."}
{"id": 4413, "prediction": "Gets an existing file ."}
{"id": 4415, "prediction": "Recursively discards the coordinates ."}
{"id": 4417, "prediction": "Adds a document to the document ."}
{"id": 4419, "prediction": "Get the maximum bytes from the start of the segment ."}
{"id": 4421, "prediction": "Add a dataset ."}
{"id": 4423, "prediction": "Build the convention attribute for the given converters ."}
{"id": 4425, "prediction": "Recursively find the coordinate axes ."}
{"id": 4427, "prediction": "Make all coordinate systems ."}
{"id": 4429, "prediction": "Checks if a variable is a coordinate axis ."}
{"id": 4431, "prediction": "Sets the sub - dataset ."}
{"id": 4433, "prediction": "Recursive method for marking a dataset"}
{"id": 4435, "prediction": "Initialize the TDS server ."}
{"id": 4437, "prediction": "Adds a prefix to the registry ."}
{"id": 4439, "prediction": "Compares two boolean values ."}
{"id": 4441, "prediction": "Pass all reserved attributes in the map ."}
{"id": 4443, "prediction": "Returns true if there are no more elements in the queue ."}
{"id": 4445, "prediction": "Registers a new DSP class ."}
{"id": 4447, "prediction": "Unregister a DSP class ."}
{"id": 4449, "prediction": "Calculate the time interval for the time interval"}
{"id": 4451, "prediction": "Returns the VertCoordType for the given code ."}
{"id": 4453, "prediction": "Sorts the DapNode ."}
{"id": 4455, "prediction": "Find an attribute with the given name ."}
{"id": 4457, "prediction": "Returns the name of the variable with the given attribute value ."}
{"id": 4459, "prediction": "Finds a nested structure from a structure"}
{"id": 4461, "prediction": "Gets the value of a global attribute ."}
{"id": 4463, "prediction": "Gets the variable name from the given dataset ."}
{"id": 4465, "prediction": "Calculate the connect to a long value"}
{"id": 4467, "prediction": "Creates a section of the section axis ."}
{"id": 4469, "prediction": "Returns the name of this class ."}
{"id": 4471, "prediction": "Returns the match for the given path ."}
{"id": 4473, "prediction": "Finds the index of the specified byte array ."}
{"id": 4475, "prediction": "Report the cache cache ."}
{"id": 4477, "prediction": "Stop the background loading of the background loading"}
{"id": 4479, "prediction": "Creates an instance of the HTTP method ."}
{"id": 4481, "prediction": "Returns the next count ."}
{"id": 4483, "prediction": "Get a file system provider ."}
{"id": 4485, "prediction": "Returns the index of the given element ."}
{"id": 4487, "prediction": "Calculates the cloud height for the specified height ."}
{"id": 4489, "prediction": "Sets the number of colors ."}
{"id": 4491, "prediction": "Converts a URI to an AuthScope ."}
{"id": 4493, "prediction": "Returns true if this factor is the same ."}
{"id": 4495, "prediction": "Returns the index of the first occurrence of the given constant ."}
{"id": 4497, "prediction": "Read metadata content ."}
{"id": 4499, "prediction": "Validate metadata ."}
{"id": 4501, "prediction": "Read a dataset source element ."}
{"id": 4503, "prediction": "Read a dataset filter element ."}
{"id": 4505, "prediction": "Create the XML generation element ."}
{"id": 4507, "prediction": "Create a datanode element ."}
{"id": 4509, "prediction": "Create an element element ."}
{"id": 4511, "prediction": "Constructs a menu ."}
{"id": 4513, "prediction": "Adds the parameters to the table ."}
{"id": 4515, "prediction": "Gets the gempak parameter ."}
{"id": 4517, "prediction": "Read bytes from InputStream ."}
{"id": 4519, "prediction": "Sets the information about the station ."}
{"id": 4521, "prediction": "Show the format information ."}
{"id": 4523, "prediction": "Sets the network file ."}
{"id": 4525, "prediction": "Parses the name of a name ."}
{"id": 4527, "prediction": "Get the network length of a variable"}
{"id": 4529, "prediction": "Constructs a list of dimensions from a given darray ."}
{"id": 4531, "prediction": "Read data from server ."}
{"id": 4533, "prediction": "Get an image by name"}
{"id": 4535, "prediction": "Read data filled with fill value ."}
{"id": 4537, "prediction": "Read data from a grid ."}
{"id": 4539, "prediction": "Converts a byte array to a char array ."}
{"id": 4541, "prediction": "Converts a byte array to a char array ."}
{"id": 4543, "prediction": "Extracts a section structure from a section ."}
{"id": 4545, "prediction": "Retrieve a Structure object from a member ."}
{"id": 4547, "prediction": "Compute the structure of a member ."}
{"id": 4549, "prediction": "Creates a new CrawlableDatatableDataset ."}
{"id": 4551, "prediction": "Add an explicit dataset ."}
{"id": 4553, "prediction": "Finish the network ."}
{"id": 4555, "prediction": "Retrieves the next dataset for this aggregation ."}
{"id": 4557, "prediction": "Put a dataset control"}
{"id": 4559, "prediction": "Returns the upper bounding upper bounding box ."}
{"id": 4561, "prediction": "Validate the configuration ."}
{"id": 4563, "prediction": "Adds all data points to a feature point ."}
{"id": 4565, "prediction": "Evaluates the clauses of the given object ."}
{"id": 4567, "prediction": "Performs a fix on the ODF file ."}
{"id": 4569, "prediction": "Checks if the given dimension has already been set ."}
{"id": 4571, "prediction": "Reads the content of the Xlink ."}
{"id": 4573, "prediction": "Set the projection ."}
{"id": 4575, "prediction": "Invalidates the layout ."}
{"id": 4577, "prediction": "Returns the minimum size of the container ."}
{"id": 4579, "prediction": "Determines if the given coordinate system is valid ."}
{"id": 4581, "prediction": "Opens a URL connection ."}
{"id": 4583, "prediction": "Converts the given coordinate to Earth ."}
{"id": 4585, "prediction": "Converts a scan geometry to a sweep axis ."}
{"id": 4587, "prediction": "Sets the coordinates of a coordinate ."}
{"id": 4589, "prediction": "Rewrite a point feature file ."}
{"id": 4591, "prediction": "Returns the full name of the full path ."}
{"id": 4593, "prediction": "Get access by service type"}
{"id": 4595, "prediction": "Gets the parent catalog ."}
{"id": 4597, "prediction": "Find service by name ."}
{"id": 4599, "prediction": "Find all catalog refs in the given dataset ."}
{"id": 4601, "prediction": "Add a single element to a vector ."}
{"id": 4603, "prediction": "Compute the rho of the given latitude ."}
{"id": 4605, "prediction": "Creates a Structure object from the specified parameters ."}
{"id": 4607, "prediction": "Creates a param parameter ."}
{"id": 4609, "prediction": "Gets the size of the stn variable ."}
{"id": 4611, "prediction": "Gets the symbol for the given state ."}
{"id": 4613, "prediction": "Prints the symbols for a rule ."}
{"id": 4615, "prediction": "Read error message ."}
{"id": 4617, "prediction": "Reads the header ."}
{"id": 4619, "prediction": "Read a table from a file ."}
{"id": 4621, "prediction": "Get the stn file for the given location ."}
{"id": 4623, "prediction": "Returns the beginning of the node ."}
{"id": 4625, "prediction": "Creates a collection of runtime collections ."}
{"id": 4627, "prediction": "Returns the data type for the given format ."}
{"id": 4629, "prediction": "clean up unit tests"}
{"id": 4631, "prediction": "Checks if unit is unitless ."}
{"id": 4633, "prediction": "Returns the variable id for a given note ."}
{"id": 4635, "prediction": "Finds a DodsVVVV ."}
{"id": 4637, "prediction": "Finds a child by index ."}
{"id": 4639, "prediction": "Get the dimension of the dimension"}
{"id": 4641, "prediction": "Gets the unit attribute ."}
{"id": 4643, "prediction": "Returns a new slice of the specified range ."}
{"id": 4645, "prediction": "Reads a range of ranges ."}
{"id": 4647, "prediction": "Reads the data from the proxy ."}
{"id": 4649, "prediction": "Write a CDL document ."}
{"id": 4651, "prediction": "Sets the data type ."}
{"id": 4653, "prediction": "Reset the shape"}
{"id": 4655, "prediction": "Resets the dimensions of this variable ."}
{"id": 4657, "prediction": "Sets the cached data ."}
{"id": 4659, "prediction": "Set the bounding box"}
{"id": 4661, "prediction": "Get all datasets ."}
{"id": 4663, "prediction": "Opens a CDDF dataset ."}
{"id": 4665, "prediction": "Recursively builds the sequence types for a given variable ."}
{"id": 4667, "prediction": "Find the matching enum for a given node ."}
{"id": 4669, "prediction": "Scans the buffered file ."}
{"id": 4671, "prediction": "Handle a POST request ."}
{"id": 4673, "prediction": "Returns true if the map should be changed ."}
{"id": 4675, "prediction": "Convert a point to a point ."}
{"id": 4677, "prediction": "Zoom ."}
{"id": 4679, "prediction": "Adds a listener to the list of listeners ."}
{"id": 4681, "prediction": "Send event ."}
{"id": 4683, "prediction": "Prints a command to a file ."}
{"id": 4685, "prediction": "Print a variable as a String"}
{"id": 4687, "prediction": "Prints a StructureData structure"}
{"id": 4689, "prediction": "Print an array ."}
{"id": 4691, "prediction": "Read attribute ."}
{"id": 4693, "prediction": "Main entry point ."}
{"id": 4695, "prediction": "Returns true if the given grid is positive ."}
{"id": 4697, "prediction": "Creates a label for the given quantity ."}
{"id": 4699, "prediction": "Read n bits from the given number of bits ."}
{"id": 4701, "prediction": "Open a connection ."}
{"id": 4703, "prediction": "Gets the DDS DDS from the given CE ."}
{"id": 4705, "prediction": "Convert a point to a LatLng ."}
{"id": 4707, "prediction": "Converts a RangeRange to a DateRange ."}
{"id": 4709, "prediction": "Sets the information about the spacecraft information ."}
{"id": 4711, "prediction": "Read root element ."}
{"id": 4713, "prediction": "Extracts a string from a string ."}
{"id": 4715, "prediction": "Unescape URL query ."}
{"id": 4717, "prediction": "Helper method to encode a string ."}
{"id": 4719, "prediction": "Swaps a short from a byte array ."}
{"id": 4721, "prediction": "Swaps the double value at the specified offset ."}
{"id": 4723, "prediction": "Swap a double ."}
{"id": 4725, "prediction": "Converts an int to a byte array ."}
{"id": 4727, "prediction": "Returns a subset of this transformation ."}
{"id": 4729, "prediction": "Calculates the c ."}
{"id": 4731, "prediction": "Write features ."}
{"id": 4733, "prediction": "Adds the dimensions to the network ."}
{"id": 4735, "prediction": "Find the coordinate transformation for the given coordinate type ."}
{"id": 4737, "prediction": "Close disk cache ."}
{"id": 4739, "prediction": "Returns the file or null if not found ."}
{"id": 4741, "prediction": "Deletes all files in the cache ."}
{"id": 4743, "prediction": "Calculates the bearing between two points ."}
{"id": 4745, "prediction": "Searches for a point in a point ."}
{"id": 4747, "prediction": "Searches for a PointLng ."}
{"id": 4749, "prediction": "Load a picture ."}
{"id": 4751, "prediction": "Stops the image loading"}
{"id": 4753, "prediction": "Get the size of the image"}
{"id": 4755, "prediction": "Returns the standard URI of the catalog ."}
{"id": 4757, "prediction": "Transfer data from a list of proto messages"}
{"id": 4759, "prediction": "Compares two DataDescriptors ."}
{"id": 4761, "prediction": "Loads the data ."}
{"id": 4763, "prediction": "Get a double by name ."}
{"id": 4765, "prediction": "Get a boolean field by name ."}
{"id": 4767, "prediction": "Returns an array of field names ."}
{"id": 4769, "prediction": "Gets attributes ."}
{"id": 4771, "prediction": "Remove an attribute ."}
{"id": 4773, "prediction": "Returns the parent of this node ."}
{"id": 4775, "prediction": "Returns the path of the container ."}
{"id": 4777, "prediction": "Returns the fully qualified name of this node ."}
{"id": 4779, "prediction": "Build the DAP data ."}
{"id": 4781, "prediction": "Gets a list of bean ."}
{"id": 4783, "prediction": "Read data from a file ."}
{"id": 4785, "prediction": "Prints a compound instance ."}
{"id": 4787, "prediction": "Write the element to a file ."}
{"id": 4789, "prediction": "Write an element to the writer ."}
{"id": 4791, "prediction": "Creates a coordinate transformation from an attribute ."}
{"id": 4793, "prediction": "Get a base unit ."}
{"id": 4795, "prediction": "Factory method for unitDBDump ."}
{"id": 4797, "prediction": "Get the singleton instance ."}
{"id": 4799, "prediction": "Finds the closest point in the target coordinate ."}
{"id": 4801, "prediction": "Opens a feature dataset ."}
{"id": 4803, "prediction": "Concatenates a NetDF dataset ."}
{"id": 4805, "prediction": "Creates the URI for the given parts ."}
{"id": 4807, "prediction": "Normalizes the given units ."}
{"id": 4809, "prediction": "Finish the catalog ."}
{"id": 4811, "prediction": "Adds an element to the map ."}
{"id": 4813, "prediction": "Print XML attributes ."}
{"id": 4815, "prediction": "Checks if the given attribute is a special case ."}
{"id": 4817, "prediction": "Checks if a file is a valid file ."}
{"id": 4819, "prediction": "Set the attributes for the navigation block ."}
{"id": 4821, "prediction": "Sets the attribute attributes for the given type ."}
{"id": 4823, "prediction": "Find the coordinate name by the given type ."}
{"id": 4825, "prediction": "Finds a coordinate axis by its type ."}
{"id": 4827, "prediction": "Finds the best coordinate system ."}
{"id": 4829, "prediction": "Gets a variable by name ."}
{"id": 4831, "prediction": "Reads a marker ."}
{"id": 4833, "prediction": "Throw a fatal error ."}
{"id": 4835, "prediction": "Example of testing"}
{"id": 4837, "prediction": "Get the list of parameters ."}
{"id": 4839, "prediction": "Set the selected station ."}
{"id": 4841, "prediction": "Deserialize this object ."}
{"id": 4843, "prediction": "Add a unit to this unit ."}
{"id": 4845, "prediction": "Adds an alias ."}
{"id": 4847, "prediction": "Add a unit by name ."}
{"id": 4849, "prediction": "Adds a unit to the map ."}
{"id": 4851, "prediction": "Finds a GDR record by its position ."}
{"id": 4853, "prediction": "Serialize a dataset ."}
{"id": 4855, "prediction": "Creates a copy of this projection ."}
{"id": 4857, "prediction": "Open a feature dataset ."}
{"id": 4859, "prediction": "Concatenates a netdfdf dataset ."}
{"id": 4861, "prediction": "Adds a new partition to this variable ."}
{"id": 4863, "prediction": "Returns an instance of RegExpression that matches the specified pattern ."}
{"id": 4096, "prediction": "Returns an iterator over all bids ."}
{"id": 4098, "prediction": "Updates all bids in the given response ."}
{"id": 4100, "prediction": "Returns an iterable that iterates over the specified filter ."}
{"id": 4102, "prediction": "Returns true if the token is null ."}
{"id": 4104, "prediction": "Register a new field writer ."}
{"id": 4106, "prediction": "Extracts the fields from the criteria ."}
{"id": 4108, "prediction": "Returns a list of objects that match the given predicate ."}
{"id": 4110, "prediction": "Start an object ."}
{"id": 4112, "prediction": "Reads the next token ."}
{"id": 4114, "prediction": "Write a list of strings ."}
{"id": 4116, "prediction": "Write long fields ."}
{"id": 4118, "prediction": "Resolve a URL from a base URL ."}
{"id": 4120, "prediction": "Get host segments from URL ."}
{"id": 4122, "prediction": "Gets the full URL from the given URL ."}
{"id": 4124, "prediction": "Extracts the configuration element from a map ."}
{"id": 4126, "prediction": "Generates a byte array for the WARC content ."}
{"id": 4128, "prediction": "Returns the metadata for the target URL ."}
{"id": 4130, "prediction": "Add a scheduled URL ."}
{"id": 4132, "prediction": "Extracts the charset from a byte array ."}
{"id": 4134, "prediction": "Extract charset from buffer ."}
{"id": 4136, "prediction": "Sets the value for a given key ."}
{"id": 4138, "prediction": "Converts a list of cookies to a list of cookies ."}
{"id": 4140, "prediction": "Gets the cache key ."}
{"id": 4142, "prediction": "Extract meta tags from a document ."}
{"id": 4144, "prediction": "Checks whether the given URL matches the given metadata ."}
{"id": 4146, "prediction": "Reads the rules from a file ."}
{"id": 4148, "prediction": "Loads navigation filters from storm conf ."}
{"id": 4150, "prediction": "Tries to throttle queries ."}
{"id": 4152, "prediction": "Creates a ParseFilter from storm configuration ."}
{"id": 4154, "prediction": "Ignore whitespace ."}
{"id": 4156, "prediction": "Append a comment ."}
{"id": 4158, "prediction": "Start the DTD document ."}
{"id": 4160, "prediction": "Gets the value for the given URL ."}
{"id": 4162, "prediction": "Checks the given status interval ."}
{"id": 4164, "prediction": "Set the wheel count ."}
{"id": 4166, "prediction": "Sets the drawable to be drawn ."}
{"id": 4168, "prediction": "Updates the currently selected position ."}
{"id": 4170, "prediction": "Converts a wheel position to a relative position ."}
{"id": 4172, "prediction": "Get the color color from the map ."}
{"id": 4174, "prediction": "Writes the coverage data ."}
{"id": 4176, "prediction": "Sets a string to a char array ."}
{"id": 4178, "prediction": "Creates a new ArrayChar from a String ."}
{"id": 4180, "prediction": "Create a char array from a String array ."}
{"id": 4182, "prediction": "Show the window ."}
{"id": 4184, "prediction": "Calculates the size of a grid"}
{"id": 4186, "prediction": "Creates a new unit name ."}
{"id": 4188, "prediction": "Makes a plural form ."}
{"id": 4190, "prediction": "Returns the intersection between two dates ."}
{"id": 4192, "prediction": "Extend a new date ."}
{"id": 4194, "prediction": "Sets the end date ."}
{"id": 4196, "prediction": "Calculates the duration of the range ."}
{"id": 4198, "prediction": "Prints an error message ."}
{"id": 4200, "prediction": "Convert the parameters to a string ."}
{"id": 4202, "prediction": "Compute the bounds for the given LatL bounds ."}
{"id": 4204, "prediction": "Compute the chunking chunking ."}
{"id": 4206, "prediction": "Process events ."}
{"id": 4208, "prediction": "Open a feature dataset ."}
{"id": 4210, "prediction": "Checks if the given feature type is ok ."}
{"id": 4212, "prediction": "Write a catalog ."}
{"id": 4214, "prediction": "Get the user s CSS ."}
{"id": 4216, "prediction": "Create a dynamic catalog for the given path ."}
{"id": 4218, "prediction": "Initializes the global session ."}
{"id": 4220, "prediction": "Perform a HTTP DELETE request ."}
{"id": 4222, "prediction": "Create a catalog from the given path"}
{"id": 4224, "prediction": "Get a single Dataset by name"}
{"id": 4226, "prediction": "Creates a new unit ID ."}
{"id": 4228, "prediction": "Reads the top level from the file ."}
{"id": 4230, "prediction": "Convert a byte array to an integer ."}
{"id": 4232, "prediction": "Make sure that the given name is valid ."}
{"id": 4234, "prediction": "Open the writing file ."}
{"id": 4236, "prediction": "Reads data structure from a section ."}
{"id": 4238, "prediction": "Makes a time representation of a data point ."}
{"id": 4240, "prediction": "Checks if the given string is a time template"}
{"id": 4242, "prediction": "Get a boolean function ."}
{"id": 4244, "prediction": "Loads a new server side function ."}
{"id": 4246, "prediction": "Get the level description of the grid ."}
{"id": 4248, "prediction": "Returns the projection type of the grid ."}
{"id": 4250, "prediction": "Checks if the grid is a layer ."}
{"id": 4252, "prediction": "Create a dummy transformation variable for a coordinate matrix ."}
{"id": 4254, "prediction": "Main entry point ."}
{"id": 4256, "prediction": "Returns a copy of this Chronology ."}
{"id": 4258, "prediction": "Write an array of values ."}
{"id": 4260, "prediction": "Writes a number of bytes to the output stream ."}
{"id": 4262, "prediction": "Converts a DateRange to a Calendar ."}
{"id": 4264, "prediction": "Parse the given text ."}
{"id": 4266, "prediction": "Swap grid header ."}
{"id": 4268, "prediction": "Main entry point ."}
{"id": 4270, "prediction": "Writes the headers ."}
{"id": 4272, "prediction": "Read directory recursively ."}
{"id": 4274, "prediction": "Returns the grid type for the grid ."}
{"id": 4276, "prediction": "Read data from a DMK word ."}
{"id": 4278, "prediction": "Parses the data grid ."}
{"id": 4280, "prediction": "Unpack the Grib data from the given index ."}
{"id": 4282, "prediction": "Get the next byte from the stream ."}
{"id": 4284, "prediction": "Constructs a CalendarDate from a Java Date ."}
{"id": 4286, "prediction": "Creates a CalendarDate from the given Calendar ."}
{"id": 4288, "prediction": "Returns the difference of the specified field in this calendar ."}
{"id": 4290, "prediction": "Setup the download parameters ."}
{"id": 4292, "prediction": "Create a slice from a list of ranges"}
{"id": 4294, "prediction": "Returns true if the specified dimension is contained in the specified list ."}
{"id": 4296, "prediction": "Add a date ."}
{"id": 4298, "prediction": "Divide the scale by another unit ."}
{"id": 4300, "prediction": "Raise this unit to another unit ."}
{"id": 4302, "prediction": "Converts the input into a derived unit ."}
{"id": 4304, "prediction": "Returns the canonical representation of this unit ."}
{"id": 4306, "prediction": "Read data from a coordinate set ."}
{"id": 4308, "prediction": "Finds a service by name ."}
{"id": 4310, "prediction": "Gets the start gate ."}
{"id": 4312, "prediction": "Writes an XML document to the output stream ."}
{"id": 4314, "prediction": "Verifies that the given path is a descendant of the given dataset ."}
{"id": 4316, "prediction": "Creates a CalendarUnit with the specified name ."}
{"id": 4318, "prediction": "Constructs a CalendarDateUnit from a Calendar ."}
{"id": 4320, "prediction": "Creates a CalendarDate object with the given value ."}
{"id": 4322, "prediction": "Checks to see if a file is valid ."}
{"id": 4324, "prediction": "Read an array of data from a section ."}
{"id": 4326, "prediction": "Reads data from a variable to a channel ."}
{"id": 4328, "prediction": "Calculate step ."}
{"id": 4330, "prediction": "Calculates the data"}
{"id": 4332, "prediction": "Create a vertical transform for a dataset"}
{"id": 4334, "prediction": "Sets whether or not ."}
{"id": 4336, "prediction": "Checks to see if a variable is missing ."}
{"id": 4338, "prediction": "Finalize the structure ."}
{"id": 4340, "prediction": "Pads a string to a given width ."}
{"id": 4342, "prediction": "Pad long ."}
{"id": 4344, "prediction": "Print a double ."}
{"id": 4346, "prediction": "Returns a string representation of the shape"}
{"id": 4348, "prediction": "Returns a string representation of this constraint ."}
{"id": 4350, "prediction": "Applies the given slice to the target slice ."}
{"id": 4865, "prediction": "Write a QueryCapability to a file"}
{"id": 4867, "prediction": "Set the current screenshot for the current image"}
{"id": 4869, "prediction": "Zoom to the image"}
{"id": 4871, "prediction": "Retrieves the date from the given time string ."}
{"id": 4873, "prediction": "Calculates the TI - T - T - T - T ."}
{"id": 4875, "prediction": "Returns the LV coordinate for the given IV coordinate ."}
{"id": 4877, "prediction": "Get the grid packing type name for the given kk type ."}
{"id": 4879, "prediction": "Read data from an input stream ."}
{"id": 4881, "prediction": "Returns the tag enum for the given code ."}
{"id": 4883, "prediction": "Returns the size of the dap ."}
{"id": 4885, "prediction": "Sets the grid with the specified bounds ."}
{"id": 4887, "prediction": "Clears the grid ."}
{"id": 4889, "prediction": "Finds the intersection within the grid ."}
{"id": 4891, "prediction": "Finds the closest point in the grid ."}
{"id": 4893, "prediction": "Get or create a new base unit ."}
{"id": 4895, "prediction": "Search for the given URL type"}
{"id": 4897, "prediction": "Checks if the given location is a DDD ."}
{"id": 4899, "prediction": "Send data to the output stream ."}
{"id": 4901, "prediction": "Returns the prefix of the given class ."}
{"id": 4903, "prediction": "Locates a file relative to a relative path ."}
{"id": 4905, "prediction": "Get the structure of a DapVariable ."}
{"id": 4907, "prediction": "Join an array of strings into a string ."}
{"id": 4909, "prediction": "Gets the list of protocol protocols ."}
{"id": 4911, "prediction": "Converts a given offset into a slice of slices ."}
{"id": 4913, "prediction": "Checks if a list is single point ."}
{"id": 4915, "prediction": "Read data from the input stream ."}
{"id": 4917, "prediction": "Sets the name of the short names ."}
{"id": 4919, "prediction": "Adds a declaration to this group ."}
{"id": 4921, "prediction": "Find a variable by name ."}
{"id": 4923, "prediction": "Gets the stat type ."}
{"id": 4925, "prediction": "Returns the ranges of the axis ."}
{"id": 4927, "prediction": "Gets the session id ."}
{"id": 4929, "prediction": "Sets whether or not the session should be used ."}
{"id": 4931, "prediction": "Sets the authentication and proxy credentials ."}
{"id": 4933, "prediction": "Set the global credentials provider ."}
{"id": 4935, "prediction": "Creates an index of the given shape ."}
{"id": 4937, "prediction": "Creates a new index from the given range ."}
{"id": 4939, "prediction": "Returns a new index of the specified dimension"}
{"id": 4941, "prediction": "Returns a new index of the specified dimension ."}
{"id": 4943, "prediction": "Returns the current value of the current element ."}
{"id": 4945, "prediction": "Sets the specified dimension ."}
{"id": 4947, "prediction": "Returns the name of the time interval ."}
{"id": 4949, "prediction": "Creates a list of date strings ."}
{"id": 4951, "prediction": "Returns a list of all available stations ."}
{"id": 4953, "prediction": "Get the list of station keys ."}
{"id": 4955, "prediction": "Returns the index of the station with the given ID ."}
{"id": 4957, "prediction": "Called by indentation ."}
{"id": 4959, "prediction": "Reads an index from a file ."}
{"id": 4961, "prediction": "Checks if the collection needs to be scanned ."}
{"id": 4963, "prediction": "Set debug flags ."}
{"id": 4965, "prediction": "Create a network file ."}
{"id": 4967, "prediction": "Returns a string representation of this constraint ."}
{"id": 4969, "prediction": "This method retrieves the data structure from the given variables ."}
{"id": 4971, "prediction": "Checks if the variables need to be needed ."}
{"id": 4973, "prediction": "Converts the members of a member to a list of variables ."}
{"id": 4975, "prediction": "Checks if a variable has a variable ."}
{"id": 4977, "prediction": "Determines if the resource control is OK or not ."}
{"id": 4979, "prediction": "Creates an ArraySequence from the given parameters ."}
{"id": 4981, "prediction": "Adds the coordinate attribute to the coordinate ."}
{"id": 4983, "prediction": "Parse an XML catalog into an XML catalog ."}
{"id": 4985, "prediction": "Writes the catalog to the output stream ."}
{"id": 4987, "prediction": "Creates a unique identifier for the dimension ."}
{"id": 4989, "prediction": "Returns the division of this unit ."}
{"id": 4991, "prediction": "Checks if the given unit is compatible ."}
{"id": 4993, "prediction": "Write a point ."}
{"id": 4995, "prediction": "Write a polygon"}
{"id": 4997, "prediction": "Get all subnodes of a given parent node ."}
{"id": 4999, "prediction": "Pass all reserved attributes of a node ."}
{"id": 5001, "prediction": "Create a new ArrayStructure from an ArrayList ."}
{"id": 5003, "prediction": "Creates a structure structure from a shape"}
{"id": 5005, "prediction": "Constructs a StationFeature from a Data Structure ."}
{"id": 5007, "prediction": "Compile a filter ."}
{"id": 5009, "prediction": "Create an ArrayView instance"}
{"id": 5011, "prediction": "Extend the bounding box ."}
{"id": 5013, "prediction": "Returns the intersection of the LatLonRect intersects ."}
{"id": 5015, "prediction": "Returns true if the arrays are conformable ."}
{"id": 5017, "prediction": "Convert an array to an array"}
{"id": 5019, "prediction": "Copies the contents of an array into a boolean array ."}
{"id": 5021, "prediction": "Get min max max ."}
{"id": 5023, "prediction": "Creates a new catalog builder from the dataset ."}
{"id": 5025, "prediction": "Unescape identifier ."}
{"id": 5027, "prediction": "Unescape URL ."}
{"id": 5029, "prediction": "Unescape a string ."}
{"id": 5031, "prediction": "Returns the index of the first character in the given name ."}
{"id": 5033, "prediction": "Reads an atom from a variable ."}
{"id": 5035, "prediction": "Returns the UID of the specified class ."}
{"id": 5037, "prediction": "Compiles the DSPDI file ."}
{"id": 5039, "prediction": "Compiles a DSPDI structure ."}
{"id": 5041, "prediction": "Compile a sequence of DNF sequences ."}
{"id": 5043, "prediction": "Gets the field with the given name ."}
{"id": 5045, "prediction": "Sets the value of a field ."}
{"id": 5047, "prediction": "Add a checkbox field ."}
{"id": 5049, "prediction": "Add a double field ."}
{"id": 5051, "prediction": "Add a password field ."}
{"id": 5053, "prediction": "Add a text field ."}
{"id": 5055, "prediction": "Add a layout heading ."}
{"id": 5057, "prediction": "Adds a new empty row ."}
{"id": 5059, "prediction": "Get the cell spacing ."}
{"id": 5061, "prediction": "Multiplies the given dimension ."}
{"id": 5063, "prediction": "Returns true if this dimension is a reciprocal of this dimension ."}
{"id": 5065, "prediction": "Creates a new instance of a parameter table ."}
{"id": 5067, "prediction": "Adds a parameter table to the lookup table ."}
{"id": 5069, "prediction": "Returns the unit of the given unit ."}
{"id": 5071, "prediction": "Initialize the unit table ."}
{"id": 5073, "prediction": "Reads the name of a file ."}
{"id": 5075, "prediction": "Reads an int from a byte array ."}
{"id": 5077, "prediction": "Read a double from a byte array ."}
{"id": 5079, "prediction": "Adds a symbol ."}
{"id": 5081, "prediction": "Set the structure"}
{"id": 5083, "prediction": "Draws the specified graphics ."}
{"id": 5085, "prediction": "Processes the input stream ."}
{"id": 5087, "prediction": "Reads the next bytes from the buffer ."}
{"id": 5089, "prediction": "Skip n bytes ."}
{"id": 5091, "prediction": "Returns the index of the highest level coordinate ."}
{"id": 5093, "prediction": "Reads the rdf file ."}
{"id": 5095, "prediction": "Read a single row data ."}
{"id": 5097, "prediction": "Creates an instance of a variable ."}
{"id": 5099, "prediction": "Set the map area"}
{"id": 5101, "prediction": "Set the map area on the map ."}
{"id": 5103, "prediction": "Add the actions to the menu ."}
{"id": 5105, "prediction": "Set the screen size ."}
{"id": 5107, "prediction": "Get a double value at the specified offset ."}
{"id": 5109, "prediction": "Returns the object at the specified index ."}
{"id": 5111, "prediction": "Read a scaled integer ."}
{"id": 5113, "prediction": "Determines if there is more than or more than one ."}
{"id": 5115, "prediction": "Get the number of times for a file in a file ."}
{"id": 5117, "prediction": "Determine the file name of the file ."}
{"id": 5119, "prediction": "Gets the full path ."}
{"id": 4352, "prediction": "Dumps bytes into a byte array ."}
{"id": 4354, "prediction": "Returns the type of the specified epsid ."}
{"id": 4356, "prediction": "Decodes a variable length into a vector ."}
{"id": 4358, "prediction": "Get the text content of a URL ."}
{"id": 4360, "prediction": "Reads a byte array into a byte array ."}
{"id": 4362, "prediction": "Removes an attribute ."}
{"id": 4364, "prediction": "Gets the time units in milliseconds ."}
{"id": 4366, "prediction": "Extracts a date from a string ."}
{"id": 4368, "prediction": "Returns the date origin of this time scale ."}
{"id": 4370, "prediction": "Converts a value to a date ."}
{"id": 4372, "prediction": "Converts a double value to a standard string ."}
{"id": 4374, "prediction": "Adds the dimensions to the network ."}
{"id": 4376, "prediction": "Creates the projection for the given coordinate ."}
{"id": 4378, "prediction": "Add a coordinate system variable ."}
{"id": 4380, "prediction": "Creates a Stroographic projection ."}
{"id": 4382, "prediction": "Calculates the surface of the MSG satellite ."}
{"id": 4384, "prediction": "Reads a dataset ."}
{"id": 4386, "prediction": "Read metadata from a URL ."}
{"id": 4388, "prediction": "Checks if the file is a valid file ."}
{"id": 4390, "prediction": "Set the name of the table ."}
{"id": 4392, "prediction": "Returns the coordinate name for a given axis ."}
{"id": 4394, "prediction": "Build DapException ."}
{"id": 4396, "prediction": "Create a z coordinate axis ."}
{"id": 4398, "prediction": "Convert a reference to a coordinate axis ."}
{"id": 4400, "prediction": "Main entry point ."}
{"id": 4402, "prediction": "Opens a file ."}
{"id": 4404, "prediction": "Finds a coordinate axis with the given type ."}
{"id": 4406, "prediction": "Returns the coordinate system with the given name ."}
{"id": 4408, "prediction": "Determine if the enhance mode is needed ."}
{"id": 4410, "prediction": "Sets the values of a variable ."}
{"id": 4412, "prediction": "Returns the index of this matrix ."}
{"id": 4414, "prediction": "Returns the features that intersect the specified bounding box"}
{"id": 4416, "prediction": "Adds the details of the given Tredadata to the metadata ."}
{"id": 4418, "prediction": "Removes the document with the specified type ."}
{"id": 4420, "prediction": "Checks if the given netdffile is mine ."}
{"id": 4422, "prediction": "Splits a list of convention names ."}
{"id": 4424, "prediction": "Builds the coordinate system for the given NetDF dataset ."}
{"id": 4426, "prediction": "Find the coordinate system in the netcdfs ."}
{"id": 4428, "prediction": "Calculates the maximum coordinate systems for the given dataset ."}
{"id": 4430, "prediction": "Add a coordinate variable ."}
{"id": 4432, "prediction": "Sets the top level filter ."}
{"id": 4434, "prediction": "recursively delete all subCatalogs"}
{"id": 4436, "prediction": "Counts the value for a given value ."}
{"id": 4438, "prediction": "Compare two column values ."}
{"id": 4440, "prediction": "Get the group scope ."}
{"id": 4442, "prediction": "Checks if a date range is valid ."}
{"id": 4444, "prediction": "Register a class ."}
{"id": 4446, "prediction": "Check if the DSP class is registered ."}
{"id": 4448, "prediction": "Create a new GribTable with the given parameters ."}
{"id": 4450, "prediction": "Get the time interval offset ."}
{"id": 4452, "prediction": "Finishes the traversal ."}
{"id": 4454, "prediction": "Gets the data for a given part ."}
{"id": 4456, "prediction": "Finds a variable with the given name ."}
{"id": 4458, "prediction": "Find a variable with the given name ."}
{"id": 4460, "prediction": "Checks to see if the network is a structured structure ."}
{"id": 4462, "prediction": "Gets the feature type from the dataset ."}
{"id": 4464, "prediction": "Returns the value of the coordinate at the specified position ."}
{"id": 4466, "prediction": "Get the values of the coordinate axis ."}
{"id": 4468, "prediction": "Finds the index of the closest point in the given range"}
{"id": 4470, "prediction": "Add an action to the menu ."}
{"id": 4472, "prediction": "Main entry point ."}
{"id": 4474, "prediction": "Adds a picture to the cache ."}
{"id": 4476, "prediction": "Stop loading background loading"}
{"id": 4478, "prediction": "Get HTTP GET method"}
{"id": 4480, "prediction": "Generates a float ."}
{"id": 4482, "prediction": "Reads data from a variable ."}
{"id": 4484, "prediction": "Read the stations table ."}
{"id": 4486, "prediction": "Remove a data variable"}
{"id": 4488, "prediction": "This method is called when the RDF is being read from the dataset ."}
{"id": 4490, "prediction": "Calculate the transform"}
{"id": 4492, "prediction": "Finish the grid ."}
{"id": 4494, "prediction": "Gets the catalog catalog ."}
{"id": 4496, "prediction": "Reads metadata content from a URL ."}
{"id": 4498, "prediction": "Adds metadata element to the catalog ."}
{"id": 4500, "prediction": "Read the catalog configuration element ."}
{"id": 4502, "prediction": "Read a dataset ."}
{"id": 4504, "prediction": "Read the result service element ."}
{"id": 4506, "prediction": "Create a ElementSource element ."}
{"id": 4508, "prediction": "Create a ElementFilter element ."}
{"id": 4510, "prediction": "Checks if a flag is set ."}
{"id": 4512, "prediction": "Add a menu to the tree ."}
{"id": 4514, "prediction": "Parses a parameter ."}
{"id": 4516, "prediction": "Reads the contents of the stream ."}
{"id": 4518, "prediction": "Replaces the file template template with the given name ."}
{"id": 4520, "prediction": "Accepts and returns true if the value is valid ."}
{"id": 4522, "prediction": "Gets bitmap from the input file ."}
{"id": 4524, "prediction": "Sets debug flags ."}
{"id": 4526, "prediction": "Checks if a D structure is a group ."}
{"id": 4528, "prediction": "Get a shared dimension"}
{"id": 4530, "prediction": "Checks if the given type is unsigned ."}
{"id": 4532, "prediction": "Get an image by name"}
{"id": 4534, "prediction": "Creates a custom cursor with the specified name ."}
{"id": 4536, "prediction": "Read data from the specified position ."}
{"id": 4538, "prediction": "Make an array of primitives ."}
{"id": 4540, "prediction": "Convert char array to byte array ."}
{"id": 4542, "prediction": "Read a section of a section ."}
{"id": 4544, "prediction": "Get a scalar value from a member ."}
{"id": 4546, "prediction": "Returns an Array object representing a member ."}
{"id": 4548, "prediction": "Adds the dimensions to the network ."}
{"id": 4550, "prediction": "Normalize a path ."}
{"id": 4552, "prediction": "Add a dataset ."}
{"id": 4554, "prediction": "Make a dataset ."}
{"id": 4556, "prediction": "Create a dataset ."}
{"id": 4558, "prediction": "Add a point ."}
{"id": 4560, "prediction": "Get the lower lower lower lower bounding box ."}
{"id": 4562, "prediction": "Determine if this dataset is a filter ."}
{"id": 4564, "prediction": "Parse a constraint ."}
{"id": 4566, "prediction": "Print the constraints ."}
{"id": 4568, "prediction": "Sets the shared dimensions ."}
{"id": 4570, "prediction": "Find the group with the given name ."}
{"id": 4572, "prediction": "Returns the standard URI for this dataset ."}
{"id": 4574, "prediction": "Add a layout component ."}
{"id": 4576, "prediction": "Removes a layout from this layout ."}
{"id": 4578, "prediction": "Layout the given container ."}
{"id": 4580, "prediction": "Get the maximum radial value ."}
{"id": 4582, "prediction": "Converts a geographic coordinate to a latitude ."}
{"id": 4584, "prediction": "Converts a function to an array of degrees ."}
{"id": 4586, "prediction": "Converts the sweep angle to a scan axis ."}
{"id": 4588, "prediction": "Writes a point set of points to a file ."}
{"id": 4590, "prediction": "Returns the ArraySequence for the given member ."}
{"id": 4592, "prediction": "Returns the unique identifier ."}
{"id": 4594, "prediction": "Finds a dataset by name ."}
{"id": 4596, "prediction": "Get the metadata for the specified Metadata type ."}
{"id": 4598, "prediction": "Get the variables for a given vocabulary ."}
{"id": 4600, "prediction": "Escapes a path to a URL ."}
{"id": 4602, "prediction": "Extracts the interpolation from the given array ."}
{"id": 4604, "prediction": "Gets the detail information ."}
{"id": 4606, "prediction": "Creates a dummy variable ."}
{"id": 5121, "prediction": "Convert a reference date into a time interval ."}
{"id": 5123, "prediction": "Get uncompressed data ."}
{"id": 5125, "prediction": "Parses a circle"}
{"id": 5127, "prediction": "Parses the CDI code ."}
{"id": 5129, "prediction": "Parses a CDN file ."}
{"id": 5131, "prediction": "Gets the dual interpolation levels ."}
{"id": 5133, "prediction": "Adds a parameter to the network ."}
{"id": 5135, "prediction": "Convert a number of bytes into an unsigned integer ."}
{"id": 5137, "prediction": "Convert a byte array to a byte array ."}
{"id": 5139, "prediction": "Gets the request state ."}
{"id": 5141, "prediction": "An anchor point ."}
{"id": 5143, "prediction": "Get the bounds of this rectangle"}
{"id": 5145, "prediction": "Format the given text ."}
{"id": 5147, "prediction": "Ensures that the memory size of the memory array has been read ."}
{"id": 5149, "prediction": "Read a 32 - bit integer from a file ."}
{"id": 5151, "prediction": "Read two bytes from a file ."}
{"id": 5153, "prediction": "Read a float from a file ."}
{"id": 5155, "prediction": "Read a 32 - bit integer from a file ."}
{"id": 5157, "prediction": "Creates a projection object ."}
{"id": 5159, "prediction": "Escape a string ."}
{"id": 5161, "prediction": "Splits a string into a list of slashes ."}
{"id": 5163, "prediction": "Returns the service name for the given path ."}
{"id": 5165, "prediction": "Gets reference time ."}
{"id": 5167, "prediction": "Main method for testing ."}
{"id": 5169, "prediction": "Determinesmine if the given NDF file is mine ."}
{"id": 5171, "prediction": "Acquire an area ."}
{"id": 5173, "prediction": "Determines if the given value is before the given date ."}
{"id": 5175, "prediction": "Sets the value at the specified index ."}
{"id": 5177, "prediction": "Sets the unit ."}
{"id": 5179, "prediction": "Initialize the context ."}
{"id": 5181, "prediction": "Processes a list of datasets ."}
{"id": 5183, "prediction": "Determines whether the given lon is between two long boundaries ."}
{"id": 5185, "prediction": "Converts a long to a string ."}
{"id": 5187, "prediction": "Returns the selected dataset ."}
{"id": 5189, "prediction": "Make a tree path ."}
{"id": 5191, "prediction": "Sets the catalog ."}
{"id": 5193, "prediction": "Find the alias of a variable"}
{"id": 5195, "prediction": "Writes characters to the given string ."}
{"id": 5197, "prediction": "Set debug flags"}
{"id": 5199, "prediction": "Hide a member ."}
{"id": 5201, "prediction": "Returns the member with the specified name ."}
{"id": 5203, "prediction": "Restore the state of the table ."}
{"id": 5205, "prediction": "Gets the model index ."}
{"id": 5207, "prediction": "Returns the scalar value of a member ."}
{"id": 5209, "prediction": "Retrieve a scalar value from a member ."}
{"id": 5211, "prediction": "Returns the scalar value of a member ."}
{"id": 5213, "prediction": "Retrieve a scalar value from a member ."}
{"id": 5215, "prediction": "Retrieve a short from a member ."}
{"id": 5217, "prediction": "Retrieve a scalar value from a member ."}
{"id": 5219, "prediction": "Returns the character at the given member ."}
{"id": 5221, "prediction": "Writes Dataset Dataset"}
{"id": 5223, "prediction": "Creates a copy of a dataset ."}
{"id": 5225, "prediction": "Get the MetadataMetadata ."}
{"id": 5227, "prediction": "Show missing values ."}
{"id": 5229, "prediction": "Find the grid record for the given ensemble ."}
{"id": 5231, "prediction": "Creates a long name ."}
{"id": 5233, "prediction": "Compare two byte arrays ."}
{"id": 5235, "prediction": "Extract attributes from a dataset ."}
{"id": 5237, "prediction": "Sets the latitude of the geometries ."}
{"id": 5239, "prediction": "Convert a variable to a string ."}
{"id": 5241, "prediction": "Closes this connection ."}
{"id": 5243, "prediction": "Identifies the encoding for the given data structure ."}
{"id": 5245, "prediction": "Sets the stream ."}
{"id": 5247, "prediction": "Start the task monitor ."}
{"id": 5249, "prediction": "Returns a URI that excludes the given URI ."}
{"id": 5251, "prediction": "Creates a canonical path ."}
{"id": 5253, "prediction": "Copy the contents of this MutableCollection into another one ."}
{"id": 5255, "prediction": "Sets the index ."}
{"id": 5257, "prediction": "Closes the index ."}
{"id": 5259, "prediction": "Add a global attribute ."}
{"id": 5261, "prediction": "Delete a global attribute ."}
{"id": 5263, "prediction": "Adds a new variable attribute ."}
{"id": 5265, "prediction": "Delete an attribute from the given variable name ."}
{"id": 5267, "prediction": "Determine the file type ."}
{"id": 5269, "prediction": "Writes the members of the geometry ."}
{"id": 5271, "prediction": "Returns the XML representation of the station collection ."}
{"id": 5273, "prediction": "Sends a DGRR RRS request ."}
{"id": 5275, "prediction": "Closes the output stream ."}
{"id": 5277, "prediction": "Creates a new projection object ."}
{"id": 5279, "prediction": "Returns the element at the specified index ."}
{"id": 5281, "prediction": "Read data from the layout ."}
{"id": 5283, "prediction": "Returns a subset of this vector with the specified stride ."}
{"id": 5285, "prediction": "This method deletes the old dataset ."}
{"id": 5287, "prediction": "Get data chunk iterator ."}
{"id": 5289, "prediction": "Handles a set of Dataset boundaries ."}
{"id": 5291, "prediction": "Get a dataset source from the given name ."}
{"id": 5293, "prediction": "Add vertices to the graph ."}
{"id": 5295, "prediction": "This method is called when the data is complete ."}
{"id": 5297, "prediction": "Transfer metadata from another Dataset"}
{"id": 5299, "prediction": "Set the list of contributors ."}
{"id": 5301, "prediction": "Remove a dataset ."}
{"id": 5303, "prediction": "Add a service ."}
{"id": 5305, "prediction": "Sets the service local service ."}
{"id": 5307, "prediction": "Gets the user property ."}
{"id": 5309, "prediction": "Returns a list of descriptors ."}
{"id": 5311, "prediction": "Get the capabilities of the given geometry ."}
{"id": 5313, "prediction": "Check if the request parameter is an error ."}
{"id": 5315, "prediction": "Get capabilities for a given URL ."}
{"id": 5317, "prediction": "Returns the last modified time of the object ."}
{"id": 5319, "prediction": "Retrieve a file from the content path ."}
{"id": 5321, "prediction": "Set the response content length ."}
{"id": 5323, "prediction": "Gets the request path ."}
{"id": 5325, "prediction": "Gets a parameter from the request ."}
{"id": 5327, "prediction": "Write a directory ."}
{"id": 5329, "prediction": "Creates a new nested counter with the given key ."}
{"id": 5331, "prediction": "Append a line ."}
{"id": 5333, "prediction": "Gets the capabilities document ."}
{"id": 5335, "prediction": "Returns the coordinate at the given index ."}
{"id": 5337, "prediction": "Handle exception ."}
{"id": 5339, "prediction": "Move the index of the first occurrence of the first slice ."}
{"id": 5341, "prediction": "Checks if the given endpoint is a feature endpoint"}
{"id": 5343, "prediction": "Factory method to create a GDS GDS GDS ."}
{"id": 5345, "prediction": "Reads the contents of an InputStream into a String ."}
{"id": 5347, "prediction": "Writes the contents of a string to the output stream ."}
{"id": 5349, "prediction": "Copies a byte array to the output stream ."}
{"id": 5351, "prediction": "Reads a file into a byte array ."}
{"id": 5353, "prediction": "Write contents to a file ."}
{"id": 5355, "prediction": "Write an input stream to a file ."}
{"id": 5357, "prediction": "Handle the DAP exception handler ."}
{"id": 5359, "prediction": "Get the catalog"}
{"id": 5361, "prediction": "Prints the status of the server ."}
{"id": 5363, "prediction": "Gets the reference date ."}
{"id": 5365, "prediction": "method to read the ncml document"}
{"id": 5367, "prediction": "Removes all characters from the given string ."}
{"id": 5369, "prediction": "Removes all letters from a string ."}
{"id": 5371, "prediction": "Makes sure that the name is valid ."}
{"id": 5373, "prediction": "Pad a string with the specified length ."}
{"id": 5375, "prediction": "Remove a substring from a string"}
{"id": 4608, "prediction": "Add global attributes ."}
{"id": 4610, "prediction": "Creates an array with the specified type ."}
{"id": 4612, "prediction": "Determines the error code ."}
{"id": 4614, "prediction": "Reads a DMR request ."}
{"id": 4616, "prediction": "Reads data from a byte array ."}
{"id": 4618, "prediction": "Converts ISO 8601 string to a Date object ."}
{"id": 4620, "prediction": "Translate a group into another group ."}
{"id": 4622, "prediction": "Reads the data file ."}
{"id": 4624, "prediction": "Returns the end of the given index ."}
{"id": 4626, "prediction": "Sets the edit value ."}
{"id": 4628, "prediction": "Convert an EF coordinate to a LL coordinate ."}
{"id": 4630, "prediction": "Remove the name from the given name ."}
{"id": 4632, "prediction": "Create a new note ."}
{"id": 4634, "prediction": "Parses the DASDF file ."}
{"id": 4636, "prediction": "Finds the data VDVVVVV ."}
{"id": 4638, "prediction": "Gets the parent group ."}
{"id": 4640, "prediction": "Returns the index of the specified dimension"}
{"id": 4642, "prediction": "Returns the shape as a section ."}
{"id": 4644, "prediction": "Sets the enum type ."}
{"id": 4646, "prediction": "Read a scalar string ."}
{"id": 4648, "prediction": "Read the contents of the given section ."}
{"id": 4650, "prediction": "Returns the string representation of this variable ."}
{"id": 4652, "prediction": "Sets the list of dimensions ."}
{"id": 4654, "prediction": "Sets the dimensions of this variable ."}
{"id": 4656, "prediction": "Sets the dimension at the specified index ."}
{"id": 4658, "prediction": "Returns a list of all dimensions"}
{"id": 4660, "prediction": "Completes the grid ."}
{"id": 4662, "prediction": "Determine if the DSP extension matches the given path ."}
{"id": 4664, "prediction": "Build the DMR dataset ."}
{"id": 4666, "prediction": "Builds the dimensions of a list of dimensions ."}
{"id": 4668, "prediction": "Convert a list of dimensions to a core ."}
{"id": 4670, "prediction": "Process a Buf message ."}
{"id": 4672, "prediction": "Get the transform"}
{"id": 4674, "prediction": "Get the area of the map area ."}
{"id": 4676, "prediction": "Perform pan area ."}
{"id": 4678, "prediction": "Calculate the navigation from the bounding box ."}
{"id": 4680, "prediction": "Remove a listener"}
{"id": 4682, "prediction": "Send an event to all listeners ."}
{"id": 4684, "prediction": "Prints a command line"}
{"id": 4686, "prediction": "Print a variable section ."}
{"id": 4688, "prediction": "Converts an array to an array ."}
{"id": 4690, "prediction": "Writes the network XML file to the given writer ."}
{"id": 4692, "prediction": "Adds a parameter to the coordinate ."}
{"id": 4694, "prediction": "Reads a datatype from a given basename ."}
{"id": 4696, "prediction": "Returns true if the given unit is compatible with this unit ."}
{"id": 4698, "prediction": "Set bit offset ."}
{"id": 4700, "prediction": "Converts a n - bit integer into an integer ."}
{"id": 4702, "prediction": "Gets the das ."}
{"id": 4704, "prediction": "Returns the complete string representation of the ECE ."}
{"id": 4706, "prediction": "Get the id of the variables in the xml file"}
{"id": 4708, "prediction": "Reads the data from a file ."}
{"id": 4710, "prediction": "Handles the sensors ."}
{"id": 4712, "prediction": "Remove characters from a string ."}
{"id": 4714, "prediction": "Escapes a URL query string ."}
{"id": 4716, "prediction": "Decodes the given string ."}
{"id": 4718, "prediction": "Add the global global attributes ."}
{"id": 4720, "prediction": "Swap two int values ."}
{"id": 4722, "prediction": "Swap a float ."}
{"id": 4724, "prediction": "Converts a short to a byte array ."}
{"id": 4726, "prediction": "Converts a long to a byte array ."}
{"id": 4728, "prediction": "Writes the given date as XML ."}
{"id": 4730, "prediction": "Starts the XML file ."}
{"id": 4732, "prediction": "Add levels to the grid ."}
{"id": 4734, "prediction": "Add a coordinate to the network ."}
{"id": 4736, "prediction": "Returns the index of the grid ."}
{"id": 4738, "prediction": "Gets a file ."}
{"id": 4740, "prediction": "Show the cache files ."}
{"id": 4742, "prediction": "Calculates the bearing between two points ."}
{"id": 4744, "prediction": "Main method for testing"}
{"id": 4746, "prediction": "Searches for a point in a point ."}
{"id": 4748, "prediction": "Load a picture in a thread ."}
{"id": 4750, "prediction": "Loads the source picture ."}
{"id": 4752, "prediction": "Stop loading from the image URL"}
{"id": 4754, "prediction": "Sets the source image ."}
{"id": 4756, "prediction": "Make an association descriptor ."}
{"id": 4758, "prediction": "Count the number of bits ."}
{"id": 4760, "prediction": "Loads the file header ."}
{"id": 4762, "prediction": "Get a field by name"}
{"id": 4764, "prediction": "Get a string by name ."}
{"id": 4766, "prediction": "Get the field name ."}
{"id": 4768, "prediction": "Dump the Dbase file ."}
{"id": 4770, "prediction": "Sets a DapAttribute ."}
{"id": 4772, "prediction": "Gets the DapGroup ."}
{"id": 4774, "prediction": "Returns the escaped short name ."}
{"id": 4776, "prediction": "Gets the group path ."}
{"id": 4778, "prediction": "Checks if the parent is top level ."}
{"id": 4780, "prediction": "Set a new bean collection ."}
{"id": 4782, "prediction": "Gets the object associated with the given key ."}
{"id": 4784, "prediction": "Prints a DSPDI file ."}
{"id": 4786, "prediction": "Writes an element to a String ."}
{"id": 4788, "prediction": "Writes an element to the output stream ."}
{"id": 4790, "prediction": "Create a dimension element ."}
{"id": 4792, "prediction": "Get an array of attribute values from an attribute"}
{"id": 4794, "prediction": "Creates a unit definition ."}
{"id": 4796, "prediction": "Derives the DDB database ."}
{"id": 4798, "prediction": "Find the coordinate element at the given interval ."}
{"id": 4800, "prediction": "Returns the subset of the values that are subset of the given interval ."}
{"id": 4802, "prediction": "Open a dataset ."}
{"id": 4804, "prediction": "Read data from a file ."}
{"id": 4806, "prediction": "Converts a string to a canonical form ."}
{"id": 4808, "prediction": "Compiles the DAP dataset ."}
{"id": 4810, "prediction": "Returns the value associated with the given key ."}
{"id": 4812, "prediction": "Gets the date ."}
{"id": 4814, "prediction": "Print an XML attribute ."}
{"id": 4816, "prediction": "Print the dimensions of a variable ."}
{"id": 4818, "prediction": "Sets the area attributes for this area ."}
{"id": 4820, "prediction": "Get the calter for the given name ."}
{"id": 4822, "prediction": "Finds the coordinates of a table ."}
{"id": 4824, "prediction": "Finds the coordinate axis with the given type ."}
{"id": 4826, "prediction": "Finds dimension by type"}
{"id": 4828, "prediction": "Finds the dependent coordinate axis axis ."}
{"id": 4830, "prediction": "Convenience method for deserialization ."}
{"id": 4832, "prediction": "Write a marker"}
{"id": 4834, "prediction": "Creates a dataset ."}
{"id": 4836, "prediction": "get a String array of String"}
{"id": 4838, "prediction": "Sets the list of observations ."}
{"id": 4840, "prediction": "Redraw the panel ."}
{"id": 4842, "prediction": "Writes the object to the stream ."}
{"id": 4844, "prediction": "Add a unit ."}
{"id": 4846, "prediction": "Returns the unit with the given id ."}
{"id": 4848, "prediction": "Add a unit by symbol ."}
{"id": 4850, "prediction": "Adds a menu to the menu ."}
{"id": 4852, "prediction": "Reads a scalar variable ."}
{"id": 4854, "prediction": "Get the parameter values from the rdarray"}
{"id": 4856, "prediction": "Opens a feature dataset ."}
{"id": 4858, "prediction": "Open a dataset ."}
{"id": 4860, "prediction": "Removes duplicate properties from the list ."}
{"id": 4862, "prediction": "Make a MutableCollection ."}
{"id": 5377, "prediction": "Remove a character from the end of the string"}
{"id": 5379, "prediction": "Replaces all occurrences of a string with the given character ."}
{"id": 5381, "prediction": "Replaces all occurrences of a string with the given value ."}
{"id": 5383, "prediction": "Substitute the substring into a string"}
{"id": 5385, "prediction": "Replaces all characters in the specified string with the specified character ."}
{"id": 5387, "prediction": "Replaces all occurrences of the substring with the given substring ."}
{"id": 5389, "prediction": "Process a collection update event ."}
{"id": 5391, "prediction": "Updates the collection ."}
{"id": 5393, "prediction": "Gets the datasets ."}
{"id": 5395, "prediction": "Creates a deep copy of a data structure ."}
{"id": 5397, "prediction": "Creates a copy of the given structure ."}
{"id": 5399, "prediction": "Creates a copy of the given structure ."}
{"id": 5401, "prediction": "Creates a new section of the specified range ."}
{"id": 5403, "prediction": "Gets the first feature type ."}
{"id": 5405, "prediction": "Synchronizes the grid ."}
{"id": 5407, "prediction": "Swaps the long value at the specified offset ."}
{"id": 5409, "prediction": "Swaps a char from a byte array ."}
{"id": 5411, "prediction": "Add a parameter to the coordinate matrix"}
{"id": 5413, "prediction": "Returns true if this group is a parent group ."}
{"id": 5415, "prediction": "Adds a new dimension to this group ."}
{"id": 5417, "prediction": "Adds a group to this group ."}
{"id": 5419, "prediction": "Adds a variable to this group ."}
{"id": 5421, "prediction": "Create a group from the given path ."}
{"id": 5423, "prediction": "Prints the DAS object to the output stream ."}
{"id": 5425, "prediction": "Writes a grid to a file"}
{"id": 5427, "prediction": "Replace the missing values with the missing values ."}
{"id": 5429, "prediction": "Writes a grid to a grid ."}
{"id": 5431, "prediction": "Returns the number of available qq libs ."}
{"id": 5433, "prediction": "Determines the type of a collection ."}
{"id": 5435, "prediction": "update leaf collection"}
{"id": 5437, "prediction": "Create a GribCollection from a data file ."}
{"id": 5439, "prediction": "Returns true if the URL matches the pattern"}
{"id": 5441, "prediction": "Searches for a key ."}
{"id": 5443, "prediction": "Loads the CDATA file ."}
{"id": 5445, "prediction": "Get the datasets ."}
{"id": 5447, "prediction": "Sets the project projection ."}
{"id": 5449, "prediction": "Creates a list of shapes for the given features ."}
{"id": 5451, "prediction": "Start a progress monitor"}
{"id": 5453, "prediction": "Normalize the result ."}
{"id": 5455, "prediction": "Returns the structure at the given index ."}
{"id": 5457, "prediction": "Get a scalar value ."}
{"id": 5459, "prediction": "Convert a record to a scalar ."}
{"id": 5461, "prediction": "Get a byte from a member ."}
{"id": 5463, "prediction": "Get a char from a member ."}
{"id": 5465, "prediction": "Get an Array Structure from a member ."}
{"id": 5467, "prediction": "This method is used to get an ArrayObject from a SequenceObject"}
{"id": 5469, "prediction": "Evaluate the given expression ."}
{"id": 5471, "prediction": "Returns true if this node is a direct reference ."}
{"id": 5473, "prediction": "Returns the number of expansion entries ."}
{"id": 5475, "prediction": "Compute groups ."}
{"id": 5477, "prediction": "Checks if the given file is valid ."}
{"id": 5479, "prediction": "Get byte order ."}
{"id": 5481, "prediction": "Find the key with the given name ."}
{"id": 5483, "prediction": "Get the header of a file ."}
{"id": 5485, "prediction": "Get the data pointer at the specified index ."}
{"id": 5487, "prediction": "Reads a string from the specified word ."}
{"id": 5489, "prediction": "Returns a string representation of the given bit ."}
{"id": 5491, "prediction": "Parse the base element ."}
{"id": 5493, "prediction": "Parses the aliases ."}
{"id": 5495, "prediction": "Replicates a list of data structures ."}
{"id": 5497, "prediction": "Gets the CFF signature type ."}
{"id": 5499, "prediction": "Returns true if this node represents a DapNode ."}
{"id": 5501, "prediction": "Probes the given object ."}
{"id": 5503, "prediction": "Calculates the best best best fit for each time ."}
{"id": 5505, "prediction": "Show time series ."}
{"id": 5507, "prediction": "Gets the values ."}
{"id": 5509, "prediction": "Write the CDL file ."}
{"id": 5511, "prediction": "Sets attribute values ."}
{"id": 5513, "prediction": "Scans the specified collection ."}
{"id": 5515, "prediction": "Schedules a message ."}
{"id": 5517, "prediction": "Tries to download a file ."}
{"id": 5519, "prediction": "Sets the dataset ."}
{"id": 5521, "prediction": "Creates the tool frame ."}
{"id": 5523, "prediction": "Determines if the two nodes are greater than or equal ."}
{"id": 5525, "prediction": "Get the projection of this coordinate matrix ."}
{"id": 5527, "prediction": "Returns true if this axis is a regular expression ."}
{"id": 5529, "prediction": "Checks if there is a list of coordinates ."}
{"id": 5531, "prediction": "Checks if the dimension is contained in the list of dimensions"}
{"id": 5533, "prediction": "Checks if the given axis has the same axis ."}
{"id": 5535, "prediction": "Returns the selected bean ."}
{"id": 5537, "prediction": "Get the list of selected cells ."}
{"id": 5539, "prediction": "Restores the state of the view column ."}
{"id": 5541, "prediction": "Close the stream ."}
{"id": 5543, "prediction": "Checks if a variable is a coordinate ."}
{"id": 5545, "prediction": "Add data variables to the table"}
{"id": 5547, "prediction": "Determine a station feature ."}
{"id": 5549, "prediction": "Returns a factory for the given name ."}
{"id": 5551, "prediction": "Parses a unit ."}
{"id": 5553, "prediction": "Checks if the given unit reference is a date unit ."}
{"id": 5555, "prediction": "Get the conversion factor for the given input unit ."}
{"id": 5557, "prediction": "Returns true if the unit is unknown ."}
{"id": 5559, "prediction": "Creates a new RelationLevel clause ."}
{"id": 5561, "prediction": "Creates a BDF clause ."}
{"id": 5563, "prediction": "Call this method to crawl a catalog ."}
{"id": 5565, "prediction": "Crawl all direct datasets ."}
{"id": 5567, "prediction": "Gets the file or null if it exists ."}
{"id": 5569, "prediction": "Returns a list of all files in the system ."}
{"id": 5571, "prediction": "Sets the seek position ."}
{"id": 5573, "prediction": "Reads a byte ."}
{"id": 5575, "prediction": "Read an int from the stream ."}
{"id": 5577, "prediction": "Read a long array ."}
{"id": 5579, "prediction": "Read double array ."}
{"id": 5581, "prediction": "Read string length ."}
{"id": 5583, "prediction": "Write short array ."}
{"id": 5585, "prediction": "Writes an int array to the stream ."}
{"id": 5587, "prediction": "Write float array ."}
{"id": 5589, "prediction": "Writes a string to the output stream ."}
{"id": 5591, "prediction": "Search for the next match in the buffer ."}
{"id": 5593, "prediction": "create a new DirectoryCollection"}
{"id": 5595, "prediction": "Checks if the index is a leaf ."}
{"id": 5597, "prediction": "Scans the directory ."}
{"id": 5599, "prediction": "Gets the list of gridsets ."}
{"id": 5601, "prediction": "Remove a cache file from the cache ."}
{"id": 5603, "prediction": "Release the specified file ."}
{"id": 5605, "prediction": "Update the cache ."}
{"id": 5607, "prediction": "Make the vertical transform"}
{"id": 5609, "prediction": "Checks if the vertical axis is positive ."}
{"id": 5611, "prediction": "Finds the index of the coordinate in the given coordinates ."}
{"id": 5613, "prediction": "Finds and returns the index of the coordinates in the given map ."}
{"id": 5615, "prediction": "Returns the item for the given pixel"}
{"id": 5617, "prediction": "Downloads the remote logs ."}
{"id": 5619, "prediction": "Parses a calendar period ."}
{"id": 5621, "prediction": "Constructs a calendar period from a string ."}
{"id": 5623, "prediction": "Gets the conversion factor ."}
{"id": 5625, "prediction": "Gets the offset ."}
{"id": 5627, "prediction": "Initialize the tables ."}
{"id": 5629, "prediction": "Returns the longest path of the given path ."}
{"id": 5631, "prediction": "Convert the data root to a DataRoot ."}
{"id": 4864, "prediction": "Returns an instance of RegExpression that matches the specified pattern ."}
{"id": 4866, "prediction": "Reads a structured structure data structure ."}
{"id": 4868, "prediction": "Sets the buffered image ."}
{"id": 4870, "prediction": "Paint the component ."}
{"id": 4872, "prediction": "Decode the date of the datatype ."}
{"id": 4874, "prediction": "Get the day of the month ."}
{"id": 4876, "prediction": "Reverse a 32 - bit array ."}
{"id": 4878, "prediction": "Returns the data type of the specified type ."}
{"id": 4880, "prediction": "Write the output stream to the output stream ."}
{"id": 4882, "prediction": "Get the next image ."}
{"id": 4884, "prediction": "Computes the sum of an array ."}
{"id": 4886, "prediction": "Sets the overlap ."}
{"id": 4888, "prediction": "Marks the specified bounding box if present ."}
{"id": 4890, "prediction": "Find the intersection of the given point ."}
{"id": 4892, "prediction": "Returns the Euclidean distance between the specified point ."}
{"id": 4894, "prediction": "Search for a fragment ."}
{"id": 4896, "prediction": "Decodes the given path extension ."}
{"id": 4898, "prediction": "Checks if the given location is a DAP server ."}
{"id": 4900, "prediction": "Returns the suffix of a class ."}
{"id": 4902, "prediction": "Finds a file in the given path ."}
{"id": 4904, "prediction": "Extracts bytes from buffer ."}
{"id": 4906, "prediction": "Returns null if the path is null or empty ."}
{"id": 4908, "prediction": "Checks if the path is a drive letter ."}
{"id": 4910, "prediction": "Converts the given index into slices ."}
{"id": 4912, "prediction": "Checks if slices are contiguous ."}
{"id": 4914, "prediction": "Converts a list of slices into an index ."}
{"id": 4916, "prediction": "Sets the information about the station ."}
{"id": 4918, "prediction": "Read a feature collection from a catalog ."}
{"id": 4920, "prediction": "Update the list of groups ."}
{"id": 4922, "prediction": "Determine the axis type ."}
{"id": 4924, "prediction": "Subtracts the coverage coordinates from the specified bounds ."}
{"id": 4926, "prediction": "Sets the default properties ."}
{"id": 4928, "prediction": "Sets the maximum number of redirects ."}
{"id": 4930, "prediction": "Closes all resources ."}
{"id": 4932, "prediction": "Tracks a session ."}
{"id": 4934, "prediction": "Validate the catalog ."}
{"id": 4936, "prediction": "Compute the stride"}
{"id": 4938, "prediction": "Reduce the index of this matrix ."}
{"id": 4940, "prediction": "Transforms an index into a new index ."}
{"id": 4942, "prediction": "Get an index iterator ."}
{"id": 4944, "prediction": "Sets the index of this array ."}
{"id": 4946, "prediction": "Sets the dimension ."}
{"id": 4948, "prediction": "Obtains a CalendarDateRange from the given calendar ."}
{"id": 4950, "prediction": "Generate a list of Gempak parameters ."}
{"id": 4952, "prediction": "Create a new station ."}
{"id": 4954, "prediction": "Gets the list of dates ."}
{"id": 4956, "prediction": "Gets the file type ."}
{"id": 4958, "prediction": "Sets the indent level ."}
{"id": 4960, "prediction": "Add a directory scan ."}
{"id": 4962, "prediction": "Checks if there is a new file ."}
{"id": 4964, "prediction": "Adds a variable to the model ."}
{"id": 4966, "prediction": "Validate an XML document ."}
{"id": 4968, "prediction": "Sets the original variable ."}
{"id": 4970, "prediction": "Reads the contents of the given section ."}
{"id": 4972, "prediction": "Convert an array of data structures to an array of values ."}
{"id": 4974, "prediction": "Find a variable from an organization name ."}
{"id": 4976, "prediction": "Enhances the given set of variables ."}
{"id": 4978, "prediction": "Make an empty sequence ."}
{"id": 4980, "prediction": "Creates a sequence of parameters from the specified parameters ."}
{"id": 4982, "prediction": "Read catalog catalog ."}
{"id": 4984, "prediction": "Read an XML catalog into an XML catalog ."}
{"id": 4986, "prediction": "Gets a metadata converter for a given key ."}
{"id": 4988, "prediction": "Multiplies this unit by another dimension ."}
{"id": 4990, "prediction": "Creates a derived unit from an input array ."}
{"id": 4992, "prediction": "Write a feature ."}
{"id": 4994, "prediction": "Write a LineString"}
{"id": 4996, "prediction": "Get the value of a named attribute ."}
{"id": 4998, "prediction": "Parses the response ."}
{"id": 5000, "prediction": "Returns the string portion of the given variable ."}
{"id": 5002, "prediction": "Sets a member array ."}
{"id": 5004, "prediction": "Returns the geometry type of a variable ."}
{"id": 5006, "prediction": "Compiles the given CE AST ."}
{"id": 5008, "prediction": "Define a constraint definition ."}
{"id": 5010, "prediction": "Checks if the specified rectangle is contained within the bounds ."}
{"id": 5012, "prediction": "Extend the LatLonRect from the current LatLngRect ."}
{"id": 5014, "prediction": "Add two arrays ."}
{"id": 5016, "prediction": "Checks if the shape is conformable ."}
{"id": 5018, "prediction": "Copies the given array to the given array ."}
{"id": 5020, "prediction": "Copies the contents of an object into an array ."}
{"id": 5022, "prediction": "set double value"}
{"id": 5024, "prediction": "Create a new projection adapter for the given projection ."}
{"id": 5026, "prediction": "URL - encode a string ."}
{"id": 5028, "prediction": "Utility method to escape a string ."}
{"id": 5030, "prediction": "Tokenize an escaped string ."}
{"id": 5032, "prediction": "Converts a string to a backslash ."}
{"id": 5034, "prediction": "Get the path of a Cursor"}
{"id": 5036, "prediction": "Gets the JComponent class ."}
{"id": 5038, "prediction": "Compile a datapoint array ."}
{"id": 5040, "prediction": "Compile a sequence ."}
{"id": 5042, "prediction": "Reads a long from the stream ."}
{"id": 5044, "prediction": "Returns the value of the specified field ."}
{"id": 5046, "prediction": "Adds a new Field ."}
{"id": 5048, "prediction": "Add a date field ."}
{"id": 5050, "prediction": "Add an int field ."}
{"id": 5052, "prediction": "Add a text field ."}
{"id": 5054, "prediction": "Add a TextArea ."}
{"id": 5056, "prediction": "Adds a component to the layout ."}
{"id": 5058, "prediction": "Find the active frame ."}
{"id": 5060, "prediction": "Gets the factors ."}
{"id": 5062, "prediction": "Returns an array of factors ."}
{"id": 5064, "prediction": "Returns true if this factor is a dimensionless dimensionless ."}
{"id": 5066, "prediction": "Factory method to create a GribParamTableTables ."}
{"id": 5068, "prediction": "Adds a parameter table ."}
{"id": 5070, "prediction": "Create a derived unit from the input array ."}
{"id": 5072, "prediction": "Create a vertical variable ."}
{"id": 5074, "prediction": "Reads a short from the byte array ."}
{"id": 5076, "prediction": "Read a float from a byte array ."}
{"id": 5078, "prediction": "Creates an alias ."}
{"id": 5080, "prediction": "Creates a converter ."}
{"id": 5082, "prediction": "Sets the point feature data ."}
{"id": 5084, "prediction": "Get the list of shapes"}
{"id": 5086, "prediction": "Reads a buffer from the input stream ."}
{"id": 5088, "prediction": "Reads bytes from a byte array ."}
{"id": 5090, "prediction": "Adds the dimensionality to the network ."}
{"id": 5092, "prediction": "Checks if a file is a valid file ."}
{"id": 5094, "prediction": "Read data from a variable ."}
{"id": 5096, "prediction": "Creates a new Dataset from a Dataset"}
{"id": 5098, "prediction": "Fires the map area event"}
{"id": 5100, "prediction": "Set the map area ."}
{"id": 5102, "prediction": "Set the projection"}
{"id": 5104, "prediction": "Start the redraw timer ."}
{"id": 5106, "prediction": "Sets the selected variable ."}
{"id": 5108, "prediction": "Read a double value ."}
{"id": 5110, "prediction": "Gets the detector name for the given entid ."}
{"id": 5112, "prediction": "Find parameter by name ."}
{"id": 5114, "prediction": "Swap the byte order ."}
{"id": 5116, "prediction": "Get the file name for the given time index ."}
{"id": 5118, "prediction": "Gets the path to the ddf file ."}
{"id": 5633, "prediction": "Returns a list of indexes in the given list ."}
{"id": 5635, "prediction": "Adds a new group ."}
{"id": 5637, "prediction": "Delete an attribute from the group ."}
{"id": 5639, "prediction": "Adds a record to the network ."}
{"id": 5641, "prediction": "Write properties ."}
{"id": 5643, "prediction": "Computes the divide unit of this unit unit ."}
{"id": 5645, "prediction": "Converts this DerivedUnit to another ."}
{"id": 5647, "prediction": "Convert a variable variable to a top level variable ."}
{"id": 5649, "prediction": "Close all databases ."}
{"id": 5651, "prediction": "Convert an integer to a period ."}
{"id": 5653, "prediction": "Returns the value at the specified index ."}
{"id": 5655, "prediction": "Create a proxy resolver for a given path ."}
{"id": 5657, "prediction": "Factory method to create a Grib2P from the given byte array ."}
{"id": 5659, "prediction": "Applies the given scale factor to the given scale ."}
{"id": 5661, "prediction": "Adds a local concept to the stream ."}
{"id": 5663, "prediction": "Store a new concept ."}
{"id": 5665, "prediction": "Writes the lookup table ."}
{"id": 5667, "prediction": "Main entry point ."}
{"id": 5669, "prediction": "Recursively expand the skeleton catalog ."}
{"id": 5671, "prediction": "Name of all datasets in the given dataset"}
{"id": 5673, "prediction": "Recursively call the given dataset ."}
{"id": 5675, "prediction": "Stop loading from the source image ."}
{"id": 5677, "prediction": "Called when a source file has been loaded ."}
{"id": 5679, "prediction": "Get the scaled image size ."}
{"id": 5681, "prediction": "Gets the merged parts ."}
{"id": 5683, "prediction": "Returns a list of SNK categories ."}
{"id": 5685, "prediction": "Sets the root directory ."}
{"id": 5687, "prediction": "Gets the cache file ."}
{"id": 5689, "prediction": "clean up the cache"}
{"id": 5691, "prediction": "Creates a coordinate axis based on a variable definition ."}
{"id": 5693, "prediction": "Returns true if this field is a numeric type ."}
{"id": 5695, "prediction": "Retrieves the calendar from the CDATA component ."}
{"id": 5697, "prediction": "Returns the currently selected row ."}
{"id": 5699, "prediction": "Returns the model index of the model ."}
{"id": 5701, "prediction": "Sort the array of elements in the given array ."}
{"id": 5703, "prediction": "Gets an existing file ."}
{"id": 5705, "prediction": "Create an XML store from a file ."}
{"id": 5707, "prediction": "Create an XML store from a resource ."}
{"id": 5709, "prediction": "Save the preferences ."}
{"id": 5711, "prediction": "Writes a serialized variable ."}
{"id": 5713, "prediction": "Writes the structure of a datapoint ."}
{"id": 5715, "prediction": "Writes a DAP record to the output stream ."}
{"id": 5717, "prediction": "Gets the wmo ID ."}
{"id": 5719, "prediction": "Returns the data at the specified index ."}
{"id": 5721, "prediction": "Decodes the data from the grid ."}
{"id": 5723, "prediction": "Create a grid file with the specified location ."}
{"id": 5725, "prediction": "Creates a file from a network ."}
{"id": 5727, "prediction": "Set the selected station ."}
{"id": 5729, "prediction": "Selects the closest station with the given point ."}
{"id": 5731, "prediction": "Returns the name of the given type ."}
{"id": 5733, "prediction": "Returns the station with the given name ."}
{"id": 5735, "prediction": "Returns a DataIterator for a given station ."}
{"id": 5737, "prediction": "Computes the dot product of this vector ."}
{"id": 5739, "prediction": "Normalizes this vector ."}
{"id": 5741, "prediction": "Returns the parameter with the given id ."}
{"id": 5743, "prediction": "Adds a name to the registry ."}
{"id": 5745, "prediction": "Gets the prefix ."}
{"id": 5747, "prediction": "Get a parameter value ."}
{"id": 5749, "prediction": "Determines if the current data is in hex ."}
{"id": 5751, "prediction": "Returns the time range for the given time range ."}
{"id": 5753, "prediction": "Sets the next polygon ."}
{"id": 5755, "prediction": "Find property by name ."}
{"id": 5757, "prediction": "Returns a subset of the given time axis ."}
{"id": 5759, "prediction": "Register an IOProvider"}
{"id": 5761, "prediction": "Checks if the given service is registered with the given class ."}
{"id": 5763, "prediction": "Checks if the location is open ."}
{"id": 5765, "prediction": "Creates a new network file ."}
{"id": 5767, "prediction": "Opens a Netdfdf file ."}
{"id": 5769, "prediction": "Writes the XML document to the network ."}
{"id": 5771, "prediction": "Write the CDL document ."}
{"id": 5773, "prediction": "Adds an attribute to this group ."}
{"id": 5775, "prediction": "Adds a new group to this group ."}
{"id": 5777, "prediction": "Removes the specified dimension from this group ."}
{"id": 5779, "prediction": "Adds a variable to this group ."}
{"id": 5781, "prediction": "Removes a variable from the group ."}
{"id": 5783, "prediction": "Send a record structure ."}
{"id": 5785, "prediction": "Read a section of a variable section ."}
{"id": 5787, "prediction": "Reads a list of variables ."}
{"id": 5789, "prediction": "Returns the full name of the given CDM node ."}
{"id": 5791, "prediction": "Checks if the given file is included in the MFileFilter ."}
{"id": 5793, "prediction": "Checks if the given file is a filter ."}
{"id": 5795, "prediction": "Dispatch an attribute value ."}
{"id": 5797, "prediction": "Checks if a string is a byte value ."}
{"id": 5799, "prediction": "Checks if a string is an integer ."}
{"id": 5801, "prediction": "Checks a float value ."}
{"id": 5803, "prediction": "Returns the data type of the given attribute ."}
{"id": 5805, "prediction": "Returns true if the given string is valid ."}
{"id": 5807, "prediction": "Checks if the given alphanumeric string is valid ."}
{"id": 5809, "prediction": "Convert a Unicode code point to a string ."}
{"id": 5811, "prediction": "Compare two grid definitions ."}
{"id": 5813, "prediction": "Reads the buffer from the buffer ."}
{"id": 5815, "prediction": "Mark the stack of the stack"}
{"id": 5817, "prediction": "Retrieves the value from the given key and alternate key ."}
{"id": 5819, "prediction": "Creates and returns a StationHelper object ."}
{"id": 5821, "prediction": "Get the azimuth ."}
{"id": 5823, "prediction": "Returns an array of latitudeitudes in this map ."}
{"id": 5825, "prediction": "Returns an array of the altitudes ."}
{"id": 5827, "prediction": "Returns the elevation of this polygon ."}
{"id": 5829, "prediction": "Select a variable with a name ."}
{"id": 5831, "prediction": "Sets the member variables ."}
{"id": 5833, "prediction": "Calculates the size of all elements of this variable ."}
{"id": 5835, "prediction": "Read a vector ."}
{"id": 5837, "prediction": "Returns the data category for the given category ."}
{"id": 5839, "prediction": "Add a parameter ."}
{"id": 5841, "prediction": "Convert a latlon coordinate to a projection matrix ."}
{"id": 5843, "prediction": "Get the position of the Z axis ."}
{"id": 5845, "prediction": "Set the color scale parameters"}
{"id": 5847, "prediction": "Returns true if this group is a child of this group ."}
{"id": 5849, "prediction": "Installs the specified cell renderers ."}
{"id": 5851, "prediction": "Creates a label from a string ."}
{"id": 5853, "prediction": "Creates a label with the given value ."}
{"id": 5855, "prediction": "Helper method to list of IPs types"}
{"id": 5857, "prediction": "Purge a logger"}
{"id": 5859, "prediction": "Compiles the given class ."}
{"id": 5861, "prediction": "Reads the graphic control ."}
{"id": 5863, "prediction": "Gets the selectable property list ."}
{"id": 5865, "prediction": "Gets the person with the given id ."}
{"id": 5867, "prediction": "Sets the person id ."}
{"id": 5869, "prediction": "Create a ViewModel from a ViewModel ."}
{"id": 5871, "prediction": "Loads the list of countries ."}
{"id": 5873, "prediction": "Adds a new immutable field ."}
{"id": 5875, "prediction": "Create a FxmlViewStep step for a given view ."}
{"id": 5877, "prediction": "Creates the index events ."}
{"id": 5879, "prediction": "Load a view of a view of a view ."}
{"id": 5881, "prediction": "Query for a style row"}
{"id": 5883, "prediction": "Get the pixel values from the image ."}
{"id": 5885, "prediction": "Creates a new image with the specified tile width and height ."}
{"id": 5887, "prediction": "Execute a query ."}
{"id": 5120, "prediction": "Adds a Chunk ."}
{"id": 5122, "prediction": "Reads the NMOID from the input stream ."}
{"id": 5124, "prediction": "Parses a code symbol for a code point ."}
{"id": 5126, "prediction": "Reads the message header ."}
{"id": 5128, "prediction": "Parses the code for the given code ."}
{"id": 5130, "prediction": "Convert a N - level array to a set of levels ."}
{"id": 5132, "prediction": "Adds a variable to the network ."}
{"id": 5134, "prediction": "Uncompress the input buffer ."}
{"id": 5136, "prediction": "Convert a byte array to an integer ."}
{"id": 5138, "prediction": "Perform DMR ."}
{"id": 5140, "prediction": "Send error response ."}
{"id": 5142, "prediction": "Stretch the specified point ."}
{"id": 5144, "prediction": "Get the bounds of this rectangle"}
{"id": 5146, "prediction": "Replace all data variables in a structure ."}
{"id": 5148, "prediction": "Read two bytes ."}
{"id": 5150, "prediction": "Read an int from a file ."}
{"id": 5152, "prediction": "Read a 32 - bit integer from a file ."}
{"id": 5154, "prediction": "Calculate a float value"}
{"id": 5156, "prediction": "Count the number of bits in a bitmap ."}
{"id": 5158, "prediction": "Converts the WGSKS to a WGSK ."}
{"id": 5160, "prediction": "Unescape the given string ."}
{"id": 5162, "prediction": "Creates an FMR record containing all the files in the file ."}
{"id": 5164, "prediction": "Returns the number of projected components ."}
{"id": 5166, "prediction": "Creates an array with the given section ."}
{"id": 5168, "prediction": "Reads a GribRecord ."}
{"id": 5170, "prediction": "Construct a UTM projection from a dataset ."}
{"id": 5172, "prediction": "Checks if the given value is before the given date ."}
{"id": 5174, "prediction": "Returns true if the given date is after the given date ."}
{"id": 5176, "prediction": "Add a coordinate system"}
{"id": 5178, "prediction": "Gets the unit string ."}
{"id": 5180, "prediction": "Read catalog catalog ."}
{"id": 5182, "prediction": "Recursively read catalogs from the given directory ."}
{"id": 5184, "prediction": "Converts a latitude to a string ."}
{"id": 5186, "prediction": "Compares this quantity to another quantity ."}
{"id": 5188, "prediction": "Sets the selected dataset ."}
{"id": 5190, "prediction": "Open the catalog ."}
{"id": 5192, "prediction": "Sets the catalog ."}
{"id": 5194, "prediction": "Write an integer to the stream ."}
{"id": 5196, "prediction": "Read a char array ."}
{"id": 5198, "prediction": "Adds a member to this group ."}
{"id": 5200, "prediction": "Gets the value of the member names ."}
{"id": 5202, "prediction": "Reads a bitmap from a file ."}
{"id": 5204, "prediction": "Gets the rows from the table ."}
{"id": 5206, "prediction": "Gets the value of a member ."}
{"id": 5208, "prediction": "Returns the double array of the given member ."}
{"id": 5210, "prediction": "Get a float array from a member ."}
{"id": 5212, "prediction": "Returns the byte array as a byte array ."}
{"id": 5214, "prediction": "Returns the java array as an int array ."}
{"id": 5216, "prediction": "Get a short array from a member ."}
{"id": 5218, "prediction": "Retrieve a long array from a member ."}
{"id": 5220, "prediction": "Returns the character array as a char array ."}
{"id": 5222, "prediction": "Checks if a dataset is a dataset"}
{"id": 5224, "prediction": "Transfer metadata from datastream to this node ."}
{"id": 5226, "prediction": "Add a product ."}
{"id": 5228, "prediction": "Show a summary of all missing values ."}
{"id": 5230, "prediction": "Dump the contents of the grid ."}
{"id": 5232, "prediction": "Subtracts a range of coverage coordinates ."}
{"id": 5234, "prediction": "Parses the DMR format ."}
{"id": 5236, "prediction": "Add a list of coordinates to the list ."}
{"id": 5238, "prediction": "Parse a variable selector ."}
{"id": 5240, "prediction": "Returns true if the rectangle contains the specified bounds ."}
{"id": 5242, "prediction": "Execute the HTTP GET method ."}
{"id": 5244, "prediction": "Determine if the axis is a coordinate type ."}
{"id": 5246, "prediction": "Reads a character from the stream ."}
{"id": 5248, "prediction": "Parse a URI into a URI ."}
{"id": 5250, "prediction": "Null - safe method ."}
{"id": 5252, "prediction": "Checks if the given dataset has been modified ."}
{"id": 5254, "prediction": "Returns a list of all the names of the mappings ."}
{"id": 5256, "prediction": "Gets the index of the index file ."}
{"id": 5258, "prediction": "Returns the number of counters in the nested counters ."}
{"id": 5260, "prediction": "Add a global attribute ."}
{"id": 5262, "prediction": "Renames a global attribute ."}
{"id": 5264, "prediction": "Adds an attribute ."}
{"id": 5266, "prediction": "Rename an attribute ."}
{"id": 5268, "prediction": "Writes the headers to the server ."}
{"id": 5270, "prediction": "Writes the station observations to a station ."}
{"id": 5272, "prediction": "Write the DSR header to the output stream ."}
{"id": 5274, "prediction": "Write error response ."}
{"id": 5276, "prediction": "Flush the data ."}
{"id": 5278, "prediction": "Returns true if the specified value is contained in this set ."}
{"id": 5280, "prediction": "Shift the range of the range ."}
{"id": 5282, "prediction": "Read data ."}
{"id": 5284, "prediction": "Gets the catalog of the catalog ."}
{"id": 5286, "prediction": "Sets the values ."}
{"id": 5288, "prediction": "Make a double array ."}
{"id": 5290, "prediction": "Checks if the requested variables are contained in the dataset ."}
{"id": 5292, "prediction": "Gets the resource path ."}
{"id": 5294, "prediction": "Reads the piff file ."}
{"id": 5296, "prediction": "Transfer all public private metadata from parent ."}
{"id": 5298, "prediction": "Transfer the inherited metadata from the target metadata ."}
{"id": 5300, "prediction": "Add a dataset ."}
{"id": 5302, "prediction": "Replace the dataset with the given ID ."}
{"id": 5304, "prediction": "Remove a service ."}
{"id": 5306, "prediction": "Remove local metadata ."}
{"id": 5308, "prediction": "Validates the schema ."}
{"id": 5310, "prediction": "Constructs the server path from the HttpServlet request ."}
{"id": 5312, "prediction": "Retrieves a feature from a geometry ."}
{"id": 5314, "prediction": "Handles the http request ."}
{"id": 5316, "prediction": "Returns the size of the S3 bucket ."}
{"id": 5318, "prediction": "Reads a dataset from a DAP dataset ."}
{"id": 5320, "prediction": "Send a string to the response ."}
{"id": 5322, "prediction": "Gets the URI of the request ."}
{"id": 5324, "prediction": "Gets the base URI ."}
{"id": 5326, "prediction": "Save the preferences ."}
{"id": 5328, "prediction": "Set bit offset ."}
{"id": 5330, "prediction": "Counts the number of bits in this table ."}
{"id": 5332, "prediction": "Create a document collection of station features ."}
{"id": 5334, "prediction": "Gets the record at the specified coordinates ."}
{"id": 5336, "prediction": "Adds an item to the list ."}
{"id": 5338, "prediction": "Get the slice at the specified index ."}
{"id": 5340, "prediction": "Gets the map of NCEPPC processes ."}
{"id": 5342, "prediction": "Set the value of this type"}
{"id": 5344, "prediction": "Copies the given input stream to the given output stream ."}
{"id": 5346, "prediction": "Reads the contents of an InputStream into a byte array ."}
{"id": 5348, "prediction": "Copies a file to the output stream ."}
{"id": 5350, "prediction": "Copies a directory to a directory ."}
{"id": 5352, "prediction": "Reads a file ."}
{"id": 5354, "prediction": "Writes the contents of a string to a file ."}
{"id": 5356, "prediction": "Dispatches a parse exception ."}
{"id": 5358, "prediction": "Sends a bad URL page ."}
{"id": 5360, "prediction": "Print the catalog ."}
{"id": 5362, "prediction": "Prints the error page ."}
{"id": 5364, "prediction": "Read a variable length ."}
{"id": 5366, "prediction": "Opens a collection of ncdfs ."}
{"id": 5368, "prediction": "Clean up a string ."}
{"id": 5370, "prediction": "Filters characters in a string ."}
{"id": 5372, "prediction": "Compare two strings ."}
{"id": 5374, "prediction": "Pad a string with the specified length ."}
{"id": 5889, "prediction": "Executes the query ."}
{"id": 5891, "prediction": "Converts a cursor to a Cursor ."}
{"id": 5893, "prediction": "Registers a new table with the given name ."}
{"id": 5895, "prediction": "Get the CoverageData for the tile"}
{"id": 5897, "prediction": "Get the coverage data for a tile"}
{"id": 5899, "prediction": "Get the results in the tile matrix ."}
{"id": 5901, "prediction": "Get the results in the tile zoom tile ."}
{"id": 5903, "prediction": "Get the value of the specified tile ."}
{"id": 5905, "prediction": "Get the icon for the given geometry type"}
{"id": 5907, "prediction": "Converts a byte array to a Bitmap ."}
{"id": 5909, "prediction": "Create a table ."}
{"id": 5911, "prediction": "Get the table metadata for a GeoPackage"}
{"id": 5913, "prediction": "Create table metadata ."}
{"id": 5915, "prediction": "Returns the feature row for the given cursor ."}
{"id": 5917, "prediction": "Query the cursor for a bounding box"}
{"id": 5919, "prediction": "Count the number of geometries ."}
{"id": 5921, "prediction": "Builds and returns the WHERE clause ."}
{"id": 5923, "prediction": "Count the number of features in the bounding box"}
{"id": 5925, "prediction": "Query for features ."}
{"id": 5927, "prediction": "Sets the bitmap ."}
{"id": 5929, "prediction": "Sets the bitmap configuration ."}
{"id": 5931, "prediction": "Adjust the bounding box for the bounding box"}
{"id": 5933, "prediction": "Adjust the bounds of the bounding box in the tile box"}
{"id": 5935, "prediction": "Get the bounding box for the tile level"}
{"id": 5937, "prediction": "Query for a tile row"}
{"id": 5939, "prediction": "Get the zoom level ."}
{"id": 5941, "prediction": "Query for a tile grid"}
{"id": 5943, "prediction": "Count the number of tiles in the zoom level ."}
{"id": 5945, "prediction": "Get the pixel value from the image ."}
{"id": 5947, "prediction": "Validate the image type"}
{"id": 5949, "prediction": "Sets the pixel value of the pixel in the image ."}
{"id": 5951, "prediction": "Gets the current row ."}
{"id": 5953, "prediction": "query for style mappings"}
{"id": 5955, "prediction": "Get a bounding rectangle ."}
{"id": 5957, "prediction": "Delete missing databases ."}
{"id": 5959, "prediction": "Checks if a database is valid ."}
{"id": 5961, "prediction": "Validate database ."}
{"id": 5963, "prediction": "Validate the database header ."}
{"id": 5965, "prediction": "Add internal databases ."}
{"id": 5967, "prediction": "Import a GeoPackage from the database ."}
{"id": 5969, "prediction": "Get the GeoPackage metadata from the external path"}
{"id": 5971, "prediction": "Populate geometry metadata ."}
{"id": 5973, "prediction": "Creates or updates the specified geometry ."}
{"id": 5975, "prediction": "Count the count of the table"}
{"id": 5977, "prediction": "Updates the content of a row ."}
{"id": 5979, "prediction": "Gets the simple attributes for the given IDs ."}
{"id": 5981, "prediction": "Get user mapping ."}
{"id": 5983, "prediction": "Returns all mappings for a given base id ."}
{"id": 5985, "prediction": "Checks if a user has a mapping between the base id and related id"}
{"id": 5987, "prediction": "Register a CursorWrapper for the GeoCursor"}
{"id": 5989, "prediction": "Get the tile from the request bounding box"}
{"id": 5991, "prediction": "Reproject a tile into a tile matrix ."}
{"id": 5993, "prediction": "Calculate the overlap of the drawable icon"}
{"id": 5995, "prediction": "Set the line paint"}
{"id": 5997, "prediction": "Draw a bitmap ."}
{"id": 5999, "prediction": "Draws the tile at the specified location ."}
{"id": 6001, "prediction": "Query the feature count ."}
{"id": 6003, "prediction": "Query the features in the bounding box ."}
{"id": 6005, "prediction": "Simplified method ."}
{"id": 6007, "prediction": "Returns the paint paint for the feature style ."}
{"id": 6009, "prediction": "Get the paint paint for the feature style"}
{"id": 6011, "prediction": "Get the style for the style"}
{"id": 6013, "prediction": "Gets the paint for the specified style ."}
{"id": 6015, "prediction": "Creates a bitmap for a given icon"}
{"id": 6017, "prediction": "Creates a bitmap ."}
{"id": 6019, "prediction": "Get the bitmap for a layer"}
{"id": 6021, "prediction": "Creates a bitmap for the layer ."}
{"id": 6023, "prediction": "Gets the style ."}
{"id": 6025, "prediction": "Get the feature style for the feature table"}
{"id": 6027, "prediction": "Get the style for a feature table"}
{"id": 6029, "prediction": "Get the icon for the feature table"}
{"id": 6031, "prediction": "Get the style for the feature table"}
{"id": 6033, "prediction": "Get the icons for a feature row"}
{"id": 6035, "prediction": "Get icons for a feature id"}
{"id": 6037, "prediction": "Set the style for a feature table"}
{"id": 6039, "prediction": "Set the feature style for the feature table"}
{"id": 6041, "prediction": "Sets the styles for a feature row ."}
{"id": 6043, "prediction": "Set the style for a feature row"}
{"id": 6045, "prediction": "Set the default style for a feature table"}
{"id": 6047, "prediction": "Sets the icons for the feature table ."}
{"id": 6049, "prediction": "Set the default icon for a feature row"}
{"id": 6051, "prediction": "Gets the style id ."}
{"id": 6053, "prediction": "Insert style mapping ."}
{"id": 6055, "prediction": "Delete the table icon"}
{"id": 6057, "prediction": "Delete the feature mapping"}
{"id": 6059, "prediction": "Get all the style IDs for a feature table"}
{"id": 6061, "prediction": "Get all style IDs for a feature table"}
{"id": 6063, "prediction": "Gets the image bytes ."}
{"id": 6065, "prediction": "Get the pixel value"}
{"id": 6067, "prediction": "Draw a feature ."}
{"id": 6069, "prediction": "Draw a polygon"}
{"id": 6071, "prediction": "Add a polygon to the polygon"}
{"id": 6073, "prediction": "Remove a feature row from the database ."}
{"id": 6075, "prediction": "Gets the cached table style ."}
{"id": 6077, "prediction": "Get the RTree table"}
{"id": 6079, "prediction": "Sets the height of the height ."}
{"id": 6081, "prediction": "Calculate the density of a tile"}
{"id": 6083, "prediction": "Read a Table Custom Table"}
{"id": 6085, "prediction": "Validate the color"}
{"id": 6087, "prediction": "Get the GeoPackageManager ."}
{"id": 6089, "prediction": "Returns the index of the specified types ."}
{"id": 6091, "prediction": "Delete the indices for the given collection ."}
{"id": 6093, "prediction": "Delete the list of indices for the given type ."}
{"id": 6095, "prediction": "Returns true if the feature is indexed ."}
{"id": 6097, "prediction": "Query the feature index ."}
{"id": 6099, "prediction": "Returns the bounding box of the feature table ."}
{"id": 6101, "prediction": "Returns the index of the index type ."}
{"id": 6103, "prediction": "Gets the file path ."}
{"id": 6105, "prediction": "Sets the geometry type ."}
{"id": 6107, "prediction": "Replaces the XYZ coordinates of a URL ."}
{"id": 6109, "prediction": "Replaces the bounding box in the url"}
{"id": 6111, "prediction": "Get the geometry"}
{"id": 6113, "prediction": "Update the last indexed time"}
{"id": 6115, "prediction": "Delete the geometry"}
{"id": 6117, "prediction": "Execute the query"}
{"id": 6119, "prediction": "Count the number of features in the bounding box"}
{"id": 6121, "prediction": "Count the number of geometries ."}
{"id": 6123, "prediction": "Count the number of features in the bounding box"}
{"id": 6125, "prediction": "Get the geometry metadata for the cursor"}
{"id": 6127, "prediction": "Get the feature row for the given geometryMetadata ."}
{"id": 6129, "prediction": "Get the features for a tile table"}
{"id": 6131, "prediction": "Query by id"}
{"id": 6133, "prediction": "Returns a list of unique IDs for the user ."}
{"id": 6135, "prediction": "Delete by relatedId"}
{"id": 6137, "prediction": "Builds the WHERE clause for the base table"}
{"id": 6139, "prediction": "Delete the database"}
{"id": 6141, "prediction": "Renames a new name"}
{"id": 6143, "prediction": "Get the GeoPackage metadata"}
{"id": 6145, "prediction": "Get the GeoPackage metadata"}
{"id": 6147, "prediction": "Get the metadata for an external path"}
{"id": 6149, "prediction": "Get metadata by name"}
{"id": 6151, "prediction": "Create GeoPackage metadata ."}
{"id": 6153, "prediction": "Add a parax view to the view ."}
{"id": 6155, "prediction": "Create a custom view ."}
{"id": 6157, "prediction": "Find the logback configuration file from the system properties file ."}
{"id": 6159, "prediction": "Automatic configuration ."}
{"id": 6161, "prediction": "Converts a socket address to a string ."}
{"id": 6163, "prediction": "Start all converters ."}
{"id": 6165, "prediction": "Adds a substitution property ."}
{"id": 6167, "prediction": "Compiles the given node ."}
{"id": 6169, "prediction": "Parse a token ."}
{"id": 6171, "prediction": "Converts a fixed date to a regular expression ."}
{"id": 6173, "prediction": "End evaluator ."}
{"id": 6175, "prediction": "Creates a dynamical context selector ."}
{"id": 6177, "prediction": "Gets the external storage directory path ."}
{"id": 6179, "prediction": "Returns the absolute path relative to the application ."}
{"id": 6181, "prediction": "Returns the value of the discriminator property ."}
{"id": 6183, "prediction": "Gets the filter decision chain ."}
{"id": 6185, "prediction": "Create the trust manager ."}
{"id": 6187, "prediction": "Returns the location of the system property ."}
{"id": 6189, "prediction": "Check if a Throwable has been caught ."}
{"id": 6191, "prediction": "Prints the status of the given message ."}
{"id": 6193, "prediction": "Prints a warning message ."}
{"id": 6195, "prediction": "Get the entry from the map ."}
{"id": 6197, "prediction": "Creates a FormatInfo object from a string ."}
{"id": 6199, "prediction": "Checks if the source file is on the target file ."}
{"id": 6201, "prediction": "Get the value of a system property ."}
{"id": 6203, "prediction": "Outputs all mappings for mappings ."}
{"id": 6205, "prediction": "Checks if the current class is in the framework"}
{"id": 6207, "prediction": "Adds a status listener to the console ."}
{"id": 6209, "prediction": "Get the applicable actions for an element ."}
{"id": 6211, "prediction": "Returns the value of the system property ."}
{"id": 6213, "prediction": "Decodes the given name ."}
{"id": 6215, "prediction": "Returns an array of property descriptors for the given class ."}
{"id": 6217, "prediction": "Registers an onConsoleStatusListener instance ."}
{"id": 6219, "prediction": "Returns the discriminator value for the given event ."}
{"id": 6221, "prediction": "Create a shutdown hook ."}
{"id": 6223, "prediction": "Returns the enabled set of supported protocols ."}
{"id": 6225, "prediction": "Returns an array of strings that includes the excluded strings ."}
{"id": 6227, "prediction": "Sets properties ."}
{"id": 6229, "prediction": "Removes an appender from the list ."}
{"id": 6231, "prediction": "Propagate parent level ."}
{"id": 6233, "prediction": "Detaches an appender from the application ."}
{"id": 6235, "prediction": "Calls the filters for the given marker ."}
{"id": 6237, "prediction": "Creates a socket ."}
{"id": 6239, "prediction": "Convert this object to an integer ."}
{"id": 6241, "prediction": "Returns the number of occurrences of the specified resource ."}
{"id": 6243, "prediction": "Returns the ClassLoader for the given object ."}
{"id": 6245, "prediction": "Returns the class loader for the given class ."}
{"id": 6247, "prediction": "Returns the tag name for the given event ."}
{"id": 6249, "prediction": "Gets the separator index of the given name ."}
{"id": 6251, "prediction": "Returns the client name for the given socket ."}
{"id": 6253, "prediction": "Starts the session ."}
{"id": 6255, "prediction": "Sends a message to the buffer ."}
{"id": 6257, "prediction": "Create a converter for the given keyword ."}
{"id": 6259, "prediction": "Determines the compression mode ."}
{"id": 6261, "prediction": "Configure the given file ."}
{"id": 6263, "prediction": "Build the interpreter ."}
{"id": 6265, "prediction": "Runs the program ."}
{"id": 6267, "prediction": "Sets the name of the context ."}
{"id": 6269, "prediction": "Gets the last reset date ."}
{"id": 6271, "prediction": "Gets the effective converter map ."}
{"id": 6273, "prediction": "Get the file footer ."}
{"id": 6275, "prediction": "Ends the execution context ."}
{"id": 6277, "prediction": "Adds a client to the client ."}
{"id": 6279, "prediction": "Get a copy of the context map ."}
{"id": 6281, "prediction": "Gets the filter decision chain ."}
{"id": 6283, "prediction": "Initialize the default logger ."}
{"id": 6285, "prediction": "Prints the status of the status of the current status ."}
{"id": 6287, "prediction": "Gets the database file ."}
{"id": 6289, "prediction": "Check if the expiry is expired ."}
{"id": 6291, "prediction": "Append the event to the given event ."}
{"id": 6293, "prediction": "Converts an object to a string ."}
{"id": 6295, "prediction": "Merge the properties map ."}
{"id": 6297, "prediction": "Returns the length of the prefix of this element ."}
{"id": 6299, "prediction": "Sets a property ."}
{"id": 6301, "prediction": "Get the child map ."}
{"id": 6303, "prediction": "Open an input stream ."}
{"id": 6305, "prediction": "Start the server ."}
{"id": 6307, "prediction": "Sets the default hosts ."}
{"id": 6309, "prediction": "Synchronously synchronize the data ."}
{"id": 6311, "prediction": "Waits for a specific task ."}
{"id": 6313, "prediction": "Convert an input stream to a string ."}
{"id": 6315, "prediction": "Consumes the connection ."}
{"id": 6317, "prediction": "Sets the type of the type ."}
{"id": 6319, "prediction": "Put a value into the cache ."}
{"id": 6321, "prediction": "Waits for all threads ."}
{"id": 6323, "prediction": "Report an exception ."}
{"id": 6325, "prediction": "Loads properties from the given file ."}
{"id": 6327, "prediction": "Gets a method by its name ."}
{"id": 6329, "prediction": "Format a double ."}
{"id": 6331, "prediction": "Reads a JSON syntax character ."}
{"id": 6333, "prediction": "Write a JSON string ."}
{"id": 6335, "prediction": "Write a double ."}
{"id": 6337, "prediction": "Reads a JSON numeric numeric value ."}
{"id": 6339, "prediction": "Read a double ."}
{"id": 6341, "prediction": "Executes the given method call ."}
{"id": 6343, "prediction": "Enqueue a method call ."}
{"id": 6345, "prediction": "Update the decoration ."}
{"id": 6347, "prediction": "Gets the resource history view ."}
{"id": 6349, "prediction": "Reports an error failure ."}
{"id": 6351, "prediction": "Create the default page ."}
{"id": 6353, "prediction": "Sets the keepalive ."}
{"id": 6355, "prediction": "Sets the owner ."}
{"id": 6357, "prediction": "Creates a new condition term ."}
{"id": 6359, "prediction": "Gets the DDL content for a given rule source ."}
{"id": 6361, "prediction": "Reads the configuration file ."}
{"id": 6363, "prediction": "Adds the response body ."}
{"id": 6365, "prediction": "Inserts the href before the given element ."}
{"id": 6367, "prediction": "Adds a prop stat ."}
{"id": 6369, "prediction": "Replies the status of the node ."}
{"id": 6371, "prediction": "Checks if the class is a subtype of the given class ."}
{"id": 6373, "prediction": "Clone a node ."}
{"id": 6375, "prediction": "Creates the actions ."}
{"id": 6377, "prediction": "Gets the value of a property ."}
{"id": 6379, "prediction": "Sets the location of the property ."}
{"id": 6381, "prediction": "Sets the size of the gauge ."}
{"id": 6383, "prediction": "Adds the lock entry ."}
{"id": 6385, "prediction": "Remove a child from this vertex ."}
{"id": 6387, "prediction": "Stop the process ."}
{"id": 6389, "prediction": "Gets the resource bundle ."}
{"id": 6391, "prediction": "Set date time ."}
{"id": 6393, "prediction": "Creates an error ."}
{"id": 6395, "prediction": "Adds a field editor ."}
{"id": 6397, "prediction": "Apply the font ."}
{"id": 6399, "prediction": "Initialize the fields ."}
{"id": 5376, "prediction": "Removes a character from the string ."}
{"id": 5378, "prediction": "Collapse all whitespace characters ."}
{"id": 5380, "prediction": "Replaces all occurrences of a string with the given replacement"}
{"id": 5382, "prediction": "Replaces the substring with the given substring ."}
{"id": 5384, "prediction": "Removes all characters from the given string ."}
{"id": 5386, "prediction": "Replaces all occurrences of the given string with the given string ."}
{"id": 5388, "prediction": "Removes all characters from the specified string ."}
{"id": 5390, "prediction": "Check the state of the current state ."}
{"id": 5392, "prediction": "Show the unique templates ."}
{"id": 5394, "prediction": "Release resources ."}
{"id": 5396, "prediction": "Copies an array structure into a ByteBuffer ."}
{"id": 5398, "prediction": "Creates a copy of the given structure ."}
{"id": 5400, "prediction": "Gets the time interval size of the hours ."}
{"id": 5402, "prediction": "Creates a new TableAnalyzer instance ."}
{"id": 5404, "prediction": "Analyze the tree structure"}
{"id": 5406, "prediction": "Gets a list of latitudes ."}
{"id": 5408, "prediction": "Swap a float value from a byte array"}
{"id": 5410, "prediction": "Sets the coordinate axes ."}
{"id": 5412, "prediction": "Returns the common parent of this group ."}
{"id": 5414, "prediction": "Sets the parent group ."}
{"id": 5416, "prediction": "Adds a dimension to this group ."}
{"id": 5418, "prediction": "Adds an enum type to this group ."}
{"id": 5420, "prediction": "Removes the specified dimension ."}
{"id": 5422, "prediction": "Converts an alias to a DDS alias field ."}
{"id": 5424, "prediction": "Returns the variable with the given name ."}
{"id": 5426, "prediction": "Replaces all missing values in the grid with the missing values ."}
{"id": 5428, "prediction": "Gets the x offset of a longitude ."}
{"id": 5430, "prediction": "Writes an exception ."}
{"id": 5432, "prediction": "Create top level index file ."}
{"id": 5434, "prediction": "Update GribCollection"}
{"id": 5436, "prediction": "Creates a GribCollection from a file ."}
{"id": 5438, "prediction": "Opens a new GribCollection ."}
{"id": 5440, "prediction": "Adds a triple to the dictionary ."}
{"id": 5442, "prediction": "Sets all known URIs ."}
{"id": 5444, "prediction": "Inserts a triple into the trie ."}
{"id": 5446, "prediction": "Find a dataset by name ."}
{"id": 5448, "prediction": "Get the shapes for the specified graphics ."}
{"id": 5450, "prediction": "Compares this string with the specified ID ."}
{"id": 5452, "prediction": "Checks if the given collection is already deleted ."}
{"id": 5454, "prediction": "Sets the object at the given index ."}
{"id": 5456, "prediction": "Copy all data structures from the recursively ."}
{"id": 5458, "prediction": "Convert a scalar value to a double ."}
{"id": 5460, "prediction": "Get a float value from a member ."}
{"id": 5462, "prediction": "Get a short from a member ."}
{"id": 5464, "prediction": "Get a string value from a member ."}
{"id": 5466, "prediction": "Get the ArraySequence from a member ."}
{"id": 5468, "prediction": "Returns the minimum value of the given value ."}
{"id": 5470, "prediction": "Returns a string representation of this constraint ."}
{"id": 5472, "prediction": "Evaluates a VCF query against the specified predicate ."}
{"id": 5474, "prediction": "Compute the set of variables ."}
{"id": 5476, "prediction": "Compile a CPE constraint ."}
{"id": 5478, "prediction": "This method is called when an action is triggered ."}
{"id": 5480, "prediction": "Sets the byte order ."}
{"id": 5482, "prediction": "Returns the file header with the given name ."}
{"id": 5484, "prediction": "Prints the parts ."}
{"id": 5486, "prediction": "Reads a DMFLT from the given word ."}
{"id": 5488, "prediction": "Unpartitions the data of a DMPP record ."}
{"id": 5490, "prediction": "Writes a NetCF file to the channel ."}
{"id": 5492, "prediction": "Parse a grid element ."}
{"id": 5494, "prediction": "Decodes a list of KeyDescriptors ."}
{"id": 5496, "prediction": "Get the dataset name ."}
{"id": 5498, "prediction": "Returns true if the two values are equal ."}
{"id": 5500, "prediction": "Parse unit ."}
{"id": 5502, "prediction": "Checks if a variable is marked as a variable ."}
{"id": 5504, "prediction": "Convert a latlon to a projection"}
{"id": 5506, "prediction": "Make a map of attribute names ."}
{"id": 5508, "prediction": "Returns the value at the specified index ."}
{"id": 5510, "prediction": "Sets the value of the attribute ."}
{"id": 5512, "prediction": "Sets the values of an array ."}
{"id": 5514, "prediction": "Generates an InvocationResolver for a proxy dataset"}
{"id": 5516, "prediction": "Sets the target datatype ."}
{"id": 5518, "prediction": "Called when the data type is selected ."}
{"id": 5520, "prediction": "Sets up the GUI ."}
{"id": 5522, "prediction": "Returns the full name of the axes ."}
{"id": 5524, "prediction": "Finds a coordinate axis with the specified type ."}
{"id": 5526, "prediction": "Determines if this projection is a geo projection ."}
{"id": 5528, "prediction": "Checks if a subset is a subset of the given collection ."}
{"id": 5530, "prediction": "Checks if the given axis has the same name ."}
{"id": 5532, "prediction": "Checks if there are any axes in the list of axes ."}
{"id": 5534, "prediction": "Clone the DAP node ."}
{"id": 5536, "prediction": "Get the list of beans ."}
{"id": 5538, "prediction": "Set the selected bean ."}
{"id": 5540, "prediction": "Creates an unknown unit ."}
{"id": 5542, "prediction": "Checks if the given variable is a variable ."}
{"id": 5544, "prediction": "Find the coordinate variable for a given coordinate ."}
{"id": 5546, "prediction": "Add join join ."}
{"id": 5548, "prediction": "Creates the node map ."}
{"id": 5550, "prediction": "Creates a new instance with the given name ."}
{"id": 5552, "prediction": "Checks if the unit strings are compatible with the given exceptions ."}
{"id": 5554, "prediction": "Checks if the given string is a time unit ."}
{"id": 5556, "prediction": "Convert a value to another unit ."}
{"id": 5558, "prediction": "Gets the scale value ."}
{"id": 5560, "prediction": "Creates a new BoolFunction clause ."}
{"id": 5562, "prediction": "Creates a gray image from an array ."}
{"id": 5564, "prediction": "Crawl a dataset"}
{"id": 5566, "prediction": "Get file or cache if not exists ."}
{"id": 5568, "prediction": "Sets the debug flag ."}
{"id": 5570, "prediction": "Close the file ."}
{"id": 5572, "prediction": "Flush the buffer ."}
{"id": 5574, "prediction": "Read a short array ."}
{"id": 5576, "prediction": "Read an int from an array of integers ."}
{"id": 5578, "prediction": "Read a float array ."}
{"id": 5580, "prediction": "Read a string ."}
{"id": 5582, "prediction": "Write boolean array ."}
{"id": 5584, "prediction": "Writes a char array to the stream ."}
{"id": 5586, "prediction": "Write long array ."}
{"id": 5588, "prediction": "Write double array ."}
{"id": 5590, "prediction": "Writes a byte array to the output stream ."}
{"id": 5592, "prediction": "Append the query to the template ."}
{"id": 5594, "prediction": "Find index ."}
{"id": 5596, "prediction": "Creates a list of children ."}
{"id": 5598, "prediction": "Read files from index reader ."}
{"id": 5600, "prediction": "Acquires a file ."}
{"id": 5602, "prediction": "Emit a cache entry ."}
{"id": 5604, "prediction": "Calculate a 4 - bit integer ."}
{"id": 5606, "prediction": "Clears the cache ."}
{"id": 5608, "prediction": "Returns true if this point is a global value ."}
{"id": 5610, "prediction": "Finds and returns the index of the XY coordinate ."}
{"id": 5612, "prediction": "Finds and returns the index of the coordinates in the given latitude ."}
{"id": 5614, "prediction": "Gets the position of the arrow ."}
{"id": 5616, "prediction": "Iterate over the mFileCollection ."}
{"id": 5618, "prediction": "Returns the name of the subregion ."}
{"id": 5620, "prediction": "Creates a CalendarPeriod instance ."}
{"id": 5622, "prediction": "Subtracts the difference between two dates ."}
{"id": 5624, "prediction": "Gets the millisecond value in milliseconds ."}
{"id": 5626, "prediction": "Synchronizes the index file ."}
{"id": 5628, "prediction": "Add a date extension ."}
{"id": 5630, "prediction": "Find the data root for the given path ."}
{"id": 6401, "prediction": "Set the active editor ."}
{"id": 6403, "prediction": "Determine dialect ."}
{"id": 6405, "prediction": "Save the file ."}
{"id": 6407, "prediction": "Creates the table ."}
{"id": 6409, "prediction": "Put a value into the table ."}
{"id": 6411, "prediction": "Adds a child node to this node ."}
{"id": 6413, "prediction": "Adds a condition ."}
{"id": 6415, "prediction": "Returns true if this condition matches the given condition ."}
{"id": 6417, "prediction": "Replies the status of the node ."}
{"id": 6419, "prediction": "Gets the last line from a string ."}
{"id": 6421, "prediction": "Binds the given identifier to the given id ."}
{"id": 6423, "prediction": "Returns the message for the given id ."}
{"id": 6425, "prediction": "Create a sample unit test ."}
{"id": 6427, "prediction": "Visit a Retrie ."}
{"id": 6429, "prediction": "Returns the dot id for the given object ."}
{"id": 6431, "prediction": "Create a property ."}
{"id": 6433, "prediction": "Gets the presentationReconciler ."}
{"id": 6435, "prediction": "Returns true if this term contains the given condition ."}
{"id": 6437, "prediction": "Add pages ."}
{"id": 6439, "prediction": "Performs a POST request ."}
{"id": 6441, "prediction": "Executes the pull operation ."}
{"id": 6443, "prediction": "Sets the value at the given index ."}
{"id": 6445, "prediction": "Filters the list of proposals with the given prefix ."}
{"id": 6447, "prediction": "Calculates the rows in the graph ."}
{"id": 6449, "prediction": "Gets the part for the given model element ."}
{"id": 6451, "prediction": "Declares an image registry ."}
{"id": 6453, "prediction": "Returns the index of the given vertex ."}
{"id": 6455, "prediction": "Dumps all vertices ."}
{"id": 6457, "prediction": "Load a retree model ."}
{"id": 6459, "prediction": "Draws a new graph ."}
{"id": 6461, "prediction": "Sets the href attribute ."}
{"id": 6463, "prediction": "Performs a copy of the specified properties ."}
{"id": 6465, "prediction": "Extract the URL statistics for a single response ."}
{"id": 6467, "prediction": "Returns an enumeration of the current lock ."}
{"id": 6469, "prediction": "Perform a HEAD request ."}
{"id": 6471, "prediction": "Move the specified URI to the specified destination ."}
{"id": 6473, "prediction": "Refresh the lock ."}
{"id": 6475, "prediction": "Remove a property ."}
{"id": 6477, "prediction": "Sets a set of properties ."}
{"id": 6479, "prediction": "Unlock a lock ."}
{"id": 6481, "prediction": "Perform the version of the server ."}
{"id": 6483, "prediction": "Examines the status code ."}
{"id": 6485, "prediction": "Writes the request body to the stream ."}
{"id": 6487, "prediction": "Converts an array of ints to a hexadecimal string ."}
{"id": 6489, "prediction": "Sets the value of the property name ."}
{"id": 6491, "prediction": "Removes the last word from the string ."}
{"id": 6493, "prediction": "Writes the content to the stream ."}
{"id": 6495, "prediction": "Mark parser errors ."}
{"id": 6497, "prediction": "Add a file to the target location"}
{"id": 6499, "prediction": "Gets the age ."}
{"id": 6501, "prediction": "Returns the maximum number of forward pointers ."}
{"id": 6503, "prediction": "Returns true if the request should be printed ."}
{"id": 6505, "prediction": "Put a value into the context ."}
{"id": 6507, "prediction": "Open DDL file ."}
{"id": 6509, "prediction": "Extract metadata from text ."}
{"id": 6511, "prediction": "Adds tokens to the tree ."}
{"id": 6513, "prediction": "Get all children of the given object"}
{"id": 6515, "prediction": "Print the tree ."}
{"id": 6517, "prediction": "Prints the number of tabs ."}
{"id": 6519, "prediction": "Get an image descriptor ."}
{"id": 6521, "prediction": "Sets a request header field ."}
{"id": 6523, "prediction": "Create the rule file ."}
{"id": 6525, "prediction": "Creates the project sample launcher ."}
{"id": 6527, "prediction": "Create an image ."}
{"id": 6529, "prediction": "Gets the evaluator ."}
{"id": 6531, "prediction": "Adds Guava properties to the given resource ."}
{"id": 6533, "prediction": "Bind a member ."}
{"id": 6535, "prediction": "Optimize the edges ."}
{"id": 6537, "prediction": "Validate the page group ."}
{"id": 6539, "prediction": "Returns the opposite of the given vertex ."}
{"id": 6541, "prediction": "Checks to see if the user belongs to the user ."}
{"id": 6543, "prediction": "Adds the user to the file ."}
{"id": 6545, "prediction": "Clear the password ."}
{"id": 6547, "prediction": "Checks if the given string is valid ."}
{"id": 6549, "prediction": "Create a new Evaluation object ."}
{"id": 6551, "prediction": "Determines if this is a Java version ."}
{"id": 6553, "prediction": "Gets package name ."}
{"id": 6555, "prediction": "Gets the argument class ."}
{"id": 6557, "prediction": "Finds the appropriate method for the given parameters ."}
{"id": 6559, "prediction": "Gets the property descriptors for the given class ."}
{"id": 6561, "prediction": "Gets a read method ."}
{"id": 6563, "prediction": "Parses a projection expression ."}
{"id": 6565, "prediction": "Convert value to long ."}
{"id": 6567, "prediction": "Convert value to BigInteger ."}
{"id": 6569, "prediction": "Convert an object to a string ."}
{"id": 6571, "prediction": "Converts a value to an object ."}
{"id": 6573, "prediction": "Returns the numeric type of the specified type ."}
{"id": 6575, "prediction": "Creates an integer from the given type ."}
{"id": 6577, "prediction": "Generate an object getter method ."}
{"id": 6579, "prediction": "Flattens the tree ."}
{"id": 6581, "prediction": "Escape a single character ."}
{"id": 6583, "prediction": "Returns the value of the given expression ."}
{"id": 6585, "prediction": "Sets the value of the given node ."}
{"id": 6587, "prediction": "Gets the default watch service id ."}
{"id": 6589, "prediction": "Reads the file as a string ."}
{"id": 6591, "prediction": "Returns an instance of the given name ."}
{"id": 6593, "prediction": "Reads a file as a string ."}
{"id": 6595, "prediction": "Add system property ."}
{"id": 6597, "prediction": "Open a new folder dialog ."}
{"id": 6599, "prediction": "Refresh the button state ."}
{"id": 6601, "prediction": "Return the selected folder ."}
{"id": 6603, "prediction": "Checks if a file is a valid file ."}
{"id": 6605, "prediction": "Start a new list ."}
{"id": 6607, "prediction": "Handle motion ."}
{"id": 6609, "prediction": "Compute the layout ."}
{"id": 6611, "prediction": "Add a span to the text ."}
{"id": 6613, "prediction": "Gets the spinner view ."}
{"id": 6615, "prediction": "Searches for paragraphs within the specified span ."}
{"id": 6617, "prediction": "Determines the original image for the given URI ."}
{"id": 6619, "prediction": "Gets local name ."}
{"id": 6621, "prediction": "Set an attribute ."}
{"id": 6623, "prediction": "Get the font name from a file ."}
{"id": 6625, "prediction": "Writes a byte array to the buffer ."}
{"id": 6627, "prediction": "Writes the contents of an InputStream to the stream ."}
{"id": 6629, "prediction": "Returns a copy of the buffer ."}
{"id": 6631, "prediction": "Converts a path to a separator ."}
{"id": 6633, "prediction": "Ensure the pan view is visible ."}
{"id": 6635, "prediction": "Resets the document locator ."}
{"id": 6637, "prediction": "Add an element type ."}
{"id": 6639, "prediction": "Set the parent of the given element ."}
{"id": 6641, "prediction": "Returns the integer value for the given name ."}
{"id": 6643, "prediction": "Applies the given value to the given editor ."}
{"id": 6645, "prediction": "Called when an operation is executed ."}
{"id": 6647, "prediction": "Replaces all occurrences of the given source with the given string ."}
{"id": 6649, "prediction": "Set the decoding options ."}
{"id": 6651, "prediction": "Decode a bitmap ."}
{"id": 6653, "prediction": "Gets the asset fonts ."}
{"id": 6655, "prediction": "Sets up the elements ."}
{"id": 5632, "prediction": "Get the date range for the given calendar ."}
{"id": 5634, "prediction": "Creates a new NetcdfFileWriter for the given location ."}
{"id": 5636, "prediction": "Adds an enum enum to the group ."}
{"id": 5638, "prediction": "Renames a group attribute ."}
{"id": 5640, "prediction": "Abortly close the connection ."}
{"id": 5642, "prediction": "Extracts the metadata from a dataset ."}
{"id": 5644, "prediction": "Convert this unit to another unit ."}
{"id": 5646, "prediction": "Convert a variable to a nested nested nested variable ."}
{"id": 5648, "prediction": "Convert a datap to a datap ."}
{"id": 5650, "prediction": "Opens the database ."}
{"id": 5652, "prediction": "Ensures that the given array is empty ."}
{"id": 5654, "prediction": "Create a catalog for the given directory ."}
{"id": 5656, "prediction": "Get the coordinate type ."}
{"id": 5658, "prediction": "Calculates the time of a date ."}
{"id": 5660, "prediction": "Parses a local concept ."}
{"id": 5662, "prediction": "Clean up line ."}
{"id": 5664, "prediction": "Writes the Gribs table to the file ."}
{"id": 5666, "prediction": "Show local concepts ."}
{"id": 5668, "prediction": "Returns the DatasourceType for the given name ."}
{"id": 5670, "prediction": "Expand the entire dataset ."}
{"id": 5672, "prediction": "Add a dataset list to the dataset ."}
{"id": 5674, "prediction": "Loads a picture from the image ."}
{"id": 5676, "prediction": "Called when a source picture is changed ."}
{"id": 5678, "prediction": "Creates a scaled image ."}
{"id": 5680, "prediction": "Get the size of the image ."}
{"id": 5682, "prediction": "Creates the header for the given experiment ."}
{"id": 5684, "prediction": "Checks if the part of the given part is valid ."}
{"id": 5686, "prediction": "Create the root directory ."}
{"id": 5688, "prediction": "Deletes the cache files ."}
{"id": 5690, "prediction": "Determine if the buffer is a binary table ."}
{"id": 5692, "prediction": "Creates a copy of this coordinate ."}
{"id": 5694, "prediction": "Prints the information about the layout ."}
{"id": 5696, "prediction": "Sets the list ."}
{"id": 5698, "prediction": "Increment the selected row ."}
{"id": 5700, "prediction": "Sets the currently selected index ."}
{"id": 5702, "prediction": "Swap two strings ."}
{"id": 5704, "prediction": "Rotate the given longitude ."}
{"id": 5706, "prediction": "Create an XML store from an input stream ."}
{"id": 5708, "prediction": "Create a standard filename for the given app ."}
{"id": 5710, "prediction": "Save the XML store ."}
{"id": 5712, "prediction": "Writes the DAP data structure ."}
{"id": 5714, "prediction": "Write a sequence of datapoints ."}
{"id": 5716, "prediction": "Checks if the file is valid ."}
{"id": 5718, "prediction": "Reads a row number from the stream ."}
{"id": 5720, "prediction": "Get data points"}
{"id": 5722, "prediction": "Reads the data from the given slice ."}
{"id": 5724, "prediction": "Calculates the size of a grid file ."}
{"id": 5726, "prediction": "Set the list of stations ."}
{"id": 5728, "prediction": "Selects a station with the given point ."}
{"id": 5730, "prediction": "Returns the selected station ."}
{"id": 5732, "prediction": "Returns the list of stations in the given location ."}
{"id": 5734, "prediction": "Returns a DataIterator for the given station ."}
{"id": 5736, "prediction": "Reads data from the gate ."}
{"id": 5738, "prediction": "Returns the norm of this matrix ."}
{"id": 5740, "prediction": "Set all the services in the given dataset ."}
{"id": 5742, "prediction": "Returns the parameter with the given id ."}
{"id": 5744, "prediction": "Add a symbol ."}
{"id": 5746, "prediction": "Checks if the given source is an email ."}
{"id": 5748, "prediction": "Calculates the CRC"}
{"id": 5750, "prediction": "Returns the field index of the specified field ."}
{"id": 5752, "prediction": "Gets the time coordinate ."}
{"id": 5754, "prediction": "Sets the previous polygon ."}
{"id": 5756, "prediction": "Set the current projection"}
{"id": 5758, "prediction": "Register a file with the given class name ."}
{"id": 5760, "prediction": "Register an IOProvider for the specified class ."}
{"id": 5762, "prediction": "Remove an instance of the given class ."}
{"id": 5764, "prediction": "Creates a new NetdfCdfFile ."}
{"id": 5766, "prediction": "Open a netdfcdf file ."}
{"id": 5768, "prediction": "Find global attribute ."}
{"id": 5770, "prediction": "Writes the CDL document to the output stream ."}
{"id": 5772, "prediction": "Write the CDL document ."}
{"id": 5774, "prediction": "Adds an attribute to the group ."}
{"id": 5776, "prediction": "Adds a dimension to this group ."}
{"id": 5778, "prediction": "Adds a variable to this group ."}
{"id": 5780, "prediction": "Adds a variable to the string ."}
{"id": 5782, "prediction": "Sends a SOAP message ."}
{"id": 5784, "prediction": "Finalize this group ."}
{"id": 5786, "prediction": "Reads a variable from the given section ."}
{"id": 5788, "prediction": "Read a variable section ."}
{"id": 5790, "prediction": "Creates a full path with the given name ."}
{"id": 5792, "prediction": "Checks if the given file is excluded ."}
{"id": 5794, "prediction": "Appends a value to the vector ."}
{"id": 5796, "prediction": "Attempts to convert a value to a type ."}
{"id": 5798, "prediction": "Check a short value ."}
{"id": 5800, "prediction": "Checks whether the given string is a valid UUID ."}
{"id": 5802, "prediction": "Check double value ."}
{"id": 5804, "prediction": "Determines if the given dataset is visible ."}
{"id": 5806, "prediction": "Checks if the given alphanumeric string is valid ."}
{"id": 5808, "prediction": "Recursively descend on a path ."}
{"id": 5810, "prediction": "Gets the value of a parameter ."}
{"id": 5812, "prediction": "Processes the input stream ."}
{"id": 5814, "prediction": "Remove quotes from string ."}
{"id": 5816, "prediction": "Writes the network to the network ."}
{"id": 5818, "prediction": "Write a CDL document ."}
{"id": 5820, "prediction": "Validate the result ."}
{"id": 5822, "prediction": "Returns the elevation of the message ."}
{"id": 5824, "prediction": "Returns the array of the longitudes in this array ."}
{"id": 5826, "prediction": "Get the azimuths ."}
{"id": 5828, "prediction": "Returns a subset of this structure with the specified members ."}
{"id": 5830, "prediction": "Adds a member variable ."}
{"id": 5832, "prediction": "Sets the parent group of this variable ."}
{"id": 5834, "prediction": "Read a structured structure ."}
{"id": 5836, "prediction": "Returns an IteratorIterator ."}
{"id": 5838, "prediction": "Gets the class name ."}
{"id": 5840, "prediction": "Gets the header ."}
{"id": 5842, "prediction": "Returns the version of the given name ."}
{"id": 5844, "prediction": "Delete next file ."}
{"id": 5846, "prediction": "Renders the plan ."}
{"id": 5848, "prediction": "Gets the message type ."}
{"id": 5850, "prediction": "Sets the API key ."}
{"id": 5852, "prediction": "Creates a label with the given lines ."}
{"id": 5854, "prediction": "Connects to a connection ."}
{"id": 5856, "prediction": "Connect to a connection ."}
{"id": 5858, "prediction": "Compiles all the source codes ."}
{"id": 5860, "prediction": "Add a source code ."}
{"id": 5862, "prediction": "Returns the next frame in the frame ."}
{"id": 5864, "prediction": "Initializes the list of listeners ."}
{"id": 5866, "prediction": "Adds messages to the given validator ."}
{"id": 5868, "prediction": "Creates and invokes a ViewModel ."}
{"id": 5870, "prediction": "Loads all the countries ."}
{"id": 5872, "prediction": "Add a string field ."}
{"id": 5874, "prediction": "Creates a new Java ViewStep step ."}
{"id": 5876, "prediction": "Clear the given map ."}
{"id": 5878, "prediction": "Access the given member ."}
{"id": 5880, "prediction": "Creates the Fxml path ."}
{"id": 5882, "prediction": "Get pixel value ."}
{"id": 5884, "prediction": "Validate the image type"}
{"id": 5886, "prediction": "Set the tile data ."}
{"id": 6657, "prediction": "Returns an InputStream for the given user ."}
{"id": 6659, "prediction": "Expand entities ."}
{"id": 6661, "prediction": "Restart the saved element ."}
{"id": 6663, "prediction": "Removes the element from the stack ."}
{"id": 6665, "prediction": "Determines whether a prefix is foreign ."}
{"id": 6667, "prediction": "Splits a string into an array of strings ."}
{"id": 6669, "prediction": "Creates a name from a character array ."}
{"id": 6671, "prediction": "Unregisters the listener ."}
{"id": 6673, "prediction": "This method is called when a link is triggered ."}
{"id": 6675, "prediction": "Returns the maximum zoom level ."}
{"id": 6677, "prediction": "Finds the spans for the given paragraph ."}
{"id": 6679, "prediction": "Decodes a URL ."}
{"id": 6681, "prediction": "Rotate a bitmap ."}
{"id": 6683, "prediction": "Writes a character to the output stream ."}
{"id": 6685, "prediction": "Checks whether the given value is a boolean attribute ."}
{"id": 6687, "prediction": "Write namespace declarations ."}
{"id": 6689, "prediction": "Creates a stream if it does not exist ."}
{"id": 6691, "prediction": "Completes the snapshot snapshot with the missing snapshots ."}
{"id": 6693, "prediction": "Gets records ."}
{"id": 6695, "prediction": "Attempts to create an action for an action ."}
{"id": 6697, "prediction": "Loads all stores from the given snapshot ."}
{"id": 6699, "prediction": "Replaces all occurrences of the specified pattern in the given string ."}
{"id": 6701, "prediction": "Add a resource report ."}
{"id": 6703, "prediction": "Gets the configuration properties ."}
{"id": 6705, "prediction": "Creates a map of post processors ."}
{"id": 6707, "prediction": "Reload the cache ."}
{"id": 6709, "prediction": "Gets a servlet request ."}
{"id": 6711, "prediction": "Registers an error ."}
{"id": 6713, "prediction": "Process a resource ."}
{"id": 6715, "prediction": "Locates an input stream ."}
{"id": 6717, "prediction": "Register change listeners ."}
{"id": 6719, "prediction": "Sets the configuration ."}
{"id": 6721, "prediction": "Merges the given model ."}
{"id": 6723, "prediction": "Applies all post processors to the given resource key ."}
{"id": 6725, "prediction": "Process the resource ."}
{"id": 6727, "prediction": "Loads properties from the given input stream ."}
{"id": 6729, "prediction": "Create a custom WroManagerFactory ."}
{"id": 6731, "prediction": "Checks if the given group is a target group ."}
{"id": 6733, "prediction": "Gets the resource as a stream ."}
{"id": 6735, "prediction": "Sets the model transformer ."}
{"id": 6737, "prediction": "Process a list of resources ."}
{"id": 6739, "prediction": "Run the preprocessing process ."}
{"id": 6741, "prediction": "Decorate resource processor ."}
{"id": 6743, "prediction": "Get all fields of an object ."}
{"id": 6745, "prediction": "Compute new image location ."}
{"id": 6747, "prediction": "Serves the processed bundle ."}
{"id": 6749, "prediction": "Extract variables from a variable body ."}
{"id": 6751, "prediction": "Replace all variables in the given CSS template ."}
{"id": 6753, "prediction": "Checks if the given resource is eligible for the given type ."}
{"id": 6755, "prediction": "Include a path pattern ."}
{"id": 6757, "prediction": "Creates a new resource change handler ."}
{"id": 6759, "prediction": "Execute CSS import ."}
{"id": 6761, "prediction": "Checks if the request is minimized ."}
{"id": 6763, "prediction": "Computes the absolute URL for the given resource ."}
{"id": 6765, "prediction": "Gets the alias list ."}
{"id": 6767, "prediction": "Evaluates the given reader ."}
{"id": 6769, "prediction": "Process the resource bundle ."}
{"id": 6771, "prediction": "Creates the handler path for the request ."}
{"id": 6773, "prediction": "Compute the destination folder for the given resource type ."}
{"id": 6775, "prediction": "Checks if a change has changed for a group ."}
{"id": 6777, "prediction": "Creates a new object pool ."}
{"id": 6779, "prediction": "Open a jar file ."}
{"id": 6781, "prediction": "Checks if the request is minimized ."}
{"id": 6783, "prediction": "Decorate a WModelFactory ."}
{"id": 6785, "prediction": "Processes the given content ."}
{"id": 6787, "prediction": "Process a resource ."}
{"id": 6789, "prediction": "Creates a process ."}
{"id": 6791, "prediction": "Gets the task info ."}
{"id": 6793, "prediction": "Parse the header ."}
{"id": 6795, "prediction": "Gets the path info from the request ."}
{"id": 6797, "prediction": "Checks if the given path matches the request ."}
{"id": 6799, "prediction": "Safely copies a reader to a writer ."}
{"id": 6801, "prediction": "Clean image url ."}
{"id": 6803, "prediction": "Generate the data URI ."}
{"id": 6805, "prediction": "Sets the context ."}
{"id": 6807, "prediction": "Check if the cache is changed ."}
{"id": 6809, "prediction": "Check if a resource is changed ."}
{"id": 6811, "prediction": "Returns true if the given resource type matches the given resource type ."}
{"id": 6813, "prediction": "Encodes an object ."}
{"id": 6815, "prediction": "Parse group element ."}
{"id": 6817, "prediction": "Parses a resource element ."}
{"id": 6819, "prediction": "Logs the current timer ."}
{"id": 6821, "prediction": "Gets a timer with the given name ."}
{"id": 6823, "prediction": "Prints the saturation statistics ."}
{"id": 6825, "prediction": "Updates the processed counters ."}
{"id": 6827, "prediction": "Updates the counter with the given value ."}
{"id": 6829, "prediction": "Instantiates the ontology of the given property ."}
{"id": 6831, "prediction": "Updates the saturation state ."}
{"id": 6833, "prediction": "Restore the taxonomy ."}
{"id": 6835, "prediction": "Gets the evidence for the ontology ."}
{"id": 6837, "prediction": "Invalidates all the reasoner stages ."}
{"id": 6839, "prediction": "Gets the collection of individuals ."}
{"id": 6841, "prediction": "Removes the element at the specified position ."}
{"id": 6843, "prediction": "Returns the position of the element at the specified index ."}
{"id": 6845, "prediction": "Add an element to the array ."}
{"id": 6847, "prediction": "Adds information about the given class to this timer ."}
{"id": 6849, "prediction": "Put a key value into the cache ."}
{"id": 6851, "prediction": "Increases the map ."}
{"id": 6853, "prediction": "Saves the configuration to disk ."}
{"id": 6855, "prediction": "Gets all instances of the given entity ."}
{"id": 6857, "prediction": "Combine two hashes ."}
{"id": 6859, "prediction": "Copy the contents of an InputStream to the output stream ."}
{"id": 6861, "prediction": "Processes a taxonomy ."}
{"id": 6863, "prediction": "Append an appender to the end of the appender ."}
{"id": 6865, "prediction": "Add a direct type node ."}
{"id": 6867, "prediction": "Returns a subset of the elements that satisfy the given condition ."}
{"id": 6869, "prediction": "Adds an entry to the set ."}
{"id": 6871, "prediction": "Adds the number of classes to the given counter ."}
{"id": 6873, "prediction": "Sets configuration options ."}
{"id": 6875, "prediction": "Print the header ."}
{"id": 6877, "prediction": "Gets a string from a character sequence ."}
{"id": 6879, "prediction": "Writes a resource ."}
{"id": 6881, "prediction": "Returns the property descriptor for the given property path ."}
{"id": 6883, "prediction": "Checks if the given class is a single value type ."}
{"id": 6885, "prediction": "Sets the type of the link ."}
{"id": 6887, "prediction": "Adds the link to the link ."}
{"id": 6889, "prediction": "Expands the link to the given arguments ."}
{"id": 6891, "prediction": "Gets the list of links ."}
{"id": 6893, "prediction": "Gets the value of the field ."}
{"id": 6895, "prediction": "Determines if the property should be included in the input value ."}
{"id": 6897, "prediction": "Returns true if the request is required ."}
{"id": 6899, "prediction": "Gets the parameter name ."}
{"id": 6901, "prediction": "Determine the vocab of a mixin ."}
{"id": 6903, "prediction": "Append the form ."}
{"id": 6905, "prediction": "Appends an input to the list of selectors ."}
{"id": 6907, "prediction": "Get the partial URI template components ."}
{"id": 6909, "prediction": "Get first node by name ."}
{"id": 6911, "prediction": "Returns an iterator over the elements in this node ."}
{"id": 5888, "prediction": "Wrap a query result ."}
{"id": 5890, "prediction": "Execute a query ."}
{"id": 5892, "prediction": "Get the feature row for the given geometry index ."}
{"id": 5894, "prediction": "Retrieve the tile row for the specified tile ."}
{"id": 5896, "prediction": "Get the coverage data for a tile"}
{"id": 5898, "prediction": "Get the coverage data for the requested tile ."}
{"id": 5900, "prediction": "Get the tile results in the tile matrix ."}
{"id": 5902, "prediction": "Get the tile matrix for the requested coverage data ."}
{"id": 5904, "prediction": "Set the icon ."}
{"id": 5906, "prediction": "Opens the JDBC database ."}
{"id": 5908, "prediction": "Convert bitmap to byte array ."}
{"id": 5910, "prediction": "Delete the geometry"}
{"id": 5912, "prediction": "Get the id of a GeoPackage"}
{"id": 5914, "prediction": "Creates the extension ."}
{"id": 5916, "prediction": "Execute a custom query"}
{"id": 5918, "prediction": "Query the cursor for the specified envelope ."}
{"id": 5920, "prediction": "Query for a query where the min and max and max ."}
{"id": 5922, "prediction": "Query for features in the bounding box"}
{"id": 5924, "prediction": "Query for the specified geometry ."}
{"id": 5926, "prediction": "Returns the number of rows in the specified range ."}
{"id": 5928, "prediction": "Set bitmap ."}
{"id": 5930, "prediction": "Returns the number of tiles in the zoom level ."}
{"id": 5932, "prediction": "Adjust the tile bounding box ."}
{"id": 5934, "prediction": "Adjust the bounding box bounds for the zoom level ."}
{"id": 5936, "prediction": "Get the tile grid for the given zoom level"}
{"id": 5938, "prediction": "query for descending order"}
{"id": 5940, "prediction": "Get the approximate zoom level ."}
{"id": 5942, "prediction": "Delete the tile with the specified zoom level ."}
{"id": 5944, "prediction": "Checks if the tile matrix contains the tile matrix ."}
{"id": 5946, "prediction": "Get the pixel values from the image ."}
{"id": 5948, "prediction": "Creates a new image ."}
{"id": 5950, "prediction": "Get a GeoPackage by name"}
{"id": 5952, "prediction": "Moves the cursor to the next invalid cursor ."}
{"id": 5954, "prediction": "Delete by base id"}
{"id": 5956, "prediction": "Get a rounded rectangle of the bounding box"}
{"id": 5958, "prediction": "Create and close the GeoPackage"}
{"id": 5960, "prediction": "Validate database ."}
{"id": 5962, "prediction": "Validate database ."}
{"id": 5964, "prediction": "Checks if the database header is valid ."}
{"id": 5966, "prediction": "Add external databases ."}
{"id": 5968, "prediction": "Get GeoPackage metadata"}
{"id": 5970, "prediction": "Create a new geometry"}
{"id": 5972, "prediction": "Delete a GeoPackage"}
{"id": 5974, "prediction": "Updates the geometry ."}
{"id": 5976, "prediction": "Create a geometry metadata from the cursor ."}
{"id": 5978, "prediction": "Draw a bitmap ."}
{"id": 5980, "prediction": "Checks if the cursor is valid ."}
{"id": 5982, "prediction": "Gets the simple attributes ."}
{"id": 5984, "prediction": "Gets the mappings for a given relation ."}
{"id": 5986, "prediction": "Returns the count of the user"}
{"id": 5988, "prediction": "Read a User Custom Table"}
{"id": 5990, "prediction": "Draws the bitmap for the tile results"}
{"id": 5992, "prediction": "Retrieves the tile results from the tile matrix ."}
{"id": 5994, "prediction": "Sets the density of the gauge"}
{"id": 5996, "prediction": "Set the polygon Paint"}
{"id": 5998, "prediction": "Draw a bitmap ."}
{"id": 6000, "prediction": "Query the number of features in the tile ."}
{"id": 6002, "prediction": "Query the features of the geometries ."}
{"id": 6004, "prediction": "Draws the bitmap for all features ."}
{"id": 6006, "prediction": "Returns the paint paint for the feature style ."}
{"id": 6008, "prediction": "Get the paint paint for the feature style"}
{"id": 6010, "prediction": "Get the paint style"}
{"id": 6012, "prediction": "Get the paint for the style"}
{"id": 6014, "prediction": "Put a bitmap for the given icon row ."}
{"id": 6016, "prediction": "Quote a ContentValues into a ContentValues"}
{"id": 6018, "prediction": "Recycle the canvas ."}
{"id": 6020, "prediction": "Get the canvas for the layer ."}
{"id": 6022, "prediction": "Get the style DAO"}
{"id": 6024, "prediction": "Gets the icon ."}
{"id": 6026, "prediction": "Get the styles for a feature table"}
{"id": 6028, "prediction": "Get the icons for a feature table"}
{"id": 6030, "prediction": "Get the features for a feature row"}
{"id": 6032, "prediction": "Get the styles for a feature row"}
{"id": 6034, "prediction": "Get style for feature id"}
{"id": 6036, "prediction": "Set the feature style for the feature table ."}
{"id": 6038, "prediction": "Set the icons for the feature table"}
{"id": 6040, "prediction": "Sets the styles for a feature table ."}
{"id": 6042, "prediction": "Set styles for a feature table ."}
{"id": 6044, "prediction": "Set the default style for a feature row"}
{"id": 6046, "prediction": "Sets the icons for the feature row ."}
{"id": 6048, "prediction": "Set the icon for a feature row"}
{"id": 6050, "prediction": "Sets the default icon for the feature table ."}
{"id": 6052, "prediction": "Gets or creates a new icon ."}
{"id": 6054, "prediction": "Delete table style mapping"}
{"id": 6056, "prediction": "Delete table mappings for feature table"}
{"id": 6058, "prediction": "Delete a mapping"}
{"id": 6060, "prediction": "Get the table icon ids"}
{"id": 6062, "prediction": "Returns all the icon ids for the feature table"}
{"id": 6064, "prediction": "Flush the output stream ."}
{"id": 6066, "prediction": "Reads pixels from the image ."}
{"id": 6068, "prediction": "Draw a line path ."}
{"id": 6070, "prediction": "Adds a line string to the path ."}
{"id": 6072, "prediction": "Get the cache for the given table name ."}
{"id": 6074, "prediction": "Clear all cache caches ."}
{"id": 6076, "prediction": "Gets the cached table icons ."}
{"id": 6078, "prediction": "Sets the width value for the width ."}
{"id": 6080, "prediction": "Gets the dimensions of this image ."}
{"id": 6082, "prediction": "Read blob value ."}
{"id": 6084, "prediction": "Gets the color or null if any ."}
{"id": 6086, "prediction": "Creates a color from hexadecimal"}
{"id": 6088, "prediction": "Set the progress bar"}
{"id": 6090, "prediction": "Index all features in the given row ."}
{"id": 6092, "prediction": "Deletes the indexes for the given row ."}
{"id": 6094, "prediction": "Delete the feature index"}
{"id": 6096, "prediction": "Get the list of indexed types ."}
{"id": 6098, "prediction": "Returns the number of features in the tree ."}
{"id": 6100, "prediction": "Query the feature index for the bounding box"}
{"id": 6102, "prediction": "Gets the internal file ."}
{"id": 6104, "prediction": "Returns the geometry type ."}
{"id": 6106, "prediction": "Checks if the bounding box contains a bounding box"}
{"id": 6108, "prediction": "Checks if a URL has been set ."}
{"id": 6110, "prediction": "Replaces the bounding box with the tile coordinates ."}
{"id": 6112, "prediction": "Index a feature row ."}
{"id": 6114, "prediction": "Delete the index"}
{"id": 6116, "prediction": "Checks if the feature is indexed ."}
{"id": 6118, "prediction": "Query for a bounding box"}
{"id": 6120, "prediction": "Query for a geometry"}
{"id": 6122, "prediction": "Query for a bounding box"}
{"id": 6124, "prediction": "Apply the bounding box to the projection"}
{"id": 6126, "prediction": "Get the feature row ."}
{"id": 6128, "prediction": "Get the list of tiles for a feature table"}
{"id": 6130, "prediction": "Get the bounding box"}
{"id": 6132, "prediction": "Returns a list of unique IDs for the user ."}
{"id": 6134, "prediction": "Delete user mapping ."}
{"id": 6136, "prediction": "Delete by related IDs"}
{"id": 6138, "prediction": "Create a GeoPackage"}
{"id": 6140, "prediction": "Renames a GeoPackage"}
{"id": 6142, "prediction": "Get all GeoPackage Metadata"}
{"id": 6913, "prediction": "Creates a PersistTreeMap from an Iterable ."}
{"id": 6915, "prediction": "Returns a copy of this TreeSet ."}
{"id": 6917, "prediction": "Creates a new Xformatter from an iterable ."}
{"id": 6919, "prediction": "Use this method to drop all elements in the given predicate ."}
{"id": 6921, "prediction": "Creates a Tuple2222 ."}
{"id": 6923, "prediction": "Registers a list of classes ."}
{"id": 6925, "prediction": "Appends a vector to the root ."}
{"id": 6927, "prediction": "Creates a MutableSet from the given items ."}
{"id": 6929, "prediction": "Creates an instance of the given items ."}
{"id": 6931, "prediction": "Create an unmodifiable iterable from an iterable ."}
{"id": 6933, "prediction": "Convert an array of items into a String ."}
{"id": 6935, "prediction": "Applies the value to the producer ."}
{"id": 6937, "prediction": "Creates an array copy of the specified type ."}
{"id": 6939, "prediction": "Called before the transaction ."}
{"id": 6941, "prediction": "Validates a directory ."}
{"id": 6943, "prediction": "Copies methods from source to destination ."}
{"id": 6945, "prediction": "Recursively walk the tree ."}
{"id": 6947, "prediction": "Returns true if the given parameter is enabled or not ."}
{"id": 6949, "prediction": "Install the service ."}
{"id": 6951, "prediction": "Checks if the given RA link is a resource link ."}
{"id": 6953, "prediction": "Reset all usage parameters ."}
{"id": 6955, "prediction": "Get the profile activity for a profile table"}
{"id": 6957, "prediction": "Display the result ."}
{"id": 6959, "prediction": "Called when an event occurs ."}
{"id": 6961, "prediction": "Unbind a name ."}
{"id": 6963, "prediction": "Returns a map of name bindings ."}
{"id": 6965, "prediction": "Returns true if the given trace level is greater than the given other ."}
{"id": 6967, "prediction": "Writes the buffer to the output stream ."}
{"id": 6969, "prediction": "Attaches the given SbbEntity to the given SbEntity ."}
{"id": 6971, "prediction": "Returns true if the node is not connected ."}
{"id": 6973, "prediction": "Attaches a timer ."}
{"id": 6975, "prediction": "Returns true if the timer has been attached to this node ."}
{"id": 6977, "prediction": "Adds a bound node to this node ."}
{"id": 6979, "prediction": "Returns true if this node has no names ."}
{"id": 6981, "prediction": "Sets the cmp attribute ."}
{"id": 6983, "prediction": "Returns a copy of the children of this node ."}
{"id": 6985, "prediction": "Send usage notification ."}
{"id": 6987, "prediction": "Update the deployed components ."}
{"id": 6989, "prediction": "Uninstalls a deployment ."}
{"id": 6991, "prediction": "Show the current deployment status ."}
{"id": 6993, "prediction": "Gets the logger ."}
{"id": 6995, "prediction": "Gets the set of Sbb entities ."}
{"id": 6997, "prediction": "Gets the code sources for the policy ."}
{"id": 6999, "prediction": "Remove the profile table ."}
{"id": 7001, "prediction": "This method is called when the entity is active ."}
{"id": 7003, "prediction": "Activate the resource adapter ."}
{"id": 7005, "prediction": "Schedule the end of all activities ."}
{"id": 7007, "prediction": "Returns the resource adapter interface for the given resource type ."}
{"id": 7009, "prediction": "Determine the ActivityHandle reference ."}
{"id": 7011, "prediction": "Updates the configuration of the RA ."}
{"id": 7013, "prediction": "Called when the resource is stopped ."}
{"id": 7015, "prediction": "Unregister the resource ."}
{"id": 7017, "prediction": "Declarative Services method for unsetting the fault tolerance context ."}
{"id": 7019, "prediction": "Resume the event context ."}
{"id": 7021, "prediction": "Remove the MBeanServer ."}
{"id": 7023, "prediction": "Decorate the abstract class ."}
{"id": 7025, "prediction": "Fires an event ."}
{"id": 7027, "prediction": "Gets the service usage parameter ."}
{"id": 7029, "prediction": "Gets the interface methods from the given interface ."}
{"id": 7031, "prediction": "Remove the object pool ."}
{"id": 7033, "prediction": "Raises an alarm ."}
{"id": 7035, "prediction": "Gets the event type descriptor ."}
{"id": 7037, "prediction": "Initialize the deployment ."}
{"id": 7039, "prediction": "Stop the deployment ."}
{"id": 7041, "prediction": "Execute the after commit actions ."}
{"id": 7043, "prediction": "Executes the rollback actions ."}
{"id": 7045, "prediction": "Executes the precommit priority actions ."}
{"id": 7047, "prediction": "Creates a tracer with the specified name ."}
{"id": 7049, "prediction": "Register widgets ."}
{"id": 7051, "prediction": "Get the object pool pool ."}
{"id": 7053, "prediction": "Executes the given activity ."}
{"id": 7055, "prediction": "Ends the activity ."}
{"id": 7057, "prediction": "Fires an event ."}
{"id": 7059, "prediction": "Make getter method ."}
{"id": 7061, "prediction": "Sets the address of the profile ."}
{"id": 7063, "prediction": "Checks if the given object contains the given object ."}
{"id": 7065, "prediction": "Remove all elements from this collection"}
{"id": 7067, "prediction": "Resolve internal state ."}
{"id": 7069, "prediction": "Add a profile call to the profile ."}
{"id": 7071, "prediction": "This method is used to pass a profile object from the pool ."}
{"id": 7073, "prediction": "Generate the concrete activity class ."}
{"id": 7075, "prediction": "Set a cache attribute ."}
{"id": 7077, "prediction": "Remove all naming bindings"}
{"id": 7079, "prediction": "Attaches a timer to the cache ."}
{"id": 7081, "prediction": "Attach a SbbEntity to the cache ."}
{"id": 7083, "prediction": "Gets the sorted set of attachments ."}
{"id": 7085, "prediction": "Add a component to the deployment ."}
{"id": 7087, "prediction": "Checks if the dependencies are satisfied ."}
{"id": 7089, "prediction": "Get the install actions ."}
{"id": 7091, "prediction": "Determine if the component is referring to this component ."}
{"id": 7093, "prediction": "Returns the object name for the given profile table ."}
{"id": 7095, "prediction": "Called when the profile field is set ."}
{"id": 7097, "prediction": "Invokes the precompiled field ."}
{"id": 7099, "prediction": "Invokes the management method invocation ."}
{"id": 7101, "prediction": "Deletes the given path ."}
{"id": 7103, "prediction": "Create default usage parameter ."}
{"id": 7105, "prediction": "Create fire event methods ."}
{"id": 7107, "prediction": "Adds a new expression to this list ."}
{"id": 7109, "prediction": "Rebinds an object with the specified name ."}
{"id": 7111, "prediction": "Invokes a method with the specified arguments ."}
{"id": 7113, "prediction": "Sets the value of the given field ."}
{"id": 7115, "prediction": "Sets the profile context ."}
{"id": 7117, "prediction": "Unset the profile context ."}
{"id": 7119, "prediction": "Fires a profile event if necessary ."}
{"id": 7121, "prediction": "Creates a new class with the given name and interfaces ."}
{"id": 7123, "prediction": "Add an annotation ."}
{"id": 7125, "prediction": "Returns the activity context for the given activity ."}
{"id": 7127, "prediction": "Sets the deployment unit ."}
{"id": 7129, "prediction": "This method is used to start a session ."}
{"id": 7131, "prediction": "Get all abstract methods of an interface ."}
{"id": 7133, "prediction": "Checks if the tracer name is valid ."}
{"id": 7135, "prediction": "Checks the dependencies of the given component ."}
{"id": 7137, "prediction": "Gets the entity manager ."}
{"id": 7139, "prediction": "Switch a class loader to a class loader ."}
{"id": 7141, "prediction": "Checks the current transaction ."}
{"id": 7143, "prediction": "Checks if the profile class is visible ."}
{"id": 7145, "prediction": "Get the list of logger names ."}
{"id": 7147, "prediction": "Clear all loggers"}
{"id": 7149, "prediction": "Add a socket handler ."}
{"id": 7151, "prediction": "Convert tracer name to logger name ."}
{"id": 7153, "prediction": "Assigns the log level to the log level ."}
{"id": 7155, "prediction": "Send a trace notification ."}
{"id": 7157, "prediction": "Serialize an object to a serialized object ."}
{"id": 7159, "prediction": "Add a domain dependency ."}
{"id": 7161, "prediction": "Find a class by name ."}
{"id": 7163, "prediction": "Returns an enumeration of the resources that match the given name ."}
{"id": 7165, "prediction": "Resume a transaction ."}
{"id": 7167, "prediction": "Gets the resource adapter for the given component ."}
{"id": 6144, "prediction": "Get the GeoPackage metadata"}
{"id": 6146, "prediction": "Check if the database is external"}
{"id": 6148, "prediction": "Get metadata by name"}
{"id": 6150, "prediction": "Get metadata by name"}
{"id": 6152, "prediction": "Called when a View has been registered ."}
{"id": 6154, "prediction": "Override this method to create a View ."}
{"id": 6156, "prediction": "Add an event to the buffer ."}
{"id": 6158, "prediction": "Get a URL from the classloader ."}
{"id": 6160, "prediction": "Add status on a resource ."}
{"id": 6162, "prediction": "Creates a new executor service ."}
{"id": 6164, "prediction": "Override this method to override the rollover ."}
{"id": 6166, "prediction": "Gets the value of a property ."}
{"id": 6168, "prediction": "Evaluates the Eopt node ."}
{"id": 6170, "prediction": "Escape the string ."}
{"id": 6172, "prediction": "Start an event ."}
{"id": 6174, "prediction": "Initialize the context ."}
{"id": 6176, "prediction": "Sets the legacy properties ."}
{"id": 6178, "prediction": "Gets the database directory ."}
{"id": 6180, "prediction": "Evaluates the logging level ."}
{"id": 6182, "prediction": "Updates the mask if necessary ."}
{"id": 6184, "prediction": "Create the key managers ."}
{"id": 6186, "prediction": "Creates a KeyStoreFactory from the system properties ."}
{"id": 6188, "prediction": "Returns the URL for the given location ."}
{"id": 6190, "prediction": "Closes the logback context ."}
{"id": 6192, "prediction": "Prints the status of the given context ."}
{"id": 6194, "prediction": "Handle a throwable ."}
{"id": 6196, "prediction": "Called when a key is ended ."}
{"id": 6198, "prediction": "Rename source file ."}
{"id": 6200, "prediction": "Gets environment variable ."}
{"id": 6202, "prediction": "Sets the MDC property map ."}
{"id": 6204, "prediction": "Extracts the stack trace element from the given stack ."}
{"id": 6206, "prediction": "Adds a new status message ."}
{"id": 6208, "prediction": "Lookup an implicit action for an element ."}
{"id": 6210, "prediction": "Set the class loader ."}
{"id": 6212, "prediction": "Get a boolean property ."}
{"id": 6214, "prediction": "Returns an array of MethodDescriptors ."}
{"id": 6216, "prediction": "Start the appender ."}
{"id": 6218, "prediction": "Ends a property definition ."}
{"id": 6220, "prediction": "Determines if the logging event should be discarded ."}
{"id": 6222, "prediction": "Ends the shutdown hook ."}
{"id": 6224, "prediction": "Determine the enabled cipher suites ."}
{"id": 6226, "prediction": "Convert a string to Scope"}
{"id": 6228, "prediction": "Adds an appender to the list ."}
{"id": 6230, "prediction": "Removes the appender with the given name ."}
{"id": 6232, "prediction": "Call this method to call the appenders ."}
{"id": 6234, "prediction": "Create a child logger by name ."}
{"id": 6236, "prediction": "Logs a logging event ."}
{"id": 6238, "prediction": "Creates the missing parent directories ."}
{"id": 6240, "prediction": "Converts an integer to a Level ."}
{"id": 6242, "prediction": "Gets the URL of a resource ."}
{"id": 6244, "prediction": "Get the class loader ."}
{"id": 6246, "prediction": "Starts the tag encoder ."}
{"id": 6248, "prediction": "Starts the element ."}
{"id": 6250, "prediction": "Evaluate the given event ."}
{"id": 6252, "prediction": "Checks if two files are equal ."}
{"id": 6254, "prediction": "Appends an event to the queue ."}
{"id": 6256, "prediction": "Add a MDC value to the map"}
{"id": 6258, "prediction": "Create a composite converter ."}
{"id": 6260, "prediction": "Configure the given URL ."}
{"id": 6262, "prediction": "Configure the given input stream ."}
{"id": 6264, "prediction": "Processes the configuration ."}
{"id": 6266, "prediction": "Gets a property ."}
{"id": 6268, "prediction": "Checks if a status listener has been set ."}
{"id": 6270, "prediction": "Start parsing ."}
{"id": 6272, "prediction": "Returns the file header ."}
{"id": 6274, "prediction": "Start the appender ."}
{"id": 6276, "prediction": "Creates a copy of the collection ."}
{"id": 6278, "prediction": "Remove a client"}
{"id": 6280, "prediction": "Returns the value of the value of the given type ."}
{"id": 6282, "prediction": "Checks if the current OS is an Android OS ."}
{"id": 6284, "prediction": "Returns a list of files in a given file ."}
{"id": 6286, "prediction": "Convert a string to a syslog string ."}
{"id": 6288, "prediction": "Clear expired logs ."}
{"id": 6290, "prediction": "Append an insert event ."}
{"id": 6292, "prediction": "Bind the given logging event ."}
{"id": 6294, "prediction": "Compute the mask for the given event ."}
{"id": 6296, "prediction": "Insert exception ."}
{"id": 6298, "prediction": "Returns the effective level ."}
{"id": 6300, "prediction": "Checks whether the given class is instantiated ."}
{"id": 6302, "prediction": "Process an include event ."}
{"id": 6304, "prediction": "Removes the head and tail tag ."}
{"id": 6306, "prediction": "Checks if the server is transient ."}
{"id": 6308, "prediction": "Create a local index ."}
{"id": 6310, "prediction": "Synchronizes the mirror if necessary ."}
{"id": 6312, "prediction": "Lists all the indexes in the database ."}
{"id": 6314, "prediction": "Converts an input stream to a byte array ."}
{"id": 6316, "prediction": "Returns the list of hosts that have been removed ."}
{"id": 6318, "prediction": "Starts the iterator ."}
{"id": 6320, "prediction": "Returns the value associated with the given key ."}
{"id": 6322, "prediction": "Compare two strings ."}
{"id": 6324, "prediction": "Copies a directory to a directory ."}
{"id": 6326, "prediction": "Gets the value of the static field ."}
{"id": 6328, "prediction": "Format a long value ."}
{"id": 6330, "prediction": "Format a long ."}
{"id": 6332, "prediction": "Returns the hex value of the given character ."}
{"id": 6334, "prediction": "Write a long integer ."}
{"id": 6336, "prediction": "Read json string ."}
{"id": 6338, "prediction": "Reads a JSON integer ."}
{"id": 6340, "prediction": "Read a JSON encoded base64 string ."}
{"id": 6342, "prediction": "Invoke a request ."}
{"id": 6344, "prediction": "Gets the file for the given location ."}
{"id": 6346, "prediction": "Refresh the repository view ."}
{"id": 6348, "prediction": "Opens an editor with the given name ."}
{"id": 6350, "prediction": "Waits for an authentication prompt ."}
{"id": 6352, "prediction": "Start the thread ."}
{"id": 6354, "prediction": "Sets whether the element should be emitted ."}
{"id": 6356, "prediction": "Adds a new condition ."}
{"id": 6358, "prediction": "Returns true if the condition term matches the given condition ."}
{"id": 6360, "prediction": "Loads a DSL configuration file ."}
{"id": 6362, "prediction": "Gets the menu ."}
{"id": 6364, "prediction": "Add a href attribute ."}
{"id": 6366, "prediction": "Remove a href from the root ."}
{"id": 6368, "prediction": "Gets the href attribute ."}
{"id": 6370, "prediction": "Gets the stack frame ."}
{"id": 6372, "prediction": "Checks if the given list of proposals contains the given proposal ."}
{"id": 6374, "prediction": "Reset input stream ."}
{"id": 6376, "prediction": "Adds a connection ."}
{"id": 6378, "prediction": "Removes a connection ."}
{"id": 6380, "prediction": "Set property value ."}
{"id": 6382, "prediction": "Dump a list of constraints ."}
{"id": 6384, "prediction": "Adds a child to this vertex ."}
{"id": 6386, "prediction": "Initializes the cache ."}
{"id": 6388, "prediction": "Gets the resource string from the key ."}
{"id": 6390, "prediction": "Returns the formatter builder for the rule builder ."}
{"id": 6392, "prediction": "Set date time ."}
{"id": 6394, "prediction": "Logs an error ."}
{"id": 6396, "prediction": "Adjust the grid layout ."}
{"id": 6398, "prediction": "Calculates the number of columns ."}
{"id": 7169, "prediction": "Shutdown the sleelee ."}
{"id": 7171, "prediction": "Generate the name of the usage parameter ."}
{"id": 7173, "prediction": "Builds a PolyDB connection ."}
{"id": 7175, "prediction": "Run the given transaction ."}
{"id": 7177, "prediction": "Returns the rectangle of this box ."}
{"id": 7179, "prediction": "Determine the type of the annotation ."}
{"id": 7181, "prediction": "Adds a view hint to the resource ."}
{"id": 7183, "prediction": "Adds the rendings to the resource ."}
{"id": 7185, "prediction": "Merge this image into one ."}
{"id": 7187, "prediction": "Creates a size request from a string ."}
{"id": 7189, "prediction": "Get the dump of the file"}
{"id": 7191, "prediction": "Pushes the push handle to the device ."}
{"id": 7193, "prediction": "Pulls the local dump to disk"}
{"id": 7195, "prediction": "Deletes text with tabs ."}
{"id": 7197, "prediction": "Tokenize text ."}
{"id": 7199, "prediction": "Escapes special characters in the given text ."}
{"id": 7201, "prediction": "Closes this statement ."}
{"id": 7203, "prediction": "Writes the class to the file ."}
{"id": 7205, "prediction": "Append bit strings to a bit vector ."}
{"id": 7207, "prediction": "Gets a list of JSON objects ."}
{"id": 7209, "prediction": "Sets the klov device report ."}
{"id": 7211, "prediction": "Set system info ."}
{"id": 7213, "prediction": "Creates a selector that selects a property with the specified value ."}
{"id": 7215, "prediction": "Extracts all annotations for a given property ."}
{"id": 7217, "prediction": "Returns the property descriptor for the given type ."}
{"id": 7219, "prediction": "Creates an object from a map ."}
{"id": 7221, "prediction": "Creates a new instance from the given map ."}
{"id": 7223, "prediction": "Convert object to Map ."}
{"id": 7225, "prediction": "Creates a composite validator instance ."}
{"id": 7227, "prediction": "Lookup a validator in the registry ."}
{"id": 7229, "prediction": "Remove a property from a property ."}
{"id": 7231, "prediction": "Returns the number of entries in the cache ."}
{"id": 7233, "prediction": "Creates default options ."}
{"id": 7235, "prediction": "Puts a map of values into the database ."}
{"id": 7237, "prediction": "Search for a database entry ."}
{"id": 7239, "prediction": "Closes the database ."}
{"id": 7241, "prediction": "Reduce an array by its value ."}
{"id": 7243, "prediction": "Returns the mean value of the long array"}
{"id": 7245, "prediction": "Reduce the sum of an array by using the given values ."}
{"id": 7247, "prediction": "Return true if object matches criteria"}
{"id": 7249, "prediction": "Create a Criteria object from a List ."}
{"id": 7251, "prediction": "Adds the given integers to the end of the array ."}
{"id": 7253, "prediction": "Gets the first element of a list ."}
{"id": 7255, "prediction": "Gets the last element of the list ."}
{"id": 7257, "prediction": "Returns the first element of the list ."}
{"id": 7259, "prediction": "Processes a map ."}
{"id": 7261, "prediction": "Creates a new object from the map ."}
{"id": 7263, "prediction": "Creates and returns the tool tip with the given name ."}
{"id": 7265, "prediction": "Adds a character to the buffer ."}
{"id": 7267, "prediction": "Process the write queue ."}
{"id": 7269, "prediction": "Support the subscript operator at the given index ."}
{"id": 7271, "prediction": "Replies if the given character is in the given string ."}
{"id": 7273, "prediction": "Returns a string representation of the given objects ."}
{"id": 7275, "prediction": "Splits a string into an array ."}
{"id": 7277, "prediction": "Splits a string on the given string ."}
{"id": 7279, "prediction": "Converts a string to a camel case ."}
{"id": 7281, "prediction": "Converts a string to a lower case ."}
{"id": 7283, "prediction": "Creates a sort of the given sort order ."}
{"id": 7285, "prediction": "Returns the comparator for this field ."}
{"id": 7287, "prediction": "Checks if the given value is contained in the given map ."}
{"id": 7289, "prediction": "Compare two arrays ."}
{"id": 7291, "prediction": "Round up to the given number of bits ."}
{"id": 7293, "prediction": "Sorts the given list according to the specified field ."}
{"id": 7295, "prediction": "Convert an object to a List ."}
{"id": 7297, "prediction": "Creates a deep copy of a list ."}
{"id": 7299, "prediction": "Checks if a class field is a field ."}
{"id": 7301, "prediction": "Gets the first field of a class ."}
{"id": 7303, "prediction": "Compares two cache entries ."}
{"id": 7305, "prediction": "Sorts the given list ."}
{"id": 7307, "prediction": "Sorts the given map with the given key type ."}
{"id": 7309, "prediction": "Sorts the given map with the given key ."}
{"id": 7311, "prediction": "Creates a comparator for sorting ."}
{"id": 7313, "prediction": "Returns the value for the given key ."}
{"id": 7315, "prediction": "Returns the order number ."}
{"id": 7317, "prediction": "Initializes the class ."}
{"id": 7319, "prediction": "Determines if the processing should be interrupted ."}
{"id": 7321, "prediction": "Check if the writer should be flushed ."}
{"id": 7323, "prediction": "Starts the collector ."}
{"id": 7325, "prediction": "Generate a query plan ."}
{"id": 7327, "prediction": "Sets the time of the file ."}
{"id": 7329, "prediction": "Closes the output stream ."}
{"id": 7331, "prediction": "Write a buffer to disk ."}
{"id": 7333, "prediction": "Put all values in the given map ."}
{"id": 7335, "prediction": "Read validation meta data ."}
{"id": 7337, "prediction": "Read validator meta data ."}
{"id": 7339, "prediction": "Extract validator meta data from annotations ."}
{"id": 7341, "prediction": "Splits a string into an array of strings ."}
{"id": 7343, "prediction": "Splits a string using delimiter ."}
{"id": 7345, "prediction": "Splits a string using the specified delimiter ."}
{"id": 7347, "prediction": "Parse an int from a buffer ."}
{"id": 7349, "prediction": "Gets property by path ."}
{"id": 7351, "prediction": "Get the type of a property ."}
{"id": 7353, "prediction": "Sets the value of a property ."}
{"id": 7355, "prediction": "Gets the value of a property ."}
{"id": 7357, "prediction": "Initialize this message ."}
{"id": 7359, "prediction": "Create message ."}
{"id": 7361, "prediction": "Gets the subject ."}
{"id": 7363, "prediction": "Sends a request ."}
{"id": 7365, "prediction": "Creates a database ."}
{"id": 7367, "prediction": "List resources ."}
{"id": 7369, "prediction": "Queries a single value ."}
{"id": 7371, "prediction": "Synchronize all design documents ."}
{"id": 7373, "prediction": "Gets all design documents ."}
{"id": 7375, "prediction": "Save replicator ."}
{"id": 7377, "prediction": "Find all replicator documents ."}
{"id": 7379, "prediction": "Finds an object by id ."}
{"id": 7381, "prediction": "Check if a document exists ."}
{"id": 7383, "prediction": "Performs a PUT request ."}
{"id": 7385, "prediction": "Perform a POST request ."}
{"id": 7387, "prediction": "Validate response ."}
{"id": 7389, "prediction": "Adds an attachment ."}
{"id": 7391, "prediction": "Reads next row ."}
{"id": 7393, "prediction": "Shuts down the pool ."}
{"id": 7395, "prediction": "Add tags to the map ."}
{"id": 7397, "prediction": "Returns the namespace ID for the given namespace ."}
{"id": 7399, "prediction": "Send authentication request ."}
{"id": 7401, "prediction": "Generate subject access ."}
{"id": 7403, "prediction": "Called when a client fails ."}
{"id": 7405, "prediction": "Find all scheduled jobs in the given time range ."}
{"id": 7407, "prediction": "Ends the exchange ."}
{"id": 7409, "prediction": "Creates a buckets from a given step ."}
{"id": 7411, "prediction": "Send a message"}
{"id": 7413, "prediction": "Scans the cursor and returns the result ."}
{"id": 7415, "prediction": "Adds a file to the zip archive ."}
{"id": 7417, "prediction": "Creates a zip file ."}
{"id": 7419, "prediction": "Fetches the content of the given content ."}
{"id": 7421, "prediction": "Upload an export transformation ."}
{"id": 7423, "prediction": "Creates a new directory ."}
{"id": 6400, "prediction": "Fire a property change event ."}
{"id": 6402, "prediction": "Add the zoom bar ."}
{"id": 6404, "prediction": "Creates a new context ."}
{"id": 6406, "prediction": "Create table listeners ."}
{"id": 6408, "prediction": "Adds a value to the URL ."}
{"id": 6410, "prediction": "Adds a token to the tree ."}
{"id": 6412, "prediction": "Sets the file ."}
{"id": 6414, "prediction": "Adds a state token to the resource ."}
{"id": 6416, "prediction": "Replies the property ."}
{"id": 6418, "prediction": "Sets the property ."}
{"id": 6420, "prediction": "Gets the last non dash line ."}
{"id": 6422, "prediction": "Binds the given id to the binding ."}
{"id": 6424, "prediction": "Creates the sample ."}
{"id": 6426, "prediction": "Gets the runtime id ."}
{"id": 6428, "prediction": "Visit a node ."}
{"id": 6430, "prediction": "Create a remove property ."}
{"id": 6432, "prediction": "Creates a new locator instance ."}
{"id": 6434, "prediction": "Returns true if this object is the same status ."}
{"id": 6436, "prediction": "Creates a new condition ."}
{"id": 6438, "prediction": "HTTP DELETE request"}
{"id": 6440, "prediction": "Get the status of a job ."}
{"id": 6442, "prediction": "Handles pull results ."}
{"id": 6444, "prediction": "Add an active lock ."}
{"id": 6446, "prediction": "Read backwards from a document offset ."}
{"id": 6448, "prediction": "Paint the border ."}
{"id": 6450, "prediction": "Returns the image descriptor for the plugin ."}
{"id": 6452, "prediction": "Adds a vertex to the graph ."}
{"id": 6454, "prediction": "Get the width of this row ."}
{"id": 6456, "prediction": "Optimize the matrix ."}
{"id": 6458, "prediction": "Initialize the graphical view"}
{"id": 6460, "prediction": "Replies the given breakpoint breakpoint ."}
{"id": 6462, "prediction": "Checks to see if the user is available ."}
{"id": 6464, "prediction": "Examines the response status ."}
{"id": 6466, "prediction": "Get the content of the request ."}
{"id": 6468, "prediction": "Gets a property by name ."}
{"id": 6470, "prediction": "Acquires a lock ."}
{"id": 6472, "prediction": "Perform a check on the server ."}
{"id": 6474, "prediction": "Removes a set of properties from the specified properties ."}
{"id": 6476, "prediction": "Sets the content of an input stream ."}
{"id": 6478, "prediction": "Set a property ."}
{"id": 6480, "prediction": "Updates the specified version ."}
{"id": 6482, "prediction": "Deletes the specified DAV ."}
{"id": 6484, "prediction": "Returns true if the named property has a child with the specified name ."}
{"id": 6486, "prediction": "Converts a byte array to a hexadecimal string ."}
{"id": 6488, "prediction": "Sets the value of all property ."}
{"id": 6490, "prediction": "Sets the property ."}
{"id": 6492, "prediction": "Update the tree ."}
{"id": 6494, "prediction": "Step 1 ."}
{"id": 6496, "prediction": "Skip whitespace ."}
{"id": 6498, "prediction": "Commit file changes ."}
{"id": 6500, "prediction": "Gets the content length ."}
{"id": 6502, "prediction": "Returns the overwrite flag ."}
{"id": 6504, "prediction": "Gets the timeout ."}
{"id": 6506, "prediction": "Sets the timeout ."}
{"id": 6508, "prediction": "Parses a file ."}
{"id": 6510, "prediction": "Strip metadata ."}
{"id": 6512, "prediction": "Gets the children of a condition ."}
{"id": 6514, "prediction": "Adds a child node to the list ."}
{"id": 6516, "prediction": "Prints a node ."}
{"id": 6518, "prediction": "Reads a JsonValue from a String ."}
{"id": 6520, "prediction": "Executes the request ."}
{"id": 6522, "prediction": "Create the project sample sample launcher ."}
{"id": 6524, "prediction": "Creates the rule file ."}
{"id": 6526, "prediction": "Gets the list of all IU units ."}
{"id": 6528, "prediction": "Gets the field name ."}
{"id": 6530, "prediction": "Gets the value of the alpha node ."}
{"id": 6532, "prediction": "Send baseline control ."}
{"id": 6534, "prediction": "Replies the locator for the given member ."}
{"id": 6536, "prediction": "Initialize the dialogs ."}
{"id": 6538, "prediction": "Generates an entity tag ."}
{"id": 6540, "prediction": "Validate the OTP"}
{"id": 6542, "prediction": "Gets the username for a user id ."}
{"id": 6544, "prediction": "Verify the OTP"}
{"id": 6546, "prediction": "Returns the public key for the given OAuth key ."}
{"id": 6548, "prediction": "Create a new Evaluation instance ."}
{"id": 6550, "prediction": "Clears the cache ."}
{"id": 6552, "prediction": "Returns the package name of the given object ."}
{"id": 6554, "prediction": "Returns the string descriptor for the given object ."}
{"id": 6556, "prediction": "Returns true if two classes are more than the same ."}
{"id": 6558, "prediction": "Gets the value of a property ."}
{"id": 6560, "prediction": "Get the PropertyDescriptor for a given name ."}
{"id": 6562, "prediction": "Reads a char ."}
{"id": 6564, "prediction": "Select a select statement ."}
{"id": 6566, "prediction": "Convert value to double ."}
{"id": 6568, "prediction": "Convert value to BigDecimal"}
{"id": 6570, "prediction": "Returns the numeric type of the given object ."}
{"id": 6572, "prediction": "Convert value to integer ."}
{"id": 6574, "prediction": "Returns the numeric type of two numeric types ."}
{"id": 6576, "prediction": "Pop the current evaluation ."}
{"id": 6578, "prediction": "Generate an object setter for the given field ."}
{"id": 6580, "prediction": "Initializes this node ."}
{"id": 6582, "prediction": "Sets the root context ."}
{"id": 6584, "prediction": "Sets the value of an expression ."}
{"id": 6586, "prediction": "Checks if the given expression is a constant ."}
{"id": 6588, "prediction": "Wait until the server is started ."}
{"id": 6590, "prediction": "Reloads the class loader ."}
{"id": 6592, "prediction": "Checks for the given archiver ."}
{"id": 6594, "prediction": "Creates the project ."}
{"id": 6596, "prediction": "Add system property ."}
{"id": 6598, "prediction": "Change the directory ."}
{"id": 6600, "prediction": "Creates a new file observer ."}
{"id": 6602, "prediction": "Create a new folder ."}
{"id": 6604, "prediction": "Start a background thread ."}
{"id": 6606, "prediction": "Ends the end tag ."}
{"id": 6608, "prediction": "Get the crop rectangle ."}
{"id": 6610, "prediction": "Registers a listener ."}
{"id": 6612, "prediction": "Gets the view ."}
{"id": 6614, "prediction": "Convert a text to a RTF HTML ."}
{"id": 6616, "prediction": "Creates a new unique file for the target folder ."}
{"id": 6618, "prediction": "Returns the namespace for the given name ."}
{"id": 6620, "prediction": "Set an attribute ."}
{"id": 6622, "prediction": "Get the font name from a file ."}
{"id": 6624, "prediction": "Adds a new buffer to the buffer ."}
{"id": 6626, "prediction": "Writes a byte to the buffer ."}
{"id": 6628, "prediction": "Writes the buffer to the output stream ."}
{"id": 6630, "prediction": "Set the font size ."}
{"id": 6632, "prediction": "Recompute the focus view ."}
{"id": 6634, "prediction": "Center the given highlight view ."}
{"id": 6636, "prediction": "Validates the given value ."}
{"id": 6638, "prediction": "Set an attribute for the given element ."}
{"id": 6640, "prediction": "Gets the element type ."}
{"id": 6642, "prediction": "Cleans up all paragraphs in the given text ."}
{"id": 6644, "prediction": "Checks if a domain is a valid domain ."}
{"id": 6646, "prediction": "Reduces the given editor ."}
{"id": 6648, "prediction": "Gets the thread status ."}
{"id": 6650, "prediction": "Returns true if the thread can be decoded ."}
{"id": 6652, "prediction": "Get the set of fonts for the current font ."}
{"id": 6654, "prediction": "Gets the system fonts ."}
{"id": 7425, "prediction": "Register a model adaptor to the given type ."}
{"id": 7427, "prediction": "Prepare the template ."}
{"id": 7429, "prediction": "Sets a property ."}
{"id": 7431, "prediction": "Creates a Supplier from a directory ."}
{"id": 7433, "prediction": "Parse a document from a file ."}
{"id": 7435, "prediction": "Returns all elements in the given parent ."}
{"id": 7437, "prediction": "Gets the first child element of the given name ."}
{"id": 7439, "prediction": "Validates the given input stream ."}
{"id": 7441, "prediction": "Set the content of this stream ."}
{"id": 7443, "prediction": "Apply the zip file to the zip file ."}
{"id": 7445, "prediction": "Sets the signature ."}
{"id": 7447, "prediction": "Sign request ."}
{"id": 7449, "prediction": "Completes multipart upload ."}
{"id": 7451, "prediction": "Adds an entry to the notification state ."}
{"id": 7453, "prediction": "Gets a notification ."}
{"id": 7455, "prediction": "Returns the Addresse for a given notification ."}
{"id": 7457, "prediction": "Gets an event ."}
{"id": 7459, "prediction": "Returns the entry with the given id ."}
{"id": 7461, "prediction": "Returns the number of notification categories ."}
{"id": 7463, "prediction": "Fetches an SSP notification response ."}
{"id": 7465, "prediction": "Maps a JSON response to a JSON response ."}
{"id": 7467, "prediction": "Attaches the actions to the list of actions for the specified entry ."}
{"id": 7469, "prediction": "Gets the notification category ."}
{"id": 7471, "prediction": "Updates read notifications ."}
{"id": 7473, "prediction": "Returns the school ID for the request ."}
{"id": 7475, "prediction": "Hide the notification ."}
{"id": 7477, "prediction": "Normalizes the point of a point ."}
{"id": 7479, "prediction": "Computes the closest point of a point ."}
{"id": 7481, "prediction": "Sets the shape of the Se3 ."}
{"id": 7483, "prediction": "Convert a polygon to a polygon ."}
{"id": 7485, "prediction": "Computes the bounding box of a quadrilateral ."}
{"id": 7487, "prediction": "Computes the center of a quadrilateral ."}
{"id": 7489, "prediction": "Computes the convex hull ."}
{"id": 7491, "prediction": "Calculates the average error of a point on a point"}
{"id": 7493, "prediction": "Checks if a quadr contains a point ."}
{"id": 7495, "prediction": "Returns the intersection of two points ."}
{"id": 7497, "prediction": "Returns the intersection of two lines ."}
{"id": 7499, "prediction": "Computes the intersection of two polygons ."}
{"id": 7501, "prediction": "Returns the intersection of two points ."}
{"id": 7503, "prediction": "Convert a quaternion to a quaternion ."}
{"id": 7505, "prediction": "Set rotation matrix ."}
{"id": 7507, "prediction": "Rotates a rotation matrix ."}
{"id": 7509, "prediction": "Converts an Euler to a matrix ."}
{"id": 7511, "prediction": "Sets the angle ."}
{"id": 7513, "prediction": "Sets the transformations ."}
{"id": 7515, "prediction": "Solves the centroid of the given points ."}
{"id": 7517, "prediction": "Returns the length of the side of a vertex ."}
{"id": 7519, "prediction": "Converts a Concaticographic feature into a Concat matrix ."}
{"id": 7521, "prediction": "Converts a Concaticantician to another ."}
{"id": 7523, "prediction": "Divide a point ."}
{"id": 7525, "prediction": "Convert a GeoMatrix to a GeoMatrix ."}
{"id": 7527, "prediction": "Returns the distance between two angles ."}
{"id": 7529, "prediction": "Returns true if the plane is contained inside the plane ."}
{"id": 7531, "prediction": "Interpolate the angle between two segments ."}
{"id": 7533, "prediction": "Processes a polygon ."}
{"id": 7535, "prediction": "Creates a homography matrix ."}
{"id": 7537, "prediction": "Calculates the axis of a plane ."}
{"id": 7539, "prediction": "Convert a point to a unit vector ."}
{"id": 7541, "prediction": "Computes the slope of two points ."}
{"id": 7543, "prediction": "Computes the closest point of a line ."}
{"id": 7545, "prediction": "Returns the closest point of a line ."}
{"id": 7547, "prediction": "Transform a point into a Point2D ."}
{"id": 7549, "prediction": "Returns true if the given quadr is equal to the given tolerance ."}
{"id": 7551, "prediction": "Convert a LineParams to a LineParameter ."}
{"id": 7553, "prediction": "Convert a line segment to a LineParameter ."}
{"id": 7555, "prediction": "Convert two points to a line ."}
{"id": 7557, "prediction": "Convert a line to a line ."}
{"id": 7559, "prediction": "Convert a line parameter to a line ."}
{"id": 7561, "prediction": "Convert a plane to a plane ."}
{"id": 7563, "prediction": "Convert a point to a 3D point ."}
{"id": 7565, "prediction": "Checks if the given T is equal to the given tolerance ."}
{"id": 7567, "prediction": "Returns the norm of this matrix ."}
{"id": 7569, "prediction": "Returns true if the number of elements are not zero ."}
{"id": 7571, "prediction": "Calculates the center of this point ."}
{"id": 7573, "prediction": "Returns true if the given point is true ."}
{"id": 7575, "prediction": "Convert a point to a point ."}
{"id": 7577, "prediction": "Checks if two points are identical ."}
{"id": 7579, "prediction": "Converts an ellipatic quad into a quadratic polygon ."}
{"id": 7581, "prediction": "Computes the angle of a point ."}
{"id": 7583, "prediction": "Selects the tangent from the current angle ."}
{"id": 7585, "prediction": "Computes the distance between two lines ."}
{"id": 7587, "prediction": "Computes the Euclidean distance between two points ."}
{"id": 7589, "prediction": "Returns the distance between the given point ."}
{"id": 7591, "prediction": "Computes the squared distance between two segments ."}
{"id": 7593, "prediction": "Returns the Euclidean distance between two points ."}
{"id": 7595, "prediction": "Returns the Euclidean distance between two points ."}
{"id": 7597, "prediction": "Calculates the Euclidean distance between the given ellipse ."}
{"id": 7599, "prediction": "Add a transform to the path ."}
{"id": 7601, "prediction": "Returns the closest point in the given ellipse ."}
{"id": 7603, "prediction": "Creates a random vector ."}
{"id": 7605, "prediction": "Checks if two vectors are equal ."}
{"id": 7607, "prediction": "Creates a matrix ."}
{"id": 7609, "prediction": "Returns the distance between two points ."}
{"id": 7611, "prediction": "Normalizes this matrix ."}
{"id": 7613, "prediction": "Computes the quadr of a quadrilateral ."}
{"id": 7615, "prediction": "Calculates the mean of a point ."}
{"id": 7617, "prediction": "Computes the normal normalization of a point ."}
{"id": 7619, "prediction": "Multiply the value of a scalar ."}
{"id": 7621, "prediction": "Returns the Euclidean distance between two points ."}
{"id": 7623, "prediction": "Generates a random point with a random number ."}
{"id": 7625, "prediction": "Generates a list of points from a point ."}
{"id": 7627, "prediction": "Returns the mean of the points in the specified list ."}
{"id": 7629, "prediction": "Invalidates all cached entries in the cache ."}
{"id": 7631, "prediction": "Retrieves the features of the server ."}
{"id": 7633, "prediction": "Get the features from the server ."}
{"id": 7635, "prediction": "Parse the feature manager ."}
{"id": 7637, "prediction": "Gets the set of feature features from a JSON file ."}
{"id": 7639, "prediction": "Checks if the collection contains the given collection ."}
{"id": 7641, "prediction": "Extracts the bundle name from a jar file ."}
{"id": 7643, "prediction": "Checks if the file is a replacement jar ."}
{"id": 7645, "prediction": "Compare two versions ."}
{"id": 7647, "prediction": "Checks if the given artifact is a spring bootstrap jar ."}
{"id": 7649, "prediction": "Determines if the given file is working with an image ."}
{"id": 7651, "prediction": "Compares two objects ."}
{"id": 7653, "prediction": "Throw an exception ."}
{"id": 7655, "prediction": "Swaps the target at the specified position ."}
{"id": 7657, "prediction": "Prints a formatted message to the console ."}
{"id": 7659, "prediction": "Makes sure that the given number is a good chance to be shown ."}
{"id": 7661, "prediction": "Returns a uniform value in the specified range ."}
{"id": 7663, "prediction": "Returns the polynomial probability of a given function ."}
{"id": 7665, "prediction": "Main entry point ."}
{"id": 7667, "prediction": "Uncapitalize the first letter of a word ."}
{"id": 7669, "prediction": "Convert a Criteria to a String"}
{"id": 7671, "prediction": "Filter the authentication token ."}
{"id": 7673, "prediction": "Registers a Guice bounding box ."}
{"id": 7675, "prediction": "Adds a projection to this alias ."}
{"id": 7677, "prediction": "Convert a trigger to a Trigger ."}
{"id": 7679, "prediction": "Set start time end time ."}
{"id": 6656, "prediction": "Get a reader from the input stream ."}
{"id": 6658, "prediction": "Updates the attributes of the attribute ."}
{"id": 6660, "prediction": "Look up an entity ."}
{"id": 6662, "prediction": "Pop off the stack ."}
{"id": 6664, "prediction": "Returns the prefix of the given name ."}
{"id": 6666, "prediction": "Remove quotes from a string ."}
{"id": 6668, "prediction": "Removes the element from the stack ."}
{"id": 6670, "prediction": "Save the state of the instance ."}
{"id": 6672, "prediction": "Called when an event is pressed ."}
{"id": 6674, "prediction": "Applies the base matrix to the base matrix ."}
{"id": 6676, "prediction": "Returns true if the specified editor has the specified text ."}
{"id": 6678, "prediction": "Encodes the given URL ."}
{"id": 6680, "prediction": "Tries to pick a directory ."}
{"id": 6682, "prediction": "Sets the output ."}
{"id": 6684, "prediction": "Writes a string to the output stream ."}
{"id": 6686, "prediction": "Writes an UTF - 8 encoding string to the given string ."}
{"id": 6688, "prediction": "Write name ."}
{"id": 6690, "prediction": "Waits for a stream activation ."}
{"id": 6692, "prediction": "Waits for the next request to be executed ."}
{"id": 6694, "prediction": "Performs an action on the specified action ."}
{"id": 6696, "prediction": "Checks if the bucket is accessible ."}
{"id": 6698, "prediction": "Trigger a wildcard expansion ."}
{"id": 6700, "prediction": "Deletes any characters in the string ."}
{"id": 6702, "prediction": "Updates the properties with the given configuration ."}
{"id": 6704, "prediction": "Creates the auto - detected input stream ."}
{"id": 6706, "prediction": "Compiles the given content ."}
{"id": 6708, "prediction": "Reloads the model with the specified value ."}
{"id": 6710, "prediction": "Transform a base name to a base name ."}
{"id": 6712, "prediction": "Sends a redirect to the given location ."}
{"id": 6714, "prediction": "Create a new expandander handler ."}
{"id": 6716, "prediction": "Creates a WroConfiguration instance ."}
{"id": 6718, "prediction": "Process request ."}
{"id": 6720, "prediction": "Identify duplicate group names ."}
{"id": 6722, "prediction": "Locates an input stream ."}
{"id": 6724, "prediction": "Decorate a processor ."}
{"id": 6726, "prediction": "Splits an option into an array of options ."}
{"id": 6728, "prediction": "Parses the properties file ."}
{"id": 6730, "prediction": "Persists the resource fingerprints for the given group names ."}
{"id": 6732, "prediction": "Extend the plugin classpath ."}
{"id": 6734, "prediction": "Initialize WroManagerFactory ."}
{"id": 6736, "prediction": "Compiles the template ."}
{"id": 6738, "prediction": "Process a list of resources ."}
{"id": 6740, "prediction": "Applies the preprocessing processor to the given resource ."}
{"id": 6742, "prediction": "Persist the fallback storage ."}
{"id": 6744, "prediction": "Rewrite the css url ."}
{"id": 6746, "prediction": "Adds a model transformer to the model ."}
{"id": 6748, "prediction": "Initialize the aggregated folder path ."}
{"id": 6750, "prediction": "Parses the given CSS file ."}
{"id": 6752, "prediction": "Converts a resource post processor to a preprocessor ."}
{"id": 6754, "prediction": "Perform gzip response ."}
{"id": 6756, "prediction": "Exclude a path pattern ."}
{"id": 6758, "prediction": "Store a resource ."}
{"id": 6760, "prediction": "Filters the given collection ."}
{"id": 6762, "prediction": "Finds all imported resources ."}
{"id": 6764, "prediction": "Converts a list of strings to a string ."}
{"id": 6766, "prediction": "Creates the context ."}
{"id": 6768, "prediction": "Evaluates a script ."}
{"id": 6770, "prediction": "Checks if the request is a handler request ."}
{"id": 6772, "prediction": "Rename a group ."}
{"id": 6774, "prediction": "Process group ."}
{"id": 6776, "prediction": "Locates an input stream in the context folder ."}
{"id": 6778, "prediction": "Attempts to locate an input stream ."}
{"id": 6780, "prediction": "Extracts the path from the given URI ."}
{"id": 6782, "prediction": "Add uri locator locator ."}
{"id": 6784, "prediction": "Add a dependency ."}
{"id": 6786, "prediction": "Log the summary of the resources ."}
{"id": 6788, "prediction": "Returns a read lock for a given key ."}
{"id": 6790, "prediction": "Parses a comma separated list of properties ."}
{"id": 6792, "prediction": "Gets the compilation command ."}
{"id": 6794, "prediction": "Adds the HTTP headers to the map ."}
{"id": 6796, "prediction": "Gets the servlet path from the given location ."}
{"id": 6798, "prediction": "Loads the pattern with the specified key ."}
{"id": 6800, "prediction": "Creates a temporary file ."}
{"id": 6802, "prediction": "Sets an attribute ."}
{"id": 6804, "prediction": "Generate data URI ."}
{"id": 6806, "prediction": "Unset the context ."}
{"id": 6808, "prediction": "Called when an exception occurs ."}
{"id": 6810, "prediction": "Updates the hash for the given group ."}
{"id": 6812, "prediction": "Creates a process ."}
{"id": 6814, "prediction": "Process group elements ."}
{"id": 6816, "prediction": "Parses a group element ."}
{"id": 6818, "prediction": "Returns the resources associated with the given name ."}
{"id": 6820, "prediction": "Stop a timer ."}
{"id": 6822, "prediction": "Returns a new timer with the specified name ."}
{"id": 6824, "prediction": "Called by the worker thread ."}
{"id": 6826, "prediction": "Updates all the counters for the current job state ."}
{"id": 6828, "prediction": "Perform a default visit ."}
{"id": 6830, "prediction": "Resets the loading of the loading phase ."}
{"id": 6832, "prediction": "Checks if the class is consistent ."}
{"id": 6834, "prediction": "Restore the instance taxonomy ."}
{"id": 6836, "prediction": "Prepare the executor ."}
{"id": 6838, "prediction": "Gets the collection of individuals ."}
{"id": 6840, "prediction": "Creates an UnsupportedOperationException ."}
{"id": 6842, "prediction": "Removes the specified key from the specified position ."}
{"id": 6844, "prediction": "Checks if the object contains the given element ."}
{"id": 6846, "prediction": "Check the occurrence numbers ."}
{"id": 6848, "prediction": "Adds the timer ."}
{"id": 6850, "prediction": "Remove an entry from the map ."}
{"id": 6852, "prediction": "Shrinks the internal map ."}
{"id": 6854, "prediction": "Prints the declarations of a class ."}
{"id": 6856, "prediction": "Clears the bucket ."}
{"id": 6858, "prediction": "Combine two lists ."}
{"id": 6860, "prediction": "Creates and returns a new CompletionMonitorMonitor ."}
{"id": 6862, "prediction": "Submits an input to the queue ."}
{"id": 6864, "prediction": "Mark the index of the query ."}
{"id": 6866, "prediction": "Checks if the given chain property is valid ."}
{"id": 6868, "prediction": "Creates a subset of the given function ."}
{"id": 6870, "prediction": "Removes the specified object from the set ."}
{"id": 6872, "prediction": "Log memory usage ."}
{"id": 6874, "prediction": "Shutdown the process ."}
{"id": 6876, "prediction": "Prints a log message ."}
{"id": 6878, "prediction": "Adds the given number of rules ."}
{"id": 6880, "prediction": "Returns the action input parameter ."}
{"id": 6882, "prediction": "Returns the required parameters for this request ."}
{"id": 6884, "prediction": "Add a relation ."}
{"id": 6886, "prediction": "Adds a link to the link ."}
{"id": 6888, "prediction": "Adds a link parameter ."}
{"id": 6890, "prediction": "Gets the list of relations ."}
{"id": 6892, "prediction": "Checks if the required parameters are satisfied ."}
{"id": 6894, "prediction": "Returns true if the parameter is hidden ."}
{"id": 6896, "prediction": "Returns true if the input property is implicit or not ."}
{"id": 6898, "prediction": "Gets default value ."}
{"id": 6900, "prediction": "Gets the value of the given action parameter ."}
{"id": 6902, "prediction": "Returns the query string ."}
{"id": 6904, "prediction": "Write the input button ."}
{"id": 6906, "prediction": "Add an AffanceBuilder to this AffancesBuilder ."}
{"id": 6908, "prediction": "Returns the partial URI components for the given action descriptor ."}
{"id": 6910, "prediction": "Gets first node by relation ."}
{"id": 7681, "prediction": "Writes the buffer to the output stream ."}
{"id": 7683, "prediction": "Gets all fields of a class ."}
{"id": 7685, "prediction": "Converts an Exception to a Response ."}
{"id": 7687, "prediction": "Generate the attributes hash for the request ."}
{"id": 7689, "prediction": "Sends a mail item ."}
{"id": 7691, "prediction": "Changes the user s password ."}
{"id": 7693, "prediction": "Hashes a password ."}
{"id": 7695, "prediction": "Verify the password strength ."}
{"id": 7697, "prediction": "Commit a transaction ."}
{"id": 7699, "prediction": "Starts the transaction ."}
{"id": 7701, "prediction": "Determines if the given path is authorized to the given method ."}
{"id": 7703, "prediction": "Gets the response ."}
{"id": 7705, "prediction": "Apply a constraint to the given value ."}
{"id": 7707, "prediction": "Create a less than expression"}
{"id": 7709, "prediction": "Creates a greater than or equal to the given value"}
{"id": 7711, "prediction": "Create a new IN clause"}
{"id": 7713, "prediction": "Returns a new resource with the given content ."}
{"id": 7715, "prediction": "Returns a new resource with the given value ."}
{"id": 7717, "prediction": "Returns true if the given byte array can be decoded ."}
{"id": 7719, "prediction": "Compares two Reader objects ."}
{"id": 7721, "prediction": "Takes sure that all files have been modified ."}
{"id": 7723, "prediction": "Add padding ."}
{"id": 7725, "prediction": "Returns all super types of the given class ."}
{"id": 7727, "prediction": "Reads a string from the system ."}
{"id": 7729, "prediction": "Append a byte array to the buffer ."}
{"id": 7731, "prediction": "Returns a new fraction ."}
{"id": 7733, "prediction": "Returns a new fraction of this fraction ."}
{"id": 7735, "prediction": "Returns the maximum value in the array ."}
{"id": 7737, "prediction": "Throws IllegalArgumentException ."}
{"id": 7739, "prediction": "Fetches metadata for a given latitude and latitude ."}
{"id": 7741, "prediction": "Find the hourly point for all hours in the hours ."}
{"id": 7743, "prediction": "Fetches data for a weather query ."}
{"id": 7745, "prediction": "Creates a long term forecast for a series of time ."}
{"id": 7747, "prediction": "Fetches the content of the metadata ."}
{"id": 7749, "prediction": "Find the Beaufortfortian level of a given point ."}
{"id": 7751, "prediction": "Checks if the current date is in the current time ."}
{"id": 7753, "prediction": "Get the best fit forecast for a given date ."}
{"id": 7755, "prediction": "Fetches the content of the given latitude and latitude ."}
{"id": 7757, "prediction": "Invokes a JavaScript method on a JavaScript object ."}
{"id": 7759, "prediction": "Creates an instance of the referenced object ."}
{"id": 7761, "prediction": "Retrieves the configuration for the given service path ."}
{"id": 7763, "prediction": "Creates a new class iterator ."}
{"id": 7765, "prediction": "Returns a list of services for the given class ."}
{"id": 7767, "prediction": "Acquire an input stream ."}
{"id": 7769, "prediction": "Gets wrapped data ."}
{"id": 7771, "prediction": "Returns the prefix of the given index ."}
{"id": 7773, "prediction": "Executes the regular expression ."}
{"id": 7775, "prediction": "Subtracts a subset of the substring ."}
{"id": 7777, "prediction": "Determines whether the substring of the given substring matches the given substring ."}
{"id": 7779, "prediction": "Recursive method for recursively ."}
{"id": 7781, "prediction": "Creates a new Nodes node for the given subtree ."}
{"id": 7783, "prediction": "Deletes an arc traversal ."}
{"id": 7785, "prediction": "Clone a word ."}
{"id": 7787, "prediction": "Parse a bracket ."}
{"id": 7789, "prediction": "Creates a new lacre ."}
{"id": 7791, "prediction": "Converts a set of characters into a vector ."}
{"id": 7793, "prediction": "Creates a pseudo pseudo color ."}
{"id": 7795, "prediction": "Check the color for all colors in the parent"}
{"id": 7797, "prediction": "Removes the color of the arc ."}
{"id": 7799, "prediction": "Sets the start token ."}
{"id": 7801, "prediction": "Recursive method for lexicursion ."}
{"id": 7803, "prediction": "Initializes the state set ."}
{"id": 7805, "prediction": "Returns a set of Unicode classes ."}
{"id": 7807, "prediction": "Sort the arcs of two arcs ."}
{"id": 7809, "prediction": "Creates a new state ."}
{"id": 7811, "prediction": "Move the insins from the old state to the new state ."}
{"id": 7813, "prediction": "Copies the given state to the given state ."}
{"id": 7815, "prediction": "Fires a state ."}
{"id": 7817, "prediction": "Duplicate a state ."}
{"id": 7819, "prediction": "Dump the NFA to stdout ."}
{"id": 7821, "prediction": "Dumps all arcs in the given state ."}
{"id": 7823, "prediction": "Dumps the given arc ."}
{"id": 7825, "prediction": "Analyzes the arc s signature and returns the result ."}
{"id": 7827, "prediction": "Removes all states from the state ."}
{"id": 7829, "prediction": "Moves the reachable reachable to the given state ."}
{"id": 7831, "prediction": "Removes an arc from an arc ."}
{"id": 7833, "prediction": "Gets the report interpreter plugins ."}
{"id": 7835, "prediction": "Gets the rule selection ."}
{"id": 7837, "prediction": "Gets the error message ."}
{"id": 7839, "prediction": "Gathers all tasks from the given task factory ."}
{"id": 7841, "prediction": "Interprets a command line ."}
{"id": 7843, "prediction": "Executes the given task ."}
{"id": 7845, "prediction": "Prints usage ."}
{"id": 7847, "prediction": "Creates the class loader ."}
{"id": 7849, "prediction": "Returns the set of ids that intersects in the specified range ."}
{"id": 7851, "prediction": "Add a route pattern ."}
{"id": 7853, "prediction": "Add route ."}
{"id": 7855, "prediction": "Add a route to the router"}
{"id": 7857, "prediction": "Checks if the given property is equal to the given value ."}
{"id": 7859, "prediction": "Compare two folders ."}
{"id": 7861, "prediction": "Compares two Bookmarks ."}
{"id": 7863, "prediction": "Returns a list of all the dependencies contained in this context ."}
{"id": 7865, "prediction": "Parse the authorization header ."}
{"id": 7867, "prediction": "Map a function to a function ."}
{"id": 7869, "prediction": "Resolve a method ."}
{"id": 7871, "prediction": "Resolve a variable value ."}
{"id": 7873, "prediction": "Parses a jar file ."}
{"id": 7875, "prediction": "Parses the given jar file ."}
{"id": 7877, "prediction": "Gets the resource as a stream ."}
{"id": 7879, "prediction": "Fetches the class loader for the framework ."}
{"id": 7881, "prediction": "Start loading a class"}
{"id": 7883, "prediction": "Creates a pagination result ."}
{"id": 7885, "prediction": "Fill the requirements ."}
{"id": 7887, "prediction": "Parse the implicit subtree ."}
{"id": 7889, "prediction": "Returns the size of a file ."}
{"id": 7891, "prediction": "Seeks to the given block position ."}
{"id": 7893, "prediction": "Gets the list of artifact artifacts ."}
{"id": 7895, "prediction": "Calculates the price of a pair of positions ."}
{"id": 7897, "prediction": "Calculates the price of the best match with the given options ."}
{"id": 7899, "prediction": "Throw an exception ."}
{"id": 7901, "prediction": "Scans the tag library for a given resource ."}
{"id": 7903, "prediction": "Returns the parent class loader ."}
{"id": 7905, "prediction": "Get the birthcode for a given name ."}
{"id": 7907, "prediction": "Compiles the JS files ."}
{"id": 7909, "prediction": "Starts the background thread ."}
{"id": 7911, "prediction": "Run the compiler ."}
{"id": 7913, "prediction": "Find channel instance ."}
{"id": 7915, "prediction": "Gets a list of deploy groups ."}
{"id": 7917, "prediction": "Parses the given JspReader ."}
{"id": 7919, "prediction": "Parse a quoted string ."}
{"id": 7921, "prediction": "Parse an attribute and body tag ."}
{"id": 7923, "prediction": "Add a child node ."}
{"id": 7925, "prediction": "Finds all nodes in this tree ."}
{"id": 7927, "prediction": "Returns the base coordinates ."}
{"id": 7929, "prediction": "Sets the thread ."}
{"id": 7931, "prediction": "Find the wrapped stream ."}
{"id": 7933, "prediction": "Writes a string to a writer ."}
{"id": 7935, "prediction": "Inserts the first element with the specified name ."}
{"id": 6912, "prediction": "Creates a PersistentHashMap from an Iterator ."}
{"id": 6914, "prediction": "Returns an empty TreeMap with the given comparator ."}
{"id": 6916, "prediction": "Returns the last key in the map ."}
{"id": 6918, "prediction": "Fetches the given iterable ."}
{"id": 6920, "prediction": "Creates a new runnable ."}
{"id": 6922, "prediction": "Matches an item to the next item ."}
{"id": 6924, "prediction": "Returns the element at the given index ."}
{"id": 6926, "prediction": "Concatenate a vector to a vector ."}
{"id": 6928, "prediction": "Creates a MutableList from the given items ."}
{"id": 6930, "prediction": "Returns a copy of the specified items ."}
{"id": 6932, "prediction": "Returns a string builder for the specified length ."}
{"id": 6934, "prediction": "Construct a lazy reference from a producer ."}
{"id": 6936, "prediction": "Inserts an item into the array at the specified index ."}
{"id": 6938, "prediction": "Suspend the current transaction ."}
{"id": 6940, "prediction": "Builds a list of service components ."}
{"id": 6942, "prediction": "Create an inheritance link between two concrete classes ."}
{"id": 6944, "prediction": "Creates a copy of methods from the specified classes ."}
{"id": 6946, "prediction": "Removes the SbbEntity from the current thread ."}
{"id": 6948, "prediction": "Returns the set of references that are referenced by the given service component ."}
{"id": 6950, "prediction": "Uninstalls a service ."}
{"id": 6952, "prediction": "Gets the usage parameters for a given SbbBB ."}
{"id": 6954, "prediction": "Get the profiles for the specified profile table ."}
{"id": 6956, "prediction": "Get profile by attribute name ."}
{"id": 6958, "prediction": "Convenience method for subclasses ."}
{"id": 6960, "prediction": "Bind a name to this node ."}
{"id": 6962, "prediction": "Lookup an object by name ."}
{"id": 6964, "prediction": "Gets the next SbbEntity ."}
{"id": 6966, "prediction": "Extracts the contents of a jar file ."}
{"id": 6968, "prediction": "Put an object into the cache ."}
{"id": 6970, "prediction": "Removes the given SbbEntity from the given SbbEntity ."}
{"id": 6972, "prediction": "Gets all the Sbb entities attached to this node ."}
{"id": 6974, "prediction": "Detaches a timer from the timer ."}
{"id": 6976, "prediction": "Gets all attached timers ."}
{"id": 6978, "prediction": "Unmask the given name ."}
{"id": 6980, "prediction": "Gets the names of this node ."}
{"id": 6982, "prediction": "Gets the cmp attribute ."}
{"id": 6984, "prediction": "Initialize MBeanInfo ."}
{"id": 6986, "prediction": "Download a file from the deployment ."}
{"id": 6988, "prediction": "Installs the given UAE ."}
{"id": 6990, "prediction": "This method is called to process an uninstallable unit ."}
{"id": 6992, "prediction": "Determines if the log record is logged ."}
{"id": 6994, "prediction": "Returns the set of all components that are referenced by the given component ."}
{"id": 6996, "prediction": "Get the permissions for the current policy ."}
{"id": 6998, "prediction": "Checks if a profile exists"}
{"id": 7000, "prediction": "Update the configuration properties ."}
{"id": 7002, "prediction": "Called by the RA ."}
{"id": 7004, "prediction": "Deactivates this object ."}
{"id": 7006, "prediction": "Remove this entity from the context ."}
{"id": 7008, "prediction": "Called when the service is active ."}
{"id": 7010, "prediction": "Called when an activity is started ."}
{"id": 7012, "prediction": "Verify configuration properties ."}
{"id": 7014, "prediction": "Called when the resource is active ."}
{"id": 7016, "prediction": "Declarative Services method for unsetting the resource adapter ."}
{"id": 7018, "prediction": "Build profile attribute map ."}
{"id": 7020, "prediction": "Gets the set of activity contexts ."}
{"id": 7022, "prediction": "Gets the usageMBean ."}
{"id": 7024, "prediction": "Fires an event ."}
{"id": 7026, "prediction": "Gets profile ."}
{"id": 7028, "prediction": "Gets all abstract methods from a class ."}
{"id": 7030, "prediction": "Create the object pool"}
{"id": 7032, "prediction": "Checks if the given alarm source is owned by the given alarm ."}
{"id": 7034, "prediction": "Returns the usage parameter set for the given profile object ."}
{"id": 7036, "prediction": "Determines whether the given deployment is accepted ."}
{"id": 7038, "prediction": "Starts the deployment ."}
{"id": 7040, "prediction": "Show the deployment status ."}
{"id": 7042, "prediction": "Execute the after commit priority ."}
{"id": 7044, "prediction": "Executes the before commit actions ."}
{"id": 7046, "prediction": "Gets the names of all Tracer names ."}
{"id": 7048, "prediction": "Remove replicated data ."}
{"id": 7050, "prediction": "Process usage parameter ."}
{"id": 7052, "prediction": "Create a new object pool"}
{"id": 7054, "prediction": "Starts a activity context ."}
{"id": 7056, "prediction": "Check the fire event for the given event type ."}
{"id": 7058, "prediction": "Generate the concrete class ."}
{"id": 7060, "prediction": "Convert a string to an object ."}
{"id": 7062, "prediction": "Extracts the message from the result ."}
{"id": 7064, "prediction": "Checks if the given collection contains all contained entities ."}
{"id": 7066, "prediction": "Checks if this level is higher than the given level ."}
{"id": 7068, "prediction": "Remove all classes from the classpath ."}
{"id": 7070, "prediction": "Retrieve a profile object from the profile ."}
{"id": 7072, "prediction": "Sets the component s value ."}
{"id": 7074, "prediction": "Generate concrete methods ."}
{"id": 7076, "prediction": "Add a name to the cache ."}
{"id": 7078, "prediction": "Remove a name from the cache ."}
{"id": 7080, "prediction": "Removes all timers associated with this timer ."}
{"id": 7082, "prediction": "Detach an SbbEntity from the cache ."}
{"id": 7084, "prediction": "Called when the activity is ended ."}
{"id": 7086, "prediction": "Get the collection of external dependencies ."}
{"id": 7088, "prediction": "Returns true if the deployment unit is already deployed ."}
{"id": 7090, "prediction": "Gets the management actions ."}
{"id": 7092, "prediction": "Close the profile"}
{"id": 7094, "prediction": "Change write mode ."}
{"id": 7096, "prediction": "Called after the setCompaction has been set ."}
{"id": 7098, "prediction": "This method is called after the getCmpField is called ."}
{"id": 7100, "prediction": "Invoked after the management method is called after a profile has been set ."}
{"id": 7102, "prediction": "Create the default constructor ."}
{"id": 7104, "prediction": "Creates and sets the SbbEntity ."}
{"id": 7106, "prediction": "Create the getter method interface for the given activity ."}
{"id": 7108, "prediction": "Bind a name to the target object ."}
{"id": 7110, "prediction": "Decorate the abstract class ."}
{"id": 7112, "prediction": "Gets the real field name for the given action ."}
{"id": 7114, "prediction": "Gets the value of the specified field ."}
{"id": 7116, "prediction": "Initialize the profile ."}
{"id": 7118, "prediction": "Get the profile object ."}
{"id": 7120, "prediction": "Get the profile wrappers for the profile ."}
{"id": 7122, "prediction": "Create the inheritance link for the given class ."}
{"id": 7124, "prediction": "Adds the given member values to the map ."}
{"id": 7126, "prediction": "Gets the class pool ."}
{"id": 7128, "prediction": "Undeployed resources ."}
{"id": 7130, "prediction": "Checks if class or interface implements interface ."}
{"id": 7132, "prediction": "Resolves an entity to a resource ."}
{"id": 7134, "prediction": "Handle a profile ."}
{"id": 7136, "prediction": "Creates a temporary directory for the deployment"}
{"id": 7138, "prediction": "Start the current process ."}
{"id": 7140, "prediction": "Make a proxy call ."}
{"id": 7142, "prediction": "Convert a time to TTL"}
{"id": 7144, "prediction": "Returns the profile object for the current profile"}
{"id": 7146, "prediction": "Reset the log level ."}
{"id": 7148, "prediction": "Add a logger ."}
{"id": 7150, "prediction": "Remove a handler"}
{"id": 7152, "prediction": "Sets the level of the log4j ."}
{"id": 7154, "prediction": "Reset the cache flags ."}
{"id": 7156, "prediction": "Checks if the tracer name is valid ."}
{"id": 7158, "prediction": "Reads an object from the stream ."}
{"id": 7160, "prediction": "Returns a list of all the dependencies ."}
{"id": 7162, "prediction": "Override this method to locate a resource ."}
{"id": 7164, "prediction": "Create and register the profile ."}
{"id": 7166, "prediction": "Returns the set of SBSIDs for the given component ."}
{"id": 7937, "prediction": "Sets the writer ."}
{"id": 7939, "prediction": "Maps an EL function to a node ."}
{"id": 7941, "prediction": "Registers a model with the given key ."}
{"id": 7943, "prediction": "Monitor a job ."}
{"id": 7945, "prediction": "Finishes the output stream ."}
{"id": 7947, "prediction": "Encode the LZ - 1 LZ - 1 ."}
{"id": 7949, "prediction": "Get the Servlet exception ."}
{"id": 7951, "prediction": "Finishes the stream ."}
{"id": 7953, "prediction": "Evaluate EL expression ."}
{"id": 7955, "prediction": "Checks if the given path is an XML file ."}
{"id": 7957, "prediction": "Load a tag file ."}
{"id": 7959, "prediction": "Main entry point ."}
{"id": 7961, "prediction": "Scans the files ."}
{"id": 7963, "prediction": "Initializes the system class loader ."}
{"id": 7965, "prediction": "Checks if the string matches the given string ."}
{"id": 7967, "prediction": "Skips the given character from the given string ."}
{"id": 7969, "prediction": "Skips the given tag ."}
{"id": 7971, "prediction": "Removes the current file ."}
{"id": 7973, "prediction": "Filters all aspects of the given list with the given predicate ."}
{"id": 7975, "prediction": "Sets the resource prefixes ."}
{"id": 7977, "prediction": "Encode a prefix ."}
{"id": 7979, "prediction": "Merges the errors in the binding result ."}
{"id": 7981, "prediction": "Scans the channel factories for the given Bundle ."}
{"id": 7983, "prediction": "Invokes a custom tag ."}
{"id": 7985, "prediction": "Get an array of ints ."}
{"id": 7987, "prediction": "Gets the resource as a stream ."}
{"id": 7989, "prediction": "Push a stream into the stream ."}
{"id": 7991, "prediction": "Scan XML declaration ."}
{"id": 7993, "prediction": "Get the real path for the given path ."}
{"id": 7995, "prediction": "Gets the resource as a stream ."}
{"id": 7997, "prediction": "Logs a message ."}
{"id": 7999, "prediction": "calculate buffer size"}
{"id": 8001, "prediction": "Set the preset dictionary ."}
{"id": 8003, "prediction": "Fills the input stream with the given length ."}
{"id": 8005, "prediction": "Returns the length of the specified buffer ."}
{"id": 8007, "prediction": "Verifies that the distance matches the given distance ."}
{"id": 8009, "prediction": "Recycle the response ."}
{"id": 8011, "prediction": "Clears the buffer ."}
{"id": 8013, "prediction": "Closes the output stream ."}
{"id": 8015, "prediction": "Allocate char buffer ."}
{"id": 8017, "prediction": "Make a list of key fields ."}
{"id": 8019, "prediction": "Compile the class ."}
{"id": 8021, "prediction": "Initialize java compiler ."}
{"id": 8023, "prediction": "Quote a character ."}
{"id": 8025, "prediction": "Compiles the tag handlers ."}
{"id": 8027, "prediction": "Generate the common preamble preamble ."}
{"id": 8029, "prediction": "Generate the page ."}
{"id": 8031, "prediction": "Reads properties from an input stream ."}
{"id": 8033, "prediction": "Validate the given XML view ."}
{"id": 8035, "prediction": "Parse an EL expression ."}
{"id": 8037, "prediction": "Checks if the given URL is a JSP page ."}
{"id": 8039, "prediction": "Prints a string ."}
{"id": 8041, "prediction": "Print a single string ."}
{"id": 8043, "prediction": "Checks that the scope is valid ."}
{"id": 8045, "prediction": "Validate expressions ."}
{"id": 8047, "prediction": "Make a Java package name ."}
{"id": 8049, "prediction": "Makes sure the given identifier is valid ."}
{"id": 8051, "prediction": "Checks if the given key is a Java keyword ."}
{"id": 8053, "prediction": "Converts a modifier modifier to a string ."}
{"id": 8055, "prediction": "Run the user ."}
{"id": 8057, "prediction": "Puts a value into the cache ."}
{"id": 8059, "prediction": "Build metrics collection ."}
{"id": 8061, "prediction": "Writes the given object to the output stream ."}
{"id": 8063, "prediction": "Creates and returns the prepared statement ."}
{"id": 8065, "prediction": "Tracks the metrics for a given metric ."}
{"id": 8067, "prediction": "Puts an unsigned double into the stream ."}
{"id": 8069, "prediction": "Creates the container ."}
{"id": 8071, "prediction": "Removes the slot from the given slot ."}
{"id": 8073, "prediction": "Registers a listener for an event ."}
{"id": 8075, "prediction": "Emit event listeners ."}
{"id": 8077, "prediction": "Gets the remote name ."}
{"id": 8079, "prediction": "Parse a timestamp ."}
{"id": 8081, "prediction": "Compute the RollupComputer for a given type ."}
{"id": 8083, "prediction": "Puts the given granularity config into the specified TTL map ."}
{"id": 8085, "prediction": "Formats the given headers into a string ."}
{"id": 8087, "prediction": "Register metrics ."}
{"id": 8089, "prediction": "Add a metric ."}
{"id": 8091, "prediction": "Gets token tokens ."}
{"id": 8093, "prediction": "Creates a granularity from a given interval ."}
{"id": 8095, "prediction": "Set the current server time ."}
{"id": 8097, "prediction": "Returns the maximum number of connections per host ."}
{"id": 8099, "prediction": "Inserts a collection of metrics to the given collection ."}
{"id": 8101, "prediction": "Gets the locator for the given granularity ."}
{"id": 8103, "prediction": "Gets the regex from the given query string ."}
{"id": 8105, "prediction": "Stop the uploader ."}
{"id": 8107, "prediction": "Checks if a locator is currently active ."}
{"id": 8109, "prediction": "Returns true if the given locator is a valid location for the given slot ."}
{"id": 8111, "prediction": "Maps a range of ranges to a range ."}
{"id": 8113, "prediction": "Inserts all metrics in the cache ."}
{"id": 8115, "prediction": "Returns true if the given metric has expired ."}
{"id": 8117, "prediction": "Gets metadata values ."}
{"id": 8119, "prediction": "Checks if the content type is valid ."}
{"id": 8121, "prediction": "This method is called when an index is found ."}
{"id": 8123, "prediction": "Checks if the download manager has been downloaded ."}
{"id": 8125, "prediction": "Returns true if the name matches the given name ."}
{"id": 8127, "prediction": "Stops the RabbitMQ queue ."}
{"id": 8129, "prediction": "Add a list of ice servers ."}
{"id": 8131, "prediction": "Send a message to a user"}
{"id": 8133, "prediction": "Gets the value of the editererides property ."}
{"id": 8135, "prediction": "Gets the value of the userdefinedAnyField property ."}
{"id": 8137, "prediction": "Gets the value of the multimediaAd ."}
{"id": 8139, "prediction": "Gets the status of the status field ."}
{"id": 8141, "prediction": "Gets the value of the import module ."}
{"id": 8143, "prediction": "Gets the value of the wer ."}
{"id": 8145, "prediction": "Sets the value of the region property ."}
{"id": 8147, "prediction": "Sets the value of the address property ."}
{"id": 8149, "prediction": "Sets the value of the rentCollectionPeriod property ."}
{"id": 8151, "prediction": "Sets the value of the phone1 property ."}
{"id": 8153, "prediction": "Sets the value of the contact property ."}
{"id": 8155, "prediction": "Sets the value of the mainEmail property ."}
{"id": 8157, "prediction": "Sets the value of the externalId property ."}
{"id": 8159, "prediction": "Sets the value of the epart property ."}
{"id": 8161, "prediction": "Sets the value of the Gebder ."}
{"id": 8163, "prediction": "Checks if the given string is numeric ."}
{"id": 8165, "prediction": "Sets the value of the Gruppe ."}
{"id": 8167, "prediction": "Gets the value of the property ."}
{"id": 8169, "prediction": "Gets the value of the userDef property ."}
{"id": 8171, "prediction": "Gets the value of the zimmer property ."}
{"id": 8173, "prediction": "Gets the value of the bueroProxPair property ."}
{"id": 8175, "prediction": "Gets the value of the landUndUndefecht ."}
{"id": 8177, "prediction": "Gets the value of the zinisterer property ."}
{"id": 8179, "prediction": "Sets the umfung value for this EF ."}
{"id": 8181, "prediction": "Gets the iso2 iso code from the given country ."}
{"id": 8183, "prediction": "Returns the ISO3 country code for the given country ."}
{"id": 8185, "prediction": "Returns the country name for the given country ."}
{"id": 8187, "prediction": "Gets the value of the annotation property ."}
{"id": 8189, "prediction": "Gets the value of the pdf property ."}
{"id": 8191, "prediction": "Sets the value of the realestateitems property ."}
{"id": 7168, "prediction": "Initialize the Slee ."}
{"id": 7170, "prediction": "Validate the state transition transition ."}
{"id": 7172, "prediction": "Set the value of an update field ."}
{"id": 7174, "prediction": "Add a value to the database ."}
{"id": 7176, "prediction": "Creates a RegionRequest from a string ."}
{"id": 7178, "prediction": "Resolves the bounds of the image ."}
{"id": 7180, "prediction": "Sets the list of views ."}
{"id": 7182, "prediction": "Sets the list of renderings ."}
{"id": 7184, "prediction": "Merge the given list of profiles ."}
{"id": 7186, "prediction": "Creates a rotation request from a string ."}
{"id": 7188, "prediction": "Initializes the device bridge ."}
{"id": 7190, "prediction": "Handles the push box"}
{"id": 7192, "prediction": "Clean the temp directory ."}
{"id": 7194, "prediction": "Get the crash log file"}
{"id": 7196, "prediction": "Add text to the text editor ."}
{"id": 7198, "prediction": "Marks the given text as a string ."}
{"id": 7200, "prediction": "Add an exception ."}
{"id": 7202, "prediction": "Find the parent class of a given type ."}
{"id": 7204, "prediction": "Writes a bit vector to the output vector ."}
{"id": 7206, "prediction": "Reads the data from the given stream ."}
{"id": 7208, "prediction": "Gets a list of objects from a path ."}
{"id": 7210, "prediction": "Add a screen capture capture capture capture ."}
{"id": 7212, "prediction": "Creates a selector that selects a property ."}
{"id": 7214, "prediction": "Extract validation annotations ."}
{"id": 7216, "prediction": "Finds the annotations for the given property ."}
{"id": 7218, "prediction": "Lookup the value of an object ."}
{"id": 7220, "prediction": "Creates a new instance from the given map ."}
{"id": 7222, "prediction": "Convert object to map ."}
{"id": 7224, "prediction": "Returns the values of the given annotation ."}
{"id": 7226, "prediction": "Lookup the list of validators in the registry ."}
{"id": 7228, "prediction": "Apply validation meta data ."}
{"id": 7230, "prediction": "Sets the time in milliseconds ."}
{"id": 7232, "prediction": "Hashes a given object ."}
{"id": 7234, "prediction": "Open database ."}
{"id": 7236, "prediction": "Removes all keys from the database ."}
{"id": 7238, "prediction": "Load all data from a collection of keys ."}
{"id": 7240, "prediction": "Reduce an array by its value ."}
{"id": 7242, "prediction": "Returns the variance of a vector ."}
{"id": 7244, "prediction": "Invoke a method on an object ."}
{"id": 7246, "prediction": "Converts a timestamp into a string ."}
{"id": 7248, "prediction": "Creates a criterion that evaluates to the specified value ."}
{"id": 7250, "prediction": "Creates a Criteria object from a JSON string ."}
{"id": 7252, "prediction": "Returns the first element of the array ."}
{"id": 7254, "prediction": "Gets the last element of the list ."}
{"id": 7256, "prediction": "Returns a list of elements in the list ."}
{"id": 7258, "prediction": "Returns the first element of an array ."}
{"id": 7260, "prediction": "Handle collection of maps ."}
{"id": 7262, "prediction": "Returns the value associated with the given key ."}
{"id": 7264, "prediction": "Generates a label value ."}
{"id": 7266, "prediction": "Process read operations ."}
{"id": 7268, "prediction": "Starts the data queue ."}
{"id": 7270, "prediction": "Places a string from a string ."}
{"id": 7272, "prediction": "Adds a character to the string ."}
{"id": 7274, "prediction": "Compacts a string ."}
{"id": 7276, "prediction": "Splits a string into an array of strings ."}
{"id": 7278, "prediction": "Convert char array to string array ."}
{"id": 7280, "prediction": "Determines if the specified string is inside the specified range ."}
{"id": 7282, "prediction": "Converts a number to a string ."}
{"id": 7284, "prediction": "Sorts the given list using the specified fields ."}
{"id": 7286, "prediction": "Gets child comparators ."}
{"id": 7288, "prediction": "Compare two boolean values ."}
{"id": 7290, "prediction": "Returns the sum of the values in the array ."}
{"id": 7292, "prediction": "Sorts the given list with the given fields ."}
{"id": 7294, "prediction": "Set the field value from the map ."}
{"id": 7296, "prediction": "Create the load data for the given table ."}
{"id": 7298, "prediction": "Checks if object has a field with the specified value ."}
{"id": 7300, "prediction": "Checks if a class has a field with the given name ."}
{"id": 7302, "prediction": "Gets the sortable field ."}
{"id": 7304, "prediction": "Compare two time ."}
{"id": 7306, "prediction": "Sorts the given list by using the specified sort ."}
{"id": 7308, "prediction": "Sorts the given map with the given key type ."}
{"id": 7310, "prediction": "Sorts the given array using the specified sort algorithm ."}
{"id": 7312, "prediction": "Returns a new Comparator that implements the Comparator ."}
{"id": 7314, "prediction": "Gets a value from the cache ."}
{"id": 7316, "prediction": "Evicts the cache if necessary ."}
{"id": 7318, "prediction": "Allocate a new buffer ."}
{"id": 7320, "prediction": "This method is called when the input channel has been written ."}
{"id": 7322, "prediction": "Start monitor ."}
{"id": 7324, "prediction": "Returns the value associated with the given key ."}
{"id": 7326, "prediction": "Filter the given group ."}
{"id": 7328, "prediction": "Flushes the output stream to disk ."}
{"id": 7330, "prediction": "Write the buffer to the output stream ."}
{"id": 7332, "prediction": "Initializes the output stream ."}
{"id": 7334, "prediction": "Converts a key to a byte array ."}
{"id": 7336, "prediction": "Extract validator meta data from a string ."}
{"id": 7338, "prediction": "Extract the validator meta data for the given property ."}
{"id": 7340, "prediction": "Converts an annotation data into a ValidatorMetaData object ."}
{"id": 7342, "prediction": "Splits a string into an array of strings ."}
{"id": 7344, "prediction": "Remove chars from string ."}
{"id": 7346, "prediction": "Parse a double ."}
{"id": 7348, "prediction": "Parses a long ."}
{"id": 7350, "prediction": "Gets all fields from an object ."}
{"id": 7352, "prediction": "Inject a property value into an object with the specified value ."}
{"id": 7354, "prediction": "Gets a collection property value ."}
{"id": 7356, "prediction": "Gets an integer property value ."}
{"id": 7358, "prediction": "Creates a message for the given key ."}
{"id": 7360, "prediction": "Convert a list of keys to a list of keys ."}
{"id": 7362, "prediction": "Parses the given text ."}
{"id": 7364, "prediction": "Delete a database ."}
{"id": 7366, "prediction": "Returns a list of UUIDs ."}
{"id": 7368, "prediction": "Trigger replication ."}
{"id": 7370, "prediction": "Sets the view direction ."}
{"id": 7372, "prediction": "Gets a design document from the database ."}
{"id": 7374, "prediction": "Gets a design document from a design document ."}
{"id": 7376, "prediction": "Find replicator document ."}
{"id": 7378, "prediction": "Removes the replicator ."}
{"id": 7380, "prediction": "Finds all documents in a given query ."}
{"id": 7382, "prediction": "Bulk insert documents ."}
{"id": 7384, "prediction": "Perform a PUT operation ."}
{"id": 7386, "prediction": "Performs a DELETE request ."}
{"id": 7388, "prediction": "Sets the given JSON entity ."}
{"id": 7390, "prediction": "Gets the changes ."}
{"id": 7392, "prediction": "Convert a double to a string ."}
{"id": 7394, "prediction": "Writes the given byte array to the output stream ."}
{"id": 7396, "prediction": "Verify temporary tables ."}
{"id": 7398, "prediction": "Checks if the given request is a query ."}
{"id": 7400, "prediction": "Gets the verb for the given HTTP request ."}
{"id": 7402, "prediction": "Called when a connection is received ."}
{"id": 7404, "prediction": "Initializes the session ."}
{"id": 7406, "prediction": "Converts a bucket into a list of buckets ."}
{"id": 7408, "prediction": "Find all data from the given timestamp range ."}
{"id": 7410, "prediction": "Send message"}
{"id": 7412, "prediction": "Send a message"}
{"id": 7414, "prediction": "Sets the value of a property ."}
{"id": 7416, "prediction": "Replaces the specified file with the specified text ."}
{"id": 7418, "prediction": "Generate metrics for a given component ."}
{"id": 7420, "prediction": "Fetches the content of the order item ."}
{"id": 7422, "prediction": "Generates a file for the given iterator ."}
{"id": 8193, "prediction": "Downgrades the document to the document ."}
{"id": 8195, "prediction": "Gets the value of the content property ."}
{"id": 8197, "prediction": "Sets the value of the blick ."}
{"id": 8199, "prediction": "Sets the monstime value ."}
{"id": 8201, "prediction": "Sets the lastename ."}
{"id": 8203, "prediction": "Gets the value of the feld ."}
{"id": 8205, "prediction": "Dumps this record to the specified writer ."}
{"id": 8207, "prediction": "Print the contents of this record ."}
{"id": 8209, "prediction": "Sets the value of the ctype property ."}
{"id": 8211, "prediction": "Gets the value of the eigenvalue property ."}
{"id": 8213, "prediction": "Sets the grustndst value of the Grundst ."}
{"id": 8215, "prediction": "Sets the HallType value for this Proposal ."}
{"id": 8217, "prediction": "Gets the value of the teeliefert ."}
{"id": 8219, "prediction": "Gets the value of the property ."}
{"id": 8221, "prediction": "Sets the value of the artist ."}
{"id": 8223, "prediction": "Gets the value of the email property ."}
{"id": 8225, "prediction": "Sets the value of the handler property ."}
{"id": 8227, "prediction": "Sets the apiUrl value for this Proposal ."}
{"id": 8229, "prediction": "Sets the API documentation value for this Proposal ."}
{"id": 8231, "prediction": "Sets the value of the dazurzur ."}
{"id": 8233, "prediction": "Gets the value of the kktorieType property ."}
{"id": 8235, "prediction": "Gets the value of the habidCategory ."}
{"id": 8237, "prediction": "Gets the value of the vermarkings property ."}
{"id": 8239, "prediction": "Sets the value of the wert ."}
{"id": 8241, "prediction": "Sets the value of the Biefert ."}
{"id": 8243, "prediction": "Sets the value of the property ."}
{"id": 8245, "prediction": "Sets the value of the property ."}
{"id": 8247, "prediction": "Gets the einelowhandle value ."}
{"id": 8249, "prediction": "Sets the value of the GarbageGenerator property ."}
{"id": 8251, "prediction": "Sets the value of the gastomie property ."}
{"id": 8253, "prediction": "Sets the value of the hotel property ."}
{"id": 8255, "prediction": "Sets the value of the keb ."}
{"id": 8257, "prediction": "Sets the value of the Lager property ."}
{"id": 8259, "prediction": "Sets the value of the obstpld ."}
{"id": 8261, "prediction": "Sets the value of the producer ."}
{"id": 8263, "prediction": "Sets the value of the stleplar property ."}
{"id": 8265, "prediction": "Sets the wald ."}
{"id": 8267, "prediction": "Gets the value of the wernung property ."}
{"id": 8269, "prediction": "Gets the value of the eineliefel property ."}
{"id": 8271, "prediction": "Gets the value of the parken property ."}
{"id": 8273, "prediction": "Gets the value of the objekt ."}
{"id": 8275, "prediction": "Sets the maximumDurations value for this Project ."}
{"id": 8277, "prediction": "Sets the value of the ZimmerMaker property ."}
{"id": 8279, "prediction": "Sets the value of the keleAngle property ."}
{"id": 8281, "prediction": "Sets the value of the solarheap ."}
{"id": 8283, "prediction": "Sets the value of the gas property ."}
{"id": 8285, "prediction": "Sets the value of the ferner property ."}
{"id": 8287, "prediction": "Sets the value of the KOHElements property ."}
{"id": 8289, "prediction": "Generates a random string with the specified length ."}
{"id": 8291, "prediction": "Gets the value of the wennungung ."}
{"id": 8293, "prediction": "Sets the value of the property ."}
{"id": 8295, "prediction": "Sets the value of the mojo property ."}
{"id": 8297, "prediction": "Sets the suburalArea value for this location ."}
{"id": 8299, "prediction": "Sets the value of the locality property ."}
{"id": 8301, "prediction": "Performs the upgrade version of the document ."}
{"id": 8303, "prediction": "Gets the value of the field property ."}
{"id": 8305, "prediction": "Gets the value of the adType property ."}
{"id": 8307, "prediction": "Sets the Placement value ."}
{"id": 8309, "prediction": "Gets the value of the klimiefeliefld ."}
{"id": 8311, "prediction": "Sets the priceType value for this MarketplaceAd ."}
{"id": 8313, "prediction": "Sets the value of the directions property ."}
{"id": 8315, "prediction": "Sets the energy value of the energy ."}
{"id": 8317, "prediction": "Sets the value of the property ."}
{"id": 8319, "prediction": "Sets the value of the bbaar attribute ."}
{"id": 8321, "prediction": "Sets the parkType value for the park ."}
{"id": 8323, "prediction": "Sets the value of the freitet property ."}
{"id": 8325, "prediction": "Sets the value of the email part ."}
{"id": 8327, "prediction": "Sets the value of the overseasRental property ."}
{"id": 8329, "prediction": "Gets the value of the Fehler property ."}
{"id": 8331, "prediction": "Gets the value of the stpinent property ."}
{"id": 8333, "prediction": "Sets the minDurations value ."}
{"id": 8335, "prediction": "Gets the value of the photo property ."}
{"id": 8337, "prediction": "Sets the value of the projects property ."}
{"id": 8339, "prediction": "Downgrades the previous version ."}
{"id": 8341, "prediction": "Gets the value of the immobilieie property ."}
{"id": 8343, "prediction": "Gets the value of the FehlerList property ."}
{"id": 8345, "prediction": "Sets the value of the property ."}
{"id": 8347, "prediction": "Gets the value of the distan property ."}
{"id": 8349, "prediction": "Checks if an exception is compatible with the given throwable ."}
{"id": 8351, "prediction": "Bind a prefix to a namespace URI ."}
{"id": 8353, "prediction": "Returns true if the given string is an open tag ."}
{"id": 8355, "prediction": "Consumes a line ."}
{"id": 8357, "prediction": "Initialize logging ."}
{"id": 8359, "prediction": "Adds an iterator to the composite ."}
{"id": 8361, "prediction": "Adds a string option ."}
{"id": 8363, "prediction": "Add long option ."}
{"id": 8365, "prediction": "Adds a boolean option ."}
{"id": 8367, "prediction": "Creates a new instance of the given class ."}
{"id": 8369, "prediction": "Sets the target object ."}
{"id": 8371, "prediction": "Find the matching method that matches the target method ."}
{"id": 8373, "prediction": "Serializes an object into a byte array ."}
{"id": 8375, "prediction": "Gets a child element by its name ."}
{"id": 8377, "prediction": "Get all child elements of an element ."}
{"id": 8379, "prediction": "Checks if the node name matches the given nodes ."}
{"id": 8381, "prediction": "Marks the given handle ."}
{"id": 8383, "prediction": "Stops the reference thread ."}
{"id": 8385, "prediction": "Start namespace mapping ."}
{"id": 8387, "prediction": "Adds a callback to the future ."}
{"id": 8389, "prediction": "Get the color of the item ."}
{"id": 8391, "prediction": "Get the color of a specific item ."}
{"id": 8393, "prediction": "Get the x position of the item in the range"}
{"id": 8395, "prediction": "Returns the names of the names of the keyword ."}
{"id": 8397, "prediction": "Returns the documentation for the given keyword ."}
{"id": 8399, "prediction": "Stops the remote server ."}
{"id": 8401, "prediction": "Converts a JSON file to a JSON string"}
{"id": 8403, "prediction": "Converts an input stream to a JSON string ."}
{"id": 8405, "prediction": "Convert properties to JSON string"}
{"id": 8407, "prediction": "Converts a map of properties to a string ."}
{"id": 8409, "prediction": "Calculates the radius of the circle ."}
{"id": 8411, "prediction": "Find an intermediate intermediate certificate ."}
{"id": 8413, "prediction": "Read markdown files ."}
{"id": 8415, "prediction": "Extracts the title from a list ."}
{"id": 8417, "prediction": "Replaces variables with the given content ."}
{"id": 8419, "prediction": "Copies all files from a directory to a directory ."}
{"id": 8421, "prediction": "Wrap the slider content ."}
{"id": 8423, "prediction": "Starts the fade down animation ."}
{"id": 8425, "prediction": "Called when the view is overlaps ."}
{"id": 8427, "prediction": "Launch the activity ."}
{"id": 8429, "prediction": "Get a list of Fact sheets ."}
{"id": 8431, "prediction": "Build http client ."}
{"id": 8433, "prediction": "Update data model ."}
{"id": 8435, "prediction": "Get a list of export exports"}
{"id": 8437, "prediction": "Sets the client credentials ."}
{"id": 8439, "prediction": "Get a list of Bookmarks ."}
{"id": 8441, "prediction": "Writes permissions to the given graph ."}
{"id": 8443, "prediction": "Closes the client ."}
{"id": 8445, "prediction": "Creates a datagram graph ."}
{"id": 8447, "prediction": "Resize the image ."}
{"id": 7424, "prediction": "Ends an object ."}
{"id": 7426, "prediction": "Registers an attribute with the given type ."}
{"id": 7428, "prediction": "Add a new sip object to the server ."}
{"id": 7430, "prediction": "Add a child object ."}
{"id": 7432, "prediction": "Copies the input stream to the given output stream ."}
{"id": 7434, "prediction": "Parse a Reader from a Reader ."}
{"id": 7436, "prediction": "Returns all nodes in the given parent ."}
{"id": 7438, "prediction": "Returns a collection of named elements in the given parent ."}
{"id": 7440, "prediction": "Main entry point ."}
{"id": 7442, "prediction": "Creates a builder from the given resource ."}
{"id": 7444, "prediction": "Encodes the given string ."}
{"id": 7446, "prediction": "Removes whitespace characters from a string ."}
{"id": 7448, "prediction": "Sets the data for the specified object key ."}
{"id": 7450, "prediction": "Sets favorite notifications ."}
{"id": 7452, "prediction": "Checks if the queue has expired ."}
{"id": 7454, "prediction": "Get all addresions for a notification"}
{"id": 7456, "prediction": "Gets all events for a given notification ."}
{"id": 7458, "prediction": "Gets the single notification URL for the given request ."}
{"id": 7460, "prediction": "Gets the authentication token ."}
{"id": 7462, "prediction": "Add new categories to the list ."}
{"id": 7464, "prediction": "Creates a notification response ."}
{"id": 7466, "prediction": "Maps a NotificationEntry to a Notification object ."}
{"id": 7468, "prediction": "Normalize the given link ."}
{"id": 7470, "prediction": "Gets the notification source ."}
{"id": 7472, "prediction": "Read notification response ."}
{"id": 7474, "prediction": "Extracts the user id from the response ."}
{"id": 7476, "prediction": "Get the map of attributes ."}
{"id": 7478, "prediction": "Checks if two boxes are contained within the box ."}
{"id": 7480, "prediction": "Returns the sign of a point ."}
{"id": 7482, "prediction": "Sets the rotation ."}
{"id": 7484, "prediction": "Converts a polygon to a quadrilateral polygon ."}
{"id": 7486, "prediction": "Sets the bounds of a polygon ."}
{"id": 7488, "prediction": "Computes the average average of a polygon ."}
{"id": 7490, "prediction": "Removes segments from the polygon ."}
{"id": 7492, "prediction": "Computes the area of two polygons ."}
{"id": 7494, "prediction": "Checks if a point is contained within a point ."}
{"id": 7496, "prediction": "Returns the intersection of two lines ."}
{"id": 7498, "prediction": "Computes the intersection of two lines ."}
{"id": 7500, "prediction": "Returns true if the ellipse contains the specified ellipse ."}
{"id": 7502, "prediction": "Gets the value at the specified index ."}
{"id": 7504, "prediction": "Rotates a rotation matrix ."}
{"id": 7506, "prediction": "Rotates the rotation matrix ."}
{"id": 7508, "prediction": "Sets the rotation matrix ."}
{"id": 7510, "prediction": "Apply rotation to a rotation matrix ."}
{"id": 7512, "prediction": "Creates a twist coordinate ."}
{"id": 7514, "prediction": "Interpolate the surface of the given point ."}
{"id": 7516, "prediction": "Solves the given points on the given points ."}
{"id": 7518, "prediction": "Returns true if this point is inside the specified point ."}
{"id": 7520, "prediction": "Convert a concatrix into another matrix ."}
{"id": 7522, "prediction": "Convenience function to convert a ConcaticographicFeature to another ."}
{"id": 7524, "prediction": "Converts a GeoTuple into a matrix ."}
{"id": 7526, "prediction": "Sets the parameter vector ."}
{"id": 7528, "prediction": "Returns true if the line intersects the line ."}
{"id": 7530, "prediction": "Returns true if the line intersects the line ."}
{"id": 7532, "prediction": "Extract the quaternion from the quaternion matrix ."}
{"id": 7534, "prediction": "Sets the motion to motion ."}
{"id": 7536, "prediction": "Creates a homography matrix ."}
{"id": 7538, "prediction": "Checks if two points are identical ."}
{"id": 7540, "prediction": "Computes the intersection of two lines ."}
{"id": 7542, "prediction": "Returns the closest point of the line that is closest to the given line ."}
{"id": 7544, "prediction": "Returns the closest point in the plane ."}
{"id": 7546, "prediction": "Computes the closest point of a point ."}
{"id": 7548, "prediction": "Transform a Segment into a plane ."}
{"id": 7550, "prediction": "Computes the acute angle between two points ."}
{"id": 7552, "prediction": "Convert a LinePoint to a LinePoint ."}
{"id": 7554, "prediction": "Convert a LineGeneralGeneralInfo to a LineGeneralImage ."}
{"id": 7556, "prediction": "Convert a line parameter to a line ."}
{"id": 7558, "prediction": "Convert a LineParameter to a LineParameter ."}
{"id": 7560, "prediction": "Convert the plane normalization to a plane ."}
{"id": 7562, "prediction": "Convert a plane to a plane ."}
{"id": 7564, "prediction": "Converts a plane to a plane ."}
{"id": 7566, "prediction": "Creates a copy of this matrix ."}
{"id": 7568, "prediction": "Computes the value of a point on the line ."}
{"id": 7570, "prediction": "Checks if the given parola is equivalent to this tolerance ."}
{"id": 7572, "prediction": "Computes the acute angle between two lines ."}
{"id": 7574, "prediction": "Generates a random point with a random number of points ."}
{"id": 7576, "prediction": "Subtracts two points ."}
{"id": 7578, "prediction": "Sets this rectangle ."}
{"id": 7580, "prediction": "Computes the point of the given ellipse ."}
{"id": 7582, "prediction": "Computes the tangent of the given ellipse ."}
{"id": 7584, "prediction": "Returns the corner at the specified index ."}
{"id": 7586, "prediction": "Returns the Euclidean distance between two points ."}
{"id": 7588, "prediction": "Computes the Euclidean distance from a point ."}
{"id": 7590, "prediction": "Returns the Euclidean distance between two segments ."}
{"id": 7592, "prediction": "Returns the Euclidean distance between two points ."}
{"id": 7594, "prediction": "Returns the Euclidean distance between two points ."}
{"id": 7596, "prediction": "Returns the distance from the line ."}
{"id": 7598, "prediction": "Computes the Euclidean distance between two points ."}
{"id": 7600, "prediction": "Computes the closest point of a line ."}
{"id": 7602, "prediction": "Computes the polylynomial surface ."}
{"id": 7604, "prediction": "Convert a vector to a perpendicular vector ."}
{"id": 7606, "prediction": "Normalizes a vector ."}
{"id": 7608, "prediction": "Convert a matrix to a vector ."}
{"id": 7610, "prediction": "Sets the ellipse ."}
{"id": 7612, "prediction": "Computes the triangle between two points ."}
{"id": 7614, "prediction": "Calculates the square of a polygon ."}
{"id": 7616, "prediction": "Order the points in a list of points ."}
{"id": 7618, "prediction": "Checks if a polygon is convex ."}
{"id": 7620, "prediction": "Returns the absolute value of this vector ."}
{"id": 7622, "prediction": "Returns the Euclidean distance between two points ."}
{"id": 7624, "prediction": "Generates a list of points ."}
{"id": 7626, "prediction": "Calculates the mean of points ."}
{"id": 7628, "prediction": "Invalidates all cached credentials ."}
{"id": 7630, "prediction": "Combines a collection of collections into a set of strings ."}
{"id": 7632, "prediction": "Retrieves the set of configuration files from the server ."}
{"id": 7634, "prediction": "Parses the include XML file ."}
{"id": 7636, "prediction": "Downloads jsons from a product"}
{"id": 7638, "prediction": "Checks if the given features are installed ."}
{"id": 7640, "prediction": "Get the next product version ."}
{"id": 7642, "prediction": "Gets the location of the install jar ."}
{"id": 7644, "prediction": "Extracts the version from the file name ."}
{"id": 7646, "prediction": "Returns the product info for the specified action ."}
{"id": 7648, "prediction": "Gets the arquillian property ."}
{"id": 7650, "prediction": "Moves back to the left corner"}
{"id": 7652, "prediction": "Loads an integer from a string ."}
{"id": 7654, "prediction": "Verify the approval ."}
{"id": 7656, "prediction": "Returns the distance between all cells ."}
{"id": 7658, "prediction": "Prints a formatted message to the specified format ."}
{"id": 7660, "prediction": "Print a variable ."}
{"id": 7662, "prediction": "Multiply a uniform value ."}
{"id": 7664, "prediction": "Calculates the discrete discrete discrete discrete distributions ."}
{"id": 7666, "prediction": "Capitalizes the first character of a word ."}
{"id": 7668, "prediction": "Fixes the path ."}
{"id": 7670, "prediction": "Gets the token sentence ."}
{"id": 7672, "prediction": "Extract auth token from cookie list ."}
{"id": 7674, "prediction": "Gets all permissions for a given role ."}
{"id": 7676, "prediction": "Converts a JobInfo to a JobInfo object ."}
{"id": 7678, "prediction": "Set repeat interval values ."}
{"id": 8449, "prediction": "Sets the gravity of the operation ."}
{"id": 8451, "prediction": "Set the text of the specified style"}
{"id": 8453, "prediction": "Adds a file to the image ."}
{"id": 8455, "prediction": "Prints the usage of the given object ."}
{"id": 8457, "prediction": "Parses the given object ."}
{"id": 8459, "prediction": "Executes the slide ."}
{"id": 8461, "prediction": "Sort the rectangle by size"}
{"id": 8463, "prediction": "Returns the XML file for the slide ."}
{"id": 8465, "prediction": "Finds the element that overlaps with the given element ."}
{"id": 8467, "prediction": "Executes the given message ."}
{"id": 8469, "prediction": "Gets the temporary directory ."}
{"id": 8471, "prediction": "Log a message at trace level ."}
{"id": 8473, "prediction": "Log a message at debug level ."}
{"id": 8475, "prediction": "Log a message at INFO level ."}
{"id": 8477, "prediction": "Sends an info message ."}
{"id": 8479, "prediction": "Logs a warning message ."}
{"id": 8481, "prediction": "Log an error message ."}
{"id": 8483, "prediction": "Starts a stanza wrapper wrapper ."}
{"id": 8485, "prediction": "Serializes the throwable to JSON ."}
{"id": 8487, "prediction": "Returns the caller element of the logging event ."}
{"id": 8489, "prediction": "Creates a database ."}
{"id": 8491, "prediction": "Parse save attribute string ."}
{"id": 8493, "prediction": "Refresh sheet row ."}
{"id": 8495, "prediction": "Gets save attribute list ."}
{"id": 8497, "prediction": "Sets the save objects in the hidden column ."}
{"id": 8499, "prediction": "Set save attributes for a row"}
{"id": 8501, "prediction": "Format a number ."}
{"id": 8503, "prediction": "Sets the workbook ."}
{"id": 8505, "prediction": "Gets the formula evaluator ."}
{"id": 8507, "prediction": "Load a web sheet ."}
{"id": 8509, "prediction": "Load work sheet ."}
{"id": 8511, "prediction": "Do the save ."}
{"id": 8513, "prediction": "Populate the component ."}
{"id": 8515, "prediction": "Deserialize a serialized object ."}
{"id": 8517, "prediction": "Gets the rendered picture ."}
{"id": 8519, "prediction": "Gets the picture helper ."}
{"id": 8521, "prediction": "Gets the chart helper helper ."}
{"id": 8523, "prediction": "Helper method to convert a Ptgtg into a Ptg array"}
{"id": 8525, "prediction": "Helper method to create a new Ptgroup ."}
{"id": 8527, "prediction": "Returns a list of rows from the given list ."}
{"id": 8529, "prediction": "Builds a dynamic row for the given pgtg ."}
{"id": 8531, "prediction": "Replies the background color for the specified theme ."}
{"id": 8533, "prediction": "Find the automatic fill color for the specified theme ."}
{"id": 8535, "prediction": "Extracts the XSL color from the RTR color ."}
{"id": 8537, "prediction": "Converts an XSLF color to a transparent color ."}
{"id": 8539, "prediction": "Gets the background color from a cell ."}
{"id": 8541, "prediction": "Populate the attributes map ."}
{"id": 8543, "prediction": "Sets property ."}
{"id": 8545, "prediction": "Set control attributes ."}
{"id": 8547, "prediction": "Sets the faces for a cell ."}
{"id": 8549, "prediction": "Sets the faces for a cell ."}
{"id": 8551, "prediction": "Get the title of the chart"}
{"id": 8553, "prediction": "Creates a pie chart ."}
{"id": 8555, "prediction": "Initializes the chart map ."}
{"id": 8557, "prediction": "Initialize the chart map ."}
{"id": 8559, "prediction": "Transforms a collection into a collection ."}
{"id": 8561, "prediction": "Rebuild the upper level formula ."}
{"id": 8563, "prediction": "Build the shift formula for a shift formula ."}
{"id": 8565, "prediction": "Updates the change index of the shift map ."}
{"id": 8567, "prediction": "Change the index number in the hidden column index ."}
{"id": 8569, "prediction": "Gets the original row number from the hidden row ."}
{"id": 8571, "prediction": "Finds the rows mappings from a shift map ."}
{"id": 8573, "prediction": "Returns the item in the collection"}
{"id": 8575, "prediction": "Checks if a row is a static row ."}
{"id": 8577, "prediction": "Replace an expression with a cell value ."}
{"id": 8579, "prediction": "Returns a list of all cells in the specified sheet ."}
{"id": 8581, "prediction": "Builds the table comment from the table ."}
{"id": 8583, "prediction": "Builds the configuration for this sheet ."}
{"id": 8585, "prediction": "Build the form command ."}
{"id": 8587, "prediction": "Build the sheet configuration ."}
{"id": 8589, "prediction": "Build the command list from a sheet ."}
{"id": 8591, "prediction": "Checks if the given command has a command ."}
{"id": 8593, "prediction": "Copies the template for a tie command ."}
{"id": 8595, "prediction": "Process a method line ."}
{"id": 8597, "prediction": "Move the comment to the map ."}
{"id": 8599, "prediction": "Build map attribute map ."}
{"id": 8601, "prediction": "Sets the footer of the sheet configuration ."}
{"id": 8603, "prediction": "Sets the header of the sheet configuration ."}
{"id": 8605, "prediction": "Removes all ranges from the map ."}
{"id": 8607, "prediction": "Gets the first command name from the given map ."}
{"id": 8609, "prediction": "Deletes the object in the context ."}
{"id": 8611, "prediction": "Index command range ."}
{"id": 8613, "prediction": "Inserts all templates in the template ."}
{"id": 8615, "prediction": "Evaluates the cell formula ."}
{"id": 8617, "prediction": "Creates a new comment ."}
{"id": 8619, "prediction": "Removes all rows in the cache ."}
{"id": 8621, "prediction": "Removes a cell for the given row ."}
{"id": 8623, "prediction": "Loads the picture from the current row ."}
{"id": 8625, "prediction": "Helper method to assemble a new value ."}
{"id": 8627, "prediction": "Gets the cell value without formatting ."}
{"id": 8629, "prediction": "Get cell string value ."}
{"id": 8631, "prediction": "Set cell value ."}
{"id": 8633, "prediction": "Sets date value ."}
{"id": 8635, "prediction": "Copy rows from source to source sheet ."}
{"id": 8637, "prediction": "Copies a row from another cell to another cell ."}
{"id": 8639, "prediction": "Copy a cell style from source cell ."}
{"id": 8641, "prediction": "Creates a comment anchor ."}
{"id": 8643, "prediction": "Match the cell settings for a cell ."}
{"id": 8645, "prediction": "Get the csv shape from a cell ."}
{"id": 8647, "prediction": "Convert a poi cell to a cell ."}
{"id": 8649, "prediction": "Gets the initial number of initial rows from the configuration ."}
{"id": 8651, "prediction": "Gets the faces from a body row ."}
{"id": 8653, "prediction": "Gets S3 key from poi cell ."}
{"id": 8655, "prediction": "Get the current data context name ."}
{"id": 8657, "prediction": "Evaluate the expression ."}
{"id": 8659, "prediction": "Remove a row ."}
{"id": 8661, "prediction": "Recovers all serialized rows ."}
{"id": 8663, "prediction": "Convert a style to a single stroke ."}
{"id": 8665, "prediction": "Set the chart data for the chart"}
{"id": 8667, "prediction": "Initialize the XSF anchor map for a sheet ."}
{"id": 8669, "prediction": "Extract the chart id from a child node ."}
{"id": 8671, "prediction": "Save the data in the context ."}
{"id": 8673, "prediction": "Gets the poi cell for the given row ."}
{"id": 8675, "prediction": "Restore data context ."}
{"id": 8677, "prediction": "Determines if the full name of the data context is a valid name ."}
{"id": 8679, "prediction": "Shows the row ref ."}
{"id": 8681, "prediction": "Set the last row"}
{"id": 8683, "prediction": "Build a single cell ."}
{"id": 8685, "prediction": "Build category list ."}
{"id": 8687, "prediction": "Build a chart series from a chart"}
{"id": 8689, "prediction": "Gets the dpt with the specified index ."}
{"id": 8691, "prediction": "Reads a picture from a file ."}
{"id": 8693, "prediction": "Index a picture in a map ."}
{"id": 8695, "prediction": "Generate the chart style for a specific anchor ."}
{"id": 8697, "prediction": "Gets the pattern ."}
{"id": 8699, "prediction": "Recovers the row ."}
{"id": 8701, "prediction": "Get the style of a cell ."}
{"id": 8703, "prediction": "Get the decoration for the cell ."}
{"id": 8705, "prediction": "Get the column style"}
{"id": 8707, "prediction": "Gets the vertical alignment from the cell style ."}
{"id": 8709, "prediction": "Set the cell style ."}
{"id": 8711, "prediction": "Gets the paths of a resource ."}
{"id": 8713, "prediction": "Remove a prefix from a resource ."}
{"id": 8715, "prediction": "Find a bean by name ."}
{"id": 8717, "prediction": "Rounds a value to a given number ."}
{"id": 8719, "prediction": "Returns the style of the tab ."}
{"id": 8721, "prediction": "Gets decimal separator by default locale ."}
{"id": 8723, "prediction": "Sets the tie command aliases list ."}
{"id": 8725, "prediction": "Build the watch list for the given cell ."}
{"id": 8727, "prediction": "Checks if string is a command string ."}
{"id": 8729, "prediction": "Gets attribute key ."}
{"id": 8731, "prediction": "Find the bracket position of a pair ."}
{"id": 8733, "prediction": "Parse input attributes ."}
{"id": 8735, "prediction": "Splits an attribute value ."}
{"id": 8737, "prediction": "Process calendar attributes ."}
{"id": 8739, "prediction": "Gather special attributes ."}
{"id": 8741, "prediction": "Returns the first non - letter position of a given string ."}
{"id": 8743, "prediction": "Returns the column name for an Excel cell ."}
{"id": 8745, "prediction": "Gets the cell by cell reference ."}
{"id": 8747, "prediction": "Checks if a string is a valid date"}
{"id": 8749, "prediction": "Check if a string is numeric ."}
{"id": 8751, "prediction": "Sets property ."}
{"id": 8753, "prediction": "Checks if a child range is inside a child range ."}
{"id": 8755, "prediction": "Delete hidden columns ."}
{"id": 8757, "prediction": "Process event ."}
{"id": 8759, "prediction": "Validates the poi cell ."}
{"id": 8761, "prediction": "Check the error message ."}
{"id": 8763, "prediction": "Perform validation ."}
{"id": 8765, "prediction": "Validate the current page ."}
{"id": 8767, "prediction": "Validates the current row in the cell ."}
{"id": 8769, "prediction": "Refreshes the cached cells in the table ."}
{"id": 8771, "prediction": "Performs validation before processing ."}
{"id": 8773, "prediction": "Load header rows ."}
{"id": 8775, "prediction": "Fill the max columns with the maximum number of columns ."}
{"id": 8777, "prediction": "Get the width of a column"}
{"id": 8779, "prediction": "Get the column style for a cell ."}
{"id": 8781, "prediction": "Initialize the tabs ."}
{"id": 8783, "prediction": "Refreshes the data for this cell ."}
{"id": 8785, "prediction": "Refresh data for a cell ."}
{"id": 8787, "prediction": "Load work sheet ."}
{"id": 8789, "prediction": "Sets the data table ."}
{"id": 8791, "prediction": "Set the row information ."}
{"id": 8793, "prediction": "Gets the faces of a row ."}
{"id": 8795, "prediction": "Process a refresh cell ."}
{"id": 8797, "prediction": "Add a repeat row"}
{"id": 8799, "prediction": "Sets unsaved state ."}
{"id": 8801, "prediction": "Find the common constructor for a given type ."}
{"id": 8803, "prediction": "Write long ."}
{"id": 8805, "prediction": "Sets the value of the traffic stats ."}
{"id": 8807, "prediction": "Add a file descriptor ."}
{"id": 8809, "prediction": "Add a header ."}
{"id": 8811, "prediction": "Call the service ."}
{"id": 8813, "prediction": "Binds to the stream ."}
{"id": 8815, "prediction": "Drops the listener ."}
{"id": 8817, "prediction": "Converts an input stream to a string ."}
{"id": 8819, "prediction": "Sends the content to the output stream ."}
{"id": 8821, "prediction": "Closes the buffer ."}
{"id": 8823, "prediction": "Reset buffer ."}
{"id": 8825, "prediction": "Sends the disposition header ."}
{"id": 8827, "prediction": "Send the transfer encoding header ."}
{"id": 8829, "prediction": "Sends the end of the output stream ."}
{"id": 8831, "prediction": "Calculates the length of the parts of the given parts ."}
{"id": 8833, "prediction": "Sends a 304 response ."}
{"id": 8835, "prediction": "Sets the date and response headers ."}
{"id": 8837, "prediction": "Closes the channel ."}
{"id": 8839, "prediction": "Sends the data to the output stream ."}
{"id": 8841, "prediction": "Create the working directory ."}
{"id": 8843, "prediction": "Creates a new stream input stream ."}
{"id": 8845, "prediction": "Gets a WebSocketContext ."}
{"id": 8847, "prediction": "Replace the scale type ."}
{"id": 8849, "prediction": "Gets the pending intent ."}
{"id": 8851, "prediction": "Bind the service to the service ."}
{"id": 8853, "prediction": "Notifies the listeners that the view has changed ."}
{"id": 8855, "prediction": "On response data ."}
{"id": 8857, "prediction": "Waits for the loader ."}
{"id": 8859, "prediction": "Hide soft input ."}
{"id": 8861, "prediction": "Toggle soft input ."}
{"id": 8863, "prediction": "Called when an exception is thrown ."}
{"id": 8865, "prediction": "Populates an image from the image ."}
{"id": 8867, "prediction": "Creates an image consumer ."}
{"id": 8869, "prediction": "Sets the loading image ."}
{"id": 8871, "prediction": "Adds a bitmap to the cache ."}
{"id": 8873, "prediction": "Adds the URL connection to the request ."}
{"id": 8875, "prediction": "Attempt to connect to the server ."}
{"id": 8877, "prediction": "Returns the String identifying the given CUbuffer ."}
{"id": 8879, "prediction": "Checks the given result ."}
{"id": 8881, "prediction": "Adds a lexer to the dictionary ."}
{"id": 8883, "prediction": "Returns the estimated weight of the word ."}
{"id": 8885, "prediction": "Verifies that the given attribute is valid ."}
{"id": 8887, "prediction": "Verify attribute ."}
{"id": 8889, "prediction": "Gets the metric data ."}
{"id": 8891, "prediction": "Process a list of MetricsData ."}
{"id": 8893, "prediction": "Gets connection config ."}
{"id": 8895, "prediction": "Create a new GCCode list of GC codes ."}
{"id": 8897, "prediction": "Create a new GCC column set ."}
{"id": 8899, "prediction": "Create a new GCCodeListSet ."}
{"id": 8901, "prediction": "Get the ID of a column element ."}
{"id": 8903, "prediction": "Get the column with the specified ID ."}
{"id": 8905, "prediction": "Get the key of the passed ID set ."}
{"id": 8907, "prediction": "Create a new column ."}
{"id": 8909, "prediction": "Set the number of lines to be skipped ."}
{"id": 8911, "prediction": "Create a new GCCodes list of GC codes ."}
{"id": 8913, "prediction": "Create a new GCC column set ."}
{"id": 8915, "prediction": "Create a new GCCodeListSet ."}
{"id": 8917, "prediction": "Gets a validator validator for GC codes ."}
{"id": 8919, "prediction": "Gets a validator validator for GC 4 ."}
{"id": 8921, "prediction": "Gets a valid GC code list of GC codes ."}
{"id": 8923, "prediction": "Send messages to server ."}
{"id": 8925, "prediction": "Get the log level ."}
{"id": 8927, "prediction": "Sets the maximum log file size ."}
{"id": 8929, "prediction": "Append the stack metadata ."}
{"id": 8931, "prediction": "Log location ."}
{"id": 8933, "prediction": "Get byte array from file ."}
{"id": 8935, "prediction": "Size of the given region ."}
{"id": 8937, "prediction": "This method is used to dump a list of regions ."}
{"id": 8939, "prediction": "Dumps the contents of the given stream ."}
{"id": 8941, "prediction": "Convert a file to a GFS file ."}
{"id": 8943, "prediction": "Get a pool for a given JMX ."}
{"id": 8945, "prediction": "Get an instance of a member ."}
{"id": 8947, "prediction": "Lookup the network host name"}
{"id": 8949, "prediction": "Executes the given function ."}
{"id": 8951, "prediction": "Executes a query with the given parameters ."}
{"id": 8953, "prediction": "Creates a new cache listener for a given consumer event ."}
{"id": 8955, "prediction": "Gets the list of active region filters ."}
{"id": 8957, "prediction": "Returns a set of host names ."}
{"id": 8959, "prediction": "Get the application name from the resources ."}
{"id": 7680, "prediction": "Send mail item to queue"}
{"id": 7682, "prediction": "Initialize the scheduler ."}
{"id": 7684, "prediction": "Gets field map ."}
{"id": 7686, "prediction": "Configure encryption ."}
{"id": 7688, "prediction": "Generate the token string ."}
{"id": 7690, "prediction": "Generates a strong password ."}
{"id": 7692, "prediction": "Get user by username ."}
{"id": 7694, "prediction": "Verifies that the given string name is valid ."}
{"id": 7696, "prediction": "Provides the search model ."}
{"id": 7698, "prediction": "Called when an error occurs ."}
{"id": 7700, "prediction": "Configure field by name ."}
{"id": 7702, "prediction": "Parses the given field ."}
{"id": 7704, "prediction": "Create a constraint that matches the given value"}
{"id": 7706, "prediction": "Create a less than expression"}
{"id": 7708, "prediction": "Apply a constraint to the given value ."}
{"id": 7710, "prediction": "Creates a restriction that matches the specified value ."}
{"id": 7712, "prediction": "Adds a namespace to the repository ."}
{"id": 7714, "prediction": "Returns a new resource with the given rel ."}
{"id": 7716, "prediction": "Returns a copy of the given namespace ."}
{"id": 7718, "prediction": "Encodes a string into a byte array ."}
{"id": 7720, "prediction": "Moves file to dst ."}
{"id": 7722, "prediction": "Gets the base name of a file ."}
{"id": 7724, "prediction": "Returns the full qualified name of the given class ."}
{"id": 7726, "prediction": "Verify the given password ."}
{"id": 7728, "prediction": "Appends a byte to the buffer ."}
{"id": 7730, "prediction": "Creates a copy of the original array ."}
{"id": 7732, "prediction": "Returns a new fraction of this fraction ."}
{"id": 7734, "prediction": "Returns a new fraction of this fraction ."}
{"id": 7736, "prediction": "Returns the minimum value of the long ."}
{"id": 7738, "prediction": "Fetches metadata for a given latitude and latitude ."}
{"id": 7740, "prediction": "Fetches metadata for a given latitude and latitude ."}
{"id": 7742, "prediction": "Find the nearest forecast for a given date ."}
{"id": 7744, "prediction": "Creates a simple forecast for a single day ."}
{"id": 7746, "prediction": "Creates a Location from a string representation ."}
{"id": 7748, "prediction": "Creates the symbol name for the given point direction ."}
{"id": 7750, "prediction": "Create a URI from a string ."}
{"id": 7752, "prediction": "Returns the point forecast for the given date time ."}
{"id": 7754, "prediction": "Fetches the content of the given latitude and latitude ."}
{"id": 7756, "prediction": "Update database ."}
{"id": 7758, "prediction": "Acquires an object ."}
{"id": 7760, "prediction": "Gets a wrapped object ."}
{"id": 7762, "prediction": "Returns true if the configuration is enabled ."}
{"id": 7764, "prediction": "Get the decoder for the given bootstrap configuration ."}
{"id": 7766, "prediction": "Returns the module instance for the given interface type ."}
{"id": 7768, "prediction": "Returns the size of the data source ."}
{"id": 7770, "prediction": "Returns the component at the specified index ."}
{"id": 7772, "prediction": "Determines if the compiler is colored ."}
{"id": 7774, "prediction": "Find the loop loop ."}
{"id": 7776, "prediction": "Calls recursively recursively recursively ."}
{"id": 7778, "prediction": "Clones an arcs of the given type ."}
{"id": 7780, "prediction": "Marks the given subre ."}
{"id": 7782, "prediction": "Parse a regex ."}
{"id": 7784, "prediction": "Creates a non - terminal character for a given word ."}
{"id": 7786, "prediction": "Reads a reference number ."}
{"id": 7788, "prediction": "Scans a plain text ."}
{"id": 7790, "prediction": "Process a single character ."}
{"id": 7792, "prediction": "Returns the color for the given codepoint ."}
{"id": 7794, "prediction": "Processes a range of characters ."}
{"id": 7796, "prediction": "Calculates the color of the arc ."}
{"id": 7798, "prediction": "Dumps all colors in the colors ."}
{"id": 7800, "prediction": "Processes prefixes ."}
{"id": 7802, "prediction": "Returns the color for the given codepoint ."}
{"id": 7804, "prediction": "Returns the last cold state ."}
{"id": 7806, "prediction": "Returns a Unicode set of Unicode class names ."}
{"id": 7808, "prediction": "Returns a string representation of this instruction ."}
{"id": 7810, "prediction": "Moves all outs to the given state ."}
{"id": 7812, "prediction": "Copies the insins from the old state to the new state ."}
{"id": 7814, "prediction": "Drops the state of a state"}
{"id": 7816, "prediction": "Cancels a new Arc ."}
{"id": 7818, "prediction": "Sets the special colors ."}
{"id": 7820, "prediction": "Dumps the state of a state ."}
{"id": 7822, "prediction": "Dumps all arcs in a single line ."}
{"id": 7824, "prediction": "Performs optimization ."}
{"id": 7826, "prediction": "Combine Arc ."}
{"id": 7828, "prediction": "Mark all possible reachable reachable as possible ."}
{"id": 7830, "prediction": "Recursively finds all empty states ."}
{"id": 7832, "prediction": "Read rule parameters ."}
{"id": 7834, "prediction": "Gets the report plugins ."}
{"id": 7836, "prediction": "Runs the command line ."}
{"id": 7838, "prediction": "Generate standard options ."}
{"id": 7840, "prediction": "Gather task names ."}
{"id": 7842, "prediction": "Gets the command line ."}
{"id": 7844, "prediction": "Read properties ."}
{"id": 7846, "prediction": "Gets the home directory ."}
{"id": 7848, "prediction": "Returns the set of ids contained in this cell ."}
{"id": 7850, "prediction": "Returns the URI of the given method ."}
{"id": 7852, "prediction": "Returns the number of routes ."}
{"id": 7854, "prediction": "Add route ."}
{"id": 7856, "prediction": "Determines if this path matches any of the given request path ."}
{"id": 7858, "prediction": "Returns the bundle file name ."}
{"id": 7860, "prediction": "Compares two entries ."}
{"id": 7862, "prediction": "Sets the last modified time of the servlet ."}
{"id": 7864, "prediction": "Tries to load a class ."}
{"id": 7866, "prediction": "Gets the protected function mapper ."}
{"id": 7868, "prediction": "Gets the function mapper for the given function name ."}
{"id": 7870, "prediction": "Sets the values ."}
{"id": 7872, "prediction": "Parse the given XML file ."}
{"id": 7874, "prediction": "Parses a tag file ."}
{"id": 7876, "prediction": "Creates the compiler ."}
{"id": 7878, "prediction": "Calculates the last modified time of the channel ."}
{"id": 7880, "prediction": "Checks if the classloader is a parent classloader ."}
{"id": 7882, "prediction": "Reads the stream header ."}
{"id": 7884, "prediction": "Creates a MetaKey from a string ."}
{"id": 7886, "prediction": "Get tag file ."}
{"id": 7888, "prediction": "Returns the checksum for the given file name ."}
{"id": 7890, "prediction": "Validates channel name ."}
{"id": 7892, "prediction": "Locates the block at the given position ."}
{"id": 7894, "prediction": "Updates the state of the opts ."}
{"id": 7896, "prediction": "Calculates the longs of the best available options ."}
{"id": 7898, "prediction": "Throws an exception ."}
{"id": 7900, "prediction": "Scans all the tlds ."}
{"id": 7902, "prediction": "Add a servlet wrapper ."}
{"id": 7904, "prediction": "Set the bytecode for the given name ."}
{"id": 7906, "prediction": "Save the given class to the file ."}
{"id": 7908, "prediction": "Initialize classpath ."}
{"id": 7910, "prediction": "Stop the thread ."}
{"id": 7912, "prediction": "Finds channel instance by name ."}
{"id": 7914, "prediction": "Update the map of deploy groups ."}
{"id": 7916, "prediction": "Copies the given input stream to the given output stream ."}
{"id": 7918, "prediction": "Parse attributes ."}
{"id": 7920, "prediction": "Adds the include directives ."}
{"id": 7922, "prediction": "Adds an attribute ."}
{"id": 7924, "prediction": "Returns an iterator over all attributes ."}
{"id": 7926, "prediction": "Finds all children with the given name ."}
{"id": 7928, "prediction": "Returns the alias for the given variable name ."}
{"id": 7930, "prediction": "Unset the thread ."}
{"id": 7932, "prediction": "Write optional field ."}
{"id": 7934, "prediction": "Creates a new element ."}
{"id": 8961, "prediction": "Get a region by name"}
{"id": 8963, "prediction": "Constructs the comparison between two checksums ."}
{"id": 8965, "prediction": "Close the resource ."}
{"id": 8967, "prediction": "Main entry point ."}
{"id": 8969, "prediction": "Get the number of members on the host ."}
{"id": 8971, "prediction": "Shutdown the JMX system"}
{"id": 8973, "prediction": "Store pagination map ."}
{"id": 8975, "prediction": "Imports a region ."}
{"id": 8977, "prediction": "Executes the checksum for the specified region ."}
{"id": 8979, "prediction": "Returns the value of the given column"}
{"id": 8981, "prediction": "Serializes an object into a byte array ."}
{"id": 8983, "prediction": "Creates a new instance ."}
{"id": 8985, "prediction": "Checks the fields for a column ."}
{"id": 8987, "prediction": "Gets the schema ."}
{"id": 8989, "prediction": "Emits a getter method ."}
{"id": 8991, "prediction": "Checks if the given column is equal to the given table ."}
{"id": 8993, "prediction": "Capitalizes the given string ."}
{"id": 8995, "prediction": "Sorts the table ."}
{"id": 8997, "prediction": "Returns the URL for the given type ."}
{"id": 8999, "prediction": "Prints a message ."}
{"id": 9001, "prediction": "Gets the icons ."}
{"id": 9003, "prediction": "Gets the background decoration ."}
{"id": 9005, "prediction": "Set the values ."}
{"id": 9007, "prediction": "Returns the root root root of the specified index ."}
{"id": 9009, "prediction": "Returns the nearest number of the given decimal point ."}
{"id": 9011, "prediction": "Computes the arithmetican from the given scale ."}
{"id": 9013, "prediction": "Calculates the square of the specified scale ."}
{"id": 9015, "prediction": "Returns the timestamp for the given time ."}
{"id": 9017, "prediction": "Adds a value to the gauge ."}
{"id": 9019, "prediction": "Add this complex to this complex ."}
{"id": 9021, "prediction": "Multiply this complex number ."}
{"id": 9023, "prediction": "Sets the matrix ."}
{"id": 9025, "prediction": "Returns a column vector ."}
{"id": 9027, "prediction": "Returns a transpose of this matrix ."}
{"id": 9029, "prediction": "Subtracts this matrix from another matrix ."}
{"id": 9031, "prediction": "Multiply this matrix by another matrix ."}
{"id": 9033, "prediction": "Sets the image resource ."}
{"id": 9035, "prediction": "Compute the next position ."}
{"id": 9037, "prediction": "Convert a LayerDescriptor to an XML document ."}
{"id": 9039, "prediction": "Validate the layer descriptor ."}
{"id": 9041, "prediction": "Calculate the area of a region ."}
{"id": 9043, "prediction": "Sets the matrix ."}
{"id": 9045, "prediction": "Returns the determinant of this matrix ."}
{"id": 9047, "prediction": "Solves the x ."}
{"id": 9049, "prediction": "Compute the forward elimination ."}
{"id": 9051, "prediction": "Performs a substitution of the matrix substitution ."}
{"id": 9053, "prediction": "Convert square matrix to square ."}
{"id": 9055, "prediction": "Initialize the iteration procedure ."}
{"id": 9057, "prediction": "Check if the position of the current position is valid ."}
{"id": 9059, "prediction": "Checks if interval is valid ."}
{"id": 9061, "prediction": "Multiplies the multiplication of two integers ."}
{"id": 9063, "prediction": "Performs the iteration procedure ."}
{"id": 9065, "prediction": "Convert a long value to a char array ."}
{"id": 9067, "prediction": "Prints the value to the stream ."}
{"id": 9069, "prediction": "Validate the float exponent ."}
{"id": 9071, "prediction": "Validates an unbiased exponent ."}
{"id": 9073, "prediction": "Returns the central random distribution of a random distribution ."}
{"id": 9075, "prediction": "Returns the next random ratio ."}
{"id": 9077, "prediction": "Returns an array of prime factors for a given number of prime ."}
{"id": 9079, "prediction": "Compute the next position ."}
{"id": 9081, "prediction": "Sets the JavaFX application ."}
{"id": 9083, "prediction": "Set default configuration ."}
{"id": 9085, "prediction": "Sets the latlng ."}
{"id": 9087, "prediction": "Returns the attribute definition for the given attribute ."}
{"id": 9089, "prediction": "Sanitize a tag ."}
{"id": 9091, "prediction": "Sets the components of the given map ."}
{"id": 9093, "prediction": "Gets all instances of the given service ."}
{"id": 9095, "prediction": "Gets the meta data for decimal parameters ."}
{"id": 9097, "prediction": "Get all users ."}
{"id": 9099, "prediction": "Get gravatar for a user"}
{"id": 9101, "prediction": "Returns the Elasticsearch field type ."}
{"id": 9103, "prediction": "Update flow step ."}
{"id": 9105, "prediction": "Get flow by step"}
{"id": 9107, "prediction": "Delete a flow step"}
{"id": 9109, "prediction": "Populate table fields ."}
{"id": 9111, "prediction": "Handles an error message ."}
{"id": 9113, "prediction": "Get the ECHO messages from the return value ."}
{"id": 9115, "prediction": "Create a table record ."}
{"id": 9117, "prediction": "Gets the history data for the given form ."}
{"id": 9119, "prediction": "Gets the most recent form data for the given form ."}
{"id": 9121, "prediction": "Unlock a form container"}
{"id": 9123, "prediction": "Maps a FormContainer to a FormContainer ."}
{"id": 9125, "prediction": "Create a new form definition ."}
{"id": 9127, "prediction": "Get a form definition by id ."}
{"id": 9129, "prediction": "Gets all forms of a user ."}
{"id": 9131, "prediction": "Gets storage key ."}
{"id": 9133, "prediction": "Shuts down the memcached cache ."}
{"id": 9135, "prediction": "Convert a document to a PDF file ."}
{"id": 9137, "prediction": "Create a flow rule entry ."}
{"id": 9139, "prediction": "Create a flow rule ."}
{"id": 9141, "prediction": "Update flow rule rule ."}
{"id": 9143, "prediction": "Move the flow rule rule ."}
{"id": 9145, "prediction": "Delete a flow rule rule ."}
{"id": 9147, "prediction": "Delete flow rule ."}
{"id": 9149, "prediction": "Get all user queries"}
{"id": 9151, "prediction": "Gets the service ticket ."}
{"id": 9153, "prediction": "Create a text field ."}
{"id": 9155, "prediction": "Create a decimal slider slider ."}
{"id": 9157, "prediction": "Updates a text field ."}
{"id": 9159, "prediction": "Updates the decimal spinner ."}
{"id": 9161, "prediction": "Update table field ."}
{"id": 9163, "prediction": "Gets a list of fields matching the specified form definition ."}
{"id": 9165, "prediction": "Delete a field ."}
{"id": 9167, "prediction": "Get table meta data ."}
{"id": 9169, "prediction": "Gets an index ."}
{"id": 9171, "prediction": "Update flow ."}
{"id": 9173, "prediction": "Get a flow by name"}
{"id": 9175, "prediction": "Delete a flow"}
{"id": 9177, "prediction": "Gets all global fields ."}
{"id": 9179, "prediction": "Decrypt a packet ."}
{"id": 9181, "prediction": "Initialize a new request handler ."}
{"id": 9183, "prediction": "Create a new admin user ."}
{"id": 9185, "prediction": "Gets user profile information ."}
{"id": 9187, "prediction": "Execute a POST request ."}
{"id": 9189, "prediction": "Checks whether the connection is valid ."}
{"id": 9191, "prediction": "Gets the path to the fluid store ."}
{"id": 9193, "prediction": "Get Fluids for a FlowView"}
{"id": 9195, "prediction": "Called when the connection is closed ."}
{"id": 9197, "prediction": "Send a JSON object to a JSON object"}
{"id": 9199, "prediction": "Closes the session ."}
{"id": 9201, "prediction": "Request a license"}
{"id": 9203, "prediction": "Create text field ."}
{"id": 9205, "prediction": "Create a Paragraph text ."}
{"id": 9207, "prediction": "Create a date field ."}
{"id": 9209, "prediction": "Updates the paragraph text for the specified field ."}
{"id": 9211, "prediction": "Update decimal field ."}
{"id": 9213, "prediction": "Create a new field value ."}
{"id": 9215, "prediction": "Get all configurations ."}
{"id": 7936, "prediction": "Writes the body to the writer ."}
{"id": 7938, "prediction": "Allocates the buffer ."}
{"id": 7940, "prediction": "Gets the state of the given key ."}
{"id": 7942, "prediction": "Stream an input stream to a stream ."}
{"id": 7944, "prediction": "Checks if the channel is authenticated ."}
{"id": 7946, "prediction": "Creates a new GsonGenerator instance ."}
{"id": 7948, "prediction": "Returns a union of the meta data ."}
{"id": 7950, "prediction": "Checks if the given coordinate is a checkum ."}
{"id": 7952, "prediction": "Gets the exception ."}
{"id": 7954, "prediction": "Returns the prefix for the OSGi service ."}
{"id": 7956, "prediction": "Parses a tag file ."}
{"id": 7958, "prediction": "Removes all proto types from the class file ."}
{"id": 7960, "prediction": "Sets the URI root ."}
{"id": 7962, "prediction": "Locates the URI root of the given file ."}
{"id": 7964, "prediction": "Move the position of the position in the chain ."}
{"id": 7966, "prediction": "Checks if the given string matches the given string ."}
{"id": 7968, "prediction": "Skips the given escape character ."}
{"id": 7970, "prediction": "Parse a token ."}
{"id": 7972, "prediction": "Make the unclassified coordinates of this object ."}
{"id": 7974, "prediction": "Gets the names ids that are missing ."}
{"id": 7976, "prediction": "Sets the DTD resource prefix ."}
{"id": 7978, "prediction": "Convert a node to a tree ."}
{"id": 7980, "prediction": "Initializes the binder ."}
{"id": 7982, "prediction": "Remove qualified path ."}
{"id": 7984, "prediction": "Get a byte array from the specified size ."}
{"id": 7986, "prediction": "Convert an artifact result to an artifact result ."}
{"id": 7988, "prediction": "Validates the tag library ."}
{"id": 7990, "prediction": "Returns the encoding of the given jar file ."}
{"id": 7992, "prediction": "Report a fatal error ."}
{"id": 7994, "prediction": "Returns the URL for the given path ."}
{"id": 7996, "prediction": "Get the paths for a given path ."}
{"id": 7998, "prediction": "Add a filter ."}
{"id": 8000, "prediction": "Returns the memory usage of the dictionary"}
{"id": 8002, "prediction": "Move the window size to the buffer ."}
{"id": 8004, "prediction": "Processes pending bytes ."}
{"id": 8006, "prediction": "Returns the length of the specified buffer ."}
{"id": 8008, "prediction": "Move the position at the specified position ."}
{"id": 8010, "prediction": "Flushes the buffer ."}
{"id": 8012, "prediction": "Flush the response ."}
{"id": 8014, "prediction": "Writes a string to the buffer ."}
{"id": 8016, "prediction": "This method is called when the javax error occurred ."}
{"id": 8018, "prediction": "Compiles the class file ."}
{"id": 8020, "prediction": "Removes all generated files from the application ."}
{"id": 8022, "prediction": "Checks if a system jar is in the system ."}
{"id": 8024, "prediction": "Generate the declarations ."}
{"id": 8026, "prediction": "Generate the xml properties for the given page ."}
{"id": 8028, "prediction": "Generate postamble ."}
{"id": 8030, "prediction": "Generate the tag handlers ."}
{"id": 8032, "prediction": "Exports a channel ."}
{"id": 8034, "prediction": "Gets a tag ."}
{"id": 8036, "prediction": "Returns the first property that matches the specified property ."}
{"id": 8038, "prediction": "Print a comment ."}
{"id": 8040, "prediction": "Prints a single line ."}
{"id": 8042, "prediction": "Returns the expression for the given expression ."}
{"id": 8044, "prediction": "Escapes a string ."}
{"id": 8046, "prediction": "Returns the class name of the tag ."}
{"id": 8048, "prediction": "Splits a path into a string ."}
{"id": 8050, "prediction": "Makes a single character ."}
{"id": 8052, "prediction": "Adds a property ."}
{"id": 8054, "prediction": "Returns a sorted set of metadata ."}
{"id": 8056, "prediction": "Gets basename ."}
{"id": 8058, "prediction": "Loads the metadata for the specified locator ."}
{"id": 8060, "prediction": "Resolves a Number ."}
{"id": 8062, "prediction": "Gets the TTL for the given granularity ."}
{"id": 8064, "prediction": "Tracks the metrics for a given tenant ."}
{"id": 8066, "prediction": "Reads an unsigned double from the stream ."}
{"id": 8068, "prediction": "Returns an unmodifiable map ."}
{"id": 8070, "prediction": "Schedule eligible slots ."}
{"id": 8072, "prediction": "Registers an event on this event ."}
{"id": 8074, "prediction": "Removes the given event listener ."}
{"id": 8076, "prediction": "Returns a list of listeners for the specified event ."}
{"id": 8078, "prediction": "Appends a rollup event to the output stream ."}
{"id": 8080, "prediction": "Start the server ."}
{"id": 8082, "prediction": "Creates an IO container from configuration ."}
{"id": 8084, "prediction": "Compute the maximum number of headers ."}
{"id": 8086, "prediction": "Format the given output formats ."}
{"id": 8088, "prediction": "Sets the thread pool name ."}
{"id": 8090, "prediction": "Get the complete metric names ."}
{"id": 8092, "prediction": "Puts a rollup on a rollup ."}
{"id": 8094, "prediction": "Calculates a granularity from the given points ."}
{"id": 8096, "prediction": "Returns a set of unique hosts ."}
{"id": 8098, "prediction": "Returns an enumeration of MetricColumn families ."}
{"id": 8100, "prediction": "Insert metrics for a given granularity ."}
{"id": 8102, "prediction": "Fetch metric names from elasticsearch"}
{"id": 8104, "prediction": "Starts the storage manager ."}
{"id": 8106, "prediction": "Returns whether the given locator is currently active ."}
{"id": 8108, "prediction": "Checks if the given locator is currently active ."}
{"id": 8110, "prediction": "Set the locator for the given slot ."}
{"id": 8112, "prediction": "Returns a range of ranges for the given granularity ."}
{"id": 8114, "prediction": "Insert metrics for a given column family ."}
{"id": 8116, "prediction": "Get the bounding statement for a given metric ."}
{"id": 8118, "prediction": "Returns the serializer for the given type ."}
{"id": 8120, "prediction": "Checks if the given headers are valid ."}
{"id": 8122, "prediction": "Validates the aggregated metrics ."}
{"id": 8124, "prediction": "Returns a new instance of this instance ."}
{"id": 8126, "prediction": "Starts the queue ."}
{"id": 8128, "prediction": "Creates a default default parameters ."}
{"id": 8130, "prediction": "Add a list of ice servers ."}
{"id": 8132, "prediction": "Send all peers to the peer"}
{"id": 8134, "prediction": "Gets the value of the userDefField property ."}
{"id": 8136, "prediction": "Sets the value of the APIPlaces property ."}
{"id": 8138, "prediction": "Gets the status of the status property ."}
{"id": 8140, "prediction": "Gets the value of the status property ."}
{"id": 8142, "prediction": "Gets the value of the adressdddd ."}
{"id": 8144, "prediction": "Gets the value of the bodelag property ."}
{"id": 8146, "prediction": "Sets the value of the area property ."}
{"id": 8148, "prediction": "Sets the value of the description property ."}
{"id": 8150, "prediction": "Sets the value of the furnished option ."}
{"id": 8152, "prediction": "Sets the value of the phone2 property ."}
{"id": 8154, "prediction": "Sets the value of the phoneInfo property ."}
{"id": 8156, "prediction": "Sets the value of the ccEmail property ."}
{"id": 8158, "prediction": "Sets the value of the agentId property ."}
{"id": 8160, "prediction": "Sets the value of the year ."}
{"id": 8162, "prediction": "Sets the value of the property ."}
{"id": 8164, "prediction": "Sets the value of the GebibElements property ."}
{"id": 8166, "prediction": "Sets the value of the agent property ."}
{"id": 8168, "prediction": "Sets the value of the property ."}
{"id": 8170, "prediction": "Sets the zeininine value ."}
{"id": 8172, "prediction": "Gets the value of the haaus property ."}
{"id": 8174, "prediction": "Gets the value of the gastewer property ."}
{"id": 8176, "prediction": "Gets the value of the property ."}
{"id": 8178, "prediction": "Gets the value of the terrain property ."}
{"id": 8180, "prediction": "Sets the value of the wern ."}
{"id": 8182, "prediction": "Gets the country2 version from the ISO333 code ."}
{"id": 8184, "prediction": "Get the country code from iso2 iso2 iso2 ."}
{"id": 8186, "prediction": "Translates a country name from the language ."}
{"id": 8188, "prediction": "Sets the value of the businessElement property ."}
{"id": 8190, "prediction": "Sets the value of the AktionArtist property ."}
{"id": 9217, "prediction": "Get an attachment by id"}
{"id": 9219, "prediction": "Delete an attachment ."}
{"id": 9221, "prediction": "Set the class loader ."}
{"id": 9223, "prediction": "Checks that the schema is valid ."}
{"id": 9225, "prediction": "Get the schema node ."}
{"id": 9227, "prediction": "Throws an exception if the element is missing ."}
{"id": 9229, "prediction": "Creates a CLI instance ."}
{"id": 9231, "prediction": "Parse command line arguments ."}
{"id": 9233, "prediction": "Creates a builder for the given path ."}
{"id": 9235, "prediction": "Gets the value of a point ."}
{"id": 9237, "prediction": "Calculate the value of a 3D value ."}
{"id": 9239, "prediction": "Calculate the cubic interpolation of the quadratic equation ."}
{"id": 9241, "prediction": "Sets the bounds ."}
{"id": 9243, "prediction": "Process the event ."}
{"id": 9245, "prediction": "Apply rules to rules ."}
{"id": 9247, "prediction": "Creates a file ."}
{"id": 9249, "prediction": "Restore the system properties ."}
{"id": 9251, "prediction": "Adds a soft object to the cache ."}
{"id": 9253, "prediction": "Gets the array property ."}
{"id": 9255, "prediction": "Process GC ."}
{"id": 9257, "prediction": "Gets the parameterized type ."}
{"id": 9259, "prediction": "Print the stack trace ."}
{"id": 9261, "prediction": "Replace the object from the remote object ."}
{"id": 9263, "prediction": "Sets the task ."}
{"id": 9265, "prediction": "Called when a task is rejected ."}
{"id": 9267, "prediction": "Called when the task completes ."}
{"id": 9269, "prediction": "Get the next job ."}
{"id": 9271, "prediction": "Converts the given name to BlockingMode ."}
{"id": 9273, "prediction": "Setup the parser ."}
{"id": 9275, "prediction": "Copies all the readers from the given MIME type ."}
{"id": 9277, "prediction": "Loads the catalog files ."}
{"id": 9279, "prediction": "Parses all the catalog files in the current catalog ."}
{"id": 9281, "prediction": "Parses an unknown token ."}
{"id": 9283, "prediction": "Resolves the entity type ."}
{"id": 9285, "prediction": "Resolves the system ID ."}
{"id": 9287, "prediction": "Resolves all catalogs in the catalog ."}
{"id": 9289, "prediction": "Normalize a URI ."}
{"id": 9291, "prediction": "Adds a delegate to the list of entries ."}
{"id": 9293, "prediction": "Fires all registered listeners ."}
{"id": 9295, "prediction": "Creates the delegate list ."}
{"id": 9297, "prediction": "Returns the value of the address ."}
{"id": 9299, "prediction": "Sets the object at the given index ."}
{"id": 9301, "prediction": "Add an entry type ."}
{"id": 9303, "prediction": "Get the number of entries in the catalog ."}
{"id": 9305, "prediction": "Set the context class loader ."}
{"id": 9307, "prediction": "Removes a node from the list ."}
{"id": 9309, "prediction": "Attempts to load the given class ."}
{"id": 9311, "prediction": "Create a new URLStreamHandler for the given protocol ."}
{"id": 9313, "prediction": "Returns the value of the type ."}
{"id": 9315, "prediction": "Makes a synchronized synchronized counter ."}
{"id": 9317, "prediction": "Determine if the extension namespace is in a namespace ."}
{"id": 9319, "prediction": "Rebinds a name from the target name ."}
{"id": 9321, "prediction": "Subtract a string from a string buffer ."}
{"id": 9323, "prediction": "Join byte array ."}
{"id": 9325, "prediction": "Returns the value of the current node ."}
{"id": 9327, "prediction": "Gets the value associated with the given key ."}
{"id": 9329, "prediction": "Removes a key from the cache ."}
{"id": 9331, "prediction": "Returns a list of all the keys contained in this map ."}
{"id": 9333, "prediction": "Returns the entry for the given key ."}
{"id": 9335, "prediction": "Get a unique child with the given tag name ."}
{"id": 9337, "prediction": "Get the content of the element as a string ."}
{"id": 9339, "prediction": "Get the content of the first child of the given element ."}
{"id": 9341, "prediction": "Sets the blocking mode ."}
{"id": 9343, "prediction": "Executes the given task ."}
{"id": 9345, "prediction": "Resolves the canonical catalog entry in the catalog ."}
{"id": 9347, "prediction": "Resolves an external public public key ."}
{"id": 9349, "prediction": "Append a vector to a vector ."}
{"id": 9351, "prediction": "Resolves the given system ID ."}
{"id": 9353, "prediction": "Resolve all local system entries in the system ."}
{"id": 9355, "prediction": "Reads a catalog from a file ."}
{"id": 9357, "prediction": "Connect to the file ."}
{"id": 9359, "prediction": "Sets the next node ."}
{"id": 9361, "prediction": "Returns the value of this header ."}
{"id": 9363, "prediction": "Sets the right value for the given index ."}
{"id": 9365, "prediction": "Prints a list of objects ."}
{"id": 9367, "prediction": "Returns the string representation of this class ."}
{"id": 9369, "prediction": "Get the property group by name ."}
{"id": 9371, "prediction": "Creates a copy of an object ."}
{"id": 9373, "prediction": "Initialize the system properties ."}
{"id": 9375, "prediction": "Returns the keys contained in this map ."}
{"id": 9377, "prediction": "Removes a property listener ."}
{"id": 9379, "prediction": "Fires a property removed event ."}
{"id": 9381, "prediction": "Fires a property changed event ."}
{"id": 9383, "prediction": "Loads properties from the specified reader ."}
{"id": 9385, "prediction": "Gets the property group property ."}
{"id": 9387, "prediction": "Resolves the given system ID ."}
{"id": 9389, "prediction": "Resolves the classpath for the given system id ."}
{"id": 9391, "prediction": "Normalize the public id ."}
{"id": 9393, "prediction": "Decodes the given URID ."}
{"id": 9395, "prediction": "Start the timer ."}
{"id": 9397, "prediction": "Creates a synchronized stopwatch ."}
{"id": 9399, "prediction": "Generates a hashcode for a byte array ."}
{"id": 9401, "prediction": "Creates the map ."}
{"id": 9403, "prediction": "Reads the next token from the stack ."}
{"id": 9405, "prediction": "Adds a new vertex to the graph ."}
{"id": 9407, "prediction": "Removes a vertex from the graph ."}
{"id": 9409, "prediction": "Visits a traversal spanning tree ."}
{"id": 9411, "prediction": "Finds cycles in the graph ."}
{"id": 9413, "prediction": "Parse an XML string ."}
{"id": 9415, "prediction": "Parse the given input source ."}
{"id": 9417, "prediction": "Resolves a qualified name from a qualified element ."}
{"id": 9419, "prediction": "Returns true if the given node is a child of the given node ."}
{"id": 9421, "prediction": "Get the text content of a node ."}
{"id": 9423, "prediction": "Returns the parent element of the given node ."}
{"id": 9425, "prediction": "Reads a catalog from an input stream ."}
{"id": 9427, "prediction": "Gets the host address ."}
{"id": 9429, "prediction": "Set system property value ."}
{"id": 9431, "prediction": "Generates a description of a class ."}
{"id": 9433, "prediction": "Gets package name ."}
{"id": 9435, "prediction": "Returns the wrapper wrapper for the given type ."}
{"id": 9437, "prediction": "Returns all interfaces of the given class ."}
{"id": 9439, "prediction": "Instantiates a new object with the given expected class name ."}
{"id": 9441, "prediction": "Returns the setter method for the given class ."}
{"id": 9443, "prediction": "Gets a system property ."}
{"id": 9445, "prediction": "Maintain the set of weak objects ."}
{"id": 9447, "prediction": "Creates a urls instance ."}
{"id": 9449, "prediction": "Adds a bound property listener ."}
{"id": 9451, "prediction": "Determines whether the given value is null or not ."}
{"id": 9453, "prediction": "Register a property editor ."}
{"id": 9455, "prediction": "Get the context class loader ."}
{"id": 9457, "prediction": "Schedules the specified time ."}
{"id": 9459, "prediction": "Creates a context for a given name ."}
{"id": 9461, "prediction": "Checks if the given object is an exception ."}
{"id": 9463, "prediction": "Get a transition by name ."}
{"id": 9465, "prediction": "Gets the verbosity ."}
{"id": 9467, "prediction": "Reads the catalog files from the properties file ."}
{"id": 9469, "prediction": "Query whether or not the preference is preferred ."}
{"id": 9471, "prediction": "Resolves the given entity ID ."}
{"id": 8192, "prediction": "Sets the value of the pattings property ."}
{"id": 8194, "prediction": "This method is used to upgrade the document ."}
{"id": 8196, "prediction": "Gets the field names ."}
{"id": 8198, "prediction": "Sets the value of the Pauschalm ."}
{"id": 8200, "prediction": "Gets the value of the parkPlacement property ."}
{"id": 8202, "prediction": "Sets the value of the zustand property ."}
{"id": 8204, "prediction": "Handle validation event ."}
{"id": 8206, "prediction": "Returns the value associated with the given position ."}
{"id": 8208, "prediction": "Sets the value at the given position ."}
{"id": 8210, "prediction": "Sets the value of the hapyped property ."}
{"id": 8212, "prediction": "Sets the value of the keller property ."}
{"id": 8214, "prediction": "Sets the value of the GeschlAttribute property ."}
{"id": 8216, "prediction": "Gets the value of the wdater ."}
{"id": 8218, "prediction": "Upgrade the document s document ."}
{"id": 8220, "prediction": "Gets the value of the wunschch property ."}
{"id": 8222, "prediction": "Sets the value of the modus ."}
{"id": 8224, "prediction": "Gets the value of the telsson property ."}
{"id": 8226, "prediction": "Downgrades the version of the document ."}
{"id": 8228, "prediction": "Sets the apiUrl value for this Proposal ."}
{"id": 8230, "prediction": "Gets the value of the row property ."}
{"id": 8232, "prediction": "Gets the value of theAnhang property ."}
{"id": 8234, "prediction": "Gets the value of the objekt ."}
{"id": 8236, "prediction": "Gets the value of ausstungticht ."}
{"id": 8238, "prediction": "Gets the value of the intentent property ."}
{"id": 8240, "prediction": "Sets the value of thecker property ."}
{"id": 8242, "prediction": "Sets the value of the bootstrapper property ."}
{"id": 8244, "prediction": "Sets the value of the camping property ."}
{"id": 8246, "prediction": "Sets the einfamilen ."}
{"id": 8248, "prediction": "Sets the einelungden ."}
{"id": 8250, "prediction": "Sets the value of the distribution property ."}
{"id": 8252, "prediction": "Sets the value of the GEEElements property ."}
{"id": 8254, "prediction": "Sets the value of the industry property ."}
{"id": 8256, "prediction": "Sets the value of the Kleewieler property ."}
{"id": 8258, "prediction": "Sets the value of the Meaufeiner ."}
{"id": 8260, "prediction": "Sets the parkhaus property ."}
{"id": 8262, "prediction": "Sets the rehen ."}
{"id": 8264, "prediction": "Sets the value of the variable ."}
{"id": 8266, "prediction": "Sets the value of the Annotationer property ."}
{"id": 8268, "prediction": "Gets the value of the grustueck property ."}
{"id": 8270, "prediction": "Gets the value of the hallelager property ."}
{"id": 8272, "prediction": "Gets the value of the freiteliefelichichichichichiefert ."}
{"id": 8274, "prediction": "Gets the value of the stanzaPlag ."}
{"id": 8276, "prediction": "Gets the value of the feature property ."}
{"id": 8278, "prediction": "Performs the upgrade of the given document ."}
{"id": 8280, "prediction": "Sets the erdwaWaer value for this Proposal ."}
{"id": 8282, "prediction": "Sets the value of the pelle ."}
{"id": 8284, "prediction": "Sets the oel property value ."}
{"id": 8286, "prediction": "Sets the value of the stromor property ."}
{"id": 8288, "prediction": "Generate a random string"}
{"id": 8290, "prediction": "Generates a random numeric string ."}
{"id": 8292, "prediction": "Sets the value of the BENTzer property ."}
{"id": 8294, "prediction": "Gets the value of the feed property ."}
{"id": 8296, "prediction": "Gets the value of the serviceings property ."}
{"id": 8298, "prediction": "Sets the value of the city property ."}
{"id": 8300, "prediction": "Downgrades the document ."}
{"id": 8302, "prediction": "Sets the value of the land type property ."}
{"id": 8304, "prediction": "Performs the upgrade version of the document ."}
{"id": 8306, "prediction": "Sets the value of the expidget property ."}
{"id": 8308, "prediction": "Gets the value of the datenode ."}
{"id": 8310, "prediction": "Gets the value of the image property ."}
{"id": 8312, "prediction": "Sets the value of the development availability property ."}
{"id": 8314, "prediction": "Sets the co2 rating value ."}
{"id": 8316, "prediction": "Sets the value of the viewingDetails property ."}
{"id": 8318, "prediction": "Sets the value of the pictures property ."}
{"id": 8320, "prediction": "Updates the version of the document ."}
{"id": 8322, "prediction": "Sets the alter attribute value ."}
{"id": 8324, "prediction": "Sets the telefontext value ."}
{"id": 8326, "prediction": "Sets the value of the overseasSalesSales property ."}
{"id": 8328, "prediction": "Creates a new simple simple field definition ."}
{"id": 8330, "prediction": "Gets the value of the Erstpibt ."}
{"id": 8332, "prediction": "Gets the value of the propertyList property ."}
{"id": 8334, "prediction": "Sets the value of the zins property ."}
{"id": 8336, "prediction": "Sets the value of the feed ."}
{"id": 8338, "prediction": "Sets the value of the feed property ."}
{"id": 8340, "prediction": "Upgrade the previous version of the previous version ."}
{"id": 8342, "prediction": "Gets the value of the object property ."}
{"id": 8344, "prediction": "Gets the value of the status property ."}
{"id": 8346, "prediction": "Sets the value of the Distanzas property ."}
{"id": 8348, "prediction": "Gets the value of the danzen property ."}
{"id": 8350, "prediction": "Set bindings ."}
{"id": 8352, "prediction": "Remove binding ."}
{"id": 8354, "prediction": "Consumes a line token ."}
{"id": 8356, "prediction": "Returns the index of the given token ."}
{"id": 8358, "prediction": "Bind a namespace to a namespace ."}
{"id": 8360, "prediction": "Add an option ."}
{"id": 8362, "prediction": "Adds an integer option ."}
{"id": 8364, "prediction": "Adds a double option ."}
{"id": 8366, "prediction": "Parse arguments ."}
{"id": 8368, "prediction": "Called after the access limit ."}
{"id": 8370, "prediction": "Prepares the target object ."}
{"id": 8372, "prediction": "Convert an integer to a string ."}
{"id": 8374, "prediction": "Deserialize an object from a byte array ."}
{"id": 8376, "prediction": "Gets the value of a child element with the given name ."}
{"id": 8378, "prediction": "Checks if the node name matches the desired node name ."}
{"id": 8380, "prediction": "Sets length ."}
{"id": 8382, "prediction": "Add a new entry ."}
{"id": 8384, "prediction": "Calculate the phone number"}
{"id": 8386, "prediction": "End the namespace mapping ."}
{"id": 8388, "prediction": "Parses a jar file ."}
{"id": 8390, "prediction": "Sets the values of the gauge ."}
{"id": 8392, "prediction": "Sets the text size ."}
{"id": 8394, "prediction": "Gets the intro script ."}
{"id": 8396, "prediction": "Gets the keyword arguments for the given keyword ."}
{"id": 8398, "prediction": "Main entry point ."}
{"id": 8400, "prediction": "Starts the remote server ."}
{"id": 8402, "prediction": "Convert a file to a JSON string"}
{"id": 8404, "prediction": "Convert properties to JSON string ."}
{"id": 8406, "prediction": "Converts a map of values to a JSON string ."}
{"id": 8408, "prediction": "Convert a Properties object to a JSON string"}
{"id": 8410, "prediction": "Creates a builder for a new OCspFetcher ."}
{"id": 8412, "prediction": "Runs the maven tools ."}
{"id": 8414, "prediction": "Replaces all variables in the given template ."}
{"id": 8416, "prediction": "Adds the title to the HTML file ."}
{"id": 8418, "prediction": "Updates the relative paths for the given html page ."}
{"id": 8420, "prediction": "Checks if the given path is valid ."}
{"id": 8422, "prediction": "Starts up the animator ."}
{"id": 8424, "prediction": "Calculates the percentage of the specified width ."}
{"id": 8426, "prediction": "Creates the launch intent ."}
{"id": 8428, "prediction": "Get a list of Todo objects for a given type ."}
{"id": 8430, "prediction": "Download file from response ."}
{"id": 8432, "prediction": "Create access control entity ."}
{"id": 8434, "prediction": "Create full export"}
{"id": 8436, "prediction": "Sets the OAuth provider for the given token ."}
{"id": 8438, "prediction": "Process a GraphQL query ."}
{"id": 8440, "prediction": "Adds a permission to the graph ."}
{"id": 8442, "prediction": "Sets the rulesets ."}
{"id": 8444, "prediction": "Execute a select statement ."}
{"id": 8446, "prediction": "Limit the number of threads ."}
{"id": 9473, "prediction": "Convert a URI to a relative URL ."}
{"id": 9475, "prediction": "Invokes the setter method ."}
{"id": 9477, "prediction": "Get the namespace URI of a given node ."}
{"id": 9479, "prediction": "Convert an enumeration to a List ."}
{"id": 9481, "prediction": "Loads properties from a file ."}
{"id": 9483, "prediction": "Adds an edge to the graph ."}
{"id": 9485, "prediction": "Adds an incoming edge to the vertex ."}
{"id": 9487, "prediction": "Removes an edge from the graph ."}
{"id": 9489, "prediction": "Finds the edge of the outgoing edge ."}
{"id": 9491, "prediction": "Parses a jar file ."}
{"id": 9493, "prediction": "Fires an event ."}
{"id": 9495, "prediction": "Deletes a folder ."}
{"id": 9497, "prediction": "Returns an event stream of the given type ."}
{"id": 9499, "prediction": "Convenience method to convert multiple records to a stream ."}
{"id": 9501, "prediction": "Convenience method to convert a collection to a stream ."}
{"id": 9503, "prediction": "Returns true if the user should be allowed to robots ."}
{"id": 9505, "prediction": "Main entry point ."}
{"id": 9507, "prediction": "Gets the sum of degree ."}
{"id": 9509, "prediction": "Injects the JdbcConnection to the JdbcDriver"}
{"id": 9511, "prediction": "Create an iterable for the given type ."}
{"id": 9513, "prediction": "Creates a list of objects ."}
{"id": 9515, "prediction": "Create a list of objects from a given type ."}
{"id": 9517, "prediction": "Creates a right operator with the given type ."}
{"id": 9519, "prediction": "Creates a validation success ."}
{"id": 9521, "prediction": "Connect to a Jdbcached database ."}
{"id": 9523, "prediction": "Queries SQL statement ."}
{"id": 9525, "prediction": "Filter by example"}
{"id": 9527, "prediction": "Backup the current table ."}
{"id": 9529, "prediction": "Sets the text contained in the list view ."}
{"id": 9531, "prediction": "Unescapes escaped quotes"}
{"id": 9533, "prediction": "Convert a comma - separated string to a Map ."}
{"id": 9535, "prediction": "Join a list of strings ."}
{"id": 9537, "prediction": "Reads a database model from the reader ."}
{"id": 9539, "prediction": "Checks the id field ."}
{"id": 9541, "prediction": "Gets the bind type ."}
{"id": 9543, "prediction": "Backup all tables ."}
{"id": 9545, "prediction": "Write the index file ."}
{"id": 9547, "prediction": "Creates a typed query ."}
{"id": 9549, "prediction": "Delete the given table ."}
{"id": 9551, "prediction": "Updates the given object ."}
{"id": 9553, "prediction": "Add a WHERE clause to the WHERE clause ."}
{"id": 9555, "prediction": "Gets the empty intent stack ."}
{"id": 9557, "prediction": "Select the plan for the given policy ."}
{"id": 9559, "prediction": "Sets the plan variables ."}
{"id": 9561, "prediction": "Gets the parents of this node ."}
{"id": 9563, "prediction": "Grows a byte array with the specified number of bytes ."}
{"id": 9565, "prediction": "Step 1 ."}
{"id": 9567, "prediction": "Pauses the input ."}
{"id": 9569, "prediction": "Initialize the intention threads ."}
{"id": 9571, "prediction": "Shutdown the intention selection ."}
{"id": 9573, "prediction": "Resets the state of this model ."}
{"id": 9575, "prediction": "Processes the plan for the given goal type ."}
{"id": 9577, "prediction": "Loads a class ."}
{"id": 9579, "prediction": "Compares two objects ."}
{"id": 9581, "prediction": "Parse command line arguments ."}
{"id": 9583, "prediction": "Evaluate a query ."}
{"id": 9585, "prediction": "Find an object by name ."}
{"id": 9587, "prediction": "Returns the object at the given index ."}
{"id": 9589, "prediction": "Removes the object from the queue ."}
{"id": 9591, "prediction": "Returns true if the given belief matches the given query ."}
{"id": 9593, "prediction": "Converts a string to a byte array ."}
{"id": 9595, "prediction": "Sends a message to the agent ."}
{"id": 9597, "prediction": "Gets the goals ."}
{"id": 9599, "prediction": "Adds a new belief set ."}
{"id": 9601, "prediction": "Suspend the agent ."}
{"id": 9603, "prediction": "Registers a Neighbours ."}
{"id": 9605, "prediction": "Runs the agents ."}
{"id": 9607, "prediction": "Remove all active agents ."}
{"id": 9609, "prediction": "Shuts down the pool ."}
{"id": 9611, "prediction": "Move the specified pin to the specified pin ."}
{"id": 9613, "prediction": "Waits until all agents are idle ."}
{"id": 9615, "prediction": "Returns true if all pools are idle ."}
{"id": 9617, "prediction": "Picks the expression ."}
{"id": 9619, "prediction": "Creates an expression from a property ."}
{"id": 9621, "prediction": "Find or create a join for the given property ."}
{"id": 9623, "prediction": "Gets the upload stream ."}
{"id": 9625, "prediction": "Checks if a parameter has a given name and value ."}
{"id": 9627, "prediction": "Parses the given content type parameters ."}
{"id": 9629, "prediction": "Gets the target file ."}
{"id": 9631, "prediction": "Assigns all instances of a managed class ."}
{"id": 9633, "prediction": "Builds a string representation of the configuration ."}
{"id": 9635, "prediction": "Returns the type of the given field ."}
{"id": 9637, "prediction": "Persists the contents of the temporary file ."}
{"id": 9639, "prediction": "Set the default link template for a link ."}
{"id": 9641, "prediction": "Handles header links ."}
{"id": 9643, "prediction": "Parses a link ."}
{"id": 9645, "prediction": "Handle allowed capabilities ."}
{"id": 9647, "prediction": "Registers the instance processor ."}
{"id": 9649, "prediction": "Registers an instance processor ."}
{"id": 9651, "prediction": "Returns an instance of the specified interface class ."}
{"id": 9653, "prediction": "Creates a list of target files ."}
{"id": 9655, "prediction": "Initialize the template ."}
{"id": 9657, "prediction": "Create a template model from a reader ."}
{"id": 9659, "prediction": "Sets the request path ."}
{"id": 9661, "prediction": "Creates an instance of the given string ."}
{"id": 9663, "prediction": "Adds a capture appender to the logger ."}
{"id": 9665, "prediction": "Clear the capture appender ."}
{"id": 9667, "prediction": "Parse the model file ."}
{"id": 9669, "prediction": "Gets the files ."}
{"id": 9671, "prediction": "Returns true if the model is fully resolved ."}
{"id": 9673, "prediction": "Sets the model directories ."}
{"id": 9675, "prediction": "Sets the model resources ."}
{"id": 9677, "prediction": "Set a string array with the specified parameters ."}
{"id": 9679, "prediction": "Execute a long ."}
{"id": 9681, "prediction": "Merges the velocity template into a template ."}
{"id": 9683, "prediction": "Gets the template directory ."}
{"id": 9685, "prediction": "Start the web UI ."}
{"id": 9687, "prediction": "Prints the view ."}
{"id": 9689, "prediction": "Invokes the given method ."}
{"id": 9691, "prediction": "Detaches this instance ."}
{"id": 9693, "prediction": "Dumps information about the request ."}
{"id": 9695, "prediction": "Configure the event stream ."}
{"id": 9697, "prediction": "Returns the parameter value for the given event stream ."}
{"id": 9699, "prediction": "Find the common directory of two directories ."}
{"id": 9701, "prediction": "Convert relative path to relative path ."}
{"id": 9703, "prediction": "Dumps an error on the request ."}
{"id": 9705, "prediction": "Adds a parameterized template ."}
{"id": 9707, "prediction": "Initialize the template ."}
{"id": 9709, "prediction": "Sets whether the save button is enabled ."}
{"id": 9711, "prediction": "On delete event ."}
{"id": 9713, "prediction": "Gets the array of files ."}
{"id": 9715, "prediction": "Get the summary of the report ."}
{"id": 9717, "prediction": "Create a new service instance ."}
{"id": 9719, "prediction": "Replies the model directories ."}
{"id": 9721, "prediction": "Sets the collection of candidates ."}
{"id": 9723, "prediction": "Display an error ."}
{"id": 9725, "prediction": "Read the formal parameters from the request ."}
{"id": 9727, "prediction": "Extract the parameter value from a cell ."}
{"id": 8448, "prediction": "Performs a rotation on the specified degrees ."}
{"id": 8450, "prediction": "Strip the current profile ."}
{"id": 8452, "prediction": "Add a source image ."}
{"id": 8454, "prediction": "Parses the given object ."}
{"id": 8456, "prediction": "Extract the time unit from a string ."}
{"id": 8458, "prediction": "Execute slide ."}
{"id": 8460, "prediction": "Reads the actions from a PPT file ."}
{"id": 8462, "prediction": "Renders a template text ."}
{"id": 8464, "prediction": "Checks if the given mouse event is within the range ."}
{"id": 8466, "prediction": "Executes the send operation ."}
{"id": 8468, "prediction": "Require a file ."}
{"id": 8470, "prediction": "Creates a log value map ."}
{"id": 8472, "prediction": "Log a message at the level of TRACE ."}
{"id": 8474, "prediction": "Log a message at debug level ."}
{"id": 8476, "prediction": "Log a message at INFO level ."}
{"id": 8478, "prediction": "Log a warning message ."}
{"id": 8480, "prediction": "Logs an error message ."}
{"id": 8482, "prediction": "Add the context to the context ."}
{"id": 8484, "prediction": "Writes a list of keys and values to a JSON string ."}
{"id": 8486, "prediction": "Returns the log value ."}
{"id": 8488, "prediction": "Encodes the given value ."}
{"id": 8490, "prediction": "Removes the mapping from the array position ."}
{"id": 8492, "prediction": "Save the data in the context to the object ."}
{"id": 8494, "prediction": "Parse save attribute string ."}
{"id": 8496, "prediction": "Gets the save attribute from the list of attributes ."}
{"id": 8498, "prediction": "Sets the save attributes for the given sheet ."}
{"id": 8500, "prediction": "Prepare the data for a cell ."}
{"id": 8502, "prediction": "Put shift range attributes ."}
{"id": 8504, "prediction": "Gets the workbook wrapper ."}
{"id": 8506, "prediction": "Calculates the maximum column counts ."}
{"id": 8508, "prediction": "Loads a webbook ."}
{"id": 8510, "prediction": "Executes the export file ."}
{"id": 8512, "prediction": "Do the submit button ."}
{"id": 8514, "prediction": "Returns the current sheet configuration ."}
{"id": 8516, "prediction": "Gets the locale ."}
{"id": 8518, "prediction": "Gets the cell helper ."}
{"id": 8520, "prediction": "Gets the validation handler ."}
{"id": 8522, "prediction": "Convert a set of shared formulas into a list of shared groups ."}
{"id": 8524, "prediction": "Helper method to convert a PtgList to a pgt"}
{"id": 8526, "prediction": "Gets the serial row list ."}
{"id": 8528, "prediction": "Fixes a reference to a reference that refers to a reference ."}
{"id": 8530, "prediction": "Build the area for a given area ."}
{"id": 8532, "prediction": "Retrieves the color from the SpatialPracer ."}
{"id": 8534, "prediction": "Gets the X color from the scheme ."}
{"id": 8536, "prediction": "Get the XColor with the specified theme ."}
{"id": 8538, "prediction": "Convert an XSSF color to a short array ."}
{"id": 8540, "prediction": "Finds the component name from the component ."}
{"id": 8542, "prediction": "Searches for a method parameter ."}
{"id": 8544, "prediction": "Gets the value of a property ."}
{"id": 8546, "prediction": "Find the validation attributes for a given cell ."}
{"id": 8548, "prediction": "Sets the faces for a cell ."}
{"id": 8550, "prediction": "Initialize the chart map ."}
{"id": 8552, "prediction": "Sets the style of a chart ."}
{"id": 8554, "prediction": "Setup the style for the chart ."}
{"id": 8556, "prediction": "Gets the chart id from a chart ."}
{"id": 8558, "prediction": "Generate a single XSSF ."}
{"id": 8560, "prediction": "Gets the full name from a row ."}
{"id": 8562, "prediction": "Set the upper level formula for a given row ."}
{"id": 8564, "prediction": "Gather rows mapping by name ."}
{"id": 8566, "prediction": "Changes the last level length of the given name ."}
{"id": 8568, "prediction": "Sets the full name in the row ."}
{"id": 8570, "prediction": "Sets the original row number in the row ."}
{"id": 8572, "prediction": "Finds the row mappings from the given map ."}
{"id": 8574, "prediction": "Builds a new ConfigRange from the source range ."}
{"id": 8576, "prediction": "Checks if a row is static ."}
{"id": 8578, "prediction": "Gets a map of cell regions ."}
{"id": 8580, "prediction": "Adds the skip cell to the list ."}
{"id": 8582, "prediction": "Builds a cell comment from a string ."}
{"id": 8584, "prediction": "Gets the sheet configuration ."}
{"id": 8586, "prediction": "Verify that the last cell has been removed ."}
{"id": 8588, "prediction": "Checks the last row ."}
{"id": 8590, "prediction": "Sets the parent command ."}
{"id": 8592, "prediction": "Adds a command to the sheet configuration ."}
{"id": 8594, "prediction": "Build command line list ."}
{"id": 8596, "prediction": "Process a command line ."}
{"id": 8598, "prediction": "Creates config command ."}
{"id": 8600, "prediction": "Gets the sheet configuration ."}
{"id": 8602, "prediction": "Sets the body of the body ."}
{"id": 8604, "prediction": "Delete row ."}
{"id": 8606, "prediction": "Find the list full name list ."}
{"id": 8608, "prediction": "Inserts empty object into the given collection ."}
{"id": 8610, "prediction": "Prepares a collection of key - value pair into the map ."}
{"id": 8612, "prediction": "Checks if a row is allowed for a row ."}
{"id": 8614, "prediction": "Evaluate a tie cell ."}
{"id": 8616, "prediction": "Checks if the given string is a valid user ."}
{"id": 8618, "prediction": "Evaluate a boolean expression ."}
{"id": 8620, "prediction": "Removes a single row from a sheet ."}
{"id": 8622, "prediction": "Removes the rows in the given body from the body ."}
{"id": 8624, "prediction": "Loads the chart id from the current row ."}
{"id": 8626, "prediction": "Get cell value ."}
{"id": 8628, "prediction": "Get cell string value ."}
{"id": 8630, "prediction": "Set cell value ."}
{"id": 8632, "prediction": "Sets the value of a cell ."}
{"id": 8634, "prediction": "Set cell number value ."}
{"id": 8636, "prediction": "Copy a single row ."}
{"id": 8638, "prediction": "Copies cell value from source cell ."}
{"id": 8640, "prediction": "Clone the source cell ."}
{"id": 8642, "prediction": "Creates or updates the specified cell ."}
{"id": 8644, "prediction": "Get VML drawing from a cell ."}
{"id": 8646, "prediction": "Get the cell style from source cell ."}
{"id": 8648, "prediction": "Gets the row columns from the component ."}
{"id": 8650, "prediction": "Gets the faces from a body row ."}
{"id": 8652, "prediction": "Gets the poi cell from a sheet ."}
{"id": 8654, "prediction": "Gets the tie cell in the map if it exists ."}
{"id": 8656, "prediction": "Evaluates the given expression ."}
{"id": 8658, "prediction": "Custom deserialization ."}
{"id": 8660, "prediction": "Merges the given rows into the given map ."}
{"id": 8662, "prediction": "Get the chart type of the chart"}
{"id": 8664, "prediction": "Initializes the chart data ."}
{"id": 8666, "prediction": "Initialize the XSSFapsMap map ."}
{"id": 8668, "prediction": "Determines the chart id of the chart with the specified cell ."}
{"id": 8670, "prediction": "Iterate over the collection of objects ."}
{"id": 8672, "prediction": "Receives the formula ."}
{"id": 8674, "prediction": "Gets the faces from the current page ."}
{"id": 8676, "prediction": "Gets the last collection object ."}
{"id": 8678, "prediction": "Start restore data context ."}
{"id": 8680, "prediction": "Set the first row reference ."}
{"id": 8682, "prediction": "Build cells for a single row ."}
{"id": 8684, "prediction": "Reads the data from the input stream ."}
{"id": 8686, "prediction": "Builds a series list from a list of templates ."}
{"id": 8688, "prediction": "Gets the color list from a list of dpts ."}
{"id": 8690, "prediction": "Set the command index ."}
{"id": 8692, "prediction": "Gets the map of the pictures from the xss file ."}
{"id": 8694, "prediction": "Generate the style style for the given cell ."}
{"id": 8696, "prediction": "Gets the anchor size ."}
{"id": 8698, "prediction": "Gets the rendered image ."}
{"id": 8700, "prediction": "Get the row style"}
{"id": 8702, "prediction": "Get the color of a cell ."}
{"id": 9729, "prediction": "Checks if the request is an XHR request ."}
{"id": 9731, "prediction": "Handle refresh event ."}
{"id": 9733, "prediction": "Gets the annotation on the given property ."}
{"id": 9735, "prediction": "Lookup a domain by name ."}
{"id": 9737, "prediction": "Gets the managed class ."}
{"id": 9739, "prediction": "Process an exception ."}
{"id": 9741, "prediction": "Get a boolean value from the column label ."}
{"id": 9743, "prediction": "Serialize the HttpServletResponse into the HttpServletResponse"}
{"id": 9745, "prediction": "Add a cookie ."}
{"id": 9747, "prediction": "Returns an iterator over all the cookies ."}
{"id": 9749, "prediction": "Add a field ."}
{"id": 9751, "prediction": "Verifies that the response matches the given token ."}
{"id": 9753, "prediction": "Ensures that the given URI is empty ."}
{"id": 9755, "prediction": "Gets the http servlet request ."}
{"id": 9757, "prediction": "Executes an immutable transaction ."}
{"id": 9759, "prediction": "Returns all files in this directory ."}
{"id": 9761, "prediction": "Gets the concrete configuration ."}
{"id": 9763, "prediction": "Gets the list of factory factories ."}
{"id": 9765, "prediction": "Serialize the response to a file ."}
{"id": 9767, "prediction": "Handle a request ."}
{"id": 9769, "prediction": "Destroy event stream ."}
{"id": 9771, "prediction": "Upload the blob ."}
{"id": 9773, "prediction": "Extract column parameters ."}
{"id": 9775, "prediction": "Schedule a periodic task ."}
{"id": 9777, "prediction": "Read repository configuration ."}
{"id": 9779, "prediction": "Configure the application configuration ."}
{"id": 9781, "prediction": "Prints the stop banner ."}
{"id": 9783, "prediction": "Register a shutdown hook ."}
{"id": 9785, "prediction": "Trigger the trigger ."}
{"id": 9787, "prediction": "Gets the total counts ."}
{"id": 9789, "prediction": "getter for variants - gets"}
{"id": 9791, "prediction": "getter for questionType - gets"}
{"id": 9793, "prediction": "getter for token - gets"}
{"id": 9795, "prediction": "setter for depLabel - sets"}
{"id": 9797, "prediction": "setter for semanticType - sets"}
{"id": 9799, "prediction": "setter for sections - sets"}
{"id": 9801, "prediction": "indexed setter for sections - sets an indexed value -"}
{"id": 9803, "prediction": "setter for uri - sets"}
{"id": 9805, "prediction": "setter for types - sets"}
{"id": 9807, "prediction": "setter for targetType - sets"}
{"id": 9809, "prediction": "setter for rank - sets"}
{"id": 9811, "prediction": "setter for queryString - sets"}
{"id": 9813, "prediction": "setter for candidateAnswers - sets"}
{"id": 9815, "prediction": "indexed setter for candidateAnswers - sets an indexed value -"}
{"id": 9817, "prediction": "setter for query - sets"}
{"id": 9819, "prediction": "setter for hitList - sets"}
{"id": 9821, "prediction": "indexed setter for hitList - sets an indexed value -"}
{"id": 9823, "prediction": "setter for abstractQuery - sets"}
{"id": 9825, "prediction": "setter for searchId - sets"}
{"id": 9827, "prediction": "getter for offsetInInUse - gets"}
{"id": 9829, "prediction": "getter for offsetInInSection - gets"}
{"id": 9831, "prediction": "getter for beginSection - gets"}
{"id": 9833, "prediction": "getter for endSection - gets"}
{"id": 9835, "prediction": "getter for aspect - gets"}
{"id": 9837, "prediction": "getter for triple - gets"}
{"id": 9839, "prediction": "getter for sourceRelation - gets"}
{"id": 9841, "prediction": "getter for subject - gets"}
{"id": 9843, "prediction": "getter for predicate - gets"}
{"id": 9845, "prediction": "getter for object uri - gets"}
{"id": 9847, "prediction": "getter for operator - gets"}
{"id": 9849, "prediction": "getter for operatorArgs - gets"}
{"id": 9851, "prediction": "getter for concept - gets"}
{"id": 9853, "prediction": "getter for text - gets"}
{"id": 9855, "prediction": "getter for id - gets"}
{"id": 9857, "prediction": "getter for name - gets"}
{"id": 9859, "prediction": "setter for abbreviation - sets"}
{"id": 9861, "prediction": "getter for variants - gets"}
{"id": 9863, "prediction": "getter for namedEntityTypes - gets"}
{"id": 9865, "prediction": "getter for conceptType - gets"}
{"id": 9867, "prediction": "getter for occurrences - gets"}
{"id": 9869, "prediction": "getter for concepts - gets"}
{"id": 9871, "prediction": "getter for originalText - gets"}
{"id": 9873, "prediction": "getter for arguments - gets"}
{"id": 9875, "prediction": "getter for label - gets"}
{"id": 9877, "prediction": "Returns the next clear bit at the specified index ."}
{"id": 9879, "prediction": "Frees the specified buffer ."}
{"id": 9881, "prediction": "Rehash the array of values in the array ."}
{"id": 9883, "prediction": "Checks if there is a bracketed brackets ."}
{"id": 9885, "prediction": "Convert an H2M2M2M2M2 to a String representation ."}
{"id": 9887, "prediction": "Main entry point ."}
{"id": 9889, "prediction": "Checks if the connection id is valid ."}
{"id": 9891, "prediction": "Validates a group ID ."}
{"id": 9893, "prediction": "Checks if the peptide is peptide"}
{"id": 9895, "prediction": "Gets a simple Polymer with the given string ."}
{"id": 9897, "prediction": "Convert a HELM2 object to a HELM2 object ."}
{"id": 9899, "prediction": "Convert a list of HELM2M2M2 to a String ."}
{"id": 9901, "prediction": "Convert the annotation to an H2M2M2 annotation ."}
{"id": 9903, "prediction": "Get a PolymerNotation object"}
{"id": 9905, "prediction": "Convert a string to a version"}
{"id": 9907, "prediction": "Set number ."}
{"id": 9909, "prediction": "method to choose the MonomerNotation in the group"}
{"id": 9911, "prediction": "Gets the list ."}
{"id": 9913, "prediction": "method to set nucleotide contents"}
{"id": 9915, "prediction": "Gets statistics about a worker ."}
{"id": 9917, "prediction": "Creates an ADI graph ."}
{"id": 9919, "prediction": "Returns a list of nodes in the graph ."}
{"id": 9921, "prediction": "Request the subscription count ."}
{"id": 9923, "prediction": "Synchronously synchronously ."}
{"id": 9925, "prediction": "Polls the specified timeout ."}
{"id": 9927, "prediction": "Checks if the given Throwable is a throwable ."}
{"id": 9929, "prediction": "Creates a new worker ."}
{"id": 9931, "prediction": "Registers a worker ."}
{"id": 9933, "prediction": "Signals a work queue ."}
{"id": 9935, "prediction": "Waits for a work queue ."}
{"id": 9937, "prediction": "Returns the common task queue for this thread ."}
{"id": 9939, "prediction": "Submits a ForkJoinTask ."}
{"id": 9941, "prediction": "Retrieves a value from the queue ."}
{"id": 9943, "prediction": "Returns the thread pool statistics ."}
{"id": 9945, "prediction": "Returns a list of all elements in this list ."}
{"id": 9947, "prediction": "Folds an iterable over the elements of an iterable ."}
{"id": 9949, "prediction": "Adds a task to the queue ."}
{"id": 9951, "prediction": "Creates a new HashMap from the given keys and values ."}
{"id": 9953, "prediction": "Creates a new ListMap from the given elements ."}
{"id": 9955, "prediction": "Returns a copy of this map ."}
{"id": 9957, "prediction": "Marshals a bound value ."}
{"id": 9959, "prediction": "Returns a binary search for the given list ."}
{"id": 9961, "prediction": "Send a email"}
{"id": 9963, "prediction": "Bind a pattern ."}
{"id": 9965, "prediction": "Displays the tag with the given role name ."}
{"id": 9967, "prediction": "Remove duplicate strings ."}
{"id": 9969, "prediction": "Runs the runnable ."}
{"id": 9971, "prediction": "get login"}
{"id": 9973, "prediction": "Checks if the given password matches the given salt ."}
{"id": 9975, "prediction": "Generate the login key ."}
{"id": 9977, "prediction": "Forward to the given path ."}
{"id": 9979, "prediction": "Get a long value from a request ."}
{"id": 9981, "prediction": "Get information about the call stack information ."}
{"id": 9983, "prediction": "Converts a CharSequence into a byte array ."}
{"id": 8704, "prediction": "Get the cell style for a cell"}
{"id": 8706, "prediction": "Gets the alignment from a cell ."}
{"id": 8708, "prediction": "Calculates the total height of a sheet"}
{"id": 8710, "prediction": "Gets the input type from a cell type ."}
{"id": 8712, "prediction": "Gets the resource as a stream ."}
{"id": 8714, "prediction": "Evaluate input type ."}
{"id": 8716, "prediction": "Join an array of Strings ."}
{"id": 8718, "prediction": "Returns the tab type of the tab ."}
{"id": 8720, "prediction": "Gets the default date pattern ."}
{"id": 8722, "prediction": "Gets the decimal separator for the default locale ."}
{"id": 8724, "prediction": "Build the list of watched events for a formula ."}
{"id": 8726, "prediction": "Adds a row to the list ."}
{"id": 8728, "prediction": "Parse the widget attributes ."}
{"id": 8730, "prediction": "Parse comment attributes ."}
{"id": 8732, "prediction": "Parses the given string and returns a map of attributes ."}
{"id": 8734, "prediction": "Parse validation attributes ."}
{"id": 8736, "prediction": "Parse special attributes ."}
{"id": 8738, "prediction": "Process the select item attributes ."}
{"id": 8740, "prediction": "Parse comment map ."}
{"id": 8742, "prediction": "Remove chars from input string ."}
{"id": 8744, "prediction": "Convert a column to a int"}
{"id": 8746, "prediction": "Convert height units to pixel units ."}
{"id": 8748, "prediction": "Parse a date string ."}
{"id": 8750, "prediction": "Determines if the character should be continued ."}
{"id": 8752, "prediction": "Compare two cells ."}
{"id": 8754, "prediction": "Clears all columns in a row ."}
{"id": 8756, "prediction": "Deletes a cell from a row ."}
{"id": 8758, "prediction": "Refresh the status of the cell ."}
{"id": 8760, "prediction": "Validate the TIE WebBean ."}
{"id": 8762, "prediction": "Validate all rules for a single cell ."}
{"id": 8764, "prediction": "Validates the target cell ."}
{"id": 8766, "prediction": "Validate the row in the tab ."}
{"id": 8768, "prediction": "Refresh all cells in the current table ."}
{"id": 8770, "prediction": "Sets the submit mode for the view ."}
{"id": 8772, "prediction": "Clear all cells ."}
{"id": 8774, "prediction": "Load header row ."}
{"id": 8776, "prediction": "Get the column style column ."}
{"id": 8778, "prediction": "Load header row ."}
{"id": 8780, "prediction": "Clear the workbook ."}
{"id": 8782, "prediction": "Load data structures ."}
{"id": 8784, "prediction": "Refresh the data for a row ."}
{"id": 8786, "prediction": "Returns the index of the tab with the given name ."}
{"id": 8788, "prediction": "Prepare work sheet ."}
{"id": 8790, "prediction": "Save the tab map ."}
{"id": 8792, "prediction": "Load body rows ."}
{"id": 8794, "prediction": "Refresh a cell ."}
{"id": 8796, "prediction": "Create dynamic columns ."}
{"id": 8798, "prediction": "Refresh the body of the body rows within the range ."}
{"id": 8800, "prediction": "Returns true if the view has been saved ."}
{"id": 8802, "prediction": "Write input stream to output stream ."}
{"id": 8804, "prediction": "Write a line ."}
{"id": 8806, "prediction": "Add a bitmap ."}
{"id": 8808, "prediction": "Removes a parameter from the given name ."}
{"id": 8810, "prediction": "Clears the result ."}
{"id": 8812, "prediction": "Call the service ."}
{"id": 8814, "prediction": "Unbind service ."}
{"id": 8816, "prediction": "Store image to disk ."}
{"id": 8818, "prediction": "Converts an input stream to a string ."}
{"id": 8820, "prediction": "Returns the number of bytes available ."}
{"id": 8822, "prediction": "Reads a byte from the stream ."}
{"id": 8824, "prediction": "Sends the start part ."}
{"id": 8826, "prediction": "Send the content type header ."}
{"id": 8828, "prediction": "Sends the end of the end of the output stream ."}
{"id": 8830, "prediction": "Sends the given parts to the output stream ."}
{"id": 8832, "prediction": "Returns true if the URL is a redirect URL ."}
{"id": 8834, "prediction": "Sets the date header ."}
{"id": 8836, "prediction": "Sets the content type header ."}
{"id": 8838, "prediction": "Sends the disposition header ."}
{"id": 8840, "prediction": "Installs the cache ."}
{"id": 8842, "prediction": "Gets the cached response ."}
{"id": 8844, "prediction": "Resets the bitmap ."}
{"id": 8846, "prediction": "Validates the keystore ."}
{"id": 8848, "prediction": "Stop the listener ."}
{"id": 8850, "prediction": "Disconnects a connection ."}
{"id": 8852, "prediction": "Unbind the service ."}
{"id": 8854, "prediction": "Open the proxy connection ."}
{"id": 8856, "prediction": "This method is called when the client has completed ."}
{"id": 8858, "prediction": "Sets the text of the given text view ."}
{"id": 8860, "prediction": "Show soft input ."}
{"id": 8862, "prediction": "Returns the width of the pixels in pixels"}
{"id": 8864, "prediction": "Clears the cache ."}
{"id": 8866, "prediction": "Cancels the image loading ."}
{"id": 8868, "prediction": "Sets the image result ."}
{"id": 8870, "prediction": "Start an image loader task ."}
{"id": 8872, "prediction": "Releases a buffer ."}
{"id": 8874, "prediction": "Add a parameter ."}
{"id": 8876, "prediction": "Calculates the MD5 hash of the given text ."}
{"id": 8878, "prediction": "Returns the String identifying the given CUDAas ."}
{"id": 8880, "prediction": "Checks the result of the CUBLAS block ."}
{"id": 8882, "prediction": "Adds a new ending id ."}
{"id": 8884, "prediction": "Prints a human readable description ."}
{"id": 8886, "prediction": "Convert attribute names to Kols ."}
{"id": 8888, "prediction": "Remove the given tag symbols from the given tag ."}
{"id": 8890, "prediction": "Returns the query string ."}
{"id": 8892, "prediction": "Parses the json string into a list of app info ."}
{"id": 8894, "prediction": "Performs the data point on the app ."}
{"id": 8896, "prediction": "Factory method to create a Generic CodeTreeSet ."}
{"id": 8898, "prediction": "Create a new GC code list ."}
{"id": 8900, "prediction": "Create a new GC column set ."}
{"id": 8902, "prediction": "Get the value of the passed row ."}
{"id": 8904, "prediction": "Get all key IDs from a column set ."}
{"id": 8906, "prediction": "Check if the passed column is a key ."}
{"id": 8908, "prediction": "Create a new Key ."}
{"id": 8910, "prediction": "Add a column ."}
{"id": 8912, "prediction": "Create a new GCCodes set of GC codes ."}
{"id": 8914, "prediction": "Create a new GC code list ."}
{"id": 8916, "prediction": "Create a new GC column set ."}
{"id": 8918, "prediction": "Create a validator for GC codes ."}
{"id": 8920, "prediction": "Create a new GC code list of GC codes ."}
{"id": 8922, "prediction": "Gets a new GC column validation set ."}
{"id": 8924, "prediction": "Sets the context ."}
{"id": 8926, "prediction": "Get capture capture flag"}
{"id": 8928, "prediction": "Prepend the message to the given metadata ."}
{"id": 8930, "prediction": "Creates a JSONObject representing a JSON object ."}
{"id": 8932, "prediction": "Sets user identity ."}
{"id": 8934, "prediction": "Starts the current location updates ."}
{"id": 8936, "prediction": "Size of the given region ."}
{"id": 8938, "prediction": "Reads a snapshot record ."}
{"id": 8940, "prediction": "Gets the time values for the given index ."}
{"id": 8942, "prediction": "Get the pool for a given JMX server"}
{"id": 8944, "prediction": "Checks if a region exists in the server"}
{"id": 8946, "prediction": "Returns a list of host names ."}
{"id": 8948, "prediction": "Checks if the given data is an error ."}
{"id": 8950, "prediction": "Flatten a collection of objects"}
{"id": 8952, "prediction": "Creates a new cache listener for a given consumer event ."}
{"id": 8954, "prediction": "Handle exception ."}
{"id": 8956, "prediction": "Executes the export file ."}
{"id": 8958, "prediction": "Execute a function on a region ."}
{"id": 9985, "prediction": "Converts a CharSequence to a byte array ."}
{"id": 9987, "prediction": "Schedules a promise ."}
{"id": 9989, "prediction": "Executes the given invocation ."}
{"id": 9991, "prediction": "Gets the REST operations ."}
{"id": 9993, "prediction": "Render a forbidden message ."}
{"id": 9995, "prediction": "Parse action path ."}
{"id": 9997, "prediction": "Render empty data tables ."}
{"id": 9999, "prediction": "Sends a response to the browser ."}
{"id": 10001, "prediction": "Returns the current method name ."}
{"id": 10003, "prediction": "Propagate metrics collection ."}
{"id": 10005, "prediction": "get charset from file"}
{"id": 10007, "prediction": "Copy bytes from InputStream to OutputStream"}
{"id": 10009, "prediction": "Copies the contents of the given Reader to the given Writer ."}
{"id": 10011, "prediction": "Copies the given reader to the output stream ."}
{"id": 10013, "prediction": "Compare two input streams ."}
{"id": 10015, "prediction": "Apply a pipeline to the pipeline ."}
{"id": 10017, "prediction": "Unmarshals a String to an object ."}
{"id": 10019, "prediction": "Creates a new instance of PermissionDialog ."}
{"id": 10021, "prediction": "Register a converter type ."}
{"id": 10023, "prediction": "Checks if the given string is a mobile phone number ."}
{"id": 10025, "prediction": "Checks if the given string is a valid birthday ."}
{"id": 10027, "prediction": "Checks if the given string is a valid date ."}
{"id": 10029, "prediction": "Encodes a string into Base64 ."}
{"id": 10031, "prediction": "Converts a hex string to a byte array ."}
{"id": 10033, "prediction": "Reads content from an input stream ."}
{"id": 10035, "prediction": "Writes data to a file ."}
{"id": 10037, "prediction": "Serialize a DOM Document into a String ."}
{"id": 10039, "prediction": "Construct a Document from a String"}
{"id": 10041, "prediction": "Returns true if the given document is valid ."}
{"id": 10043, "prediction": "Determines whether the given class is cached or not ."}
{"id": 10045, "prediction": "Returns true if the given class is a primitive wrapper array ."}
{"id": 10047, "prediction": "Checks if the left hand side type is assignable to the right hand side ."}
{"id": 10049, "prediction": "Returns all interfaces of the given object ."}
{"id": 10051, "prediction": "Write properties to a temp file"}
{"id": 10053, "prediction": "Put a permission ."}
{"id": 10055, "prediction": "Bind an extension to the classloader ."}
{"id": 10057, "prediction": "Converts a primitive type to a primitive type ."}
{"id": 10059, "prediction": "Convert an object to a user defined type ."}
{"id": 10061, "prediction": "Creates a cookie with the given name ."}
{"id": 10063, "prediction": "Initialize data source ."}
{"id": 10065, "prediction": "Sets a parameter ."}
{"id": 10067, "prediction": "Display a PermissionDialog ."}
{"id": 10069, "prediction": "Returns true if any of the given value is denied ."}
{"id": 10071, "prediction": "Find record ."}
{"id": 10073, "prediction": "Determines whether the given method is declared by the given method type ."}
{"id": 10075, "prediction": "Adds a value to the cache ."}
{"id": 10077, "prediction": "Reads arguments ."}
{"id": 10079, "prediction": "Checks if the given class is a protobuf ."}
{"id": 10081, "prediction": "Returns the getter for the given field ."}
{"id": 10083, "prediction": "Get the object mapper ."}
{"id": 10085, "prediction": "Convert an object to a JSON string"}
{"id": 10087, "prediction": "Gets the user record ."}
{"id": 10089, "prediction": "Helper method to copy all the values from the target ."}
{"id": 10091, "prediction": "Sets a property ."}
{"id": 10093, "prediction": "Saves the access token ."}
{"id": 10095, "prediction": "Get the default class loader ."}
{"id": 10097, "prediction": "Gets the resource as a stream ."}
{"id": 10099, "prediction": "Initialize the parameters from the given URI ."}
{"id": 10101, "prediction": "Initializes the path ."}
{"id": 10103, "prediction": "Set user info ."}
{"id": 10105, "prediction": "Set the port ."}
{"id": 10107, "prediction": "Set the query string ."}
{"id": 10109, "prediction": "Returns the URI of this request ."}
{"id": 10111, "prediction": "Initialize this class ."}
{"id": 10113, "prediction": "Set the value of the paramin ."}
{"id": 10115, "prediction": "Sets the clipboard contents ."}
{"id": 10117, "prediction": "Load services by type ."}
{"id": 10119, "prediction": "Get service parameters ."}
{"id": 10121, "prediction": "Finds a service by its class ."}
{"id": 10123, "prediction": "Returns an iterator over the elements in this buffer ."}
{"id": 10125, "prediction": "Returns the parent logger ."}
{"id": 10127, "prediction": "Retrieves the authorization token from the server ."}
{"id": 10129, "prediction": "Visit a class declaration ."}
{"id": 10131, "prediction": "Returns the value of an option ."}
{"id": 10133, "prediction": "Returns a filter that matches the given declaration ."}
{"id": 10135, "prediction": "Returns a new DeclarationFilter that matches the given filter ."}
{"id": 10137, "prediction": "Marks the given constructor ."}
{"id": 10139, "prediction": "Replaces all hyphen characters in the given string ."}
{"id": 10141, "prediction": "Returns the index for the given name ."}
{"id": 10143, "prediction": "Convert a collection of objects to a protobuf ."}
{"id": 10145, "prediction": "Sets the value of a POJO field ."}
{"id": 10147, "prediction": "Gets a ResultSet from a ResultSet ."}
{"id": 10149, "prediction": "Extracts the values from the map ."}
{"id": 10151, "prediction": "Polling objects from the queue ."}
{"id": 10153, "prediction": "Gets a field from a class ."}
{"id": 10155, "prediction": "Gets the declared method with the given name ."}
{"id": 10157, "prediction": "Gets the declared constructors for the given class ."}
{"id": 10159, "prediction": "Returns the index of the first occurrence of the specified string ignoring case ."}
{"id": 10161, "prediction": "Clean up the state of this object ."}
{"id": 10163, "prediction": "Initialize message queue ."}
{"id": 10165, "prediction": "Initialize the PasswordAuthenticator class ."}
{"id": 10167, "prediction": "Lookup the locale information for the given locale ."}
{"id": 10169, "prediction": "Removes all elements from the queue ."}
{"id": 10171, "prediction": "Removes the element from the stack ."}
{"id": 10173, "prediction": "Parse properties from the properties file ."}
{"id": 10175, "prediction": "Move the specified position to the specified location ."}
{"id": 10177, "prediction": "Returns true if the specified coordinates are contained within the specified range ."}
{"id": 10179, "prediction": "Returns the union of this rectangle ."}
{"id": 10181, "prediction": "Returns a copy of this rectangle with another ."}
{"id": 10183, "prediction": "Returns the number of rows in the specified row ."}
{"id": 10185, "prediction": "Calculate the grid widths ."}
{"id": 10187, "prediction": "Unwraps a Throwable ."}
{"id": 10189, "prediction": "Called when a table is updated ."}
{"id": 10191, "prediction": "Renders instructions ."}
{"id": 10193, "prediction": "Returns a copy of this query ."}
{"id": 10195, "prediction": "Clears all children of this node ."}
{"id": 10197, "prediction": "Adds the given instructions to this function ."}
{"id": 10199, "prediction": "Process a property change event ."}
{"id": 10201, "prediction": "Update the component flags ."}
{"id": 10203, "prediction": "Evaluates the given term ."}
{"id": 10205, "prediction": "Compares two collections ."}
{"id": 10207, "prediction": "Render the first page ."}
{"id": 10209, "prediction": "Resets the state ."}
{"id": 10211, "prediction": "Returns the value associated with the given key ."}
{"id": 10213, "prediction": "Sets the value at the specified index ."}
{"id": 10215, "prediction": "Removes the value at the specified index ."}
{"id": 10217, "prediction": "Sets the value of the given property ."}
{"id": 10219, "prediction": "Checks if the given primitive type is assignable to the given primitive type ."}
{"id": 10221, "prediction": "Determines the decision tree ."}
{"id": 10223, "prediction": "Unpack the given query ."}
{"id": 10225, "prediction": "Unify a variable ."}
{"id": 10227, "prediction": "Find the maximum number of arguments in a clause ."}
{"id": 10229, "prediction": "Gathers the position of a clause ."}
{"id": 10231, "prediction": "Displays a query ."}
{"id": 10233, "prediction": "Convert a byte buffer to a string ."}
{"id": 10235, "prediction": "Sets the value of the specified attribute ."}
{"id": 10237, "prediction": "Checks if the given class is already loaded ."}
{"id": 10239, "prediction": "Checks if the given class is a subtype of the given class ."}
{"id": 8960, "prediction": "Constructs the security client ."}
{"id": 8962, "prediction": "Get a region by name ."}
{"id": 8964, "prediction": "Returns true if the given value already contains the given value ."}
{"id": 8966, "prediction": "Dumps all gfs files in the given directory ."}
{"id": 8968, "prediction": "Creates a new JMX instance ."}
{"id": 8970, "prediction": "Shutdown a member ."}
{"id": 8972, "prediction": "Shutdown the redundancy zone ."}
{"id": 8974, "prediction": "Reads the results of a page by the specified page ."}
{"id": 8976, "prediction": "Checks if the remote locator is valid ."}
{"id": 8978, "prediction": "Builds the checksum map for a given region ."}
{"id": 8980, "prediction": "Checks if the given type is a type ."}
{"id": 8982, "prediction": "Deserializes the given byte array ."}
{"id": 8984, "prediction": "Sets the id attribute for the given element ."}
{"id": 8986, "prediction": "Checks if the given type is a super type ."}
{"id": 8988, "prediction": "Generate the Java code ."}
{"id": 8990, "prediction": "Convert the query to an Observable ."}
{"id": 8992, "prediction": "Returns the value of the given string or null if not found ."}
{"id": 8994, "prediction": "Checks if the given type is a type ."}
{"id": 8996, "prediction": "Read the temperature ."}
{"id": 8998, "prediction": "Prints a message ."}
{"id": 9000, "prediction": "Gets the icon fonts ."}
{"id": 9002, "prediction": "Creates and returns the layout layout ."}
{"id": 9004, "prediction": "Raises a given px exponent ."}
{"id": 9006, "prediction": "Compute the power of a given integer ."}
{"id": 9008, "prediction": "Expand the given number of times ."}
{"id": 9010, "prediction": "Calculate a new Newton Newton Newton function ."}
{"id": 9012, "prediction": "Calculate the aran approximation of the given scale ."}
{"id": 9014, "prediction": "Prints the pi ."}
{"id": 9016, "prediction": "Sets the limits ."}
{"id": 9018, "prediction": "Prints the bar ."}
{"id": 9020, "prediction": "Subtract the complex number ."}
{"id": 9022, "prediction": "Divide two complex numbers ."}
{"id": 9024, "prediction": "Returns the row vector ."}
{"id": 9026, "prediction": "Sets the values ."}
{"id": 9028, "prediction": "Add this matrix to this matrix ."}
{"id": 9030, "prediction": "Multiply the matrix ."}
{"id": 9032, "prediction": "Prints the values of this stream ."}
{"id": 9034, "prediction": "Validate coefficients ."}
{"id": 9036, "prediction": "Clear the internal state ."}
{"id": 9038, "prediction": "Parses a LayerDescriptor object ."}
{"id": 9040, "prediction": "Validate the given raw XML ."}
{"id": 9042, "prediction": "Sets this matrix ."}
{"id": 9044, "prediction": "Returns the inverse of this matrix ."}
{"id": 9046, "prediction": "Returns the norm of this matrix ."}
{"id": 9048, "prediction": "Decompose the matrix ."}
{"id": 9050, "prediction": "Performs a forward substitution of a matrix ."}
{"id": 9052, "prediction": "Computes the value of the x ."}
{"id": 9054, "prediction": "Generates a random n -umann function ."}
{"id": 9056, "prediction": "Compute the next position ."}
{"id": 9058, "prediction": "Compute the next position ."}
{"id": 9060, "prediction": "Computes the sum of the specified amount ."}
{"id": 9062, "prediction": "Increases the power of a given base exponent ."}
{"id": 9064, "prediction": "Returns the SldManager ."}
{"id": 9066, "prediction": "Decompose two bits ."}
{"id": 9068, "prediction": "Validate that the floating point is biased ."}
{"id": 9070, "prediction": "Checks if the double is biased ."}
{"id": 9072, "prediction": "Create a SldGwt service ."}
{"id": 9074, "prediction": "Returns the next random value ."}
{"id": 9076, "prediction": "Creates a new array of prime groups ."}
{"id": 9078, "prediction": "Initialize the root node ."}
{"id": 9080, "prediction": "Check the position of the node ."}
{"id": 9082, "prediction": "Sets the configuration ."}
{"id": 9084, "prediction": "Initialize FXML loader ."}
{"id": 9086, "prediction": "Extracts the host port from the service ."}
{"id": 9088, "prediction": "Evaluates the attribute of the given event definition ."}
{"id": 9090, "prediction": "Set the address ."}
{"id": 9092, "prediction": "Query the names of the services ."}
{"id": 9094, "prediction": "Gets all members of the authenticated user ."}
{"id": 9096, "prediction": "Change password for user"}
{"id": 9098, "prediction": "Gets gravatar data for a given email address ."}
{"id": 9100, "prediction": "Populate the field from Elasticsearch"}
{"id": 9102, "prediction": "Create a flow step"}
{"id": 9104, "prediction": "Get a flow by id"}
{"id": 9106, "prediction": "Get all steps in a flow ."}
{"id": 9108, "prediction": "Delete a flow step"}
{"id": 9110, "prediction": "Closes the ABASES server ."}
{"id": 9112, "prediction": "Called when the Fluo client is completed ."}
{"id": 9114, "prediction": "Get all personal inventory items ."}
{"id": 9116, "prediction": "Delete a form container"}
{"id": 9118, "prediction": "Gets history data ."}
{"id": 9120, "prediction": "Locks the form of the container ."}
{"id": 9122, "prediction": "Unlock a form container"}
{"id": 9124, "prediction": "Convert a string to a list of roles ."}
{"id": 9126, "prediction": "Update the form definition ."}
{"id": 9128, "prediction": "Get a form definition by name ."}
{"id": 9130, "prediction": "Delete a form definition ."}
{"id": 9132, "prediction": "Initializes the XmemcachedClient ."}
{"id": 9134, "prediction": "Converts a string to a long ."}
{"id": 9136, "prediction": "Get the field values for the given form"}
{"id": 9138, "prediction": "Create a flow rule ."}
{"id": 9140, "prediction": "Update flow rule rule ."}
{"id": 9142, "prediction": "Update flow rule ."}
{"id": 9144, "prediction": "Move the flow rule to the flow rule ."}
{"id": 9146, "prediction": "Delete a flow rule ."}
{"id": 9148, "prediction": "Initialize the session ."}
{"id": 9150, "prediction": "Get all roles ."}
{"id": 9152, "prediction": "Create text field ."}
{"id": 9154, "prediction": "Create a decimal spinner ."}
{"id": 9156, "prediction": "Create a table table ."}
{"id": 9158, "prediction": "Updates a text field with the specified type ."}
{"id": 9160, "prediction": "Update decimal slider slider ."}
{"id": 9162, "prediction": "Get a Field by name"}
{"id": 9164, "prediction": "Gets all fields matching the given form type ."}
{"id": 9166, "prediction": "Force delete field ."}
{"id": 9168, "prediction": "Update the field value ."}
{"id": 9170, "prediction": "Create a flow"}
{"id": 9172, "prediction": "Get a flow by id"}
{"id": 9174, "prediction": "Delete a flow"}
{"id": 9176, "prediction": "Updates a field value ."}
{"id": 9178, "prediction": "Get the form definition for the form definition ."}
{"id": 9180, "prediction": "Close the AbaseClient ."}
{"id": 9182, "prediction": "Gets exception message ."}
{"id": 9184, "prediction": "Gets access token ."}
{"id": 9186, "prediction": "Execute a HTTP POST request ."}
{"id": 9188, "prediction": "Gets the response handler ."}
{"id": 9190, "prediction": "Gets the HTTP client ."}
{"id": 9192, "prediction": "Closes the connection ."}
{"id": 9194, "prediction": "Send a form to a flow"}
{"id": 9196, "prediction": "Handle the message handler ."}
{"id": 9198, "prediction": "Send message ."}
{"id": 9200, "prediction": "Executes the given native SQL query ."}
{"id": 9202, "prediction": "Apply License to License"}
{"id": 9204, "prediction": "Create a ParagraphText field ."}
{"id": 9206, "prediction": "Create a multi - choice field ."}
{"id": 9208, "prediction": "Update text field ."}
{"id": 9210, "prediction": "Updates the field value for a field ."}
{"id": 9212, "prediction": "Update field value ."}
{"id": 9214, "prediction": "Get configuration by key"}
{"id": 10241, "prediction": "Returns the class for the given name ."}
{"id": 10243, "prediction": "Creates a new instance of the given constructor ."}
{"id": 10245, "prediction": "Calls a method on an object ."}
{"id": 10247, "prediction": "Returns the constructor for the given class ."}
{"id": 10249, "prediction": "Create a Queue Queue"}
{"id": 10251, "prediction": "Returns the type of the given object ."}
{"id": 10253, "prediction": "Returns the current state of this node ."}
{"id": 10255, "prediction": "Add a supported RTZ value ."}
{"id": 10257, "prediction": "Adds a new dimension table ."}
{"id": 10259, "prediction": "Returns a set of free variables for a given query ."}
{"id": 10261, "prediction": "Writes an object to the output file ."}
{"id": 10263, "prediction": "Creates a search node ."}
{"id": 10265, "prediction": "Allocate the arguments for a function ."}
{"id": 10267, "prediction": "Returns the highest classification classification for a given property ."}
{"id": 10269, "prediction": "Selects the best value of the given output property ."}
{"id": 10271, "prediction": "Creates a new variable ."}
{"id": 10273, "prediction": "Returns the element at the specified index ."}
{"id": 10275, "prediction": "Override this method to paint a double image ."}
{"id": 10277, "prediction": "Creates a graphics context ."}
{"id": 10279, "prediction": "Creates a SISurface image ."}
{"id": 10281, "prediction": "Performs a depth search on the given initial state ."}
{"id": 10283, "prediction": "Main entry point ."}
{"id": 10285, "prediction": "Reads a list of tokens ."}
{"id": 10287, "prediction": "Parse a list of functors ."}
{"id": 10289, "prediction": "Read a variable ."}
{"id": 10291, "prediction": "Parses a floating point literal ."}
{"id": 10293, "prediction": "Parses a directive ."}
{"id": 10295, "prediction": "Initializes the built - ops table ."}
{"id": 10297, "prediction": "Peek the next token ."}
{"id": 10299, "prediction": "Rollback the transaction ."}
{"id": 10301, "prediction": "Reserves a call point ."}
{"id": 10303, "prediction": "Returns the number of years in milliseconds ."}
{"id": 10305, "prediction": "Returns the given amount of minutes to the given value ."}
{"id": 10307, "prediction": "Returns the given ticks with the given year to the given year ."}
{"id": 10309, "prediction": "Returns the number of ticks with the given date ."}
{"id": 10311, "prediction": "Returns the month of the year ."}
{"id": 10313, "prediction": "Apply an entry to the cache ."}
{"id": 10315, "prediction": "Caches the given entry into the cache ."}
{"id": 10317, "prediction": "Called when the action is pressed ."}
{"id": 10319, "prediction": "Sets the previous state of the preference ."}
{"id": 10321, "prediction": "Creates a new instance of the WAMM implementation ."}
{"id": 10323, "prediction": "Computes the expected value for the given symbol ."}
{"id": 10325, "prediction": "Sets the ticks ."}
{"id": 10327, "prediction": "Creates a new URL ."}
{"id": 10329, "prediction": "Returns the headers of the request ."}
{"id": 10331, "prediction": "Gets the request parameters ."}
{"id": 10333, "prediction": "Get page scope ."}
{"id": 10335, "prediction": "Get the application scope ."}
{"id": 10337, "prediction": "Render the debug tag ."}
{"id": 10339, "prediction": "Performs a search on the given nodes ."}
{"id": 10341, "prediction": "Walk the given term ."}
{"id": 10343, "prediction": "Updates the internal registry ."}
{"id": 10345, "prediction": "Removes the given clause ."}
{"id": 10347, "prediction": "Returns an array containing the elements of this array ."}
{"id": 10349, "prediction": "Returns the fixity of this operator ."}
{"id": 10351, "prediction": "Compares this object to another ."}
{"id": 10353, "prediction": "Register a work flow controller ."}
{"id": 10355, "prediction": "Create a component factory ."}
{"id": 10357, "prediction": "Returns true if the cell is bound ."}
{"id": 10359, "prediction": "Set the row attribute ."}
{"id": 10361, "prediction": "Gets the row attribute ."}
{"id": 10363, "prediction": "Creates a new instance of the specified type ."}
{"id": 10365, "prediction": "Checks if the given value is a valid instance ."}
{"id": 10367, "prediction": "Updates the registered Registers ."}
{"id": 10369, "prediction": "Find the best path in the current state ."}
{"id": 10371, "prediction": "Cache the given block ."}
{"id": 10373, "prediction": "Sets the rate limit ."}
{"id": 10375, "prediction": "Skip a number of bytes ."}
{"id": 10377, "prediction": "Read an int from a byte array ."}
{"id": 10379, "prediction": "Writes a 64 - bit integer to the given byte array ."}
{"id": 10381, "prediction": "Reads a short from a byte array ."}
{"id": 10383, "prediction": "Returns the tree state for the given operator ."}
{"id": 10385, "prediction": "Returns the id of this object ."}
{"id": 10387, "prediction": "Set the value of this attribute ."}
{"id": 10389, "prediction": "Convert an array of strings to a string ."}
{"id": 10391, "prediction": "Convert a string to a string ."}
{"id": 10393, "prediction": "Helper method to create a list of handlers ."}
{"id": 10395, "prediction": "Sets the code point for a function call ."}
{"id": 10397, "prediction": "Returns the id of this category ."}
{"id": 10399, "prediction": "Gets the last value ."}
{"id": 10401, "prediction": "Deserialize an attribute from an input stream ."}
{"id": 10403, "prediction": "Modify the value of a long"}
{"id": 10405, "prediction": "Handle error errors ."}
{"id": 10407, "prediction": "Classify the decision tree ."}
{"id": 10409, "prediction": "Returns an iterator over the elements ."}
{"id": 10411, "prediction": "Convert an integer value to a log 2 ."}
{"id": 10413, "prediction": "Returns the integer value of the given integer ."}
{"id": 10415, "prediction": "Convert a long value to an integer ."}
{"id": 10417, "prediction": "Returns the number of characters in the given long ."}
{"id": 10419, "prediction": "Sets the head ."}
{"id": 10421, "prediction": "Sets the current screen ."}
{"id": 10423, "prediction": "Get the value of a property ."}
{"id": 10425, "prediction": "Returns an iterator over the elements of the base element ."}
{"id": 10427, "prediction": "Sets the throttle rate ."}
{"id": 10429, "prediction": "Attempts to load the properties file ."}
{"id": 10431, "prediction": "Loads the properties from the classpath ."}
{"id": 10433, "prediction": "Removes a function from the parent ."}
{"id": 10435, "prediction": "Sets the substitution of this term ."}
{"id": 10437, "prediction": "Clean up the connector ."}
{"id": 10439, "prediction": "Start a connector ."}
{"id": 10441, "prediction": "Commits the current transaction ."}
{"id": 10443, "prediction": "Request a write operation to the transaction ."}
{"id": 10445, "prediction": "Acquires a global write lock ."}
{"id": 10447, "prediction": "Enlist the resource with the given session ."}
{"id": 10449, "prediction": "Inserts the specified element into the queue ."}
{"id": 10451, "prediction": "Adds an element to the queue ."}
{"id": 10453, "prediction": "Returns the next object from the stream ."}
{"id": 10455, "prediction": "Returns the value of the property as Integer ."}
{"id": 10457, "prediction": "Call a mixin function ."}
{"id": 10459, "prediction": "Backtrack operator ."}
{"id": 10461, "prediction": "Execute a set of bindings ."}
{"id": 10463, "prediction": "Capture the memento ."}
{"id": 10465, "prediction": "Retrieves the value of a field from the cache ."}
{"id": 10467, "prediction": "Get all field names for a given class ."}
{"id": 10469, "prediction": "Adds an element to the queue ."}
{"id": 10471, "prediction": "Creates a search node ."}
{"id": 10473, "prediction": "Creates a new searchWalker for the given visitor visititor ."}
{"id": 10475, "prediction": "Creates a new TermWalkerWalker for a given position ."}
{"id": 10477, "prediction": "Creates a new termWalkerWalker for a postfix ."}
{"id": 10479, "prediction": "Loads properties from a file ."}
{"id": 10481, "prediction": "Gets properties for a given path ."}
{"id": 10483, "prediction": "Initializes the font metrics ."}
{"id": 10485, "prediction": "Add a property change listener ."}
{"id": 10487, "prediction": "Fires a property change event ."}
{"id": 10489, "prediction": "Performs a fade transition ."}
{"id": 10491, "prediction": "Shows the left bar ."}
{"id": 10493, "prediction": "Sanitize radio controls ."}
{"id": 10495, "prediction": "Wait until the given condition is satisfied ."}
{"id": 10497, "prediction": "Append classpath ."}
{"id": 10499, "prediction": "Prints the introduction information ."}
{"id": 10501, "prediction": "Evaluate the predicate ."}
{"id": 10503, "prediction": "Convert a boolean value to a MultiTypeData object ."}
{"id": 10505, "prediction": "Convert a character type to a string ."}
{"id": 10507, "prediction": "Convert an integer value to a multi type ."}
{"id": 10509, "prediction": "Convert a float value to a MultiTypeData object ."}
{"id": 10511, "prediction": "Create a MultiTypeData object from a string ."}
{"id": 10513, "prediction": "Convert a multi - type data to an object ."}
{"id": 10515, "prediction": "Clears all data from the given key ."}
{"id": 10517, "prediction": "Inserts a character into the buffer ."}
{"id": 10519, "prediction": "Parses the given operators ."}
{"id": 10521, "prediction": "Checks to see if the given operator is valid ."}
{"id": 10523, "prediction": "Renders a string to a given size ."}
{"id": 10525, "prediction": "Returns the options of this command line ."}
{"id": 10527, "prediction": "Adds trailing pairs to the given Properties object ."}
{"id": 10529, "prediction": "Adds an option to the map ."}
{"id": 10531, "prediction": "Checks that the argument is valid ."}
{"id": 10533, "prediction": "Returns an enumeration of the options ."}
{"id": 10535, "prediction": "Set the selected stemmer ."}
{"id": 10537, "prediction": "Returns the stem of the given word ."}
{"id": 10539, "prediction": "Creates a new float type ."}
{"id": 10541, "prediction": "Trace the environment variable ."}
{"id": 10543, "prediction": "Call the internal function ."}
{"id": 10545, "prediction": "returns backstack"}
{"id": 10547, "prediction": "Indirects the trie ."}
{"id": 10549, "prediction": "Convenience method for unbinds ."}
{"id": 10551, "prediction": "Prints the address of a slot ."}
{"id": 10553, "prediction": "Checks whether the given state is solver ."}
{"id": 10555, "prediction": "Returns an iterator of all validators that are valid ."}
{"id": 10557, "prediction": "Swaps the tile at the given location ."}
{"id": 10559, "prediction": "Convert a string to a character list ."}
{"id": 10561, "prediction": "Converts a log record to a log message ."}
{"id": 10563, "prediction": "Enqueue an element ."}
{"id": 10565, "prediction": "Increment the size of the record ."}
{"id": 10567, "prediction": "Signals that the given size is less than threshold ."}
{"id": 10569, "prediction": "List bindings ."}
{"id": 10571, "prediction": "Removes an object from the environment ."}
{"id": 10573, "prediction": "Matches a literal ."}
{"id": 10575, "prediction": "Push a variable reference ."}
{"id": 10577, "prediction": "Update the maximum column width for the given column"}
{"id": 10579, "prediction": "Create a new node for the given successor ."}
{"id": 10581, "prediction": "Substitute the built in the builtInInInInTransform ."}
{"id": 10583, "prediction": "Generate top level check ."}
{"id": 10585, "prediction": "Evaluates two numbers ."}
{"id": 10587, "prediction": "Called by the server ."}
{"id": 10589, "prediction": "Inserts a new element into the list ."}
{"id": 10591, "prediction": "Update the minimum node ."}
{"id": 10593, "prediction": "Inserts a new node into the tree ."}
{"id": 10595, "prediction": "Returns a set of objects matching the specified method ."}
{"id": 10597, "prediction": "Find all solutions in the given collection ."}
{"id": 10599, "prediction": "Restores the values of the given object with the given value ."}
{"id": 10601, "prediction": "Associates the specified type with the specified property ."}
{"id": 10603, "prediction": "Capture the MBean ."}
{"id": 10605, "prediction": "Convert modifiers to string ."}
{"id": 10607, "prediction": "Convert a string to a date ."}
{"id": 10609, "prediction": "Checks if the given string is a time ."}
{"id": 10611, "prediction": "Creates a token source for the given string ."}
{"id": 10613, "prediction": "Gets the token source for the given input stream ."}
{"id": 10615, "prediction": "Returns true if the given instruction is a variable instruction ."}
{"id": 10617, "prediction": "Returns an iterator over the children ."}
{"id": 10619, "prediction": "Returns the children of this operator ."}
{"id": 10621, "prediction": "Retrieve the summary ."}
{"id": 10623, "prediction": "Execute query ."}
{"id": 10625, "prediction": "Sets the basic type of the given class ."}
{"id": 10627, "prediction": "Print a variable binding ."}
{"id": 10629, "prediction": "Runs the stream ."}
{"id": 10631, "prediction": "Returns the current time ."}
{"id": 10633, "prediction": "Update the track info ."}
{"id": 10635, "prediction": "Render the music output ."}
{"id": 10637, "prediction": "Handles the event request ."}
{"id": 10639, "prediction": "Initializes the parser ."}
{"id": 10641, "prediction": "Shuts down the connection ."}
{"id": 10643, "prediction": "Parses the given stream ."}
{"id": 10645, "prediction": "Set the option ."}
{"id": 10647, "prediction": "Initialize the content ."}
{"id": 10649, "prediction": "Sets a property ."}
{"id": 10651, "prediction": "Process request ."}
{"id": 10653, "prediction": "Initializes the writer ."}
{"id": 10655, "prediction": "Returns the next packet ."}
{"id": 10657, "prediction": "Returns a list of all informations ."}
{"id": 10659, "prediction": "Adds a listener to the event cycle ."}
{"id": 10661, "prediction": "Compare two files ."}
{"id": 10663, "prediction": "Returns true if the entry is valid ."}
{"id": 10665, "prediction": "Compares two objects ."}
{"id": 10667, "prediction": "Resize the capacity ."}
{"id": 10669, "prediction": "Removes an entry from the map ."}
{"id": 10671, "prediction": "Remove an entry from the map ."}
{"id": 10673, "prediction": "Creates a delegate for the given set of keys ."}
{"id": 10675, "prediction": "Encodes a byte array ."}
{"id": 10677, "prediction": "Encodes a byte array into a base64 string ."}
{"id": 10679, "prediction": "Sets the controller controller to use ."}
{"id": 10681, "prediction": "Sets the controller change listener for playback ."}
{"id": 10683, "prediction": "Broadcast the available list of available playlists ."}
{"id": 10685, "prediction": "Handle volume ."}
{"id": 10687, "prediction": "Handle a select event ."}
{"id": 10689, "prediction": "Returns the cache for the specified name ."}
{"id": 10691, "prediction": "Returns a copy of the given map with the given properties ."}
{"id": 10693, "prediction": "Adapts a Session to a Session ."}
{"id": 10695, "prediction": "Deletes the given path ."}
{"id": 10697, "prediction": "Sets the ping interval ."}
{"id": 10699, "prediction": "Adds the given options ."}
{"id": 10701, "prediction": "Parse command line arguments ."}
{"id": 10703, "prediction": "Parse command line arguments ."}
{"id": 10705, "prediction": "Called when a connection is received ."}
{"id": 10707, "prediction": "Request stream compression ."}
{"id": 10709, "prediction": "Notify that the connection has been closed ."}
{"id": 10711, "prediction": "Register a SASL mechanism ."}
{"id": 10713, "prediction": "Get the output plugin behaviour ."}
{"id": 10715, "prediction": "Logs an error message ."}
{"id": 10717, "prediction": "Creates a start event ."}
{"id": 10719, "prediction": "Notify listeners ."}
{"id": 10721, "prediction": "Checks if the given source contains resources ."}
{"id": 10723, "prediction": "Provides a list of resource models for the given resource IDs ."}
{"id": 10725, "prediction": "Get cache key ."}
{"id": 10727, "prediction": "Put a cached item into cache ."}
{"id": 10729, "prediction": "Includes the given file ."}
{"id": 10731, "prediction": "Adds a SASL mechanism ."}
{"id": 10733, "prediction": "Creates the debug object ."}
{"id": 10735, "prediction": "Register standard events ."}
{"id": 10737, "prediction": "Registers an event ID ."}
{"id": 10739, "prediction": "Unregisters an event ."}
{"id": 10741, "prediction": "Creates a new DSE session ."}
{"id": 10743, "prediction": "Start playing music ."}
{"id": 10745, "prediction": "Adds a player to the playlist ."}
{"id": 10747, "prediction": "Creates a broadcast answer ."}
{"id": 10749, "prediction": "Add a query parameter ."}
{"id": 10751, "prediction": "Add a query parameter ."}
{"id": 9216, "prediction": "Create an attachment ."}
{"id": 9218, "prediction": "Delete an attachment ."}
{"id": 9220, "prediction": "Parses a jar file ."}
{"id": 9222, "prediction": "Validate that the element is valid ."}
{"id": 9224, "prediction": "Verify that a simple type is valid ."}
{"id": 9226, "prediction": "Validate that the element is valid ."}
{"id": 9228, "prediction": "Converts the value to a new instance ."}
{"id": 9230, "prediction": "Creates a CLI instance using the given options ."}
{"id": 9232, "prediction": "Parse command line arguments ."}
{"id": 9234, "prediction": "Remove a footer view"}
{"id": 9236, "prediction": "Generate a gradient from a vector ."}
{"id": 9238, "prediction": "Calculates the value of noise noise ."}
{"id": 9240, "prediction": "Calculate the curve for a curve ."}
{"id": 9242, "prediction": "Runs the plugin ."}
{"id": 9244, "prediction": "Gets account id ."}
{"id": 9246, "prediction": "Get event serializer"}
{"id": 9248, "prediction": "Creates a directory ."}
{"id": 9250, "prediction": "Creates a new implementation ."}
{"id": 9252, "prediction": "Sets a property ."}
{"id": 9254, "prediction": "Returns the next state of the action ."}
{"id": 9256, "prediction": "Gets the value of the given type ."}
{"id": 9258, "prediction": "Gets the type variable ."}
{"id": 9260, "prediction": "Print the stack trace ."}
{"id": 9262, "prediction": "Run the task ."}
{"id": 9264, "prediction": "Called when a task has been accepted ."}
{"id": 9266, "prediction": "Indicates whether the task is started ."}
{"id": 9268, "prediction": "Stops the task ."}
{"id": 9270, "prediction": "Add a job to the queue ."}
{"id": 9272, "prediction": "Resolves the serialized mode ."}
{"id": 9274, "prediction": "Adds a reader to the catalog ."}
{"id": 9276, "prediction": "Creates a new catalog ."}
{"id": 9278, "prediction": "Parses the catalog from the given URL ."}
{"id": 9280, "prediction": "Parse the catalog file ."}
{"id": 9282, "prediction": "Parses all the catalog entries from the catalog ."}
{"id": 9284, "prediction": "Resolves the catalog entry ."}
{"id": 9286, "prediction": "Resolves the local URI for the given URI ."}
{"id": 9288, "prediction": "Returns the absolute path for the given system identifier ."}
{"id": 9290, "prediction": "Converts a byte to a string ."}
{"id": 9292, "prediction": "Create a SoftValueRef ."}
{"id": 9294, "prediction": "Add a throwable ."}
{"id": 9296, "prediction": "Compares two Timer tasks ."}
{"id": 9298, "prediction": "Returns the object at the given index ."}
{"id": 9300, "prediction": "Removes all objects from the queue ."}
{"id": 9302, "prediction": "Returns the entry type for the given name ."}
{"id": 9304, "prediction": "Returns the argument as a String argument ."}
{"id": 9306, "prediction": "Swap two elements ."}
{"id": 9308, "prediction": "Clean up the timeout ."}
{"id": 9310, "prediction": "Preload the protocol ."}
{"id": 9312, "prediction": "Updates the handler s package packages ."}
{"id": 9314, "prediction": "Creates a set implementation ."}
{"id": 9316, "prediction": "Creates a new counter ."}
{"id": 9318, "prediction": "Checks that the given result has been received ."}
{"id": 9320, "prediction": "Gets the object associated with the given object ."}
{"id": 9322, "prediction": "Splits a string into an array of strings ."}
{"id": 9324, "prediction": "Appends the given object to the given object ."}
{"id": 9326, "prediction": "Creates the entry ."}
{"id": 9328, "prediction": "Returns the value associated with the given key ."}
{"id": 9330, "prediction": "Flushes all registered timers ."}
{"id": 9332, "prediction": "Sets the resolution of the timer ."}
{"id": 9334, "prediction": "Gets all children of a given element ."}
{"id": 9336, "prediction": "Gets the first child of an element with the given name ."}
{"id": 9338, "prediction": "Get the string content of the given element ."}
{"id": 9340, "prediction": "Set the maximum number of threads ."}
{"id": 9342, "prediction": "Sets the blocking mode ."}
{"id": 9344, "prediction": "Resolves the catalog of the catalog ."}
{"id": 9346, "prediction": "Resolves an external system ID ."}
{"id": 9348, "prediction": "Query a catalog resolver"}
{"id": 9350, "prediction": "Resolves the reverse of the system with the given system ID ."}
{"id": 9352, "prediction": "Returns all the resolutions of the given catalog ."}
{"id": 9354, "prediction": "Resolve all sub - catalogs ."}
{"id": 9356, "prediction": "Reads the catalog ."}
{"id": 9358, "prediction": "Gets the output stream ."}
{"id": 9360, "prediction": "Deletes a leaf node from a leaf ."}
{"id": 9362, "prediction": "Creates a snapshot entry ."}
{"id": 9364, "prediction": "Creates a logger ."}
{"id": 9366, "prediction": "Gets the class name ."}
{"id": 9368, "prediction": "Returns a list of all the names of the system properties ."}
{"id": 9370, "prediction": "Returns a compatible constructor for the given argument type ."}
{"id": 9372, "prediction": "Delegates to object ."}
{"id": 9374, "prediction": "Update JNDI cache ."}
{"id": 9376, "prediction": "Returns the set of entries ."}
{"id": 9378, "prediction": "Fires a property added event ."}
{"id": 9380, "prediction": "Fires a property change event ."}
{"id": 9382, "prediction": "Make a property name ."}
{"id": 9384, "prediction": "Loads a property from the given class name ."}
{"id": 9386, "prediction": "Returns true if the entity has been resolved ."}
{"id": 9388, "prediction": "Resolves the given system ID ."}
{"id": 9390, "prediction": "Sets the value as a String ."}
{"id": 9392, "prediction": "Encodes the given public ID ."}
{"id": 9394, "prediction": "Replaces all occurrences of the given Strings ."}
{"id": 9396, "prediction": "Stop the lap ."}
{"id": 9398, "prediction": "Compares two objects ."}
{"id": 9400, "prediction": "Generate hash code for an array ."}
{"id": 9402, "prediction": "Sets the value of the field ."}
{"id": 9404, "prediction": "Initializes the system properties ."}
{"id": 9406, "prediction": "Sets the root vertex ."}
{"id": 9408, "prediction": "Perform a depth search on the given vertex ."}
{"id": 9410, "prediction": "Finds a vertex with the given data ."}
{"id": 9412, "prediction": "Normalize a string ."}
{"id": 9414, "prediction": "Parse the given XML stream ."}
{"id": 9416, "prediction": "Creates an element from the local part ."}
{"id": 9418, "prediction": "Copy attributes from srcElement to destination"}
{"id": 9420, "prediction": "Get all child elements of a given node ."}
{"id": 9422, "prediction": "Gets all child elements of a given node ."}
{"id": 9424, "prediction": "Adds a resource to the resource holder ."}
{"id": 9426, "prediction": "Reads a catalog from a file ."}
{"id": 9428, "prediction": "Resolves the entity to the entity ."}
{"id": 9430, "prediction": "Prints the information about the given class ."}
{"id": 9432, "prediction": "Strips the package name ."}
{"id": 9434, "prediction": "Try to load a class ."}
{"id": 9436, "prediction": "Gets all interfaces of the given class ."}
{"id": 9438, "prediction": "Checks if the given class is a primitive wrapper wrapper ."}
{"id": 9440, "prediction": "Returns the getter for the given class ."}
{"id": 9442, "prediction": "Convert a class name to a Java class ."}
{"id": 9444, "prediction": "Returns a list of filenames for the given property name ."}
{"id": 9446, "prediction": "Returns an iterator over the set ."}
{"id": 9448, "prediction": "Returns the set of entries in this map ."}
{"id": 9450, "prediction": "Remove a bound property listener ."}
{"id": 9452, "prediction": "Finds a property editor by name ."}
{"id": 9454, "prediction": "Converts a text value to a value ."}
{"id": 9456, "prediction": "Returns the ApplicationDeadDeadlockException if the Throwable is null ."}
{"id": 9458, "prediction": "Performs the work on the queue ."}
{"id": 9460, "prediction": "Lookup an object by name ."}
{"id": 9462, "prediction": "Appends a class to the buffer ."}
{"id": 9464, "prediction": "Reads the properties file ."}
{"id": 9466, "prediction": "Query whether or not the relative path is relative to the resources ."}
{"id": 9468, "prediction": "Gets the catalog files ."}
{"id": 9470, "prediction": "Query whether or not the static catalog is used ."}
{"id": 10753, "prediction": "Get a playlist from an event model ."}
{"id": 10755, "prediction": "Check if the node is started ."}
{"id": 10757, "prediction": "Called when the browser is clicked ."}
{"id": 10759, "prediction": "Main entry point ."}
{"id": 10761, "prediction": "Exports this object to a map ."}
{"id": 10763, "prediction": "Get a value for a key"}
{"id": 10765, "prediction": "Get a double value ."}
{"id": 10767, "prediction": "Create a command resource ."}
{"id": 10769, "prediction": "Verifies that the capabilities are supported ."}
{"id": 10771, "prediction": "Executes a batch of statements ."}
{"id": 10773, "prediction": "Returns all subclasses of a given class ."}
{"id": 10775, "prediction": "Searches for a class ."}
{"id": 10777, "prediction": "Converts this resource to a list ."}
{"id": 10779, "prediction": "Process a packet ."}
{"id": 10781, "prediction": "Creates an error response ."}
{"id": 10783, "prediction": "Checks if an event is target ."}
{"id": 10785, "prediction": "Decorate a set ."}
{"id": 10787, "prediction": "Updates the state ."}
{"id": 10789, "prediction": "Append a RSMlement element ."}
{"id": 10791, "prediction": "Filters a list of RSM responses ."}
{"id": 10793, "prediction": "Reload the roster ."}
{"id": 10795, "prediction": "Get all the entries of this roster ."}
{"id": 10797, "prediction": "Sets the offline presence of offline users ."}
{"id": 10799, "prediction": "Set digest ."}
{"id": 10801, "prediction": "Creates a player request ."}
{"id": 10803, "prediction": "Register update listener ."}
{"id": 10805, "prediction": "Reloads the properties file ."}
{"id": 10807, "prediction": "Parse the mechanism ."}
{"id": 10809, "prediction": "Parses a packet extension ."}
{"id": 10811, "prediction": "Verifies if the player is valid ."}
{"id": 10813, "prediction": "Returns the secret key for the given subdomain ."}
{"id": 10815, "prediction": "Puts a value into the cache ."}
{"id": 10817, "prediction": "Returns a collection of values ."}
{"id": 10819, "prediction": "Returns the entry for the given key ."}
{"id": 10821, "prediction": "Creates a new entry with the given key and value ."}
{"id": 10823, "prediction": "Sets whether the event is present ."}
{"id": 10825, "prediction": "Send a message to the collector ."}
{"id": 10827, "prediction": "Initializes the output directory ."}
{"id": 10829, "prediction": "Write a file ."}
{"id": 10831, "prediction": "Decorate a collection ."}
{"id": 10833, "prediction": "Gets the configuration ."}
{"id": 10835, "prediction": "Create a stop music music ."}
{"id": 10837, "prediction": "Gets a DSE cluster ."}
{"id": 10839, "prediction": "Add a packet listener ."}
{"id": 10841, "prediction": "Notifies all registered listeners of a packet ."}
{"id": 10843, "prediction": "Notifies all registered listeners ."}
{"id": 10845, "prediction": "Called when a connection is lost ."}
{"id": 10847, "prediction": "Returns true if the node is valid ."}
{"id": 10849, "prediction": "Gets the value at the specified index ."}
{"id": 10851, "prediction": "Lookup a node by its index ."}
{"id": 10853, "prediction": "Get the node at the given index ."}
{"id": 10855, "prediction": "Returns the next greater than the given node ."}
{"id": 10857, "prediction": "Returns the lowest node for the given index ."}
{"id": 10859, "prediction": "Returns true if the node is red ."}
{"id": 10861, "prediction": "Gets the grand parent of the given node ."}
{"id": 10863, "prediction": "Returns the right child of the given node ."}
{"id": 10865, "prediction": "Rotate the right node at the given index ."}
{"id": 10867, "prediction": "Reduces a node in the tree ."}
{"id": 10869, "prediction": "Checks that the given object is not null ."}
{"id": 10871, "prediction": "Returns true if the key is present ."}
{"id": 10873, "prediction": "Returns the value associated with the given key ."}
{"id": 10875, "prediction": "Clears the tree ."}
{"id": 10877, "prediction": "Returns a collection of values contained in this map ."}
{"id": 10879, "prediction": "Copies all entries from the given map ."}
{"id": 10881, "prediction": "Removes the cache ."}
{"id": 10883, "prediction": "Gets a player request ."}
{"id": 10885, "prediction": "Open the roster store ."}
{"id": 10887, "prediction": "Converts a subnet address to a subnet address ."}
{"id": 10889, "prediction": "Import a track info from a hash map ."}
{"id": 10891, "prediction": "Execute an application ."}
{"id": 10893, "prediction": "Prints usage ."}
{"id": 10895, "prediction": "Creates a mute event ."}
{"id": 10897, "prediction": "Get Schema by name"}
{"id": 10899, "prediction": "Checks if the jar is in the jar ."}
{"id": 10901, "prediction": "Gets the schemas ."}
{"id": 10903, "prediction": "Gets the package name ."}
{"id": 10905, "prediction": "Create an event listener ."}
{"id": 10907, "prediction": "Iterate over a collection of Filterable objects ."}
{"id": 10909, "prediction": "Get track info from an event model ."}
{"id": 10911, "prediction": "Imports a progress from a resource model ."}
{"id": 10913, "prediction": "Get an image from the URL"}
{"id": 10915, "prediction": "Reverses the target map ."}
{"id": 10917, "prediction": "Start the daemon ."}
{"id": 10919, "prediction": "Creates a stopped event ."}
{"id": 10921, "prediction": "Updates a new track ."}
{"id": 10923, "prediction": "Verify capabilities ."}
{"id": 10925, "prediction": "Escape a string ."}
{"id": 10927, "prediction": "Serializes this object to JSON ."}
{"id": 10929, "prediction": "Handle event handler ."}
{"id": 10931, "prediction": "Sets a property ."}
{"id": 10933, "prediction": "Adds a principal ."}
{"id": 10935, "prediction": "Close the root window ."}
{"id": 10937, "prediction": "Fires event ."}
{"id": 10939, "prediction": "Sets the name of the roster ."}
{"id": 10941, "prediction": "Checks if the given value contains the given value ."}
{"id": 10943, "prediction": "Clears the cache ."}
{"id": 10945, "prediction": "Checks if two keys are equal ."}
{"id": 10947, "prediction": "Ensures that the capacity of the given capacity has been changed ."}
{"id": 10949, "prediction": "Creates an iterator over the entries ."}
{"id": 10951, "prediction": "Register the Module ."}
{"id": 10953, "prediction": "Notifies the connection failed ."}
{"id": 9472, "prediction": "Resolves the given href ."}
{"id": 9474, "prediction": "Resolve a class ."}
{"id": 9476, "prediction": "Gets local name ."}
{"id": 9478, "prediction": "Returns the namespace URI of the given element ."}
{"id": 9480, "prediction": "Returns an InputStream for the given filename ."}
{"id": 9482, "prediction": "Reads properties from the properties file ."}
{"id": 9484, "prediction": "Adds an outgoing edge to this vertex ."}
{"id": 9486, "prediction": "Returns true if this edge contains the given edge ."}
{"id": 9488, "prediction": "Finds the edge from the destination ."}
{"id": 9490, "prediction": "Returns the cost of this vertex ."}
{"id": 9492, "prediction": "Returns true if there are more elements in the queue ."}
{"id": 9494, "prediction": "Installs the JVM type provider ."}
{"id": 9496, "prediction": "Dispatch action ."}
{"id": 9498, "prediction": "Creates the file path for the given view type ."}
{"id": 9500, "prediction": "Creates a stream to a collection of resources ."}
{"id": 9502, "prediction": "Convenience method to convert a collection to a stream ."}
{"id": 9504, "prediction": "Checks if the instruction is generated ."}
{"id": 9506, "prediction": "Main entry point ."}
{"id": 9508, "prediction": "Extracts the arguments from the map ."}
{"id": 9510, "prediction": "Check connection parameters ."}
{"id": 9512, "prediction": "Returns an array of the given type ."}
{"id": 9514, "prediction": "Creates a collection of objects ."}
{"id": 9516, "prediction": "Static factory method for creating a left operator ."}
{"id": 9518, "prediction": "Validates the given type ."}
{"id": 9520, "prediction": "Creates a new Try with the given type ."}
{"id": 9522, "prediction": "Run the given SQL in the database ."}
{"id": 9524, "prediction": "Returns the boolean array as a boolean ."}
{"id": 9526, "prediction": "On upgrade ."}
{"id": 9528, "prediction": "Restores the contents of this database ."}
{"id": 9530, "prediction": "Dump the contents of a database ."}
{"id": 9532, "prediction": "Returns a list of values from a CSV row ."}
{"id": 9534, "prediction": "Convert a Map to a String"}
{"id": 9536, "prediction": "Join a list of strings ."}
{"id": 9538, "prediction": "Writes the table to the output writer ."}
{"id": 9540, "prediction": "Gets the base DAO model class ."}
{"id": 9542, "prediction": "Imports a database from a CSV file ."}
{"id": 9544, "prediction": "Restores all tables from a CSV file ."}
{"id": 9546, "prediction": "Creates a query using the specified parameters ."}
{"id": 9548, "prediction": "Render the query ."}
{"id": 9550, "prediction": "Saves an object into the database ."}
{"id": 9552, "prediction": "Add a NOT IN clause ."}
{"id": 9554, "prediction": "Returns the next active stack ."}
{"id": 9556, "prediction": "Adds a binding to the cache ."}
{"id": 9558, "prediction": "Select the plan at the given index ."}
{"id": 9560, "prediction": "Gets the belief at the given index ."}
{"id": 9562, "prediction": "Gets the children of this node ."}
{"id": 9564, "prediction": "Creates a new logger ."}
{"id": 9566, "prediction": "Sets the goals ."}
{"id": 9568, "prediction": "Initialize the pool selection ."}
{"id": 9570, "prediction": "Start thread pool selection ."}
{"id": 9572, "prediction": "Register an extension ."}
{"id": 9574, "prediction": "Loads an agent from the specified class ."}
{"id": 9576, "prediction": "Loads all agents in the given catalog ."}
{"id": 9578, "prediction": "Loads the specified extension ."}
{"id": 9580, "prediction": "Returns the usage of the application ."}
{"id": 9582, "prediction": "Parses a command line argument ."}
{"id": 9584, "prediction": "Returns the object at the given index ."}
{"id": 9586, "prediction": "Adds an object to the queue ."}
{"id": 9588, "prediction": "Adds an object to the queue ."}
{"id": 9590, "prediction": "Get the type of object ."}
{"id": 9592, "prediction": "Main entry point ."}
{"id": 9594, "prediction": "Post goal ."}
{"id": 9596, "prediction": "Sends a goal to the agent ."}
{"id": 9598, "prediction": "Creates a new belief set ."}
{"id": 9600, "prediction": "Evaluate a query ."}
{"id": 9602, "prediction": "Gets the field with the given name ."}
{"id": 9604, "prediction": "Builds a random name ."}
{"id": 9606, "prediction": "Validates the execution stack ."}
{"id": 9608, "prediction": "Executes the given goal ."}
{"id": 9610, "prediction": "Set the idle agent ."}
{"id": 9612, "prediction": "Initialize the global state ."}
{"id": 9614, "prediction": "Finishes all the agents ."}
{"id": 9616, "prediction": "Returns the pool id for the given agent id ."}
{"id": 9618, "prediction": "Sets the expression ."}
{"id": 9620, "prediction": "Creates a join recursively ."}
{"id": 9622, "prediction": "Checks if the response is reached ."}
{"id": 9624, "prediction": "Handle a request ."}
{"id": 9626, "prediction": "Gets a parameter by name ."}
{"id": 9628, "prediction": "Configure the transaction manager ."}
{"id": 9630, "prediction": "Writes the given artifact ."}
{"id": 9632, "prediction": "Returns the constructor for the given implementation class ."}
{"id": 9634, "prediction": "Gets the interface method ."}
{"id": 9636, "prediction": "Gets the dependency value for the given type ."}
{"id": 9638, "prediction": "Set a default link ."}
{"id": 9640, "prediction": "Handles the links ."}
{"id": 9642, "prediction": "Handle body links ."}
{"id": 9644, "prediction": "Get or create a new map if it does not exist ."}
{"id": 9646, "prediction": "Checks if the method is allowed ."}
{"id": 9648, "prediction": "Register an instance of the given instance type ."}
{"id": 9650, "prediction": "Register a class processor ."}
{"id": 9652, "prediction": "Adds an argument ."}
{"id": 9654, "prediction": "Convert this object to XML representation ."}
{"id": 9656, "prediction": "Checks if the given template has a reference to the given template ."}
{"id": 9658, "prediction": "Create a template model from a file ."}
{"id": 9660, "prediction": "Gets an observable from the given index ."}
{"id": 9662, "prediction": "Sets the value of an instance ."}
{"id": 9664, "prediction": "Removes the capture appender from the given name ."}
{"id": 9666, "prediction": "Read arguments from a multipart request ."}
{"id": 9668, "prediction": "Resolve proxy proxies ."}
{"id": 9670, "prediction": "Parse a directory ."}
{"id": 9672, "prediction": "Find all the ejects of the given resource set ."}
{"id": 9674, "prediction": "Sets the file extensions ."}
{"id": 9676, "prediction": "Reads the next record ."}
{"id": 9678, "prediction": "Set a boolean value to the specified parameter ."}
{"id": 9680, "prediction": "Converts a string to an instance of the given type ."}
{"id": 9682, "prediction": "Gets the model directory ."}
{"id": 9684, "prediction": "Writes the document to the output stream ."}
{"id": 9686, "prediction": "Configures the web window ."}
{"id": 9688, "prediction": "Writes an input stream to the output stream ."}
{"id": 9690, "prediction": "Attaches the given request to this servlet ."}
{"id": 9692, "prediction": "Gets the cookies ."}
{"id": 9694, "prediction": "Get the list of invocation parameters ."}
{"id": 9696, "prediction": "Set the remote host ."}
{"id": 9698, "prediction": "Removes a prefix from a path ."}
{"id": 9700, "prediction": "Convert relative path to relative path ."}
{"id": 9702, "prediction": "Get the depth of a file ."}
{"id": 9704, "prediction": "Sends a JSON object to the response ."}
{"id": 9706, "prediction": "Add parameter templates ."}
{"id": 9708, "prediction": "Finds all references to the given template ."}
{"id": 9710, "prediction": "Show the dialog ."}
{"id": 9712, "prediction": "Creates a new instance of a managed class ."}
{"id": 9714, "prediction": "Returns a summary of the results ."}
{"id": 9716, "prediction": "Get the sub summary for a file ."}
{"id": 9718, "prediction": "Gets the setup class ."}
{"id": 9720, "prediction": "Replies the model resources ."}
{"id": 9722, "prediction": "Loads the configuration from the given input stream ."}
{"id": 9724, "prediction": "Checks if the given formal parameters are object ."}
{"id": 9726, "prediction": "Reads an object from an input stream ."}
{"id": 9728, "prediction": "Gets the value of the hints property ."}
{"id": 9730, "prediction": "Checks if the request is an Android request ."}
{"id": 9732, "prediction": "Gets all properties of a given type ."}
{"id": 9734, "prediction": "Logs a message ."}
{"id": 9736, "prediction": "Checks to see if the current server has been parsed ."}
{"id": 9738, "prediction": "Gets the managed method ."}
{"id": 9740, "prediction": "Process the cell ."}
{"id": 9742, "prediction": "Returns true if the wrapper is a wrapper wrapper for this class ."}
{"id": 9744, "prediction": "Get cookie value by name ."}
{"id": 9746, "prediction": "Removes a cookie ."}
{"id": 9748, "prediction": "Gets the target file producer ."}
{"id": 9750, "prediction": "Compiles the class ."}
{"id": 9752, "prediction": "Returns the value of the extension ."}
{"id": 9754, "prediction": "Perform login ."}
{"id": 9756, "prediction": "Invokes a method on a managed proxy ."}
{"id": 9758, "prediction": "Executes an immutable transaction ."}
{"id": 9760, "prediction": "Gets the last file ."}
{"id": 9762, "prediction": "Checks if the path component starts with the given path component ."}
{"id": 9764, "prediction": "Gets the session associated with this instance ."}
{"id": 9766, "prediction": "Reads the metadata ."}
{"id": 9768, "prediction": "Closes the statement ."}
{"id": 9770, "prediction": "Handle allowed methods ."}
{"id": 9772, "prediction": "Deletes the server ."}
{"id": 9774, "prediction": "Gets the arguments ."}
{"id": 9776, "prediction": "Schedules a timeout ."}
{"id": 9778, "prediction": "Returns the next file ."}
{"id": 9780, "prediction": "Print banner banner ."}
{"id": 9782, "prediction": "Creates a new instance for the given command ."}
{"id": 9784, "prediction": "Triggers the trigger ."}
{"id": 9786, "prediction": "Inserts a fit row ."}
{"id": 9788, "prediction": "setter for score - sets"}
{"id": 9790, "prediction": "setter for variants - sets"}
{"id": 9792, "prediction": "setter for questionType - sets"}
{"id": 9794, "prediction": "getter for depLabel - gets"}
{"id": 9796, "prediction": "getter for semanticType - gets"}
{"id": 9798, "prediction": "getter for sections - gets"}
{"id": 9800, "prediction": "indexed getter for sections - gets an indexed value -"}
{"id": 9802, "prediction": "getter for uri - gets"}
{"id": 9804, "prediction": "getter for types - gets"}
{"id": 9806, "prediction": "getter for targetType - gets"}
{"id": 9808, "prediction": "getter for rank - gets"}
{"id": 9810, "prediction": "getter for queryString - gets"}
{"id": 9812, "prediction": "getter for candidateAnswers - gets"}
{"id": 9814, "prediction": "indexed getter for candidateAnswers - gets an indexed value -"}
{"id": 9816, "prediction": "getter for query - gets"}
{"id": 9818, "prediction": "getter for hitList - gets"}
{"id": 9820, "prediction": "indexed getter for hitList - gets an indexed value -"}
{"id": 9822, "prediction": "getter for abstractQuery - gets"}
{"id": 9824, "prediction": "getter for searchId - gets"}
{"id": 9826, "prediction": "setter for docId - sets"}
{"id": 9828, "prediction": "setter for offsetInInSection - sets"}
{"id": 9830, "prediction": "setter for offsetInInSection - sets"}
{"id": 9832, "prediction": "setter for beginSection - sets"}
{"id": 9834, "prediction": "setter for endSection - sets"}
{"id": 9836, "prediction": "setter for aspect - sets"}
{"id": 9838, "prediction": "setter for triple - sets"}
{"id": 9840, "prediction": "setter for sourceRelation - sets"}
{"id": 9842, "prediction": "setter for subject - sets"}
{"id": 9844, "prediction": "setter for predicate - sets"}
{"id": 9846, "prediction": "setter for object uri - sets"}
{"id": 9848, "prediction": "setter for operator - sets"}
{"id": 9850, "prediction": "setter for operatorArgs - sets"}
{"id": 9852, "prediction": "getter for score - gets"}
{"id": 9854, "prediction": "setter for text - sets"}
{"id": 9856, "prediction": "setter for id - sets"}
{"id": 9858, "prediction": "getter for abbreviation - gets"}
{"id": 9860, "prediction": "setter for concept - sets"}
{"id": 9862, "prediction": "setter for variants - sets"}
{"id": 9864, "prediction": "setter for namedEntityTypes - sets"}
{"id": 9866, "prediction": "setter for conceptType - sets"}
{"id": 9868, "prediction": "setter for occurrences - sets"}
{"id": 9870, "prediction": "setter for concepts - sets"}
{"id": 9872, "prediction": "setter for originalText - sets"}
{"id": 9874, "prediction": "setter for arguments - sets"}
{"id": 9876, "prediction": "setter for label - sets"}
{"id": 9878, "prediction": "Sets the bit at the specified index ."}
{"id": 9880, "prediction": "Creates a new instance of the cache ."}
{"id": 9882, "prediction": "method to convert the HELM2M2 to a HELM2M2"}
{"id": 9884, "prediction": "method to add rgroup details"}
{"id": 9886, "prediction": "Add an element to the group"}
{"id": 9888, "prediction": "Checks if the given polymer id is valid ."}
{"id": 9890, "prediction": "Check connection details ."}
{"id": 9892, "prediction": "Checks if a string is repeating ."}
{"id": 9894, "prediction": "Convert notation container"}
{"id": 9896, "prediction": "Get the current grouping ."}
{"id": 9898, "prediction": "method to convert the HELM2 to HELM2"}
{"id": 9900, "prediction": "Convert a list of groups to a human - readable string ."}
{"id": 9902, "prediction": "Gets the list of polymer ids"}
{"id": 9904, "prediction": "Sets the polymer elements ."}
{"id": 9906, "prediction": "Sets the annotation ."}
{"id": 9908, "prediction": "Determine the MonomerNotation of a given string"}
{"id": 9910, "prediction": "Determine the HELM entity ."}
{"id": 9912, "prediction": "Parses the HELM 2 - 2 HELM 2 ."}
{"id": 9914, "prediction": "Define the implication of the given string"}
{"id": 9916, "prediction": "Creates an ADI graph from a collection of edges ."}
{"id": 9918, "prediction": "Initializes internal paths ."}
{"id": 9920, "prediction": "Subscribe a pattern ."}
{"id": 9922, "prediction": "Unsubscribe a callback"}
{"id": 9924, "prediction": "Send a reply to the response ."}
{"id": 9926, "prediction": "Sends the shutdown ."}
{"id": 9928, "prediction": "Updates the run state ."}
{"id": 9930, "prediction": "Try to create a worker ."}
{"id": 9932, "prediction": "Deletes a worker ."}
{"id": 9934, "prediction": "Runs a worker ."}
{"id": 9936, "prediction": "Gets the number of queued tasks ."}
{"id": 9938, "prediction": "Determine the help completion of a task ."}
{"id": 9940, "prediction": "Creates a new ForkJoinPool ."}
{"id": 9942, "prediction": "Build a string ."}
{"id": 9944, "prediction": "Create a new empty list ."}
{"id": 9946, "prediction": "Iterates over all elements of the given predicate ."}
{"id": 9948, "prediction": "Folds the first element of the given list and returns the result ."}
{"id": 9950, "prediction": "Creates a new option with the specified null value ."}
{"id": 9952, "prediction": "Returns a new empty ListMap ."}
{"id": 9954, "prediction": "Creates a new ListMap from the given keys and values ."}
{"id": 9956, "prediction": "Normalize a resource name ."}
{"id": 9958, "prediction": "Returns a substring of this sequence ."}
{"id": 9960, "prediction": "Creates a binary search for the given list of elements ."}
{"id": 9962, "prediction": "Sends a message to the server ."}
{"id": 9964, "prediction": "Bind the given filter to the given filter ."}
{"id": 9966, "prediction": "Returns the integer value of a long ."}
{"id": 9968, "prediction": "Converts a string to a percent ."}
{"id": 9970, "prediction": "Login a user ."}
{"id": 9972, "prediction": "Gets the login user from the request ."}
{"id": 9974, "prediction": "Saves a member in the request ."}
{"id": 9976, "prediction": "Retrieves a cookie from a cookie ."}
{"id": 9978, "prediction": "Appends the file separator to the file ."}
{"id": 9980, "prediction": "Log a message at the current level ."}
{"id": 9982, "prediction": "Converts char array to byte array ."}
{"id": 9984, "prediction": "Converts a byte array to a char array ."}
{"id": 9986, "prediction": "Lookup the locale data for the given locale ."}
{"id": 9988, "prediction": "Copies the image to the specified file ."}
{"id": 9990, "prediction": "Runs the given direct invocation ."}
{"id": 9992, "prediction": "Renders an error ."}
{"id": 9994, "prediction": "Generate the template ."}
{"id": 9996, "prediction": "Render data tables ."}
{"id": 9998, "prediction": "Sets the items ."}
{"id": 10000, "prediction": "Returns a list of bindings for the given injector ."}
{"id": 10002, "prediction": "Compacts memory memory ."}
{"id": 10004, "prediction": "Encodes a string ."}
{"id": 10006, "prediction": "Copy the contents of an InputStream to the output stream ."}
{"id": 10008, "prediction": "Copy the contents of an InputStream to the output stream ."}
{"id": 10010, "prediction": "Copy characters from the reader to the specified writer ."}
{"id": 10012, "prediction": "Copies the given reader to the given output stream ."}
{"id": 10014, "prediction": "Compare two Reader objects ."}
{"id": 10016, "prediction": "Returns the SQL statement for the given group name ."}
{"id": 10018, "prediction": "Unzip a zip file ."}
{"id": 10020, "prediction": "Set the key listener ."}
{"id": 10022, "prediction": "Returns true if the value matches the regular expression ."}
{"id": 10024, "prediction": "Checks if a string is a phone number ."}
{"id": 10026, "prediction": "Checks if the given string is a valid URL ."}
{"id": 10028, "prediction": "Executes the filter ."}
{"id": 10030, "prediction": "Decodes a Base64 encoded string ."}
{"id": 10032, "prediction": "Read properties from an input stream ."}
{"id": 10034, "prediction": "Reads content from a file ."}
{"id": 10036, "prediction": "Copy a directory to a file ."}
{"id": 10038, "prediction": "Get a Document from a file ."}
{"id": 10040, "prediction": "Create a Document from an InputStream ."}
{"id": 10042, "prediction": "Signs a Document ."}
{"id": 10044, "prediction": "Returns true if the given class is a primitive array ."}
{"id": 10046, "prediction": "Resolves a primitive wrapper for the given class ."}
{"id": 10048, "prediction": "Checks if the given value is assignable ."}
{"id": 10050, "prediction": "Returns all interfaces of the given object ."}
{"id": 10052, "prediction": "Get the variables from the given URI ."}
{"id": 10054, "prediction": "Creates a Druid plugin ."}
{"id": 10056, "prediction": "Returns the context for the given type ."}
{"id": 10058, "prediction": "Convert an object to an object ."}
{"id": 10060, "prediction": "Gets a query parameter ."}
{"id": 10062, "prediction": "Creates a session attribute ."}
{"id": 10064, "prediction": "Sets shared variable ."}
{"id": 10066, "prediction": "Sets the value of a field ."}
{"id": 10068, "prediction": "Checks whether all values are granted ."}
{"id": 10070, "prediction": "Find records by SQL"}
{"id": 10072, "prediction": "Checks if the model is a new model ."}
{"id": 10074, "prediction": "Process the SoftValue ."}
{"id": 10076, "prediction": "Return true if string matches pattern"}
{"id": 10078, "prediction": "Gets the protobuf annotation ."}
{"id": 10080, "prediction": "Gets all proto buffers ."}
{"id": 10082, "prediction": "Returns the pojo setter for the given field ."}
{"id": 10084, "prediction": "Gets the JsonFactory ."}
{"id": 10086, "prediction": "Sets the borders ."}
{"id": 10088, "prediction": "Copies the given object to the target object ."}
{"id": 10090, "prediction": "Get the value of a property ."}
{"id": 10092, "prediction": "Add the app to the frame ."}
{"id": 10094, "prediction": "Gets the access token ."}
{"id": 10096, "prediction": "Gets the resource with the given name ."}
{"id": 10098, "prediction": "Gets the resource as a stream ."}
{"id": 10100, "prediction": "Initialize the scheme ."}
{"id": 10102, "prediction": "Set the scheme ."}
{"id": 10104, "prediction": "Set the host ."}
{"id": 10106, "prediction": "Append a path ."}
{"id": 10108, "prediction": "Set the fragment ."}
{"id": 10110, "prediction": "Creates a PreparedStatement from an Iterator ."}
{"id": 10112, "prediction": "Get a string from the input file ."}
{"id": 10114, "prediction": "Returns the contents of the clipboard ."}
{"id": 10116, "prediction": "Opens a file input stream ."}
{"id": 10118, "prediction": "Sets service parameters ."}
{"id": 10120, "prediction": "Find a Parametrizedrized by its id ."}
{"id": 10122, "prediction": "Parses a query string ."}
{"id": 10124, "prediction": "Get encoding from xml string ."}
{"id": 10126, "prediction": "Creates a new Connection instance ."}
{"id": 10128, "prediction": "Visit a package declaration ."}
{"id": 10130, "prediction": "Visit an executable declaration ."}
{"id": 10132, "prediction": "Returns a filter that matches the given modifiers ."}
{"id": 10134, "prediction": "Returns a new DeclarationFilter that matches the given filter ."}
{"id": 10136, "prediction": "Returns the value as a Map ."}
{"id": 10138, "prediction": "Prepare the object query ."}
{"id": 10140, "prediction": "Converts a byte array to a hexadecimal string ."}
{"id": 10142, "prediction": "Parse a named SQL statement ."}
{"id": 10144, "prediction": "Sets the protobuf field value ."}
{"id": 10146, "prediction": "Check if this file is accept ."}
{"id": 10148, "prediction": "Map the expected state labels to the expected state ."}
{"id": 10150, "prediction": "Returns the generic supertype of the given type ."}
{"id": 10152, "prediction": "Starts the polling process ."}
{"id": 10154, "prediction": "Returns the declared methods of the given class ."}
{"id": 10156, "prediction": "Get all declared methods in the given class ."}
{"id": 10158, "prediction": "Dumps a byte to the output ."}
{"id": 10160, "prediction": "Remove all characters from a string ."}
{"id": 10162, "prediction": "Initialize audit ."}
{"id": 10164, "prediction": "Initialize the password validator ."}
{"id": 10166, "prediction": "Resolve the locale code for the given locale ."}
{"id": 10168, "prediction": "Create a Proxy object from the given statement ."}
{"id": 10170, "prediction": "Adds an element to the list ."}
{"id": 10172, "prediction": "Create a new InputStream for this scanner ."}
{"id": 10174, "prediction": "Determine if the tokens are matched ."}
{"id": 10176, "prediction": "Returns true if this rectangle contains another rectangle ."}
{"id": 10178, "prediction": "Returns the intersection of this rectangle ."}
{"id": 10180, "prediction": "Replaces this rectangle with another ."}
{"id": 10182, "prediction": "Returns the number of columns in the specified column ."}
{"id": 10184, "prediction": "Returns the absolute bounds of the specified cell ."}
{"id": 10186, "prediction": "Calculate the rows in the area ."}
{"id": 10188, "prediction": "Main entry point ."}
{"id": 10190, "prediction": "Copy the code buffer to the internal buffer ."}
{"id": 10192, "prediction": "Initialize the servlet ."}
{"id": 10194, "prediction": "Adds a child to this tree ."}
{"id": 10196, "prediction": "Returns the next solution ."}
{"id": 10198, "prediction": "Add instructions to the parent ."}
{"id": 10200, "prediction": "Register a work panel ."}
{"id": 10202, "prediction": "Creates a new BigDecimal type ."}
{"id": 10204, "prediction": "Optimize the list of instructions ."}
{"id": 10206, "prediction": "Service the given request ."}
{"id": 10208, "prediction": "Renders a button ."}
{"id": 10210, "prediction": "Initialize the training data ."}
{"id": 10212, "prediction": "Returns the index of the specified key ."}
{"id": 10214, "prediction": "Removes the value from the map ."}
{"id": 10216, "prediction": "Returns true if the property has the specified property ."}
{"id": 10218, "prediction": "Gets the value of the specified property ."}
{"id": 10220, "prediction": "Initialize the set of properties ."}
{"id": 10222, "prediction": "Initialize the decision tree ."}
{"id": 10224, "prediction": "Convenience method to unassign two terms ."}
{"id": 10226, "prediction": "Compile a query ."}
{"id": 10228, "prediction": "Allocate the local variable registers ."}
{"id": 10230, "prediction": "Display the given predicate ."}
{"id": 10232, "prediction": "Writes a 32 - bit integer into the buffer ."}
{"id": 10234, "prediction": "Returns the string value of the attribute ."}
{"id": 10236, "prediction": "Read a term ."}
{"id": 10238, "prediction": "Checks if the given class is a subtype of the given class ."}
{"id": 10240, "prediction": "Returns true if the given class is a subtype of the given parent class ."}
{"id": 10242, "prediction": "Creates a new instance of the given class ."}
{"id": 10244, "prediction": "Calls the given method on the given object ."}
{"id": 10246, "prediction": "Call a static method ."}
{"id": 10248, "prediction": "Returns the set of setters for the given object ."}
{"id": 10250, "prediction": "Create a new Queue Queue"}
{"id": 10252, "prediction": "Resets the internal state ."}
{"id": 10254, "prediction": "Creates a new instance of int range ."}
{"id": 10256, "prediction": "Adds an alternate dimension to the table ."}
{"id": 10258, "prediction": "Returns a set of free variables ."}
{"id": 10260, "prediction": "Compares two objects ."}
{"id": 10262, "prediction": "Reads a stream as a string ."}
{"id": 10264, "prediction": "Generates a new trace indentation ."}
{"id": 10266, "prediction": "Returns true if the body of a function parameter is a body of a body ."}
{"id": 10268, "prediction": "Returns true if the given set of examples have the same attribute ."}
{"id": 10270, "prediction": "Returns a new functor with the given arguments ."}
{"id": 10272, "prediction": "Execute the action with the given action ."}
{"id": 10274, "prediction": "Sets the texture ."}
{"id": 10276, "prediction": "Creates a buffered image ."}
{"id": 10278, "prediction": "Creates a binary image ."}
{"id": 10280, "prediction": "Sets the queue search algorithm ."}
{"id": 10282, "prediction": "Performs a search operation on the specified queue ."}
{"id": 10284, "prediction": "Returns the clause ."}
{"id": 10286, "prediction": "Consumes a function ."}
{"id": 10288, "prediction": "Returns an array of arguments ."}
{"id": 10290, "prediction": "Read an integer literal ."}
{"id": 10292, "prediction": "Read a string literal ."}
{"id": 10294, "prediction": "Internally sets operator ."}
{"id": 10296, "prediction": "Consumes a token ."}
{"id": 10298, "prediction": "Bind this session to the current thread ."}
{"id": 10300, "prediction": "Creates a collection of elements from the given iterator ."}
{"id": 10302, "prediction": "Converts a day to a time zone ."}
{"id": 10304, "prediction": "Returns a new clock with the specified hours ."}
{"id": 10306, "prediction": "Returns the number of seconds with the given seconds ."}
{"id": 10308, "prediction": "Calculates the given month with the given month ."}
{"id": 10310, "prediction": "Calculates the millis from the given year ."}
{"id": 10312, "prediction": "Reads a byte array ."}
{"id": 10314, "prediction": "Returns the entry for the given key ."}
{"id": 10316, "prediction": "Rehashes the table ."}
{"id": 10318, "prediction": "Sets the next available state ."}
{"id": 10320, "prediction": "Sets the finish flag ."}
{"id": 10322, "prediction": "Returns an iterator over the set ."}
{"id": 10324, "prediction": "Returns the probability for the given symbols ."}
{"id": 10326, "prediction": "Performs an action on the request ."}
{"id": 10328, "prediction": "Gets the request information ."}
{"id": 10330, "prediction": "Gets the cookies ."}
{"id": 10332, "prediction": "Get request scope ."}
{"id": 10334, "prediction": "Get session scope ."}
{"id": 10336, "prediction": "Gets the user principal ."}
{"id": 10338, "prediction": "Generate HTML table ."}
{"id": 10340, "prediction": "Set the current screen state ."}
{"id": 10342, "prediction": "Compares two objects ."}
{"id": 10344, "prediction": "Notify all registered listeners ."}
{"id": 10346, "prediction": "Determines if the top level is in the top level of the top level ."}
{"id": 10348, "prediction": "Sets the arguments for this operator ."}
{"id": 10350, "prediction": "Determines if this is infix"}
{"id": 10352, "prediction": "Process a property change event ."}
{"id": 10354, "prediction": "Returns an enum attribute factory for the given class ."}
{"id": 10356, "prediction": "Returns the storage cell for the given variable ."}
{"id": 10358, "prediction": "Set column attribute ."}
{"id": 10360, "prediction": "Gets the column attribute ."}
{"id": 10362, "prediction": "Internal method ."}
{"id": 10364, "prediction": "Creates a new type ."}
{"id": 10366, "prediction": "Creates the initial context ."}
{"id": 10368, "prediction": "Returns the value of this variable ."}
{"id": 10370, "prediction": "Joins the two nodes in the given reverse path ."}
{"id": 10372, "prediction": "Get the properties for a named resource ."}
{"id": 10374, "prediction": "Reads a number of bytes from the stream ."}
{"id": 10376, "prediction": "Gathers disjunctive expressions ."}
{"id": 10378, "prediction": "Writes an int to the buffer ."}
{"id": 10380, "prediction": "Get a 16 bit integer from a byte array ."}
{"id": 10382, "prediction": "Writes a short to the buffer ."}
{"id": 10384, "prediction": "Returns an iterator that iterates over all of the operators ."}
{"id": 10386, "prediction": "Returns the value of the attribute ."}
{"id": 10388, "prediction": "Convert a string to a list of strings ."}
{"id": 10390, "prediction": "Converts a name to camel case ."}
{"id": 10392, "prediction": "Returns the current configuration ."}
{"id": 10394, "prediction": "Resolve a function call point ."}
{"id": 10396, "prediction": "Returns true if this category is a subcategory of the given comparator ."}
{"id": 10398, "prediction": "Returns the value at the specified level ."}
{"id": 10400, "prediction": "Writes the object to the output stream ."}
{"id": 10402, "prediction": "Compute the manhattan distance between the current solution ."}
{"id": 10404, "prediction": "Add an error message ."}
{"id": 10406, "prediction": "Writes the given string to the output stream ."}
{"id": 10408, "prediction": "Compares two objects ."}
{"id": 10410, "prediction": "Calculates the log 2 ."}
{"id": 10412, "prediction": "Convert the given value to an integer value ."}
{"id": 10414, "prediction": "Convert a long value to an integer ."}
{"id": 10416, "prediction": "Returns the number of characters in the given integer ."}
{"id": 10418, "prediction": "Returns the number of characters for a given integer value ."}
{"id": 10420, "prediction": "Emits the given instruction into this buffer ."}
{"id": 10422, "prediction": "Evaluates the predicate ."}
{"id": 10424, "prediction": "Get the properties for the given key ."}
{"id": 10426, "prediction": "Create array properties ."}
{"id": 10428, "prediction": "Evaluates the given number ."}
{"id": 10430, "prediction": "Get properties from system properties file ."}
{"id": 10432, "prediction": "Loads properties from a file ."}
{"id": 10434, "prediction": "Returns the value of this variable ."}
{"id": 10436, "prediction": "Creates a new queue ."}
{"id": 10438, "prediction": "Appends an event to the server ."}
{"id": 10440, "prediction": "Initialize printers ."}
{"id": 10442, "prediction": "Rolls changes to the current transaction ."}
{"id": 10444, "prediction": "Add a cached operation to the cache ."}
{"id": 10446, "prediction": "Releases the global write lock ."}
{"id": 10448, "prediction": "Enter a media set of media nodes ."}
{"id": 10450, "prediction": "Retrieves an element from the queue ."}
{"id": 10452, "prediction": "Inserts an element into the queue ."}
{"id": 10454, "prediction": "Returns the property as a boolean ."}
{"id": 10456, "prediction": "Returns the value as a long ."}
{"id": 10458, "prediction": "Sets the nodeVisitorVisitor ."}
{"id": 10460, "prediction": "Retrieves the bytecode from the given byte array ."}
{"id": 10462, "prediction": "Decodes a term from a variable ."}
{"id": 10464, "prediction": "Restores the given object from the cache ."}
{"id": 10466, "prediction": "Put a value into the cache ."}
{"id": 10468, "prediction": "Executes the command ."}
{"id": 10470, "prediction": "Polls the queue ."}
{"id": 10472, "prediction": "Creates a new Queue ."}
{"id": 10474, "prediction": "Creates a goalWalker for a given matcher ."}
{"id": 10476, "prediction": "Creates a WalkerWalkerWalker for a given position ."}
{"id": 10478, "prediction": "Loads properties from an input stream ."}
{"id": 10480, "prediction": "Loads properties from a URL ."}
{"id": 10482, "prediction": "Compute the size of the grid ."}
{"id": 10484, "prediction": "Adds a property change listener to the list of listeners ."}
{"id": 10486, "prediction": "Remove a property change listener ."}
{"id": 10488, "prediction": "Creates a new type ."}
{"id": 10490, "prediction": "Shows the horizontal bar ."}
{"id": 10492, "prediction": "Shows the right bar ."}
{"id": 10494, "prediction": "Waits for the given condition ."}
{"id": 10496, "prediction": "Execute the command ."}
{"id": 10498, "prediction": "Creates a new instance of the given date range ."}
{"id": 10500, "prediction": "Initialize the console reader ."}
{"id": 10502, "prediction": "Evaluates the query ."}
{"id": 10504, "prediction": "Convert a byte value to a MultiTypeData object ."}
{"id": 10506, "prediction": "Convert a short value to a MultiTypeData object ."}
{"id": 10508, "prediction": "Convert a long value to a MultiTypeData object ."}
{"id": 10510, "prediction": "Convert a double value to a MultiTypeData object ."}
{"id": 10512, "prediction": "Convert a value to a MultiTypeData object ."}
{"id": 10514, "prediction": "Puts an attribute into the context ."}
{"id": 10516, "prediction": "Expands the given key to the given key ."}
{"id": 10518, "prediction": "Compares two objects ."}
{"id": 10520, "prediction": "Returns the operators for the given fixity ."}
{"id": 10522, "prediction": "Creates a new node with the given successor ."}
{"id": 10524, "prediction": "Gets the parsed errors ."}
{"id": 10526, "prediction": "Returns the usage of the command line ."}
{"id": 10528, "prediction": "Adds properties to the given Properties object ."}
{"id": 10530, "prediction": "Returns a list of properties from the given properties ."}
{"id": 10532, "prediction": "Compare an iterator to the given iterator ."}
{"id": 10534, "prediction": "Returns the options ."}
{"id": 10536, "prediction": "Gets the actual stemmer ."}
{"id": 10538, "prediction": "Main entry point ."}
{"id": 10540, "prediction": "Resets the state of this instruction ."}
{"id": 10542, "prediction": "This method is used to identify the choice frame ."}
{"id": 10544, "prediction": "Returns the next stack frame ."}
{"id": 10546, "prediction": "Traverses a trail ."}
{"id": 10548, "prediction": "Determines the tail of the trail ."}
{"id": 10550, "prediction": "Checks a constant ."}
{"id": 10552, "prediction": "Returns a new random start state ."}
{"id": 10554, "prediction": "Gets the child state for the given operator ."}
{"id": 10556, "prediction": "Returns a pretty printable representation of this board ."}
{"id": 10558, "prediction": "Swap two tiles ."}
{"id": 10560, "prediction": "Converts a character list into an empty state ."}
{"id": 10562, "prediction": "Converts a Level to a log4j ."}
{"id": 10564, "prediction": "Requeue an element ."}
{"id": 10566, "prediction": "Decrement the size of the record ."}
{"id": 10568, "prediction": "Returns an enumeration of the context ."}
{"id": 10570, "prediction": "Add a property to the environment"}
{"id": 10572, "prediction": "Run the garbage collection ."}
{"id": 10574, "prediction": "Try to resolve a mixin ."}
{"id": 10576, "prediction": "Set the maximum height for the given row ."}
{"id": 10578, "prediction": "Executes the given action ."}
{"id": 10580, "prediction": "Execute the action ."}
{"id": 10582, "prediction": "Initialize the symbol table ."}
{"id": 10584, "prediction": "Convert a list of arguments to a string ."}
{"id": 10586, "prediction": "Sets the running state ."}
{"id": 10588, "prediction": "Called when the shutdown is stopped ."}
{"id": 10590, "prediction": "Calculate the next log 2 ."}
{"id": 10592, "prediction": "Compares two nodes ."}
{"id": 10594, "prediction": "Restarts the cache ."}
{"id": 10596, "prediction": "Returns a collection of Bag objects ."}
{"id": 10598, "prediction": "Returns the next element in the iterator ."}
{"id": 10600, "prediction": "Retrieves the value of a property ."}
{"id": 10602, "prediction": "Put a new value into the cache ."}
{"id": 10604, "prediction": "Removes the element from the list ."}
{"id": 10606, "prediction": "Convert a string to an integer ."}
{"id": 10608, "prediction": "Returns true if the given string is a valid date ."}
{"id": 10610, "prediction": "Checks if the given string is a valid date time ."}
{"id": 10612, "prediction": "Returns a token source for the given file ."}
{"id": 10614, "prediction": "Checks if the given instruction is a constant ."}
{"id": 10616, "prediction": "Checks if the given instruction is non - empty ."}
{"id": 10618, "prediction": "Returns the argument at the given index ."}
{"id": 10620, "prediction": "Returns the string representation of the arguments ."}
{"id": 10622, "prediction": "Retrieve records from the query ."}
{"id": 10624, "prediction": "Emits this message to the given buffer ."}
{"id": 10626, "prediction": "Compile the input stream ."}
{"id": 10628, "prediction": "Expands a set of solutions to a Map ."}
{"id": 10630, "prediction": "Reads the stream ."}
{"id": 10632, "prediction": "Calculates the current UUID time ."}
{"id": 10634, "prediction": "Update the playlist info"}
{"id": 10636, "prediction": "Handles a resource request ."}
{"id": 10638, "prediction": "Fire the start music request ."}
{"id": 10640, "prediction": "Starts the reader ."}
{"id": 10642, "prediction": "Reset parser ."}
{"id": 10644, "prediction": "Process a packet ."}
{"id": 10646, "prediction": "Create a new Chat ."}
{"id": 10648, "prediction": "Reset the content ."}
{"id": 10650, "prediction": "Adds a new filter to the list of filters ."}
{"id": 10652, "prediction": "Resets all stored properties ."}
{"id": 10654, "prediction": "Sends a packet to the server ."}
{"id": 10656, "prediction": "Open stream ."}
{"id": 10658, "prediction": "Returns true if the descriptor contains the given descriptor ."}
{"id": 10660, "prediction": "Shuts down the timer ."}
{"id": 10662, "prediction": "Clean the direct byte buffer ."}
{"id": 10664, "prediction": "Mask the given key ."}
{"id": 10666, "prediction": "Returns the entry for the given key ."}
{"id": 10668, "prediction": "Adds all mappings to the map ."}
{"id": 10670, "prediction": "Removes an entry from the cache ."}
{"id": 10672, "prediction": "Adds an entry to the bucket ."}
{"id": 10674, "prediction": "Encode an XML attribute ."}
{"id": 10676, "prediction": "Encodes a string ."}
{"id": 10678, "prediction": "Iterate over the collection ."}
{"id": 10680, "prediction": "Set the progress of this progress bar ."}
{"id": 10682, "prediction": "Set the controller controller for this controller ."}
{"id": 10684, "prediction": "Handle command resource ."}
{"id": 10686, "prediction": "Handle jump progress ."}
{"id": 10688, "prediction": "Get the thread cache for the specified name ."}
{"id": 10690, "prediction": "Returns the alt field for the given stream ID ."}
{"id": 10692, "prediction": "Returns the shard path for the given id ."}
{"id": 10694, "prediction": "Invokes a method with the given arguments ."}
{"id": 10696, "prediction": "Update the specified object ."}
{"id": 10698, "prediction": "Schedule ping task ."}
{"id": 10700, "prediction": "Checks if the given option exists"}
{"id": 10702, "prediction": "Prints a usage message ."}
{"id": 10704, "prediction": "Initializes the connection ."}
{"id": 10706, "prediction": "Gets the compression handler ."}
{"id": 10708, "prediction": "Starts the stream compression ."}
{"id": 10710, "prediction": "Notify the connection listeners ."}
{"id": 10712, "prediction": "Gets the list of registered SASL mechanisms ."}
{"id": 10714, "prediction": "Log a message at INFO level ."}
{"id": 10716, "prediction": "Logs a message ."}
{"id": 10718, "prediction": "Creates a start event ."}
{"id": 10720, "prediction": "Checks if a resource is available ."}
{"id": 10722, "prediction": "Checks if a resource is available ."}
{"id": 10724, "prediction": "Gets a cached map ."}
{"id": 10726, "prediction": "Remove a cached item from the cache ."}
{"id": 10728, "prediction": "Returns a map containing all the locations in the classpath ."}
{"id": 10730, "prediction": "Include a jar file ."}
{"id": 10732, "prediction": "Adds the SASL mechanism to the SASL mechanism ."}
{"id": 10734, "prediction": "Activate the open post processor ."}
{"id": 10736, "prediction": "Register an event listener ."}
{"id": 10738, "prediction": "Performs a write operation on a file ."}
{"id": 10740, "prediction": "Determines if the event is running ."}
{"id": 10742, "prediction": "Creates a player error ."}
{"id": 10744, "prediction": "Stop playing music ."}
{"id": 10746, "prediction": "Creates a broadcast request ."}
{"id": 10748, "prediction": "Appends the post fix ."}
{"id": 10750, "prediction": "Add a query parameter to the URL ."}
{"id": 10752, "prediction": "Add a query parameter ."}
{"id": 10754, "prediction": "Launch the action ."}
{"id": 10756, "prediction": "Check if a URL exists"}
{"id": 10758, "prediction": "Creates an image for the given path ."}
{"id": 10760, "prediction": "Creates a new int array with the specified values ."}
{"id": 10762, "prediction": "Gets the value at the given index ."}
{"id": 10764, "prediction": "Get an integer value ."}
{"id": 10766, "prediction": "Gets the value of the given value ."}
{"id": 10768, "prediction": "Verifies if the given string is a command ."}
{"id": 10770, "prediction": "Verifies that the given command is valid ."}
{"id": 10772, "prediction": "Returns all subclasses of the given class ."}
{"id": 10774, "prediction": "Searches for a class ."}
{"id": 10776, "prediction": "Searches for a jar file ."}
{"id": 10778, "prediction": "Returns the number of entries in this map ."}
{"id": 10780, "prediction": "Get volume volume"}
{"id": 10782, "prediction": "Create an error response ."}
{"id": 10784, "prediction": "Sets the login enabled ."}
{"id": 10786, "prediction": "Sets the name of the roster ."}
{"id": 10788, "prediction": "Gets the collection of roster groups ."}
{"id": 10790, "prediction": "Parses an RSM element ."}
{"id": 10792, "prediction": "Creates a leave event ."}
{"id": 10794, "prediction": "Create a new roster entry ."}
{"id": 10796, "prediction": "Gets a presence resource from a user ."}
{"id": 10798, "prediction": "Fire roster event listeners ."}
{"id": 10800, "prediction": "Creates a new resource ."}
{"id": 10802, "prediction": "Gets the time of the event ."}
{"id": 10804, "prediction": "Initialize the properties file ."}
{"id": 10806, "prediction": "Parses a StreamError ."}
{"id": 10808, "prediction": "Parses the compression method ."}
{"id": 10810, "prediction": "Decodes a string value ."}
{"id": 10812, "prediction": "Get the Playback state from a resource ."}
{"id": 10814, "prediction": "Returns true if the specified subdomain is allowed ."}
{"id": 10816, "prediction": "Returns a set of key - value pairs ."}
{"id": 10818, "prediction": "Purges a reference to the mapping ."}
{"id": 10820, "prediction": "Returns the hash code for the given key ."}
{"id": 10822, "prediction": "Determines if the presence of events are present ."}
{"id": 10824, "prediction": "Updates the presence of the live state ."}
{"id": 10826, "prediction": "Generate script ."}
{"id": 10828, "prediction": "Load properties file ."}
{"id": 10830, "prediction": "Returns the progress of an event ."}
{"id": 10832, "prediction": "Returns a Collection of ServiceResolver ."}
{"id": 10834, "prediction": "Gets the thread pool ."}
{"id": 10836, "prediction": "Verifies if a stop is stopped ."}
{"id": 10838, "prediction": "Adds a connection listener ."}
{"id": 10840, "prediction": "Adds a new packet listener to the packet ."}
{"id": 10842, "prediction": "Adds a new packet interceptor ."}
{"id": 10844, "prediction": "Convert a string to a value ."}
{"id": 10846, "prediction": "Gets the current thread id ."}
{"id": 10848, "prediction": "Gets the key for the given value ."}
{"id": 10850, "prediction": "Lookup a valid node for a given index ."}
{"id": 10852, "prediction": "Compares two objects ."}
{"id": 10854, "prediction": "Returns the node at the given index ."}
{"id": 10856, "prediction": "Finds a node in the given index ."}
{"id": 10858, "prediction": "Copy color from node to node ."}
{"id": 10860, "prediction": "Returns true if the node is black ."}
{"id": 10862, "prediction": "Returns the parent node ."}
{"id": 10864, "prediction": "Returns the left child of the given node ."}
{"id": 10866, "prediction": "Rotate the right right ."}
{"id": 10868, "prediction": "Reduces a node to a BlackNode ."}
{"id": 10870, "prediction": "Insert a new value into the tree ."}
{"id": 10872, "prediction": "Checks if the value contains the given value ."}
{"id": 10874, "prediction": "Removes the specified key from the map ."}
{"id": 10876, "prediction": "Gets the set of keys in this node ."}
{"id": 10878, "prediction": "Returns a set of all entries in this tree ."}
{"id": 10880, "prediction": "Removes expired entries from the cache ."}
{"id": 10882, "prediction": "Activate the properties from the console ."}
{"id": 10884, "prediction": "Initialize the roster store ."}
{"id": 10886, "prediction": "Scans the given address ."}
{"id": 10888, "prediction": "Exports this object into a Map ."}
{"id": 10890, "prediction": "Adds all application applications ."}
{"id": 10892, "prediction": "Prints the list ."}
{"id": 10894, "prediction": "Main entry point ."}
{"id": 10896, "prediction": "Creates a mute event ."}
{"id": 10898, "prediction": "Write a file to a file ."}
{"id": 10900, "prediction": "Adds an option ."}
{"id": 10902, "prediction": "Gets field by name ."}
{"id": 10904, "prediction": "Converts the given ImmutableMap to a Map ."}
{"id": 10906, "prediction": "Sets the internal state ."}
{"id": 10908, "prediction": "Performs an iteration on the iterator ."}
{"id": 10910, "prediction": "Exports this object to a map ."}
{"id": 10912, "prediction": "Creates a buffered image with the specified error ."}
{"id": 10914, "prediction": "Gets a JSON request ."}
{"id": 10916, "prediction": "Computes the set of elements ."}
{"id": 10918, "prediction": "Return the object to the pool ."}
{"id": 10920, "prediction": "Get the current track ."}
{"id": 10922, "prediction": "Randomly shuffle the playlist ."}
{"id": 10924, "prediction": "Export the contents of this queue ."}
{"id": 10926, "prediction": "Send a challenge to the server ."}
{"id": 10928, "prediction": "Runs the event queue ."}
{"id": 10930, "prediction": "Joins all queues ."}
{"id": 10932, "prediction": "Remove a property ."}
{"id": 10934, "prediction": "Removes a principal ."}
{"id": 10936, "prediction": "Called when a user has been received ."}
{"id": 10938, "prediction": "Returns true if the resource is permanent ."}
{"id": 10940, "prediction": "Returns true if the specified key is contained in this map ."}
{"id": 10942, "prediction": "Adds an entry to the map ."}
{"id": 10944, "prediction": "Returns the hash of the given key ."}
{"id": 10946, "prediction": "Checks if two values are equal ."}
{"id": 10948, "prediction": "Calculates the new capacity ."}
{"id": 10950, "prediction": "Loads an object from the input stream ."}
{"id": 10952, "prediction": "Initialize this context"}
{"id": 10954, "prediction": "Notify that the connection is reconnecting ."}
