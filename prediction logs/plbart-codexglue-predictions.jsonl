{"id": 0, "prediction": "Inserts the given value into the queue but only if the queue is full ."}
{"id": 1, "prediction": "Wraps the given observable into an Observable ."}
{"id": 2, "prediction": "Returns an observable that contains all the items of this list sorted according to the given sort function ."}
{"id": 3, "prediction": "Observes a ConnectableObservable on a scheduler ."}
{"id": 4, "prediction": "Creates a new unicast processor ."}
{"id": 5, "prediction": "Creates a new unicast processor ."}
{"id": 6, "prediction": "Tries to subscribe to the given Publisher using the given mapping function ."}
{"id": 7, "prediction": "scalar x map scalar x map ."}
{"id": 8, "prediction": "Resets all handlers to null ."}
{"id": 9, "prediction": "Creates a Maybe from the given CompletableSource ."}
{"id": 10, "prediction": "Creates a Maybe from a SingleSource ."}
{"id": 11, "prediction": "Retries at most the given number of times ."}
{"id": 12, "prediction": "Throws a NullPointerException if the given object is null ."}
{"id": 13, "prediction": "Returns a new identity function ."}
{"id": 14, "prediction": "Creates a callable that returns the given value ."}
{"id": 15, "prediction": "Creates a function that accepts just the given value ."}
{"id": 16, "prediction": "Cast function ."}
{"id": 17, "prediction": "Creates a new unicast subject ."}
{"id": 18, "prediction": "Creates a new unicast subject with the specified capacity hint ."}
{"id": 19, "prediction": "Creates a new UnicastSubject ."}
{"id": 20, "prediction": "Creates a new UnicastSubject ."}
{"id": 21, "prediction": "Blocks until an error occurs or there are no more messages to retrieve ."}
{"id": 22, "prediction": "Get an error from the blocking queue . If the queue is empty this method blocks until an error occurs ."}
{"id": 23, "prediction": "Blocks until a response is received or the timeout is reached ."}
{"id": 24, "prediction": "Drains the given queue into a single thread and calls the associated accept method for each element . If the queue is full the call is ignored ."}
{"id": 25, "prediction": "Submits a request for a subscription ."}
{"id": 26, "prediction": "Posts a complete transition to the given queue . If the queue is empty the actual value will be null . If the queue is empty the actual value will be null . If the queue is full the actual value will be null ."}
{"id": 27, "prediction": "Completes the Future with the given value ."}
{"id": 28, "prediction": "Returns the error value if any ."}
{"id": 29, "prediction": "Gets the error ."}
{"id": 30, "prediction": "Validate that the given upstream is non - null and that the given observer is non - null ."}
{"id": 31, "prediction": "Atomically sets the value of the given AtomicReference to the given value and reports the observer to the caller ."}
{"id": 32, "prediction": "Validates the given subscription by canceling and reporting the result to the given subscriber ."}
{"id": 33, "prediction": "Atomically sets the value in the given AtomicReference to the given value but does not notify the given subscriber ."}
{"id": 34, "prediction": "Returns Long . MAX_VALUE if a + b is less than Long . MAX_VALUE"}
{"id": 35, "prediction": "Returns Long . MAX_VALUE if a and b are not equal ."}
{"id": 36, "prediction": "Atomically adds the current value to the requested value returning the updated value ."}
{"id": 37, "prediction": "Converts a Throwable to a NullPointerException ."}
{"id": 38, "prediction": "Adds an object to the end of the list ."}
{"id": 39, "prediction": "Shuts down the PURGE thread ."}
{"id": 40, "prediction": "Creates a new ScheduledExecutorService and tries to run it with the specified ThreadFactory ."}
{"id": 41, "prediction": "Sets a subscription ."}
{"id": 42, "prediction": "Loops until all elements have been processed ."}
{"id": 43, "prediction": "Wraps the given Throwable or returns the original RuntimeException if it is not a RuntimeException ."}
{"id": 44, "prediction": "Flatten a Throwable into a list of Throwable objects ."}
{"id": 45, "prediction": "Throws an exception if it is an instance of Exception . Otherwise returns the original exception ."}
{"id": 46, "prediction": "Clears the set of resources ."}
{"id": 47, "prediction": "Returns the number of resources currently in the set ."}
{"id": 48, "prediction": "Registers an ObservableSource with an observer that returns a single value using the supplied mapping function ."}
{"id": 49, "prediction": "Creates an observable that maps every value to a scalar value using the supplied mapping function ."}
{"id": 50, "prediction": "Iterates over the elements of this list and returns true if any of them match ."}
{"id": 51, "prediction": "Applies the given observer to the head of this list ."}
{"id": 52, "prediction": "Starts the queue ."}
{"id": 53, "prediction": "Starts an unbounded queue ."}
{"id": 54, "prediction": "Inserts an item to the queue ."}
{"id": 55, "prediction": "Returns the current disposed resource ."}
{"id": 56, "prediction": "Completes this future with the given value ."}
{"id": 57, "prediction": "Called when the application has encountered an error ."}
{"id": 58, "prediction": "Completes the operation ."}
{"id": 59, "prediction": "Convenience method for concatMapDelayError ."}
{"id": 60, "prediction": "Concatenates all the elements of the given map to a single value using the given mapping function ."}
{"id": 61, "prediction": "Returns a sorted view of this collection ."}
{"id": 62, "prediction": "Waits for the specified number of items to be received"}
{"id": 63, "prediction": "Subclasses may wish to override this method for custom behavior ."}
{"id": 64, "prediction": "Adds a new entry to the set ."}
{"id": 65, "prediction": "Removes the specified entry from the list ."}
{"id": 66, "prediction": "Observes a flowable flowable on a given scheduler ."}
{"id": 67, "prediction": "Parse annotations from the given method ."}
{"id": 68, "prediction": "Sets the delay in the specified time unit ."}
{"id": 69, "prediction": "Calls the error factory and returns the call result ."}
{"id": 70, "prediction": "Calculates the delay in the specified time unit ."}
{"id": 71, "prediction": "Creates the sample data using the provided username and password ."}
{"id": 72, "prediction": "Returns HttpMethod value for given method . Returns null if method is not valid ."}
{"id": 73, "prediction": "Search for a user by the given username ."}
{"id": 74, "prediction": "Generates a new key with the given password ."}
{"id": 75, "prediction": "Checks if the given raw password matches the given encoded password ."}
{"id": 76, "prediction": "Check Spring version to see if it is better than min Spring version"}
{"id": 77, "prediction": "Determines whether to disable checks for the given spring version ."}
{"id": 78, "prediction": "Returns the spring - security - core version from the classpath ."}
{"id": 79, "prediction": "Adds an AttributeExchangeConfigurer for the given identifier pattern ."}
{"id": 80, "prediction": "Get the OAuth2ClientConfigurer from the HttpSecurity ."}
{"id": 81, "prediction": "Retrieve an OAuth2 resource server configurer ."}
{"id": 82, "prediction": "Returns the registry that provides access to channel requests ."}
{"id": 83, "prediction": "Compares the specified attribute value to the specified distinguished name ."}
{"id": 84, "prediction": "Retrieve an LDAP entry using the supplied attributes ."}
{"id": 85, "prediction": "Search for values that match a single attribute ."}
{"id": 86, "prediction": "Performs a search for multiple attribute values for the supplied filter using the supplied parameters ."}
{"id": 87, "prediction": "Search for a single entry ."}
{"id": 88, "prediction": "Builds a new SearchControls object from the original SearchControls ."}
{"id": 89, "prediction": "Lookup all primary keys for the specified ACLs ."}
{"id": 90, "prediction": "Builds a PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails ."}
{"id": 91, "prediction": "Create the context - source bean for an embedded server ."}
{"id": 92, "prediction": "Create the servlet api filter ."}
{"id": 93, "prediction": "Create a JAAS integration filter ."}
{"id": 94, "prediction": "Creates a Whitelisted defaultTyping resolver builder ."}
{"id": 95, "prediction": "This will create a DelegatingFilterProxy and insert it into the ServletContext ."}
{"id": 96, "prediction": "Gets a token for a series"}
{"id": 97, "prediction": "Convenience method to retrieve a list of GrantedAuthorities from a collection of attributes ."}
{"id": 98, "prediction": "Creates a new Cipher ."}
{"id": 99, "prediction": "Checks that all required properties have been set ."}
{"id": 100, "prediction": "Checks if the current request requires authentication . If not throws an exception ."}
{"id": 101, "prediction": "Checks if the principal has changed ."}
{"id": 102, "prediction": "Attempts to authenticate the given request using the pre - authenticated credentials ."}
{"id": 103, "prediction": "Check content length ."}
{"id": 104, "prediction": "Maps a collection of authorities to a set of authorities . If no authorities are provided the default authority will be returned ."}
{"id": 105, "prediction": "Set the URL to be used for login processing ."}
{"id": 106, "prediction": "Updates the authentication defaults for the login page ."}
{"id": 107, "prediction": "Update access defaults ."}
{"id": 108, "prediction": "Maps a password value to a string ."}
{"id": 109, "prediction": "Extracts cookie from request ."}
{"id": 110, "prediction": "Encode cookie ."}
{"id": 111, "prediction": "Sets the specified cookie for the specified request ."}
{"id": 112, "prediction": "Resolves the method argument ."}
{"id": 113, "prediction": "Extracts the artifact from the query string ."}
{"id": 114, "prediction": "Returns the port for the service URL . If the URL does not have a port the default port will be returned ."}
{"id": 115, "prediction": "Returns the principal property of the current LdapUserDetails object as a Principal ."}
{"id": 116, "prediction": "Logs out the given request with the given authentication ."}
{"id": 117, "prediction": "Attempts to authenticate the given user based on the given authentication token ."}
{"id": 118, "prediction": "Builds the provider URL from a list of URLs ."}
{"id": 119, "prediction": "Set the application context environment properties ."}
{"id": 120, "prediction": "Returns the full request URL ."}
{"id": 121, "prediction": "Render the ui suffix ."}
{"id": 122, "prediction": "This method is called when a new user is created ."}
{"id": 123, "prediction": "Retrieves the User information from the cache . If more than one User is registered an exception is thrown ."}
{"id": 124, "prediction": "Adds the code challenge parameter to the additional parameters ."}
{"id": 125, "prediction": "Determines whether the given request requires authentication ."}
{"id": 126, "prediction": "Determines if the service ticket request should be sent ."}
{"id": 127, "prediction": "proxy ticket request ."}
{"id": 128, "prediction": "Returns true if the current authentication token is authenticated false otherwise ."}
{"id": 129, "prediction": "Returns true if the specified request should be proxied false otherwise ."}
{"id": 130, "prediction": "Create a security expression root ."}
{"id": 131, "prediction": "Retrieve the JWKSet ."}
{"id": 132, "prediction": "URL encode a string using UTF - 8 encoding ."}
{"id": 133, "prediction": "Gets the groups that the current user belongs to ."}
{"id": 134, "prediction": "Load user details by assertion ."}
{"id": 135, "prediction": "Gets the principal associated with the current request ."}
{"id": 136, "prediction": "Concatenates the given arrays ."}
{"id": 137, "prediction": "Returns a subarray of the given array ."}
{"id": 138, "prediction": "Returns a list of GrantedAuthorities from a collection of attributes ."}
{"id": 139, "prediction": "Pre - processes the orgMap to a collection of GrantedAuthority objects ."}
{"id": 140, "prediction": "Convenience method to get a Collection of GrantedAuthority from the specified value ."}
{"id": 141, "prediction": "Adds the specified collection of roles to the specified result ."}
{"id": 142, "prediction": "Returns the principal associated with the given request ."}
{"id": 143, "prediction": "Returns the shared object of the given type ."}
{"id": 144, "prediction": "Build a redirect URL for HTTPS for the given request ."}
{"id": 145, "prediction": "Intercepts the JoinPoint and invokes the proceeding method ."}
{"id": 146, "prediction": "Checks if the current user has the specified role ."}
{"id": 147, "prediction": "Utility method to check if a list of roles has any of the specified roles ."}
{"id": 148, "prediction": "Process the token stored in the session to authenticate the user ."}
{"id": 149, "prediction": "On login success ."}
{"id": 150, "prediction": "Attempt to switch to the specified user ."}
{"id": 151, "prediction": "Attempts to exit the current user ."}
{"id": 152, "prediction": "Sets the exit user URL to redirect to ."}
{"id": 153, "prediction": "Display a random contact"}
{"id": 154, "prediction": "Apply the web - security configurers ."}
{"id": 155, "prediction": "Decodes the given token and validates it ."}
{"id": 156, "prediction": "Allows to authorize using an access expression ."}
{"id": 157, "prediction": "Checks if the current user is allowed to access the resource at the given context path ."}
{"id": 158, "prediction": "Converts the given JWT to a collection of authority objects ."}
{"id": 159, "prediction": "Generates a unique token for the specified request ."}
{"id": 160, "prediction": "Display adminPermission page for a contact"}
{"id": 161, "prediction": "Displays AddPermission page for a contact"}
{"id": 162, "prediction": "Displays a AddPermission ."}
{"id": 163, "prediction": "Delete a permission from a contact ."}
{"id": 164, "prediction": "Gets the role with the specified prefix ."}
{"id": 165, "prediction": "Creates a new UserDetailsResource from a string representation ."}
{"id": 166, "prediction": "Get the attribute values for a given attribute name ."}
{"id": 167, "prediction": "Returns the first attribute value for the given name ."}
{"id": 168, "prediction": "Encodes a String into its corresponding byte array ."}
{"id": 169, "prediction": "Decodes the given byte array ."}
{"id": 170, "prediction": "Looks up the parameter names for the given parameter ."}
{"id": 171, "prediction": "Add a new contact"}
{"id": 172, "prediction": "Find all attributes specified for the specified method for the specified target class ."}
{"id": 173, "prediction": "Adds a new secure method ."}
{"id": 174, "prediction": "Returns a collection of all config attributes ."}
{"id": 175, "prediction": "Returns true if the given method name matches the given method name ."}
{"id": 176, "prediction": "Configures any - request that can be invoked after itself ."}
{"id": 177, "prediction": "Handles a bind exception ."}
{"id": 178, "prediction": "Returns a random contact ."}
{"id": 179, "prediction": "Removes authentication - related data from the session ."}
{"id": 180, "prediction": "Returns the field with the specified name on the specified class ."}
{"id": 181, "prediction": "Create service url ."}
{"id": 182, "prediction": "Create a redirect URL for the given serviceUrl ."}
{"id": 183, "prediction": "Extract the SHA prefix from an XML pass ."}
{"id": 184, "prediction": "Sends an error response to the client ."}
{"id": 185, "prediction": "Checks to see if any filters are duplicates ."}
{"id": 186, "prediction": "Returns the registered types ."}
{"id": 187, "prediction": "Extracts the cause of the given throwable ."}
{"id": 188, "prediction": "Registers the access manager in the parser context"}
{"id": 189, "prediction": "Convenience method to convert a collection of authority objects to a set of strings ."}
{"id": 190, "prediction": "Compares two byte arrays for equality ."}
{"id": 191, "prediction": "Sets the default failure URL ."}
{"id": 192, "prediction": "Resolves hidden inputs from the request ."}
{"id": 193, "prediction": "Builds the request URL from the servletPath contextPath and pathInfo and query string ."}
{"id": 194, "prediction": "Returns true if the given url is an absolute url ."}
{"id": 195, "prediction": "Creates a list of OpenID attributes for the given identifier ."}
{"id": 196, "prediction": "Retrieves the identifier from the result set . If the result set is a String and has a valid class id type the class id will be returned . Otherwise the class id will be returned ."}
{"id": 197, "prediction": "Creates the entries ."}
{"id": 198, "prediction": "Create an ObjectIdentity and insert it into the database"}
{"id": 199, "prediction": "Updates the identity of the specified object ."}
{"id": 200, "prediction": "Saves the given request ."}
{"id": 201, "prediction": "Create a ServerWebExchangeMatcher that matches the given path patterns ."}
{"id": 202, "prediction": "Returns a matcher that matches any exchange ."}
{"id": 203, "prediction": "Create a TextEncryptor for Hex encoding ."}
{"id": 204, "prediction": "Text encryptor with a given password and salt ."}
{"id": 205, "prediction": "AesBytesEncryptor that encrypts a string with the given password and salt ."}
{"id": 206, "prediction": "Writes the X - Frame -Options header to the given HttpServletResponse ."}
{"id": 207, "prediction": "Determines the target URL for the given request and response ."}
{"id": 208, "prediction": "Determines the target Url based on the given request ."}
{"id": 209, "prediction": "Sets the targetUrlParameter ."}
{"id": 210, "prediction": "Retrieves the directory with immediate parent ."}
{"id": 211, "prediction": "Build a distinguished name for the user with the given username ."}
{"id": 212, "prediction": "Create the shared objects ."}
{"id": 213, "prediction": "Configure jaas using loop ."}
{"id": 214, "prediction": "Get the current date as a formatted string ."}
{"id": 215, "prediction": "Internal parse date ."}
{"id": 216, "prediction": "Updates the cache with the specified key and value ."}
{"id": 217, "prediction": "Set the details for the given request ."}
{"id": 218, "prediction": "Returns the Websphere security name for the given subject ."}
{"id": 219, "prediction": "Returns a list of WebSphere groups for the specified user ."}
{"id": 220, "prediction": "Changes the current user s password ."}
{"id": 221, "prediction": "Builds a distinguished name for the specified group ."}
{"id": 222, "prediction": "This method is called by the authentication strategy to determine whether or not a session is allowed to be created or not ."}
{"id": 223, "prediction": "Copy the details from the source authentication token to the destination authentication token"}
{"id": 224, "prediction": "Returns a list of filters matching the supplied request ."}
{"id": 225, "prediction": "Returns all filters from the specified URL ."}
{"id": 226, "prediction": "Returns the ApplicationContext for the given PageContext ."}
{"id": 227, "prediction": "Gets the full dn for the given dn ."}
{"id": 228, "prediction": "Set the session attributes in the request ."}
{"id": 229, "prediction": "Create a new authentication scheme for basic authentication ."}
{"id": 230, "prediction": "Adds a list of filters to the URL ."}
{"id": 231, "prediction": "Adds a filter to the URL ."}
{"id": 232, "prediction": "Create a new BasicAuthScheme ."}
{"id": 233, "prediction": "Returns AuthenticationScheme for NTLM authentication ."}
{"id": 234, "prediction": "Creates a new authentication scheme from the given user name and password ."}
{"id": 235, "prediction": "Add a proxy for the specified URI ."}
{"id": 236, "prediction": "Prints the response body to the given PrintStream ."}
{"id": 237, "prediction": "Create a new RestAssuredConfig from the given RedirectConfig ."}
{"id": 238, "prediction": "Generates a config that uses the default content charset ."}
{"id": 239, "prediction": "Returns a new object mapper configuration for the specified default object mapper type ."}
{"id": 240, "prediction": "Returns a new instance of ObjectMapperConfig ."}
{"id": 241, "prediction": "Returns a new configuration object for the given log configuration ."}
{"id": 242, "prediction": "Returns a new configuration for a session ."}
{"id": 243, "prediction": "Set the object mapper configuration ."}
{"id": 244, "prediction": "Returns a new configuration for a JSON config ."}
{"id": 245, "prediction": "Returns a new RestAssuredMock server configuration for the specified xml config ."}
{"id": 246, "prediction": "Returns the encoder configuration for the given encoder configuration ."}
{"id": 247, "prediction": "Returns a new configuration for the given header config ."}
{"id": 248, "prediction": "Set the configuration for an async config ."}
{"id": 249, "prediction": "Create a new mock data configuration ."}
{"id": 250, "prediction": "Create a new configuration for a multi - part config ."}
{"id": 251, "prediction": "Returns a configuration for a mock server with the given configuration as a parameter ."}
{"id": 252, "prediction": "Returns a new configuration for a matcher ."}
{"id": 253, "prediction": "CertificateAuthSettings allow all hostnames ."}
{"id": 254, "prediction": "Declares namespaces ."}
{"id": 255, "prediction": "Create a new XML namespace configuration with a given prefix and namespace URI ."}
{"id": 256, "prediction": "Sends a request to the GitLab server with the given method and optionally a body ."}
{"id": 257, "prediction": "Sets the request headers ."}
{"id": 258, "prediction": "Set the default proxy for this route ."}
{"id": 259, "prediction": "Sets the control name ."}
{"id": 260, "prediction": "Adds a header to the multi - part request ."}
{"id": 261, "prediction": "Sets basic credentials ."}
{"id": 262, "prediction": "Creates and sets NTCredentials for the specified host port user pass workms and domain ."}
{"id": 263, "prediction": "Creates a new instance of Headers with the given header and additional headers attached ."}
{"id": 264, "prediction": "Resets the state of the server ."}
{"id": 265, "prediction": "Adds a header to the current response ."}
{"id": 266, "prediction": "Build the response ."}
{"id": 267, "prediction": "Specifies that the value of the cookie matches the given valueMatcher ."}
{"id": 268, "prediction": "Specifies that the cookie s comment matches the given matcher ."}
{"id": 269, "prediction": "Specifies that the expiry date of the cookie matches the given matcher ."}
{"id": 270, "prediction": "Specifies that the cookie s domain matches the given domain matcher ."}
{"id": 271, "prediction": "Specifies that the cookie path matches the given pathMatcher ."}
{"id": 272, "prediction": "Matches any cookie that isured by the given matcher ."}
{"id": 273, "prediction": "Returns a DetailedCookieMatcher that matches cookies with HTTPOnly flag set to true ."}
{"id": 274, "prediction": "Matches if the cookie s version matches the given versionMatcher ."}
{"id": 275, "prediction": "Specifies that the max age of the cookie matches the given matcher ."}
{"id": 276, "prediction": "Specifies that the given header name is present and is of the expected value ."}
{"id": 277, "prediction": "Expect a specific header to be present on the response ."}
{"id": 278, "prediction": "Specifies a cookie to be included in the response ."}
{"id": 279, "prediction": "Returns a copy of this proxy specification with the given host set ."}
{"id": 280, "prediction": "Returns a new JsonPathConfig instance with the given number return type ."}
{"id": 281, "prediction": "Returns a new JsonPathConfig instance with the specified default parser type ."}
{"id": 282, "prediction": "Returns a new instance of LogConfig ."}
{"id": 283, "prediction": "Enable logging of request and response if validation fails ."}
{"id": 284, "prediction": "Creates a new HTTP request object based on the given HTTP method and URI ."}
{"id": 285, "prediction": "Returns a new configuration with the default control name the default file name and the default subtype ."}
{"id": 286, "prediction": "Adds a custom attribute ."}
{"id": 287, "prediction": "Adds a header to the request ."}
{"id": 288, "prediction": "Adds a multi - part request ."}
{"id": 289, "prediction": "Adds result handlers ."}
{"id": 290, "prediction": "Adds a parameter to the HttpClientConfig ."}
{"id": 291, "prediction": "Add custom HTTP client configuration ."}
{"id": 292, "prediction": "Returns a HttpClientConfig instance that can be used to configure the HTTP client ."}
{"id": 293, "prediction": "Returns a HttpClientConfig with the given http multipart mode ."}
{"id": 294, "prediction": "Returns the object at the specified path ."}
{"id": 295, "prediction": "Returns the value at the given path as an Integer ."}
{"id": 296, "prediction": "Returns the value at the given path as a Byte ."}
{"id": 297, "prediction": "Returns the value at the given path as a Short ."}
{"id": 298, "prediction": "Returns the value at the given path as a float ."}
{"id": 299, "prediction": "Get the value at the given path and convert it to a Double ."}
{"id": 300, "prediction": "Returns the value at the given path as a Long ."}
{"id": 301, "prediction": "Get a list of objects from the cache ."}
{"id": 302, "prediction": "Gets a map by path ."}
{"id": 303, "prediction": "Gets an object by its path and casts to the specified type ."}
{"id": 304, "prediction": "Sets the body of the request using the provided mapper ."}
{"id": 305, "prediction": "Add cookie attribute ."}
{"id": 306, "prediction": "Adds a parameter to the request ."}
{"id": 307, "prediction": "Adds a parameter to the request ."}
{"id": 308, "prediction": "Sets the update strategy for form parameters ."}
{"id": 309, "prediction": "Log a response to a PrintStream if the given matcher matches the response code ."}
{"id": 310, "prediction": "Creates a new Cookies object from the given cookie and additional cookies ."}
{"id": 311, "prediction": "Clears the backing map for the given set of keys and sources ."}
{"id": 312, "prediction": "Creates an index of all explicit bindings for this level ."}
{"id": 313, "prediction": "Returns the binding for the given key or throws an exception if the key does not exist ."}
{"id": 314, "prediction": "Attempts to convert the given key to a constant string binding ."}
{"id": 315, "prediction": "Checks if the given binding has already been validated and throws an exception if it doesn t ."}
{"id": 316, "prediction": "Removes a failed jit binding ."}
{"id": 317, "prediction": "Returns the internal dependencies of the given binding ."}
{"id": 318, "prediction": "Creates a binding that is uninitialized ."}
{"id": 319, "prediction": "Returns an array of all the parameters that have been registered with the given injectors ."}
{"id": 320, "prediction": "Binds the injector with the provider instance binding ."}
{"id": 321, "prediction": "Binds the Logger to the provider s logger factory ."}
{"id": 322, "prediction": "Checks if the given member has misplaced binding annotations ."}
{"id": 323, "prediction": "Determine whether a method overrides b ."}
{"id": 324, "prediction": "Initializes the delegate injector ."}
{"id": 325, "prediction": "Returns the provider type ."}
{"id": 326, "prediction": "Resolves all types in the given array ."}
{"id": 327, "prediction": "Returns a canonical version of the given key ."}
{"id": 328, "prediction": "Prepares a built - in converters for the given injector ."}
{"id": 329, "prediction": "Canonicalizes the given class loader ."}
{"id": 330, "prediction": "Returns true if the given class loader has the same version as the given class ."}
{"id": 331, "prediction": "Returns true if the given member is a publiclyCallable ."}
{"id": 332, "prediction": "Returns the key with its annotations attached ."}
{"id": 333, "prediction": "Requests an injection for the given instance and binding ."}
{"id": 334, "prediction": "Attempts to validate all pending Injections with the given errors ."}
{"id": 335, "prediction": "Returns a new instance of the class ."}
{"id": 336, "prediction": "Wraps a servlet request with a dispatcher ."}
{"id": 337, "prediction": "Creates an InternalFactory using the provided scope and source ."}
{"id": 338, "prediction": "Makes an instance of the given Scoping ."}
{"id": 339, "prediction": "Normalize a path ."}
{"id": 340, "prediction": "Generates an annotation of the specified type ."}
{"id": 341, "prediction": "Returns true if the annotation is Retained at runtime ."}
{"id": 342, "prediction": "Finds a scope annotation ."}
{"id": 343, "prediction": "Returns the key for the given type and member with the given annotations ."}
{"id": 344, "prediction": "Returns the name of the annotation associated with the given key ."}
{"id": 345, "prediction": "Initializes the provider s delegate ."}
{"id": 346, "prediction": "Adds a data type binding to the given binder that has been selected by the binding selection ."}
{"id": 347, "prediction": "Returns the ConstructorInjector for the given InjectionPoint and errors ."}
{"id": 348, "prediction": "Returns true if the given interceptor class has a scope annotation ."}
{"id": 349, "prediction": "Sets up aRealMapBinder for the given key type and value type ."}
{"id": 350, "prediction": "Returns the key for the new value ."}
{"id": 351, "prediction": "Creates a new instance of T ."}
{"id": 352, "prediction": "Returns a message with the string representation of the source object replaced ."}
{"id": 353, "prediction": "Returns a new instance of the class for the given module ."}
{"id": 354, "prediction": "Gets the assist methods ."}
{"id": 355, "prediction": "Returns true if the exception type is not specified ."}
{"id": 356, "prediction": "Returns true if the given constructor has matching parameters ."}
{"id": 357, "prediction": "Returns the set of dependencies for the given method or interface ."}
{"id": 358, "prediction": "Returns the provided list of Dependency objects ."}
{"id": 359, "prediction": "Returns true if the provided factory is slow false otherwise ."}
{"id": 360, "prediction": "Returns a Binding instance for the given method using the given arguments and AssistData as the new injector ."}
{"id": 361, "prediction": "Attempts to invoke the specified method on the specified proxy instance ."}
{"id": 362, "prediction": "Returns the missing implementation for the given key with a hint ."}
{"id": 363, "prediction": "Installs a RealMultibinder with the given key ."}
{"id": 364, "prediction": "Returns the Key for a new item ."}
{"id": 365, "prediction": "Finds the next filter matching the given request ."}
{"id": 366, "prediction": "Returns true if the given constructor has at least one Inject ."}
{"id": 367, "prediction": "Gets the internal constructor ."}
{"id": 368, "prediction": "Returns the set of dependencies that should be included in the configuration ."}
{"id": 369, "prediction": "Returns a Module for the given module that uses the given scanner ."}
{"id": 370, "prediction": "Returns the annotation claimed by the given method or null if no annotation was found ."}
{"id": 371, "prediction": "Returns the line number associated with the given member ."}
{"id": 372, "prediction": "Initializes the instance with the given errors ."}
{"id": 373, "prediction": "Wraps the given callable with a continue request and sets the seed map ."}
{"id": 374, "prediction": "Wraps the given callable in a transfer request ."}
{"id": 375, "prediction": "Validates and canonicalizes the given object ."}
{"id": 376, "prediction": "Retrieves the value associated with the given key with the given errors ."}
{"id": 377, "prediction": "Creates an injector of the given type and its TypeListeners ."}
{"id": 378, "prediction": "Returns an immutable list of injectors for the given injection points ."}
{"id": 379, "prediction": "Returns a new Key with given type and annotation strategy ."}
{"id": 380, "prediction": "Returns a strategy for the given annotation ."}
{"id": 381, "prediction": "Returns a strategy for the specified annotation type ."}
{"id": 382, "prediction": "Prunes the stack trace of the given exception ."}
{"id": 383, "prediction": "Gets the stack trace as a string ."}
{"id": 384, "prediction": "Formats a list of errors as a human - readable string ."}
{"id": 385, "prediction": "Creates a new Message instance with the given message format and arguments ."}
{"id": 386, "prediction": "Creates a message with the given message format and arguments ."}
{"id": 387, "prediction": "Creates a new message with the given message format and arguments ."}
{"id": 388, "prediction": "Convert an object to an object type ."}
{"id": 389, "prediction": "Determines whether or not the given class should be skipped ."}
{"id": 390, "prediction": "Returns the stack trace for a list of module class names ."}
{"id": 391, "prediction": "The main entry point for this example ."}
{"id": 392, "prediction": "Pushes a dependency with the given source ."}
{"id": 393, "prediction": "Pushes the state for a given key ."}
{"id": 394, "prediction": "Returns a new instance of the given object ."}
{"id": 395, "prediction": "This method is called when a non - null value has been injected into the provider ."}
{"id": 396, "prediction": "Forwards a connection event to all registered processors ."}
{"id": 397, "prediction": "Adds a new processor for the specified event type ."}
{"id": 398, "prediction": "Get the result of a future task ."}
{"id": 399, "prediction": "Throws an exception if t is a RuntimeException or if t is an Error ."}
{"id": 400, "prediction": "Register a processor"}
{"id": 401, "prediction": "Registers a default processor ."}
{"id": 402, "prediction": "Get the processor associated with the command code . If no processor is associated the default processor is returned ."}
{"id": 403, "prediction": "Tries to get a URL from the cache . Returns null if it fails ."}
{"id": 404, "prediction": "Decodes the protocol code ."}
{"id": 405, "prediction": "Gets all connections from the pool manager ."}
{"id": 406, "prediction": "Scans the pool list for expired connections ."}
{"id": 407, "prediction": "Gets a connection from the pool and creates a new one if necessary ."}
{"id": 408, "prediction": "Create a connection and heal if need ."}
{"id": 409, "prediction": "Removes a task from the pool ."}
{"id": 410, "prediction": "call the heal if needed ."}
{"id": 411, "prediction": "Do the create of the connection ."}
{"id": 412, "prediction": "Closes a connection to the server ."}
{"id": 413, "prediction": "Handles a connection close event ."}
{"id": 414, "prediction": "Closes the connection to the remote address ."}
{"id": 415, "prediction": "Sets an attribute if it does not already exist ."}
{"id": 416, "prediction": "Registers a user processor with the rpc server ."}
{"id": 417, "prediction": "Registers a user processor for rpc server ."}
{"id": 418, "prediction": "Dispatch a request to a user processor ."}
{"id": 419, "prediction": "Deserialize an RpcRequestCommand"}
{"id": 420, "prediction": "Pre - processRemotingContext ."}
{"id": 421, "prediction": "Helper method to log timeout information ."}
{"id": 422, "prediction": "Sends a debug log message to the client ."}
{"id": 423, "prediction": "Process the message and execute it using the default executor ."}
{"id": 424, "prediction": "Attempts to invoke a command asynchronously with a callback ."}
{"id": 425, "prediction": "Called when a request is sent ."}
{"id": 426, "prediction": "Convert a BitSet to a byte value ."}
{"id": 427, "prediction": "Convert an integer to a BitSet ."}
{"id": 428, "prediction": "Adds a new reconnect task ."}
{"id": 429, "prediction": "Stops the background thread that is associated with the connection ."}
{"id": 430, "prediction": "Create a remoting command ."}
{"id": 431, "prediction": "Filters the given list of connections by their service status ."}
{"id": 432, "prediction": "Monitors connections for a set of connection pools ."}
{"id": 433, "prediction": "Close last select connection ."}
{"id": 434, "prediction": "Gets a system property boolean ."}
{"id": 435, "prediction": "Log an info message ."}
{"id": 436, "prediction": "Returns true if the request s timeout is greater than the current time ."}
{"id": 437, "prediction": "Returns the user processor for the given class name ."}
{"id": 438, "prediction": "Get a random connection ."}
{"id": 439, "prediction": "Gets the value associated with a key ."}
{"id": 440, "prediction": "Gets the value of a property ."}
{"id": 441, "prediction": "Resolves the response object based on the response status ."}
{"id": 442, "prediction": "Converts a ResponseCommand to an object ."}
{"id": 443, "prediction": "Converts a ResponseCommand to a Throwable ."}
{"id": 444, "prediction": "Returns the detail error message for the given response command ."}
{"id": 445, "prediction": "Convert a Throwable to an RpcServerException"}
{"id": 446, "prediction": "Prints the connection trace log"}
{"id": 447, "prediction": "Returns a new EventLoopGroup with the specified number of threads and the specified threadFactory ."}
{"id": 448, "prediction": "Returns the remote address as a string ."}
{"id": 449, "prediction": "Returns the local address as a string ."}
{"id": 450, "prediction": "Helper method to parse the remote IP from the given channel ."}
{"id": 451, "prediction": "Returns the host name of the remote host from the given channel ."}
{"id": 452, "prediction": "Returns a string containing the local IP address of the given channel ."}
{"id": 453, "prediction": "Gets the remote port from the given channel ."}
{"id": 454, "prediction": "Gets the local port from the given channel ."}
{"id": 455, "prediction": "Parse socket address to host IP ."}
{"id": 456, "prediction": "Adds a connection to this connection list ."}
{"id": 457, "prediction": "Remove a connection from this pool and try to close it ."}
{"id": 458, "prediction": "Returns the current connection or null if there is no current connection ."}
{"id": 459, "prediction": "Registers a custom serializer for a class ."}
{"id": 460, "prediction": "Gets the custom serializer for the given class name ."}
{"id": 461, "prediction": "Registers a custom serializer for a given command code"}
{"id": 462, "prediction": "Returns the CustomSerializer for a given command code ."}
{"id": 463, "prediction": "Start the connection monitor thread ."}
{"id": 464, "prediction": "Check if the remote address is connected ."}
{"id": 465, "prediction": "init write buffer water mark"}
{"id": 466, "prediction": "Returns a Framedata frame for the given opcode ."}
{"id": 467, "prediction": "Sends a batch of messages to a WebSocket server ."}
{"id": 468, "prediction": "Set the error code and update the payload ."}
{"id": 469, "prediction": "Extracts the UTF - 8 from the payload and sets the position to the given mark ."}
{"id": 470, "prediction": "Update the payload ."}
{"id": 471, "prediction": "Check whether a given protocol is present in the list of known protocols ."}
{"id": 472, "prediction": "Check payload size limit . Allowed for small payloads . Allowed for large payloads ."}
{"id": 473, "prediction": "Translates a single frame check packet size ."}
{"id": 474, "prediction": "Generate a new random key for the Seckey ."}
{"id": 475, "prediction": "Checks to see if the current continuous frame contains a payload and if so adds the other frames combined ."}
{"id": 476, "prediction": "Process a binary frame ."}
{"id": 477, "prediction": "This method logs a runtime exception ."}
{"id": 478, "prediction": "Processes a text frame ."}
{"id": 479, "prediction": "Processes a single frame received from the WebSocket ."}
{"id": 480, "prediction": "Updates the current continuous frame and adds it to the buffer ."}
{"id": 481, "prediction": "Process the closing frame ."}
{"id": 482, "prediction": "Check whether the buffer limit has been exceeded . If not throw a LimitExceededException ."}
{"id": 483, "prediction": "Gets the payload from theByteBufferList as a ByteBuffer ."}
{"id": 484, "prediction": "Get the total number of buffers in the buffer list ."}
{"id": 485, "prediction": "Translate the HTTP method and status line into an handshake object ."}
{"id": 486, "prediction": "Translate the HTTP status code and message to a handshake builder"}
{"id": 487, "prediction": "Decode the frames from the given ByteBuffer ."}
{"id": 488, "prediction": "Close the connection due to aWrongHandshakeException"}
{"id": 489, "prediction": "Close the connection due to an internal exception"}
{"id": 490, "prediction": "Generate the error response as a ByteBuffer ."}
{"id": 491, "prediction": "Sends the specified text to the specified WebSocket object ."}
{"id": 492, "prediction": "Resets the state of the WebSocket connection ."}
{"id": 493, "prediction": "Start the connect read thread ."}
{"id": 494, "prediction": "Returns the port of the WebSocket connection ."}
{"id": 495, "prediction": "Send the handshake request ."}
{"id": 496, "prediction": "Set the connection lost timeout ."}
{"id": 497, "prediction": "Stop the connection lost timer ."}
{"id": 498, "prediction": "Starts a websocket connection lost timer ."}
{"id": 499, "prediction": "restart the connection lost timer"}
{"id": 500, "prediction": "Execute a connectionLostDetection command ."}
{"id": 501, "prediction": "Cancel connection lost timer ."}
{"id": 502, "prediction": "This method is called when a WebSocket handshake occurs ."}
{"id": 503, "prediction": "Sends a ping frame to the server ."}
{"id": 504, "prediction": "Stop all connections and wait for all to finish ."}
{"id": 505, "prediction": "Returns the port number of the server ."}
{"id": 506, "prediction": "Adds more data to the in - queue ."}
{"id": 507, "prediction": "Accepts a message ."}
{"id": 508, "prediction": "Sends a read request to the WebSocket server ."}
{"id": 509, "prediction": "Write a single message to the WebSocket server ."}
{"id": 510, "prediction": "Setup the selector and the server thread ."}
{"id": 511, "prediction": "must be called only once ."}
{"id": 512, "prediction": "Handle the shutdown of the WebSocket server ."}
{"id": 513, "prediction": "Get the socket for the given WebSocket connection ."}
{"id": 514, "prediction": "Broadcasts a message to a number of clients ."}
{"id": 515, "prediction": "Broadcasts a text to all clients ."}
{"id": 516, "prediction": "Do the broadcast ."}
{"id": 517, "prediction": "Fills the map with data from the input data ."}
{"id": 518, "prediction": "Transfers a buffer from one source to another ."}
{"id": 519, "prediction": "Starts the JPAApi ."}
{"id": 520, "prediction": "Returns the entity manager for the given name ."}
{"id": 521, "prediction": "Adds a transaction consumer ."}
{"id": 522, "prediction": "Takes a list of arguments and converts them to a ByteBuf ."}
{"id": 523, "prediction": "Wraps an array of arguments into a list if necessary ."}
{"id": 524, "prediction": "Get a message by language and key ."}
{"id": 525, "prediction": "Get a message from a list of key - value pairs ."}
{"id": 526, "prediction": "Is defined at the specified language?"}
{"id": 527, "prediction": "preferred messages from a collection of language candidates"}
{"id": 528, "prediction": "Returns the preferred message for the given request ."}
{"id": 529, "prediction": "Set the lang for the given result ."}
{"id": 530, "prediction": "Create bindings for a list of modules ."}
{"id": 531, "prediction": "Add bindings to a list of modules"}
{"id": 532, "prediction": "Add the given bindings to the context ."}
{"id": 533, "prediction": "Create a new override object for the given modules ."}
{"id": 534, "prediction": "Provide a list of override modules for this player"}
{"id": 535, "prediction": "A convenience method that overrides a set of bindings ."}
{"id": 536, "prediction": "Disable with a list of module classes ."}
{"id": 537, "prediction": "Returns the result of the call operation ."}
{"id": 538, "prediction": "Attempts to pass the given request onto the current thread ."}
{"id": 539, "prediction": "Gets an existing file ."}
{"id": 540, "prediction": "Returns a binding of type T in the given scope ."}
{"id": 541, "prediction": "Returns a tuple with the specified values ."}
{"id": 542, "prediction": "Creates a tuple with 5 values ."}
{"id": 543, "prediction": "Converts an ExecutionContext to an Executor ."}
{"id": 544, "prediction": "Returns a new JPAConfig instance with the specified parameters ."}
{"id": 545, "prediction": "Returns a new JPAConfig instance with the specified persistence units ."}
{"id": 546, "prediction": "Creates a new JPAConfig from the given map ."}
{"id": 547, "prediction": "Create a string flow with the given callback name and not used string ."}
{"id": 548, "prediction": "Create a flow that maps a JsonNode to a ByteString and calls the callback with the provided name ."}
{"id": 549, "prediction": "Adds a new constraint validator ."}
{"id": 550, "prediction": "Creates a new instance of the constraint validator class ."}
{"id": 551, "prediction": "Get an accessible method that matches the specified name and parameter types ."}
{"id": 552, "prediction": "Called when a client error occurs ."}
{"id": 553, "prediction": "Called when a request is bad ."}
{"id": 554, "prediction": "This method is called when a request is forbidden ."}
{"id": 555, "prediction": "This method is called when a request is not found ."}
{"id": 556, "prediction": "This method is called when an exception is thrown during the execution of a request ."}
{"id": 557, "prediction": "This method logs an internal server error ."}
{"id": 558, "prediction": "Convert a Throwable to a UsefulException"}
{"id": 559, "prediction": "This method is called when the client encountered a dev error ."}
{"id": 560, "prediction": "This method is called when an error is received from the client ."}
{"id": 561, "prediction": "Builds a documentation handler based on a list of files and base directories ."}
{"id": 562, "prediction": "Creates a BuildDocHandler from a directory ."}
{"id": 563, "prediction": "Creates a BuildDocHandler from a directory and a JAR file ."}
{"id": 564, "prediction": "Creates a doc handler from a directory and a jar file ."}
{"id": 565, "prediction": "Creates a BuildDocHandler from a JAR file ."}
{"id": 566, "prediction": "Gets the data as a ByteString ."}
{"id": 567, "prediction": "Convert a content object to a HttpEntity ."}
{"id": 568, "prediction": "Returns a HttpEntity with the given content as a String ."}
{"id": 569, "prediction": "Utility method to create a HttpEntity from a ByteString and a content type ."}
{"id": 570, "prediction": "Returns the status code of the given status code and the JSON content ."}
{"id": 571, "prediction": "Sends JSON status code to the server using the provided JSON encoding ."}
{"id": 572, "prediction": "Returns the status code of the given content ."}
{"id": 573, "prediction": "Sends a HTTP response with the given status code and content stream ."}
{"id": 574, "prediction": "Returns the status code of the given file content ."}
{"id": 575, "prediction": "Returns a user based on its id ."}
{"id": 576, "prediction": "Return the preferred language for the given collection of language components ."}
{"id": 577, "prediction": "Make a Call that is unique"}
{"id": 578, "prediction": "Returns a Call with a fragment ."}
{"id": 579, "prediction": "Returns the absolute URL for the given request ."}
{"id": 580, "prediction": "Returns a full URL for the given request including secure and host ."}
{"id": 581, "prediction": "Returns a function that returns the result of a connection runnable ."}
{"id": 582, "prediction": "Returns a function that returns the result of a connection callable ."}
{"id": 583, "prediction": "Returns a new server for the specified mode and port ."}
{"id": 584, "prediction": "Converts given object to JsonNode ."}
{"id": 585, "prediction": "Converts a JsonNode to a given class ."}
{"id": 586, "prediction": "Converts a String to a JsonNode ."}
{"id": 587, "prediction": "Converts a stream to a JsonNode ."}
{"id": 588, "prediction": "Returns a relative path to the current directory . If the start and target path are the same then link to the current directory ."}
{"id": 589, "prediction": "Returns a canonical version of the given URL ."}
{"id": 590, "prediction": "Returns all displayable constraints ."}
{"id": 591, "prediction": "Returns the displayable constraint for the given constraint ."}
{"id": 592, "prediction": "Timeout the given CompletionStage by the given amount and time unit ."}
{"id": 593, "prediction": "Returns true if the given array is assignable to the given class array false otherwise ."}
{"id": 594, "prediction": "Returns the next valid time after the given cron expression ."}
{"id": 595, "prediction": "Returns an interval representing the number of days since the given date ."}
{"id": 596, "prediction": "Convenience factory method to create a new instance of an AWSClient ."}
{"id": 597, "prediction": "Create a new GuiceApplicationBuilder based on the provided application loader context ."}
{"id": 598, "prediction": "This method is used to display a TODO message ."}
{"id": 599, "prediction": "Add a string value to the session ."}
{"id": 600, "prediction": "Adds a parameter to the flash context ."}
{"id": 601, "prediction": "Returns a binding key that is qualified to the given instance ."}
{"id": 602, "prediction": "Returns a binding key that is qualified with the given annotation ."}
{"id": 603, "prediction": "Converts this binding to a given implementation ."}
{"id": 604, "prediction": "Returns the binding that provides the given provider ."}
{"id": 605, "prediction": "Converts the given supplier to a binding ."}
{"id": 606, "prediction": "Add the given key to this binding ."}
{"id": 607, "prediction": "Return a binding of the given provider type ."}
{"id": 608, "prediction": "Get the available langs for the given application ."}
{"id": 609, "prediction": "preferred language for the given list of available langs"}
{"id": 610, "prediction": "Create a new evolutions reader from a map of evolutions ."}
{"id": 611, "prediction": "Construct a new evolutions reader for the specified default evolutions ."}
{"id": 612, "prediction": "Removes all evolutions with the given schema from the database ."}
{"id": 613, "prediction": "Apply a custom configuration loader to the application and return a new GuiceApplicationBuilder ."}
{"id": 614, "prediction": "Create a new GuiceApplicationBuilder using the supplied loader function ."}
{"id": 615, "prediction": "Create a new GuiceApplicationBuilder using the delegate Guice and the provided modules ."}
{"id": 616, "prediction": "Load the Guice application based on a set of modules ."}
{"id": 617, "prediction": "Attempts to load the given modules into the application ."}
{"id": 618, "prediction": "Attempts to load the application with the given bindings ."}
{"id": 619, "prediction": "Build a new GuiceApplicationBuilder ."}
{"id": 620, "prediction": "Encodes the cookie into a cookie string ."}
{"id": 621, "prediction": "Returns the EntityManager that is bound to this context ."}
{"id": 622, "prediction": "Gets the stack of EntityManager for the current request ."}
{"id": 623, "prediction": "Push or pop an em ."}
{"id": 624, "prediction": "Attempts to bypass the given flow using the given splitter ."}
{"id": 625, "prediction": "bypasses a given flow with the given merge strategy ."}
{"id": 626, "prediction": "Create a Flow from a ActorRef ."}
{"id": 627, "prediction": "Convert argument list to error message source ."}
{"id": 628, "prediction": "Returns a new form based on the specified value ."}
{"id": 629, "prediction": "Gets all errors that have not been sent to the server ."}
{"id": 630, "prediction": "Transform a list of errors into a JSON object ."}
{"id": 631, "prediction": "Returns the value with the given key ."}
{"id": 632, "prediction": "Create a new DynamicForm instance with the specified data ."}
{"id": 633, "prediction": "Converts the given string into an object of the given class ."}
{"id": 634, "prediction": "Converts the given text into an object of the given type ."}
{"id": 635, "prediction": "Returns a string representation of the specified object ."}
{"id": 636, "prediction": "Returns a string representation of the given field with type information attached ."}
{"id": 637, "prediction": "Print a string representation of the given type ."}
{"id": 638, "prediction": "Registers a converter that converts String to Optional ."}
{"id": 639, "prediction": "Registers a custom formatter for the given type ."}
{"id": 640, "prediction": "Register an annotation formatter ."}
{"id": 641, "prediction": "Encodes the given cookie ."}
{"id": 642, "prediction": "Returns a NodeList containing all nodes matching the supplied path that match the supplied node ."}
{"id": 643, "prediction": "Convert a java . util . List to aSeq ."}
{"id": 644, "prediction": "Convert an array to aSeq ."}
{"id": 645, "prediction": "Construct aSeq from an array ."}
{"id": 646, "prediction": "Create a MappedWebSocketAcceptor that maps a Java class to its JSON representation ."}
{"id": 647, "prediction": "Create a WebSocket connection that can be used as a result for a given request ."}
{"id": 648, "prediction": "Attempts to set an access control on an accessible object ."}
{"id": 649, "prediction": "Gets the primitive promotion cost ."}
{"id": 650, "prediction": "Computes the total transformation cost of the given arguments ."}
{"id": 651, "prediction": "Get the object transformation cost of a source class to a destination class ."}
{"id": 652, "prediction": "Gets a message at the given key ."}
{"id": 653, "prediction": "Gets a message at the specified key ."}
{"id": 654, "prediction": "Creates a Database from the default driver and url ."}
{"id": 655, "prediction": "Creates a parallel sorter for the given array of objects ."}
{"id": 656, "prediction": "Performs a quick sort on the specified index using the specified Comparator ."}
{"id": 657, "prediction": "Performs a one - based merge sort for the specified index using the specified Comparator ."}
{"id": 658, "prediction": "Invokes the method ."}
{"id": 659, "prediction": "Cast a type to another"}
{"id": 660, "prediction": "Load the argument at the given index ."}
{"id": 661, "prediction": "Emit a field instruction ."}
{"id": 662, "prediction": "Push a zero - or - null to the stack ."}
{"id": 663, "prediction": "Generate a new unboxing or zero for a non - null or non - null type ."}
{"id": 664, "prediction": "Generate code to process an array ."}
{"id": 665, "prediction": "Generate code to compare the two null labels ."}
{"id": 666, "prediction": "Resolves all bridge methods ."}
{"id": 667, "prediction": "Returns the specified methods from the specified superclass for the specified interfaces ."}
{"id": 668, "prediction": "Filter a list of constructors to only those visible to sc ."}
{"id": 669, "prediction": "Set the superclass of this class ."}
{"id": 670, "prediction": "Get the field with the given names ."}
{"id": 671, "prediction": "Adds the signature and the exception types of the given method to this collection ."}
{"id": 672, "prediction": "Returns the cardinality of the set ."}
{"id": 673, "prediction": "Sets the naming policy ."}
{"id": 674, "prediction": "Returns an array with the names of the specified methods and the descriptors of the specified methods ."}
{"id": 675, "prediction": "Resolves the given path relative to the given base path ."}
{"id": 676, "prediction": "Reads a string from a file ."}
{"id": 677, "prediction": "Set the host header ."}
{"id": 678, "prediction": "Create a new request object with the given method and destination name ."}
{"id": 679, "prediction": "Connects to a destination ."}
{"id": 680, "prediction": "Returns a new request object with HTTP GET method ."}
{"id": 681, "prediction": "A convenience method for making HTTP POST requests ."}
{"id": 682, "prediction": "A method to put a request to a destination ."}
{"id": 683, "prediction": "Returns a new HTTP PATCH request ."}
{"id": 684, "prediction": "Returns a new HTTP DELETE request ."}
{"id": 685, "prediction": "Returns a HEAD request for the given destination ."}
{"id": 686, "prediction": "Returns a new HTTP TRACE request ."}
{"id": 687, "prediction": "Returns a request that has a HTTP OPTIONS method ."}
{"id": 688, "prediction": "Set the request path ."}
{"id": 689, "prediction": "Adds cookies to the request ."}
{"id": 690, "prediction": "Adds a query parameter ."}
{"id": 691, "prediction": "Adds a map of query parameters to a request ."}
{"id": 692, "prediction": "Set the query string ."}
{"id": 693, "prediction": "Returns a string representation of the query ."}
{"id": 694, "prediction": "Return the host URL as a string ."}
{"id": 695, "prediction": "Set the HTTP basic authentication header ."}
{"id": 696, "prediction": "Sets the host header ."}
{"id": 697, "prediction": "Appends the HTTP request to the output buffer ."}
{"id": 698, "prediction": "Send and receive r ."}
{"id": 699, "prediction": "Remove range ."}
{"id": 700, "prediction": "Returns the length of an exception table ."}
{"id": 701, "prediction": "Collects all action interceptors ."}
{"id": 702, "prediction": "Collects all filters ."}
{"id": 703, "prediction": "Collect all action results ."}
{"id": 704, "prediction": "Collects all action runtimes ."}
{"id": 705, "prediction": "Attempts to set the property on this bean to the given value ."}
{"id": 706, "prediction": "Gets the property with the specified name from the specified bean ."}
{"id": 707, "prediction": "Extracts the name of the reference to the specified property ."}
{"id": 708, "prediction": "Returns a PrintWriter for this object ."}
{"id": 709, "prediction": "Set a reference to an object ."}
{"id": 710, "prediction": "Get a reference to an object ."}
{"id": 711, "prediction": "Looks up an object by its reference ."}
{"id": 712, "prediction": "Returns the table descriptor for the given table reference ."}
{"id": 713, "prediction": "Finds a table descriptor by column ref ."}
{"id": 714, "prediction": "Get the alias of the specified table ."}
{"id": 715, "prediction": "Register a table reference ."}
{"id": 716, "prediction": "Looks up a table descriptor by table reference ."}
{"id": 717, "prediction": "Registers a hint ."}
{"id": 718, "prediction": "Serializes a value ."}
{"id": 719, "prediction": "Inject the attributes from the specified Targets into the specified Targets object ."}
{"id": 720, "prediction": "Injects the parameters from the specified target ."}
{"id": 721, "prediction": "Inject files from the given Targets into the given Targets ."}
{"id": 722, "prediction": "Convert a property name to a column name ."}
{"id": 723, "prediction": "Convert column name to property name ."}
{"id": 724, "prediction": "Apply to column name ."}
{"id": 725, "prediction": "Stores a value into the prepared statement at the specified index ."}
{"id": 726, "prediction": "Prepare the value to be converted to the destination type ."}
{"id": 727, "prediction": "Gets all the wrappers ."}
{"id": 728, "prediction": "Resolves a wrapper for the given class ."}
{"id": 729, "prediction": "Creates a new wrapper instance ."}
{"id": 730, "prediction": "Converts path separators to Unix separators ."}
{"id": 731, "prediction": "Gets the path of a file without the specified separator ."}
{"id": 732, "prediction": "Splits a filename into an array of strings ."}
{"id": 733, "prediction": "Returns the relative path of the given target path ."}
{"id": 734, "prediction": "Registers a MADVoc component ."}
{"id": 735, "prediction": "Adds an action config component to the web . xml ."}
{"id": 736, "prediction": "Start the web container ."}
{"id": 737, "prediction": "Registers default values ."}
{"id": 738, "prediction": "Register the Madvoc web container components ."}
{"id": 739, "prediction": "Exclude any jars from the excluded jars list ."}
{"id": 740, "prediction": "Includes jars from the list of included jars ."}
{"id": 741, "prediction": "Includes entries from the list of included entries ."}
{"id": 742, "prediction": "Exclude entries from being scanned ."}
{"id": 743, "prediction": "Scans the jar file for classes ."}
{"id": 744, "prediction": "Scans the classpath for classes ."}
{"id": 745, "prediction": "Gets the bytecode signature of the given type ."}
{"id": 746, "prediction": "Scan a list of class files ."}
{"id": 747, "prediction": "Start the scan ."}
{"id": 748, "prediction": "Returns a new JtxTransaction ."}
{"id": 749, "prediction": "Retrieves the default scope or the scope of the given class ."}
{"id": 750, "prediction": "Gets or init scope ."}
{"id": 751, "prediction": "Creates a MadvocScope and passes it to the supplied consumer ."}
{"id": 752, "prediction": "Decode base64 chars to binary array of bytes ."}
{"id": 753, "prediction": "Returns a random token from the session ."}
{"id": 754, "prediction": "Assure size of tokenSet is at least maxTokensPerSession"}
{"id": 755, "prediction": "Checks if the token has the given value ."}
{"id": 756, "prediction": "Creates a copy from the given object ."}
{"id": 757, "prediction": "Makes a copy of this object ."}
{"id": 758, "prediction": "Visit a property . Add the property name and the value to the destination map ."}
{"id": 759, "prediction": "Initialize the template with the given data ."}
{"id": 760, "prediction": "Resolves a scope ."}
{"id": 761, "prediction": "Registers a bean with the application context ."}
{"id": 762, "prediction": "Register a bean definition ."}
{"id": 763, "prediction": "Removes all beans of the given type ."}
{"id": 764, "prediction": "Resolve the bean names for the given type ."}
{"id": 765, "prediction": "Registers a constructor for the specified bean type and parameter types ."}
{"id": 766, "prediction": "Registers a property injection point for an existing bean definition ."}
{"id": 767, "prediction": "Register a SetInjectionPoint for the specified bean name and property ."}
{"id": 768, "prediction": "Registers a method injection point for an existing bean definition ."}
{"id": 769, "prediction": "Registers init - methods for the bean with the specified name ."}
{"id": 770, "prediction": "Registers destroy methods for the specified bean ."}
{"id": 771, "prediction": "Registers a provider for a bean ."}
{"id": 772, "prediction": "Register a provider ."}
{"id": 773, "prediction": "Iterate over all beans of the given type and invoke a consumer for the bean name ."}
{"id": 774, "prediction": "Adds the parameters to the configuration ."}
{"id": 775, "prediction": "Intercepts the given action request and returns the result ."}
{"id": 776, "prediction": "Resolves the Java version ."}
{"id": 777, "prediction": "Generates code to push an int on the stack ."}
{"id": 778, "prediction": "Throws an exception if the argument index is out of bounds ."}
{"id": 779, "prediction": "Returns a field name for a given field index ."}
{"id": 780, "prediction": "Converts a method name to a method name ."}
{"id": 781, "prediction": "Loads the arguments for a special method ."}
{"id": 782, "prediction": "Load the arguments for a static method ."}
{"id": 783, "prediction": "Loads the argument list for the given method ."}
{"id": 784, "prediction": "Load a method argument into the given method visitor ."}
{"id": 785, "prediction": "Store a method argument on the stack ."}
{"id": 786, "prediction": "Prepares the return value of a method ."}
{"id": 787, "prediction": "Create a key for a method signature ."}
{"id": 788, "prediction": "Makes the given visitor visit a new array of the given type ."}
{"id": 789, "prediction": "Stores an array into the stack ."}
{"id": 790, "prediction": "Extracts the encoding from a Content - Type header ."}
{"id": 791, "prediction": "Returns true if the given Flags contains no flags ."}
{"id": 792, "prediction": "Resolves the Bearer token from the given request ."}
{"id": 793, "prediction": "Sends a response that requires authentication with the given realm ."}
{"id": 794, "prediction": "Prepares the file for download ."}
{"id": 795, "prediction": "Sets the content - type and filename in the given response object ."}
{"id": 796, "prediction": "Gets all cookies of the specified name ."}
{"id": 797, "prediction": "Read the request body and return it as a String ."}
{"id": 798, "prediction": "Read the request body from a stream ."}
{"id": 799, "prediction": "Stores the context path in the given page context variable ."}
{"id": 800, "prediction": "Stores a context path variable in the ServletContext ."}
{"id": 801, "prediction": "Returns true if the given parameter is a GET parameter ."}
{"id": 802, "prediction": "Prepare parameters ."}
{"id": 803, "prediction": "Copy the parameters from the servlet request to the attributes ."}
{"id": 804, "prediction": "Invokes the body tag throwing an exception if it fails ."}
{"id": 805, "prediction": "Render the body of the method ."}
{"id": 806, "prediction": "Render the given body to a String ."}
{"id": 807, "prediction": "Invoke all init - methods ."}
{"id": 808, "prediction": "Call all destroy methods on the bean ."}
{"id": 809, "prediction": "Creates a new bean instance ."}
{"id": 810, "prediction": "Inject parameters if implicitParamInjection is true ."}
{"id": 811, "prediction": "Rewrite the given action path and HTTP method ."}
{"id": 812, "prediction": "Add a header to the response ."}
{"id": 813, "prediction": "Add a property to the map ."}
{"id": 814, "prediction": "Put base property ."}
{"id": 815, "prediction": "Puts profile property ."}
{"id": 816, "prediction": "Get a property for a profile ."}
{"id": 817, "prediction": "resolve and return the specified macro name and the specified profiles ."}
{"id": 818, "prediction": "Extract the properties from the base properties ."}
{"id": 819, "prediction": "Returns the index of the first 4 bytes of a streamtoword ."}
{"id": 820, "prediction": "Hashes a password using the given salt ."}
{"id": 821, "prediction": "Check whether a plaintext string matches a hashed one ."}
{"id": 822, "prediction": "Reads all bytes from the stream and writes them to the given OutputStream ."}
{"id": 823, "prediction": "Copy max int ."}
{"id": 824, "prediction": "Parses an action definition ."}
{"id": 825, "prediction": "Resolves an action annotation ."}
{"id": 826, "prediction": "Detect and register alias ."}
{"id": 827, "prediction": "Read action interceptors ."}
{"id": 828, "prediction": "Read action filters ."}
{"id": 829, "prediction": "Read package action path ."}
{"id": 830, "prediction": "Reads the action method path ."}
{"id": 831, "prediction": "Parse the method alias from annotation values ."}
{"id": 832, "prediction": "Creates a new ActionRuntime instance ."}
{"id": 833, "prediction": "If the if - modified - since header is greater than or equal to the last - modified header set the response status to SC_NOT_MODIFIED"}
{"id": 834, "prediction": "Creates or injects target instance to it ."}
{"id": 835, "prediction": "Inject target into proxy ."}
{"id": 836, "prediction": "Visits an annotation of the given type ."}
{"id": 837, "prediction": "Resolves the real name of the given JSON object ."}
{"id": 838, "prediction": "Resolves a JSON object name ."}
{"id": 839, "prediction": "Look up the TypeData for a class ."}
{"id": 840, "prediction": "Returns the TypeData for the given class ."}
{"id": 841, "prediction": "Returns the TypeData for a subclass or null if not found ."}
{"id": 842, "prediction": "Resolves a JSON name for the given type ."}
{"id": 843, "prediction": "Resolves the real name for the given class ."}
{"id": 844, "prediction": "Get the file content as a byte array ."}
{"id": 845, "prediction": "Copies all bootstrap methods from the specified class reader into the supplied bootstrap_ methods array ."}
{"id": 846, "prediction": "Set the major version and class name ."}
{"id": 847, "prediction": "Puts the constant pool information into the given byte vector ."}
{"id": 848, "prediction": "Puts the bootstrap method count and bootstrap method count bytes to the given byte vector ."}
{"id": 849, "prediction": "Adds a reference to a constant field ."}
{"id": 850, "prediction": "Adds a constant pool entry for a method reference ."}
{"id": 851, "prediction": "Adds a constant reference to the constant pool for the given tag and name ."}
{"id": 852, "prediction": "Adds a constant member reference to the constant pool ."}
{"id": 853, "prediction": "Adds a constant string or a float to the constant pool of this symbol table ."}
{"id": 854, "prediction": "Adds a constant to the constant map for the given tag and value ."}
{"id": 855, "prediction": "Adds a long or double to the constant pool ."}
{"id": 856, "prediction": "Adds a constant to the constant map ."}
{"id": 857, "prediction": "Adds a constant name and type descriptor to the constant pool ."}
{"id": 858, "prediction": "Adds a constant name and type to the constant table ."}
{"id": 859, "prediction": "Adds a UTF - 8 constant to the constant pool ."}
{"id": 860, "prediction": "Adds a UTF - 8 constant to the symbol table ."}
{"id": 861, "prediction": "Adds a constant method handle to the constant pool ."}
{"id": 862, "prediction": "Adds a constant method handle to the table ."}
{"id": 863, "prediction": "Adds a constant dynamic method to the symbol table ."}
{"id": 864, "prediction": "Adds a constant dynamic method to the symbol table for the given bootstrap method ."}
{"id": 865, "prediction": "Adds a constant dynamic method or method reference to the constant pool ."}
{"id": 866, "prediction": "Adds a constant dynamic reference to the method map ."}
{"id": 867, "prediction": "Adds a string constant ."}
{"id": 868, "prediction": "Adds a string constant to the constant pool ."}
{"id": 869, "prediction": "Adds a bootstrap method to the table ."}
{"id": 870, "prediction": "Adds a merged type ."}
{"id": 871, "prediction": "Returns a hash code for the given name ."}
{"id": 872, "prediction": "Clears all entries in this map ."}
{"id": 873, "prediction": "Returns all the values with the given name ."}
{"id": 874, "prediction": "Returns an iterator over the elements in this list ."}
{"id": 875, "prediction": "Returns a list of all the entries in this map ."}
{"id": 876, "prediction": "Grows the internal buffer to at least the given capacity ."}
{"id": 877, "prediction": "Append a range of characters to the buffer ."}
{"id": 878, "prediction": "Visits an annotation on the method ."}
{"id": 879, "prediction": "Called when the visit method is called ."}
{"id": 880, "prediction": "Start the first chain delegate ."}
{"id": 881, "prediction": "Create the first chain delegate method ."}
{"id": 882, "prediction": "Creates a new Path from the given string ."}
{"id": 883, "prediction": "Adds a new field to the path ."}
{"id": 884, "prediction": "Configure the servlet context ."}
{"id": 885, "prediction": "Execute the method and return the next value ."}
{"id": 886, "prediction": "Gets all field descriptors ."}
{"id": 887, "prediction": "Obtain the bean definition for the given name and type ."}
{"id": 888, "prediction": "Convert JtxTransactionMode to DbTransactionMode ."}
{"id": 889, "prediction": "Reads a property from the given source object ."}
{"id": 890, "prediction": "Adds all entries from the specified map to this map ."}
{"id": 891, "prediction": "Appends a buffer to the end of the list ."}
{"id": 892, "prediction": "Writes the content of this buffer to the specified writer ."}
{"id": 893, "prediction": "Write this buffer to the output stream ."}
{"id": 894, "prediction": "Write this message to the given output stream ."}
{"id": 895, "prediction": "Gets the CharSequence associated with a key . Returns null if the CharSequence is not present ."}
{"id": 896, "prediction": "Returns the Integer value for the given key or null if the key does not exist ."}
{"id": 897, "prediction": "Returns the value for the given key as a Long ."}
{"id": 898, "prediction": "Returns the value for the given key as a Double ."}
{"id": 899, "prediction": "Returns the Float value for the given key ."}
{"id": 900, "prediction": "Get a value from the map ."}
{"id": 901, "prediction": "Adds a value to the map ."}
{"id": 902, "prediction": "Use the given folder ."}
{"id": 903, "prediction": "RetrievesEmail from storage for all messages matching given filter and optionally envelope ."}
{"id": 904, "prediction": "Updates the email flags based on the received email ."}
{"id": 905, "prediction": "Closes a folder if it has been opened ."}
{"id": 906, "prediction": "Look up a named parameter by its name ."}
{"id": 907, "prediction": "Gets an alias for the specified target string ."}
{"id": 908, "prediction": "Validates this action against the given profiles ."}
{"id": 909, "prediction": "Adds a Violation for the specified name and value ."}
{"id": 910, "prediction": "Set the mime - type as a string ."}
{"id": 911, "prediction": "Sets the mime type for the given download file ."}
{"id": 912, "prediction": "Sets the target input stream ."}
{"id": 913, "prediction": "Sets the target class ."}
{"id": 914, "prediction": "Sets the target class ."}
{"id": 915, "prediction": "Processes the class and creates the proxy ."}
{"id": 916, "prediction": "Create the proxy ."}
{"id": 917, "prediction": "Defines the proxy ."}
{"id": 918, "prediction": "Returns a new instance of this Proxetta instance ."}
{"id": 919, "prediction": "Dumps the proxy class in the debug folder ."}
{"id": 920, "prediction": "Set from address with the given personal name and from address ."}
{"id": 921, "prediction": "Adds the specified email address to the e - mail address ."}
{"id": 922, "prediction": "Adds a new recipient address with the given personal name and to address ."}
{"id": 923, "prediction": "Set the reply to address ."}
{"id": 924, "prediction": "Set the cc recipient address ."}
{"id": 925, "prediction": "Creates a plain text message with the specified encoding ."}
{"id": 926, "prediction": "Create an HTML message ."}
{"id": 927, "prediction": "Add a header to the response ."}
{"id": 928, "prediction": "Returns the value of a system property or the default value if the property is not set ."}
{"id": 929, "prediction": "Returns the boolean value for the specified name . If the name does not exist or the value for the name can not be interpreted as boolean the defaultValue is returned ."}
{"id": 930, "prediction": "Returns the int value for the given name . If the name does not exist or the value for the name can not be interpreted as an integer the defaultValue is returned ."}
{"id": 931, "prediction": "Returns the long value for the specified name . If the name does not exist or the value for the name can not be interpreted as a long the defaultValue is returned ."}
{"id": 932, "prediction": "Gets the resolved parameters of a method ."}
{"id": 933, "prediction": "Serialize a single key value pair ."}
{"id": 934, "prediction": "Looks up the action path for the given alias ."}
{"id": 935, "prediction": "Resolves an alias for the specified value ."}
{"id": 936, "prediction": "Resolves a result path for the given path and value . If the path is already resolved the result path is returned . If the path is already resolved the result path is returned ."}
{"id": 937, "prediction": "Resolves an alias for a given path and value ."}
{"id": 938, "prediction": "Return last dot index of a string or - 1 if str is not a slash ."}
{"id": 939, "prediction": "Returns the index of the last dot after the specified string ."}
{"id": 940, "prediction": "Gets the index of a dot after a forward slash ."}
{"id": 941, "prediction": "Strip the last camel word from a name ."}
{"id": 942, "prediction": "Resolves the schema name for the given type ."}
{"id": 943, "prediction": "Resolve column descriptors ."}
{"id": 944, "prediction": "Initializes this key - value pair with the initial values of the given key ."}
{"id": 945, "prediction": "Perform mix ."}
{"id": 946, "prediction": "demix d by j and d ."}
{"id": 947, "prediction": "Add a value to the main key schedule ."}
{"id": 948, "prediction": "Initializes this store with the given key and message ."}
{"id": 949, "prediction": "Encrypts the block ."}
{"id": 950, "prediction": "Converts byte array to long array ."}
{"id": 951, "prediction": "Removes any bounding character from the given string ."}
{"id": 952, "prediction": "Get the full path to this method ."}
{"id": 953, "prediction": "Copies the contents of a ZLib file into a new file ."}
{"id": 954, "prediction": "GZip compress a file or directory ."}
{"id": 955, "prediction": "Un gzip a file"}
{"id": 956, "prediction": "List the contents of a zip file ."}
{"id": 957, "prediction": "Unzip a file to a directory ."}
{"id": 958, "prediction": "Adds a file to a ZIP output stream ."}
{"id": 959, "prediction": "Adds content to a ZIP output stream ."}
{"id": 960, "prediction": "Get a field descriptor that matches the given name and declared ."}
{"id": 961, "prediction": "Returns a property descriptor that matches the given name and declared ."}
{"id": 962, "prediction": "Set the bundle name for this request ."}
{"id": 963, "prediction": "Set the locale for the given locale code in the session ."}
{"id": 964, "prediction": "Gets the current session locale ."}
{"id": 965, "prediction": "Filters all parameters for the specified bean name ."}
{"id": 966, "prediction": "Adds a list of profiles ."}
{"id": 967, "prediction": "Read a long from a byte array in little - endian order ."}
{"id": 968, "prediction": "Reads the data from the input stream into a byte array ."}
{"id": 969, "prediction": "A helper method to read a label from an array of labels ."}
{"id": 970, "prediction": "Gets the bytecode offset of a type annotation ."}
{"id": 971, "prediction": "Reads the element values ."}
{"id": 972, "prediction": "Reads the verification type information ."}
{"id": 973, "prediction": "Reads a list of bootstrap_ methods for an attribute ."}
{"id": 974, "prediction": "Retrieves a list of all constructors defined on this class ."}
{"id": 975, "prediction": "Returns a ctor descriptor of the given types ."}
{"id": 976, "prediction": "Gets the request map ."}
{"id": 977, "prediction": "Create the request map ."}
{"id": 978, "prediction": "Convert array to long array ."}
{"id": 979, "prediction": "Initialize DecoraManager and DecoraParser classes ."}
{"id": 980, "prediction": "Adds a consumer that gets called when a file is found ."}
{"id": 981, "prediction": "Find a file by its path ."}
{"id": 982, "prediction": "Searches for a file with the given path and adds it to the list ."}
{"id": 983, "prediction": "Adds a pattern to the FindFile to be matched ."}
{"id": 984, "prediction": "Exclude files matching the specified regular expressions ."}
{"id": 985, "prediction": "Adds a file to the pathList if it doesn t exist already ."}
{"id": 986, "prediction": "Finds all files ."}
{"id": 987, "prediction": "Initialize the list of files to be processed ."}
{"id": 988, "prediction": "Returns an iterator over the files in this directory ."}
{"id": 989, "prediction": "Resolves the wiring mode for the specified bean ."}
{"id": 990, "prediction": "Resolves the bean name ."}
{"id": 991, "prediction": "Returns a PrintWriter for this output stream ."}
{"id": 992, "prediction": "Gets the servlet output stream ."}
{"id": 993, "prediction": "Returns the name of the class corresponding to this type ."}
{"id": 994, "prediction": "Returns a human - readable descriptor for the given constructor ."}
{"id": 995, "prediction": "Returns the method descriptor for the given return type and argument types ."}
{"id": 996, "prediction": "Returns the method descriptor for the given method ."}
{"id": 997, "prediction": "Appends the descriptor to the given string builder ."}
{"id": 998, "prediction": "Returns the size of the array ."}
{"id": 999, "prediction": "Gets the argument types and compute the return size from the method descriptor ."}
{"id": 1000, "prediction": "Set the cause for a rollback only ."}
{"id": 1001, "prediction": "Attempts to commit or rollback the transaction ."}
{"id": 1002, "prediction": "Rollback all the resources associated with this transaction ."}
{"id": 1003, "prediction": "Attempts to request a resource from the transaction"}
{"id": 1004, "prediction": "Pushes a name onto the stack ."}
{"id": 1005, "prediction": "Write a string ."}
{"id": 1006, "prediction": "Writes a unicode character to the stream ."}
{"id": 1007, "prediction": "Write a character sequence ."}
{"id": 1008, "prediction": "Sets the log level to use when parsing error messages ."}
{"id": 1009, "prediction": "Start the region with the specified start tagLen and deepLevel ."}
{"id": 1010, "prediction": "Returns true if the given include string contains the given value ."}
{"id": 1011, "prediction": "Registers a pseudo function ."}
{"id": 1012, "prediction": "Looks up a pseudo function by name ."}
{"id": 1013, "prediction": "implements the visitor to create the proxy aspect data"}
{"id": 1014, "prediction": "Visits an annotation of the specified type ."}
{"id": 1015, "prediction": "Generate the code necessary to initialize the static fields ."}
{"id": 1016, "prediction": "Create the proxy constructor ."}
{"id": 1017, "prediction": "Process all the super methods ."}
{"id": 1018, "prediction": "Returns the index of the last element of the specified range ."}
{"id": 1019, "prediction": "Adds the prefix and suffix to the given string ."}
{"id": 1020, "prediction": "Returns a copy of the specified class file with all of the ASM instructions replaced ."}
{"id": 1021, "prediction": "Returns the attribute Prototypes of this writer ."}
{"id": 1022, "prediction": "Registers the classes in the registry ."}
{"id": 1023, "prediction": "Registers the given type for the given SQL type ."}
{"id": 1024, "prediction": "Look up the class for an SQL type ."}
{"id": 1025, "prediction": "Looks up an instance of the specified type ."}
{"id": 1026, "prediction": "Create a ProxyInfo for SOCKS4 with the given parameters ."}
{"id": 1027, "prediction": "Create a SOCKS5 proxy with the given parameters ."}
{"id": 1028, "prediction": "Returns a HTTP proxy with the given parameters ."}
{"id": 1029, "prediction": "Returns the total number of transactions associated with the current thread ."}
{"id": 1030, "prediction": "Get the number of transactions that have the given status ."}
{"id": 1031, "prediction": "Associates the given transaction with the current transaction ."}
{"id": 1032, "prediction": "If the source tx is read - only then throw an exception . If the source tx is read - only then throw an exception . If the source tx is read - only then throw an exception ."}
{"id": 1033, "prediction": "Lookup the resource manager for the given resource type ."}
{"id": 1034, "prediction": "Create a proxy object for the given class ."}
{"id": 1035, "prediction": "Appends a method name to a path ."}
{"id": 1036, "prediction": "Returns a string of the specified size padded with spaces if necessary ."}
{"id": 1037, "prediction": "Pretty print a value to a string ."}
{"id": 1038, "prediction": "Converts a string to camel case ."}
{"id": 1039, "prediction": "Converts a string to a paragraph of a specified length ."}
{"id": 1040, "prediction": "Converts tabs to spaces ."}
{"id": 1041, "prediction": "Escape special Java characters in the string ."}
{"id": 1042, "prediction": "Unescapes all special characters from a Java string ."}
{"id": 1043, "prediction": "Resolves a bean by its name ."}
{"id": 1044, "prediction": "Returns the bean definition associated with the given name ."}
{"id": 1045, "prediction": "Initialize a bean definition ."}
{"id": 1046, "prediction": "Invokes a provider definition ."}
{"id": 1047, "prediction": "Adds a bean with the given name and wiring the given wiring mode ."}
{"id": 1048, "prediction": "Sets a bean property ."}
{"id": 1049, "prediction": "Get a bean property by its name ."}
{"id": 1050, "prediction": "Shuts down the scope manager ."}
{"id": 1051, "prediction": "Resolves the parameters for the given method or constructor ."}
{"id": 1052, "prediction": "This method is called at the end of the body tag ."}
{"id": 1053, "prediction": "Resolves the value of the property ."}
{"id": 1054, "prediction": "Ends the document removing whitespaces and f roster elements ."}
{"id": 1055, "prediction": "Create an Element object for the given tag ."}
{"id": 1056, "prediction": "Add a tag to the document ."}
{"id": 1057, "prediction": "Removes the last child node if the text is empty ."}
{"id": 1058, "prediction": "Returns the query string ."}
{"id": 1059, "prediction": "Gets action class name ."}
{"id": 1060, "prediction": "Calculate to ."}
{"id": 1061, "prediction": "Iterate over the specified collection ."}
{"id": 1062, "prediction": "Iterate over an array of objects ."}
{"id": 1063, "prediction": "Replace all occurrences of sub with with with with with ."}
{"id": 1064, "prediction": "Replaces the specified sub - character with the specified with ."}
{"id": 1065, "prediction": "Replace all occurrences of sub with with with with ."}
{"id": 1066, "prediction": "Replace the first occurrence of sub in s with with with with with"}
{"id": 1067, "prediction": "Replaces the first occurrence of sub with with with with with with ."}
{"id": 1068, "prediction": "Replace the last part of a string with a new string ."}
{"id": 1069, "prediction": "Replace the last occurence of sub with with with with with with ."}
{"id": 1070, "prediction": "Removes all occurrences of the specified string from the specified string ."}
{"id": 1071, "prediction": "Remove the specified character from the specified string ."}
{"id": 1072, "prediction": "Returns true if all of the given strings are empty ."}
{"id": 1073, "prediction": "Checks if all the given strings are blank ."}
{"id": 1074, "prediction": "Converts an object to an array of strings ."}
{"id": 1075, "prediction": "Changes the first character of the given string to upper or lower case ."}
{"id": 1076, "prediction": "Returns the title of the specified string ."}
{"id": 1077, "prediction": "Returns a string with the specified characters compressed ."}
{"id": 1078, "prediction": "Returns true if the specified string starts with the specified index ignore case ; false otherwise ."}
{"id": 1079, "prediction": "Returns true if the specified string ends with the specified character ."}
{"id": 1080, "prediction": "Count the number of occurrences of sub in source string ignoring case ."}
{"id": 1081, "prediction": "Returns true if the specified array equals the specified array ignoring case ."}
{"id": 1082, "prediction": "Returns the index within the specified string of whitespace starting at the specified index and ending at the specified index ."}
{"id": 1083, "prediction": "Strip the leading character from a string ."}
{"id": 1084, "prediction": "Strip trailing character from a string ."}
{"id": 1085, "prediction": "Strip a single character from a string ."}
{"id": 1086, "prediction": "Strip a character from a string ."}
{"id": 1087, "prediction": "Strip a single character from a string ."}
{"id": 1088, "prediction": "Crop all of the strings in the array ."}
{"id": 1089, "prediction": "Trim whitespace from left ."}
{"id": 1090, "prediction": "Trim right whitespace from left ."}
{"id": 1091, "prediction": "Returns the index of the first occurence of the specified substring within the specified left boundary and the specified right boundary ."}
{"id": 1092, "prediction": "Join a collection of strings with a separator character ."}
{"id": 1093, "prediction": "Joins an array of objects into a single string ."}
{"id": 1094, "prediction": "Utility method to convert a String with a charset name to a new one ."}
{"id": 1095, "prediction": "Checks if the character at the given index is equal to the given char toCompare ."}
{"id": 1096, "prediction": "Surround the given string with the given prefix and suffix ."}
{"id": 1097, "prediction": "Adds a prefix to a string if it does not already exist ."}
{"id": 1098, "prediction": "Adds a suffix to a string if it does not already have a suffix ."}
{"id": 1099, "prediction": "Cut the string to the index of the first occurrence of the substring ."}
{"id": 1100, "prediction": "Cut a string from the index of a string ."}
{"id": 1101, "prediction": "Cut prefix ."}
{"id": 1102, "prediction": "Cut a suffix from a string ."}
{"id": 1103, "prediction": "Cut off surrogate pairs ."}
{"id": 1104, "prediction": "Inserts a String at an offset ."}
{"id": 1105, "prediction": "Repeats a string with a given number of times ."}
{"id": 1106, "prediction": "Reverses a string ."}
{"id": 1107, "prediction": "Returns the maximum common prefix of two strings ."}
{"id": 1108, "prediction": "Returns the common prefix of the specified strings ."}
{"id": 1109, "prediction": "Shorten a string by removing leading and trailing whitespace from the end of the string ."}
{"id": 1110, "prediction": "Converts the specified string to upper case with the specified locale ."}
{"id": 1111, "prediction": "Removes any single or double quotes from the given string ."}
{"id": 1112, "prediction": "Converts byte array to hex string ."}
{"id": 1113, "prediction": "Converts a String to a byte array ."}
{"id": 1114, "prediction": "Detects a single quote character in a string ."}
{"id": 1115, "prediction": "Visits an object property ."}
{"id": 1116, "prediction": "Visits an enum field or method ."}
{"id": 1117, "prediction": "Visits an annotation node ."}
{"id": 1118, "prediction": "Register a type ."}
{"id": 1119, "prediction": "Registers an entity in the database ."}
{"id": 1120, "prediction": "Removes an entity descriptor ."}
{"id": 1121, "prediction": "Creates an entity instance of the specified type ."}
{"id": 1122, "prediction": "Set the target interface ."}
{"id": 1123, "prediction": "Inject target object into wrapper ."}
{"id": 1124, "prediction": "Returns an array of all the properties that are annotated with the given class ."}
{"id": 1125, "prediction": "Detect database and configure dbOom ."}
{"id": 1126, "prediction": "Closes the output stream and closes the gzip stream ."}
{"id": 1127, "prediction": "Writes a byte to the output stream ."}
{"id": 1128, "prediction": "Determines if the given URL is a session id from the URL and if so removes it from the session ."}
{"id": 1129, "prediction": "Gets the encoded name of the message ."}
{"id": 1130, "prediction": "Write this message to a byte array ."}
{"id": 1131, "prediction": "Write message data to file ."}
{"id": 1132, "prediction": "Write the message data to an output stream ."}
{"id": 1133, "prediction": "Appends the type name to the argument name ."}
{"id": 1134, "prediction": "Prepend an argument to the method descriptor ."}
{"id": 1135, "prediction": "Change the return type from the given method descriptor ."}
{"id": 1136, "prediction": "Strip leading and trailing whitespace from the specified text ."}
{"id": 1137, "prediction": "Registers a type converter ."}
{"id": 1138, "prediction": "Looks up a TypeConverter for the given type ."}
{"id": 1139, "prediction": "Select all CSS selectors matching the supplied query ."}
{"id": 1140, "prediction": "Select a collection of selectors ."}
{"id": 1141, "prediction": "Process a list of CSSSelector nodes and add them to the result list ."}
{"id": 1142, "prediction": "Selects the first node matching a query ."}
{"id": 1143, "prediction": "Walks all descendants of the node list and adds them to the result list ."}
{"id": 1144, "prediction": "Recursively walks the given node tree and adds the result to the result list ."}
{"id": 1145, "prediction": "Selects an element and adds it to the result list ."}
{"id": 1146, "prediction": "Filter the results of a CSS selector ."}
{"id": 1147, "prediction": "Unpack the CMap from a packed String ."}
{"id": 1148, "prediction": "Checks to see if a refill needs to be done ."}
{"id": 1149, "prediction": "Returns a page of data ."}
{"id": 1150, "prediction": "remove select from sql string"}
{"id": 1151, "prediction": "remove all to from part"}
{"id": 1152, "prediction": "remove the last order by part from the sql"}
{"id": 1153, "prediction": "Decode a html string to a base64 string ."}
{"id": 1154, "prediction": "Detects the last name in a string ."}
{"id": 1155, "prediction": "Build SQL to order by a column and optionally ascending ."}
{"id": 1156, "prediction": "Builds the SQL SELECT to retrieve a page of data from the database ."}
{"id": 1157, "prediction": "Resolves column names and properties for the given type ."}
{"id": 1158, "prediction": "Returns the column descriptor for the given column name ."}
{"id": 1159, "prediction": "Returns the column descriptor for the given property name or null if not found ."}
{"id": 1160, "prediction": "Returns the property name for the given column name ."}
{"id": 1161, "prediction": "Returns the column name for the given property ."}
{"id": 1162, "prediction": "Returns the id value of the specified object ."}
{"id": 1163, "prediction": "Sets the id value of the specified object ."}
{"id": 1164, "prediction": "Gets the key value of the given object ."}
{"id": 1165, "prediction": "Append a string to the stringBand ."}
{"id": 1166, "prediction": "Sets the index of the new array . If the index is greater than or equal to the current array size the new array will be filled with null . If the index is greater than the current array size the new array will be filled with null ."}
{"id": 1167, "prediction": "Expand the capacity of the internal array ."}
{"id": 1168, "prediction": "Calculates the length of the array ."}
{"id": 1169, "prediction": "Generates a message for mixing a bean definition with its scope ."}
{"id": 1170, "prediction": "Create a scoped proxy bean from a bean definition ."}
{"id": 1171, "prediction": "Calls the body of the loop ."}
{"id": 1172, "prediction": "This method initialises the map ."}
{"id": 1173, "prediction": "Returns true if the given file should be processed ."}
{"id": 1174, "prediction": "Use a file to watch a file ."}
{"id": 1175, "prediction": "Start the timer ."}
{"id": 1176, "prediction": "Callback which gets called when a file is changed ."}
{"id": 1177, "prediction": "Adds an Enumeration to the end of the list ."}
{"id": 1178, "prediction": "Returns the size of the field_info JVMS structure generated by this FieldWriter ."}
{"id": 1179, "prediction": "Puts the information about the field ."}
{"id": 1180, "prediction": "Returns a new instance of the target class for the given value ."}
{"id": 1181, "prediction": "Writes a property value to the injection point ."}
{"id": 1182, "prediction": "Decorates a page and writes it to a writer ."}
{"id": 1183, "prediction": "Parses a single page ."}
{"id": 1184, "prediction": "Write Decorated Page ."}
{"id": 1185, "prediction": "Writes the content of a specified region ."}
{"id": 1186, "prediction": "Start the server ."}
{"id": 1187, "prediction": "Runs the given process and waits for its result ."}
{"id": 1188, "prediction": "Retrieve an SSL store from the given session ."}
{"id": 1189, "prediction": "Create an output stream for this response ."}
{"id": 1190, "prediction": "If hint is not null increment the number of hints by one ."}
{"id": 1191, "prediction": "Append alias ."}
{"id": 1192, "prediction": "Append column name ."}
{"id": 1193, "prediction": "Adds a new rule to this rule definition ."}
{"id": 1194, "prediction": "Applies the flag to the flag value ."}
{"id": 1195, "prediction": "Process included values ."}
{"id": 1196, "prediction": "Checks if the value should be included or not ."}
{"id": 1197, "prediction": "Gets the pseudo class name ."}
{"id": 1198, "prediction": "Adds all of the elements in the specified collection to this collection ."}
{"id": 1199, "prediction": "Returns the index of the lowest element before the given element ."}
{"id": 1200, "prediction": "Binds annotation type to the action configuration class ."}
{"id": 1201, "prediction": "Registers a new action configuration for the given class ."}
{"id": 1202, "prediction": "Returns the action configuration for the given action type or annotation type ."}
{"id": 1203, "prediction": "Adds an action configuration to the registry under the specified type ."}
{"id": 1204, "prediction": "Setup system mail properties ."}
{"id": 1205, "prediction": "Validates the given value within the specified ValidationContext ."}
{"id": 1206, "prediction": "Find the last table element that has the type table ."}
{"id": 1207, "prediction": "Fixes the elements in the roster ."}
{"id": 1208, "prediction": "Register session beans ."}
{"id": 1209, "prediction": "Gets the session beans ."}
{"id": 1210, "prediction": "Initialize the proxy object with a new name and a fully qualified class name ."}
{"id": 1211, "prediction": "Adds a basic help method ."}
{"id": 1212, "prediction": "Ends the bundle ."}
{"id": 1213, "prediction": "Adds a property to a properties file ."}
{"id": 1214, "prediction": "Extract the profiles from the key and add it to the list ."}
{"id": 1215, "prediction": "add the given wildcard to the list of profiles for the given operator"}
{"id": 1216, "prediction": "Convert a typed description into a class name ."}
{"id": 1217, "prediction": "Converts a type description into a reference type ."}
{"id": 1218, "prediction": "Convert a typed description into a signature ."}
{"id": 1219, "prediction": "Convert a Java Class type to a Typeref type ."}
{"id": 1220, "prediction": "Adds all consumers to the chain ."}
{"id": 1221, "prediction": "Creates a collection of the given length ."}
{"id": 1222, "prediction": "Converts an Object to a Collection ."}
{"id": 1223, "prediction": "Convert value to collection ."}
{"id": 1224, "prediction": "Convert collection to collection ."}
{"id": 1225, "prediction": "Converts an array of primitive values to a collection of objects of the specified type ."}
{"id": 1226, "prediction": "Adds a new line number ."}
{"id": 1227, "prediction": "Makes the given visitor visit this line number ."}
{"id": 1228, "prediction": "Put the source instruction into the byte vector ."}
{"id": 1229, "prediction": "Add a forward reference to the stack ."}
{"id": 1230, "prediction": "Resolves all ASM - specific instructions in the given byte array ."}
{"id": 1231, "prediction": "Marks the specified subroutine as belonging to this block ."}
{"id": 1232, "prediction": "Add an edge from the current basic block to the successor of the given subroutine ."}
{"id": 1233, "prediction": "Compare two digits"}
{"id": 1234, "prediction": "Fixes an accent character ."}
{"id": 1235, "prediction": "Puts a byte value into this vector ."}
{"id": 1236, "prediction": "Put two byte values ."}
{"id": 1237, "prediction": "Puts a short value into this vector ."}
{"id": 1238, "prediction": "Puts the given byte and short value into the byte vector ."}
{"id": 1239, "prediction": "Put two bytes into the byte vector ."}
{"id": 1240, "prediction": "Puts an integer into this vector ."}
{"id": 1241, "prediction": "Put two short values into this vector ."}
{"id": 1242, "prediction": "Puts the specified long into this vector ."}
{"id": 1243, "prediction": "Puts the specified byte array into this vector at the specified offset and length ."}
{"id": 1244, "prediction": "Enlarges the byte array by a given size ."}
{"id": 1245, "prediction": "Authenticates a user via HTTP session ."}
{"id": 1246, "prediction": "Authenticates a user via a token"}
{"id": 1247, "prediction": "Authenticates a user via basic auth ."}
{"id": 1248, "prediction": "Returns the message with the given key for the given locale or the default message if no such message exists ."}
{"id": 1249, "prediction": "Gets the resource bundle ."}
{"id": 1250, "prediction": "Returns the value at the given index in the given array ."}
{"id": 1251, "prediction": "Sets the id of an entity ."}
{"id": 1252, "prediction": "Saves an entity to the database ."}
{"id": 1253, "prediction": "Updates an entity in the database ."}
{"id": 1254, "prediction": "Update a property of an entity"}
{"id": 1255, "prediction": "Update a property"}
{"id": 1256, "prediction": "Finds an entity by its id ."}
{"id": 1257, "prediction": "Returns a single entity property by its name and value ."}
{"id": 1258, "prediction": "Retrieves a single entity matching the specified criteria ."}
{"id": 1259, "prediction": "Delete an entity by its id ."}
{"id": 1260, "prediction": "Deletes an entity by its ID ."}
{"id": 1261, "prediction": "Returns the number of entities for the given entity type ."}
{"id": 1262, "prediction": "Increase a property ."}
{"id": 1263, "prediction": "Decreases a property ."}
{"id": 1264, "prediction": "Find all related entities ."}
{"id": 1265, "prediction": "Get all entities for the specified target class ."}
{"id": 1266, "prediction": "Removes all the attributes ."}
{"id": 1267, "prediction": "Returns a set of all the attributes in this map ."}
{"id": 1268, "prediction": "Associates the specified value with the specified key in this context ."}
{"id": 1269, "prediction": "Removes an entry from the cache ."}
{"id": 1270, "prediction": "Gets the current stack trace ."}
{"id": 1271, "prediction": "Get the stack trace of the exception ."}
{"id": 1272, "prediction": "Gets the stack trace of the exception chain ."}
{"id": 1273, "prediction": "Gets the exception chain ."}
{"id": 1274, "prediction": "Returns a string containing the stack trace of the specified exception ."}
{"id": 1275, "prediction": "convert a Throwable to a String"}
{"id": 1276, "prediction": "Builds a message with the stack trace ."}
{"id": 1277, "prediction": "Unwraps a throwable ."}
{"id": 1278, "prediction": "Register the class scanner as a consumer ."}
{"id": 1279, "prediction": "Accepts a Madvoc component class and registers it with the container ."}
{"id": 1280, "prediction": "Get the system class loader ."}
{"id": 1281, "prediction": "Returns a resource as a stream ."}
{"id": 1282, "prediction": "Returns a resource as a stream ."}
{"id": 1283, "prediction": "Gets the class as stream ."}
{"id": 1284, "prediction": "Gets the class as stream ."}
{"id": 1285, "prediction": "Add a string to the route ."}
{"id": 1286, "prediction": "Finds or adds a child to this chunk ."}
{"id": 1287, "prediction": "Parses all parameters in the request ."}
{"id": 1288, "prediction": "Converts an object to a collection of objects ."}
{"id": 1289, "prediction": "Invokes a setter on a bean property ."}
{"id": 1290, "prediction": "Forces the value of an array property to the specified value ."}
{"id": 1291, "prediction": "Creates a new instance of a bean property using reflection ."}
{"id": 1292, "prediction": "Extract the type of the getter ."}
{"id": 1293, "prediction": "Stop the servlet by removing the session and cookie ."}
{"id": 1294, "prediction": "Add this token to the authentication session ."}
{"id": 1295, "prediction": "Converts a local date to a Date ."}
{"id": 1296, "prediction": "Converts a LocalDateTime to a Calendar using the system default time zone ."}
{"id": 1297, "prediction": "Define a proxy for the given class ."}
{"id": 1298, "prediction": "Adds a check to the list ."}
{"id": 1299, "prediction": "Resolves a ValidationContext for the specified class ."}
{"id": 1300, "prediction": "Adds a list of checks for the specified class ."}
{"id": 1301, "prediction": "Collects annotation checks for a property ."}
{"id": 1302, "prediction": "Collects annotation checks ."}
{"id": 1303, "prediction": "Copy default check properties from annotation ."}
{"id": 1304, "prediction": "Encodes the given source string using the given encoding and the given URIPart ."}
{"id": 1305, "prediction": "Encodes the given string with the given encoding ."}
{"id": 1306, "prediction": "Encode a scheme ."}
{"id": 1307, "prediction": "Encodes the given URI host with the given encoding ."}
{"id": 1308, "prediction": "Encodes a port with the given encoding ."}
{"id": 1309, "prediction": "Encode a path with the given encoding ."}
{"id": 1310, "prediction": "Encode a URI query component with the given encoding ."}
{"id": 1311, "prediction": "Encodes a URI query parameter with the given encoding ."}
{"id": 1312, "prediction": "Encode a URI fragment with the given encoding ."}
{"id": 1313, "prediction": "Returns a HashMap where the keys are property names and the values are property values ."}
{"id": 1314, "prediction": "Returns an array of all PropertyDescriptors sorted by name ."}
{"id": 1315, "prediction": "Gets all the cookies in the response ."}
{"id": 1316, "prediction": "Unzip the response ."}
{"id": 1317, "prediction": "Closes the HTTP connection associated with this HTTP method ."}
{"id": 1318, "prediction": "Returns true if this is a valid scope for the given reference scope ."}
{"id": 1319, "prediction": "Print the routes for the application ."}
{"id": 1320, "prediction": "Encrypt an array of bytes ."}
{"id": 1321, "prediction": "Decrypt the contents of an array of bytes ."}
{"id": 1322, "prediction": "Converts a JSON map into an object of the given type ."}
{"id": 1323, "prediction": "Generates a list with the given type ."}
{"id": 1324, "prediction": "Sets a value on a target object using reflection ."}
{"id": 1325, "prediction": "Generates a new map of the specified type from the specified map ."}
{"id": 1326, "prediction": "Compares this object to the specified object for order ."}
{"id": 1327, "prediction": "Sets a header that will be used as the default value for the default request ."}
{"id": 1328, "prediction": "Send a request and read its response ."}
{"id": 1329, "prediction": "Sends a request ."}
{"id": 1330, "prediction": "Add the default headers to the given HTTP request ."}
{"id": 1331, "prediction": "Read cookies from the response ."}
{"id": 1332, "prediction": "Adds all cookies to the given HTTP request ."}
{"id": 1333, "prediction": "Sends a message to the specified email ."}
{"id": 1334, "prediction": "Set the subject on the MimeMessage"}
{"id": 1335, "prediction": "Sets the sent date of the message ."}
{"id": 1336, "prediction": "Sets the headers for the given email message ."}
{"id": 1337, "prediction": "Sets the sender and recipients from the email with the given data to the given MimeMessage ."}
{"id": 1338, "prediction": "Sets the recipients attribute of the MimeMessage ."}
{"id": 1339, "prediction": "Add the body data to the email message ."}
{"id": 1340, "prediction": "Sets the content of the given part to the given email message ."}
{"id": 1341, "prediction": "Creates a body part for an attachment ."}
{"id": 1342, "prediction": "Gets the content - type header ."}
{"id": 1343, "prediction": "Saves the result set ."}
{"id": 1344, "prediction": "Close all result sets ."}
{"id": 1345, "prediction": "Close the query ."}
{"id": 1346, "prediction": "Closes this query and releases the associated database connection and session ."}
{"id": 1347, "prediction": "Sets the fetch size of this query ."}
{"id": 1348, "prediction": "Sets the maximum number of rows in the row set ."}
{"id": 1349, "prediction": "Executes an UPDATE or DELETE statement ."}
{"id": 1350, "prediction": "Counts the number of rows that match the query ."}
{"id": 1351, "prediction": "Returns a ResultSet object representing the number of generated columns ."}
{"id": 1352, "prediction": "Returns the query string of the callable statement and the prepared statement . If debug logging is enabled the query string is returned otherwise the query string is returned ."}
{"id": 1353, "prediction": "Create a proxy of the specified aspect class and all its implemented interfaces ."}
{"id": 1354, "prediction": "Returns a collection of the elements returned by the given iterator ."}
{"id": 1355, "prediction": "Returns a stream of the elements returned by the supplied Iterator ."}
{"id": 1356, "prediction": "Compares the two given objects ."}
{"id": 1357, "prediction": "Sets the default wiring mode ."}
{"id": 1358, "prediction": "Prints a log message with a throwable ."}
{"id": 1359, "prediction": "Returns the name of the class that should be used for logging ."}
{"id": 1360, "prediction": "Shorten a class name so that it can be used as a name ."}
{"id": 1361, "prediction": "Exclude a set of types from serialization ."}
{"id": 1362, "prediction": "Serializes the given object to the given Appendable ."}
{"id": 1363, "prediction": "Serializes an object to a String ."}
{"id": 1364, "prediction": "Helper method to clone an object via serialization ."}
{"id": 1365, "prediction": "Write a Java object to a file"}
{"id": 1366, "prediction": "Reads an object from a file ."}
{"id": 1367, "prediction": "Serialize an object to a byte array ."}
{"id": 1368, "prediction": "Converts byte array to object ."}
{"id": 1369, "prediction": "Given an array of types resolve a list of entity names and return a list of entity names for each mapped type ."}
{"id": 1370, "prediction": "Creates the table names for the given types ."}
{"id": 1371, "prediction": "Read a column value ."}
{"id": 1372, "prediction": "Adds a result set of entities to the cache ."}
{"id": 1373, "prediction": "Resolves a provider definition for the specified type and method ."}
{"id": 1374, "prediction": "Puts the entity name to the table name ."}
{"id": 1375, "prediction": "Checks if the connection is valid ."}
{"id": 1376, "prediction": "This method is used by the framework to render the view ."}
{"id": 1377, "prediction": "Locates the target for the default page or view extension ."}
{"id": 1378, "prediction": "Get a PrintWriter for this response ."}
{"id": 1379, "prediction": "Gets the output stream ."}
{"id": 1380, "prediction": "Write the given content to the response ."}
{"id": 1381, "prediction": "Set the content type of this response ."}
{"id": 1382, "prediction": "Prints a string to the output stream ."}
{"id": 1383, "prediction": "login via basic auth"}
{"id": 1384, "prediction": "Gets the token as JSON ."}
{"id": 1385, "prediction": "Perform login via basic auth ."}
{"id": 1386, "prediction": "Logout the user"}
{"id": 1387, "prediction": "Converts a URL to a File object ."}
{"id": 1388, "prediction": "Creates a directory if it does not already exist ."}
{"id": 1389, "prediction": "Creates a new directory if it does not already exist ."}
{"id": 1390, "prediction": "Copies a file to a destination ."}
{"id": 1391, "prediction": "Copies a directory ."}
{"id": 1392, "prediction": "Moves a file to a directory ."}
{"id": 1393, "prediction": "Moves a directory from one location to another ."}
{"id": 1394, "prediction": "Delete a directory and all its contents ."}
{"id": 1395, "prediction": "Reads all UTF - 8 encoded chars of the given file ."}
{"id": 1396, "prediction": "Reads the contents of the given file into a char array with the given encoding ."}
{"id": 1397, "prediction": "Write chars to a file ."}
{"id": 1398, "prediction": "Write a string to a file with the specified encoding ."}
{"id": 1399, "prediction": "Append a string to a file ."}
{"id": 1400, "prediction": "Reads the specified number of bytes from the specified file ."}
{"id": 1401, "prediction": "Write a byte array to a file ."}
{"id": 1402, "prediction": "Append bytes to a file ."}
{"id": 1403, "prediction": "Copy a file or directory ."}
{"id": 1404, "prediction": "Delete a directory and all its contents ."}
{"id": 1405, "prediction": "Creates a temporary directory and deletes it ."}
{"id": 1406, "prediction": "Checks to see if the file is a binary ."}
{"id": 1407, "prediction": "Checks that the source directory and the destination directory exist . If not an exception is thrown ."}
{"id": 1408, "prediction": "Checks that srcFile and destFile exist and that they are the same . If they do not exist an exception is thrown ."}
{"id": 1409, "prediction": "Prints the command line usage ."}
{"id": 1410, "prediction": "Resolves a method for an action ."}
{"id": 1411, "prediction": "Registers an action ."}
{"id": 1412, "prediction": "Register a path alias ."}
{"id": 1413, "prediction": "Moves the iterator to the next value ."}
{"id": 1414, "prediction": "Create a new CharArraySequence from a char array ."}
{"id": 1415, "prediction": "execute the proxy method"}
{"id": 1416, "prediction": "Return true if all characters in the input are converted to uppercase"}
{"id": 1417, "prediction": "Returns a char sequence of the specified range ."}
{"id": 1418, "prediction": "Returns an array of URLs from the given class and the given classloader ."}
{"id": 1419, "prediction": "Joins the given cc addresses with this email address ."}
{"id": 1420, "prediction": "Registers a class with the TypeJsonSerializer ."}
{"id": 1421, "prediction": "Looks up the serializer for the given type . If no serializer is found the default serializer is returned ."}
{"id": 1422, "prediction": "Parses a request from an input stream ."}
{"id": 1423, "prediction": "Returns the value of the parameter with the given name ."}
{"id": 1424, "prediction": "Gets the values of a parameter ."}
{"id": 1425, "prediction": "Returns the value of the parameter with the given name ."}
{"id": 1426, "prediction": "Gets the value of a parameter with the given name ."}
{"id": 1427, "prediction": "Initialize the filter ."}
{"id": 1428, "prediction": "Parse a string and add it to the sql builder ."}
{"id": 1429, "prediction": "Find the end of a macro starting at fromIndex ."}
{"id": 1430, "prediction": "Count the number of escape sequences in a given string ."}
{"id": 1431, "prediction": "Builds a query from a list of query parameters ."}
{"id": 1432, "prediction": "Parse a query string and return a map of parameter name value pairs ."}
{"id": 1433, "prediction": "Returns a parameter name for the given header name ."}
{"id": 1434, "prediction": "Extracts the media type from a content type string ."}
{"id": 1435, "prediction": "Generates an HTML - formatted string representation of the given node ."}
{"id": 1436, "prediction": "Generates a string representation of the node s children ."}
{"id": 1437, "prediction": "Configures the web app with parameters from the web . xml ."}
{"id": 1438, "prediction": "Resets the context to its initial state ."}
{"id": 1439, "prediction": "Set the lazy flag ."}
{"id": 1440, "prediction": "Try to replace the class with the type mapped for the given path ."}
{"id": 1441, "prediction": "Parses the given string as a list of objects of the given type ."}
{"id": 1442, "prediction": "Parses the given string as a map of key - value pairs ."}
{"id": 1443, "prediction": "If the value is a Supplier this will resolve it and return it . Otherwise it will return the supplied value ."}
{"id": 1444, "prediction": "Skip object ."}
{"id": 1445, "prediction": "Parse a quoted string ."}
{"id": 1446, "prediction": "Parse and return a string content starting with the specified quote character ."}
{"id": 1447, "prediction": "Converts unicode character to hex character ."}
{"id": 1448, "prediction": "Parses the content of a UNQUOTED_DELIMASKS string ."}
{"id": 1449, "prediction": "Parses a number from the input ."}
{"id": 1450, "prediction": "Parse the content of an array ."}
{"id": 1451, "prediction": "Creates an empty constructor ."}
{"id": 1452, "prediction": "Creates the simple method wrapper ."}
{"id": 1453, "prediction": "Resolves the raw type name for the given type ."}
{"id": 1454, "prediction": "Attempts to resolve a reference to the given property on the given value ."}
{"id": 1455, "prediction": "Resolves a reference from a method or constructor s parameter values ."}
{"id": 1456, "prediction": "Reads all references from an annotation ."}
{"id": 1457, "prediction": "Builds the default references for the given method or constructor ."}
{"id": 1458, "prediction": "Builds a default reference for the given property descriptor ."}
{"id": 1459, "prediction": "Removes duplicate names from an array of references ."}
{"id": 1460, "prediction": "Converts an array of String to an array of BeanReferences ."}
{"id": 1461, "prediction": "Convert the given value to an array of BeanReferences ."}
{"id": 1462, "prediction": "Starts a J point of execution and passes it to the provided consumer ."}
{"id": 1463, "prediction": "Returns the public method of the given name in the given class or null if not found ."}
{"id": 1464, "prediction": "Returns the first constructor of the given class that has any of the given parameter types ."}
{"id": 1465, "prediction": "Resolves all interfaces of the given type and all superclasses ."}
{"id": 1466, "prediction": "Compares two arrays of Class types ."}
{"id": 1467, "prediction": "Force access to an accessible object"}
{"id": 1468, "prediction": "Instantiates a class with its constructor matching the supplied parameters ."}
{"id": 1469, "prediction": "Get all the superclasses of the given class ."}
{"id": 1470, "prediction": "Returns the child class of the specified instance ."}
{"id": 1471, "prediction": "Returns a JarFile of the given class ."}
{"id": 1472, "prediction": "Sleep for a period ."}
{"id": 1473, "prediction": "Sleep for a short period"}
{"id": 1474, "prediction": "Wait for an object to become available ."}
{"id": 1475, "prediction": "Creates a thread factory that daemons a thread with the specified name and priority ."}
{"id": 1476, "prediction": "Returns the current value ."}
{"id": 1477, "prediction": "Visits a parameter node ."}
{"id": 1478, "prediction": "Visits an annotation of the given type ."}
{"id": 1479, "prediction": "Visits a type annotation field or method ."}
{"id": 1480, "prediction": "Visits a parameter annotation ."}
{"id": 1481, "prediction": "Visits a field instruction ."}
{"id": 1482, "prediction": "Visits a method instruction ."}
{"id": 1483, "prediction": "Generates the code for an invoke dynamic method ."}
{"id": 1484, "prediction": "Visits a label instruction ."}
{"id": 1485, "prediction": "Visits an array instruction ."}
{"id": 1486, "prediction": "Visits a try catch block ."}
{"id": 1487, "prediction": "Visits an annotation on a local variable type ."}
{"id": 1488, "prediction": "Converts properties to a writer ."}
{"id": 1489, "prediction": "Reads the entire contents of the file into a single byte ."}
{"id": 1490, "prediction": "Returns the next element ."}
{"id": 1491, "prediction": "Move the cursor to the next result set ."}
{"id": 1492, "prediction": "Joins the given arrays into a single array ."}
{"id": 1493, "prediction": "Join an array of arrays of the given type ."}
{"id": 1494, "prediction": "Resizes an array to a given size ."}
{"id": 1495, "prediction": "Appends the specified element to the end of the specified array ."}
{"id": 1496, "prediction": "Removes an element from an array ."}
{"id": 1497, "prediction": "Returns the index of the first occurrence of the specified value in the array or - 1 if the array is empty ."}
{"id": 1498, "prediction": "Returns the index of the first occurrence of the specified value in the array or - 1 if the array is empty ."}
{"id": 1499, "prediction": "Returns the index within the specified sub array of the specified array starting at the specified index ."}
{"id": 1500, "prediction": "Enable XML mode ."}
{"id": 1501, "prediction": "Parses document content ."}
{"id": 1502, "prediction": "Parses the DOM content using the given parser ."}
{"id": 1503, "prediction": "Computes the maximum stack and local edges for the exception handler blocks ."}
{"id": 1504, "prediction": "If compute == COMPUTE_ALL_FRAMES this will create a new basic block at the end of the current basic block and reset the current basic block to null ."}
{"id": 1505, "prediction": "Collects the attribute Prototypes for the given Attribute ."}
{"id": 1506, "prediction": "Inject the given target object into the madvoc context ."}
{"id": 1507, "prediction": "Registers a pseudo class as a pseudo class ."}
{"id": 1508, "prediction": "Looks up a pseudo class by name ."}
{"id": 1509, "prediction": "Invokes an async action ."}
{"id": 1510, "prediction": "Returns an array of all property names for the given type ."}
{"id": 1511, "prediction": "Visits all properties in the given source object ."}
{"id": 1512, "prediction": "Returns true if the property name matches the rule ."}
{"id": 1513, "prediction": "Returns an array of method injection points for the specified class ."}
{"id": 1514, "prediction": "Read the filter configuration parameters into the target object ."}
{"id": 1515, "prediction": "Sends the bundle file ."}
{"id": 1516, "prediction": "Looks up the bundle file with the given id from the list of mirrors . If the bundle file doesn t exist it will be created ."}
{"id": 1517, "prediction": "Look up a file with the same name as the gzip bundle ."}
{"id": 1518, "prediction": "Register a bundle ."}
{"id": 1519, "prediction": "Computes a SHA - 256 hash of the given source string ."}
{"id": 1520, "prediction": "Creates the bundle from the supplied context path and the supplied list of sources ."}
{"id": 1521, "prediction": "Clears all bundle files ."}
{"id": 1522, "prediction": "Fixes all relative urls in the content ."}
{"id": 1523, "prediction": "Updates the column with the specified value ."}
{"id": 1524, "prediction": "Creates the table ref name for the given entity ."}
{"id": 1525, "prediction": "Returns an DbSession object that can be used to perform a request ."}
{"id": 1526, "prediction": "Converts the given value to a single element array ."}
{"id": 1527, "prediction": "Parse the signature and return a map of all the key - value pairs ."}
{"id": 1528, "prediction": "Resolves a set of injection points for the given type ."}
{"id": 1529, "prediction": "Returns whether or not the given property type should be excluded from serialization ."}
{"id": 1530, "prediction": "Opens the connection for a query ."}
{"id": 1531, "prediction": "Opens a transaction ."}
{"id": 1532, "prediction": "Closes the transaction associated with this SQL statement ."}
{"id": 1533, "prediction": "Commits a transaction ."}
{"id": 1534, "prediction": "Rolls back the current transaction ."}
{"id": 1535, "prediction": "Loads properties from a file ."}
{"id": 1536, "prediction": "Create a new Properties object from a String ."}
{"id": 1537, "prediction": "Loads properties from a string ."}
{"id": 1538, "prediction": "Returns a subset of the properties with the specified prefix ."}
{"id": 1539, "prediction": "Creates a Properties object from the contents of the classpath specified by the given template ."}
{"id": 1540, "prediction": "Gets a property from a map ."}
{"id": 1541, "prediction": "Resolve all variables in the given properties object ."}
{"id": 1542, "prediction": "Resolve a property and return null if not found ."}
{"id": 1543, "prediction": "Resolves a scope pattern for a given class and method name ."}
{"id": 1544, "prediction": "Returns the JtxTransactionMode for the given method and argument types . If the method or argument type does not exist returns the default JtxTransactionMode ."}
{"id": 1545, "prediction": "Registers a set of annotations for this transaction ."}
{"id": 1546, "prediction": "Read transaction annotation ."}
{"id": 1547, "prediction": "Returns true if this selector matches the given node false otherwise ."}
{"id": 1548, "prediction": "Checks if the element matches the pool s element name ."}
{"id": 1549, "prediction": "Applies the pseudo class selector to the given node and index ."}
{"id": 1550, "prediction": "Unescapes the special characters in the given value ."}
{"id": 1551, "prediction": "Build the JRE packages for the given Java version ."}
{"id": 1552, "prediction": "Clone this node and all its child nodes ."}
{"id": 1553, "prediction": "Removes this node from its parent node ."}
{"id": 1554, "prediction": "Adds a child node to this node s child list ."}
{"id": 1555, "prediction": "Inserts a child node at the specified index ."}
{"id": 1556, "prediction": "Insert a child node before the refChild node ."}
{"id": 1557, "prediction": "Insert a child node before this child node ."}
{"id": 1558, "prediction": "Insert newChild after refChild node ."}
{"id": 1559, "prediction": "Insert newChilds after refChild node ."}
{"id": 1560, "prediction": "Removes all child nodes from this node ."}
{"id": 1561, "prediction": "Get the child node with the given name ."}
{"id": 1562, "prediction": "Filters child nodes according to given predicate ."}
{"id": 1563, "prediction": "Checks for the existence of this node ."}
{"id": 1564, "prediction": "Initializes the array of child element nodes ."}
{"id": 1565, "prediction": "Initialize sibling names ."}
{"id": 1566, "prediction": "Initializes the child nodes if they are not already set ."}
{"id": 1567, "prediction": "Changes the owner document of the specified node ."}
{"id": 1568, "prediction": "Get the previous sibling with this node s name ."}
{"id": 1569, "prediction": "Returns the text content of this node ."}
{"id": 1570, "prediction": "Returns HTML representation of the document ."}
{"id": 1571, "prediction": "Returns the HTML representation of the document ."}
{"id": 1572, "prediction": "Visits all child nodes ."}
{"id": 1573, "prediction": "Returns the CSS path of this node ."}
{"id": 1574, "prediction": "On decorora tag ."}
{"id": 1575, "prediction": "On id attr start ."}
{"id": 1576, "prediction": "Adds a DecoraTag to the list of decora tags ."}
{"id": 1577, "prediction": "Adds a proxy aspect ."}
{"id": 1578, "prediction": "Adds a mapping to a given root package ."}
{"id": 1579, "prediction": "Add a mapping to the root package of an action class ."}
{"id": 1580, "prediction": "Find the root package for the given action path ."}
{"id": 1581, "prediction": "Resolves a validation message for the given violation ."}
{"id": 1582, "prediction": "Remove duplicate names ."}
{"id": 1583, "prediction": "Add a name pattern to the props file ."}
{"id": 1584, "prediction": "Execute a consumer for each target ."}
{"id": 1585, "prediction": "For each target and in ."}
{"id": 1586, "prediction": "Calls the biConsumer for each target in the given scope and calls the out method for each out scope ."}
{"id": 1587, "prediction": "Extracts the parameter values ."}
{"id": 1588, "prediction": "Makes the target array for the specified action and method parameters ."}
{"id": 1589, "prediction": "Creates an instance of an action method argument ."}
{"id": 1590, "prediction": "A session is created ."}
{"id": 1591, "prediction": "Removes the session from the session map ."}
{"id": 1592, "prediction": "Appends the specified value to the end of the array ."}
{"id": 1593, "prediction": "Adds all elements of the given array to this array ."}
{"id": 1594, "prediction": "Remove the element at the given position ."}
{"id": 1595, "prediction": "Resolves the target for the given result value ."}
{"id": 1596, "prediction": "target not found response ."}
{"id": 1597, "prediction": "Returns the value as a String ."}
{"id": 1598, "prediction": "Resolves an action filter by its class ."}
{"id": 1599, "prediction": "Gets the pseudo function name ."}
{"id": 1600, "prediction": "Resolves a single property injection point for the given class ."}
{"id": 1601, "prediction": "Create a new Socks4 proxy socket ."}
{"id": 1602, "prediction": "Returns the number of attributes in the attribute list ."}
{"id": 1603, "prediction": "Gets all action results ."}
{"id": 1604, "prediction": "Returns true if the given character equals one of the given character ."}
{"id": 1605, "prediction": "Returns the index of the first occurence of match in source starting at index or - 1 if match is not found ."}
{"id": 1606, "prediction": "Returns the index of the first occurrence of the specified match in the source array or - 1 if the source array is empty ."}
{"id": 1607, "prediction": "Adds command line arguments ."}
{"id": 1608, "prediction": "Add an environment variable to the command line ."}
{"id": 1609, "prediction": "Runs the process ."}
{"id": 1610, "prediction": "Invokes the supplied listener for the specified type ."}
{"id": 1611, "prediction": "Copies all data from the given frame into this frame ."}
{"id": 1612, "prediction": "Returns the type of the given type from the given symbol table ."}
{"id": 1613, "prediction": "Gets the type of an element from a type descriptor ."}
{"id": 1614, "prediction": "Sets the input frame from the given public API frame description ."}
{"id": 1615, "prediction": "Gets the abstract type of the local at the given index ."}
{"id": 1616, "prediction": "Sets the local variable for the abstractType at the given index ."}
{"id": 1617, "prediction": "Pushes an abstract type on the output stack ."}
{"id": 1618, "prediction": "Pushes a type onto the stack ."}
{"id": 1619, "prediction": "Pop the given number of elements from the output stack ."}
{"id": 1620, "prediction": "Pops the top element of the stack ."}
{"id": 1621, "prediction": "Adds an abstract type to the initializations array ."}
{"id": 1622, "prediction": "Get the initialized type for the abstract type ."}
{"id": 1623, "prediction": "Put the given abstract type into the given byte vector ."}
{"id": 1624, "prediction": "Removes all expired entries from the cache ."}
{"id": 1625, "prediction": "Schedules a pruning task for the specified delay ."}
{"id": 1626, "prediction": "Visits a module node ."}
{"id": 1627, "prediction": "Visits a NestHost node ."}
{"id": 1628, "prediction": "Visits an outer class ."}
{"id": 1629, "prediction": "Visits an annotation of the given type ."}
{"id": 1630, "prediction": "Visits a NestMember of this feature ."}
{"id": 1631, "prediction": "Visits an inner class ."}
{"id": 1632, "prediction": "Visits a field ."}
{"id": 1633, "prediction": "Get the thread session ."}
{"id": 1634, "prediction": "Closes the current thread session ."}
{"id": 1635, "prediction": "Create the execution array ."}
{"id": 1636, "prediction": "Invokes the action method ."}
{"id": 1637, "prediction": "Read the request body and return it as a String ."}
{"id": 1638, "prediction": "Calculates the first item index of a page ."}
{"id": 1639, "prediction": "Returns the index of the first page of a page request ."}
{"id": 1640, "prediction": "Returns whether this pattern matches the specified value ."}
{"id": 1641, "prediction": "Converts an array of characters to a byte array ."}
{"id": 1642, "prediction": "Returns the index of the first occurrence of the specified match in the source array or - 1 if no match is found ."}
{"id": 1643, "prediction": "Resolves the name of the given node according to the tagCase attribute ."}
{"id": 1644, "prediction": "Resolves the attribute name ."}
{"id": 1645, "prediction": "Renders an attribute into the appendable"}
{"id": 1646, "prediction": "Loads properties from file ."}
{"id": 1647, "prediction": "Loads the props from the given file ."}
{"id": 1648, "prediction": "Load props from an input stream ."}
{"id": 1649, "prediction": "Loads a set of properties ."}
{"id": 1650, "prediction": "Loads a map of properties with a prefix ."}
{"id": 1651, "prediction": "Load Props from the classpath ."}
{"id": 1652, "prediction": "Returns the value for the given key from the active profiles or the given default value if the key does not exist ."}
{"id": 1653, "prediction": "Set a value for a profile property ."}
{"id": 1654, "prediction": "Extract properties from target map ."}
{"id": 1655, "prediction": "Extract properties from target map ."}
{"id": 1656, "prediction": "Extract sub properties ."}
{"id": 1657, "prediction": "Extract the properties from an inner map ."}
{"id": 1658, "prediction": "Adds the values in the specified map to the specified profile ."}
{"id": 1659, "prediction": "Resolves the active profiles ."}
{"id": 1660, "prediction": "Gets all profiles ."}
{"id": 1661, "prediction": "Gets all profiles for a given property key name wildcard ."}
{"id": 1662, "prediction": "Adds a PropertyInjectionPoint to this injection point ."}
{"id": 1663, "prediction": "Add a SetInjectionPoint to the injection list ."}
{"id": 1664, "prediction": "Adds a MethodInjectionPoint ."}
{"id": 1665, "prediction": "Add init - method points to the list of init - method points ."}
{"id": 1666, "prediction": "Add destroy method points to the list of methods to destroy ."}
{"id": 1667, "prediction": "Resolves the target class for the given proxy ."}
{"id": 1668, "prediction": "Inject target object into wrapper ."}
{"id": 1669, "prediction": "Gets the target wrapper type ."}
{"id": 1670, "prediction": "Returns the field descriptor for the given field on this class or any of its superclasses ."}
{"id": 1671, "prediction": "Returns the type of this field descriptor or the type of the corresponding getter or setter ."}
{"id": 1672, "prediction": "Resolves the key type ."}
{"id": 1673, "prediction": "Resolves the component type for this field ."}
{"id": 1674, "prediction": "Construct a JsonResult from a given object ."}
{"id": 1675, "prediction": "Creates a new JSON result with the given exception ."}
{"id": 1676, "prediction": "Resolves an HTTP method from the given method name ."}
{"id": 1677, "prediction": "Checks whether the given string matches the given pattern ."}
{"id": 1678, "prediction": "Resolves the loading for the specified class ."}
{"id": 1679, "prediction": "Resolves the resource loading for the given resource name ."}
{"id": 1680, "prediction": "Attempts to load the class with the given name ."}
{"id": 1681, "prediction": "Returns the URL of the resource with the given name ."}
{"id": 1682, "prediction": "Waits for the thread to end ."}
{"id": 1683, "prediction": "Returns the annotation type of the given array of annotations ."}
{"id": 1684, "prediction": "Build an injection point ."}
{"id": 1685, "prediction": "Processes all declared properties and any transient flags ."}
{"id": 1686, "prediction": "Returns an array of URLs for the given class ."}
{"id": 1687, "prediction": "Sets the bean ."}
{"id": 1688, "prediction": "Updates the bean associated with this supplier ."}
{"id": 1689, "prediction": "Loads the property descriptor ."}
{"id": 1690, "prediction": "Returns the getter for the property ."}
{"id": 1691, "prediction": "Gets the setter ."}
{"id": 1692, "prediction": "Connects to the database specified by the connection provider ."}
{"id": 1693, "prediction": "Adds an iterator to the list ."}
{"id": 1694, "prediction": "Prints the URL of the site ."}
{"id": 1695, "prediction": "Stops the application ."}
{"id": 1696, "prediction": "Create a socket to the given host and port ."}
{"id": 1697, "prediction": "Create a new SSL socket and connect it ."}
{"id": 1698, "prediction": "Returns the default SSLSocketFactory for this connection ."}
{"id": 1699, "prediction": "Returns the socket factory for this connection factory ."}
{"id": 1700, "prediction": "Returns a random string from the specified array of characters ."}
{"id": 1701, "prediction": "Returns a random string from the specified range ."}
{"id": 1702, "prediction": "Generates a number of random characters from the specified ranges ."}
{"id": 1703, "prediction": "Method newArrayInstance ."}
{"id": 1704, "prediction": "Injects value into object ."}
{"id": 1705, "prediction": "Attempts to convert the specified value to the specified type ."}
{"id": 1706, "prediction": "Visit a provide service ."}
{"id": 1707, "prediction": "Returns a default type cache ."}
{"id": 1708, "prediction": "Associates the specified value with the specified type ."}
{"id": 1709, "prediction": "Gets all method descriptors ."}
{"id": 1710, "prediction": "Resolves an IP address for a given hostname ."}
{"id": 1711, "prediction": "Returns the IP address as an int ."}
{"id": 1712, "prediction": "Checks to see if the provided string is a valid IPAdress V4 format ."}
{"id": 1713, "prediction": "Resolves a host name from a byte array ."}
{"id": 1714, "prediction": "Downloads the content of a URL into a byte array ."}
{"id": 1715, "prediction": "Downloads a string from a URL ."}
{"id": 1716, "prediction": "Downloads the file from the given url ."}
{"id": 1717, "prediction": "Inject all madvoc targets for the given action request ."}
{"id": 1718, "prediction": "Declares outject the given action request ."}
{"id": 1719, "prediction": "Create a new socket from a hostname and a port ."}
{"id": 1720, "prediction": "Connects to the server with the specified hostname and port with the specified connection timeout ."}
{"id": 1721, "prediction": "Returns index of the corresponding primitive class ."}
{"id": 1722, "prediction": "Attempts to load the class with the given name using the given class loader or the current class loader ."}
{"id": 1723, "prediction": "Load an array class by component type ."}
{"id": 1724, "prediction": "Called when the server shuts down ."}
{"id": 1725, "prediction": "Searches for the element in the array ."}
{"id": 1726, "prediction": "Returns a new BinarySearch instance for the elements in the given array using the given comparator ."}
{"id": 1727, "prediction": "Exclude some of the rules from being called ."}
{"id": 1728, "prediction": "Includes the specified rule from this rule ."}
{"id": 1729, "prediction": "include the specified template class as this instance"}
{"id": 1730, "prediction": "Starts a START tag with the specified index ."}
{"id": 1731, "prediction": "Registers a component with the specified name and consumer ."}
{"id": 1732, "prediction": "Resolves the SQL type of the specified column ."}
{"id": 1733, "prediction": "Preprocess a SQL string so it can be used as a key ."}
{"id": 1734, "prediction": "Returns a ResultSetMapper that can be used to mapper the specified ResultSet object ."}
{"id": 1735, "prediction": "Returns the primary key of the given type ."}
{"id": 1736, "prediction": "Populate the columns associated with the given generated key ."}
{"id": 1737, "prediction": "Create a new instance of the action interceptor class ."}
{"id": 1738, "prediction": "Set bean ."}
{"id": 1739, "prediction": "Sets a map from a query ."}
{"id": 1740, "prediction": "Sets the objects of this Q object ."}
{"id": 1741, "prediction": "Inserts a new chunk after the specified previous chunk ."}
{"id": 1742, "prediction": "Looks up the type of an entity ."}
{"id": 1743, "prediction": "Finds the column reference ."}
{"id": 1744, "prediction": "Resolves a table for a given entity descriptor ."}
{"id": 1745, "prediction": "Resolves the class for the given object ."}
{"id": 1746, "prediction": "Appends a space at the end of the string ."}
{"id": 1747, "prediction": "Returns an enumeration of file parameter names ."}
{"id": 1748, "prediction": "Does the given page include the given request?"}
{"id": 1749, "prediction": "Returns the full URL for the given request ."}
{"id": 1750, "prediction": "Gets the full request URI from the specified request or null if the request is null ."}
{"id": 1751, "prediction": "Resolves parameter names for an action method ."}
{"id": 1752, "prediction": "Starts the application ."}
{"id": 1753, "prediction": "Stops the container and cleans up all resources ."}
{"id": 1754, "prediction": "Filter by subject ."}
{"id": 1755, "prediction": "Filter by message id ."}
{"id": 1756, "prediction": "Filter by from address ."}
{"id": 1757, "prediction": "Filter by to address ."}
{"id": 1758, "prediction": "Add a cc recipient address ."}
{"id": 1759, "prediction": "Filter through a BCC recipient address ."}
{"id": 1760, "prediction": "Filter by flags ."}
{"id": 1761, "prediction": "Adds a boolean flag to the email ."}
{"id": 1762, "prediction": "Filter by received date term ."}
{"id": 1763, "prediction": "Filter by sent date ."}
{"id": 1764, "prediction": "Appends a size term to the search term ."}
{"id": 1765, "prediction": "Perform an AND operation over the specified email filters ."}
{"id": 1766, "prediction": "Perform an OR operation over the specified email filters ."}
{"id": 1767, "prediction": "Negates a given email filter ."}
{"id": 1768, "prediction": "Concatenates the search term to the current and the current or operation ."}
{"id": 1769, "prediction": "Returns a base 32 string representation of the given byte array ."}
{"id": 1770, "prediction": "Converts value to byte array ."}
{"id": 1771, "prediction": "Determines if the request is eligible for Gzip ."}
{"id": 1772, "prediction": "Validates the given object against the current schema ."}
{"id": 1773, "prediction": "Perform validation for the specified target object and target name ."}
{"id": 1774, "prediction": "Adds a profile to be enabled ."}
{"id": 1775, "prediction": "Adds a list of enabled profiles ."}
{"id": 1776, "prediction": "Checks if the given profiles match the current profiles ."}
{"id": 1777, "prediction": "Parses the request body to an object of the given type ."}
{"id": 1778, "prediction": "Returns the number of milliseconds since the epoch ."}
{"id": 1779, "prediction": "Add the given date to this date and return the result ."}
{"id": 1780, "prediction": "Subtract jds from this date ."}
{"id": 1781, "prediction": "Set the element f to an integer ."}
{"id": 1782, "prediction": "Initialize the parser with a char array ."}
{"id": 1783, "prediction": "Emit a comment ."}
{"id": 1784, "prediction": "Error function ."}
{"id": 1785, "prediction": "Create a password hash ."}
{"id": 1786, "prediction": "Generate a PBKDF2 secret key ."}
{"id": 1787, "prediction": "Convert a hex string to a byte array ."}
{"id": 1788, "prediction": "Resolve provider definitions ."}
{"id": 1789, "prediction": "Sets the email attachment name ."}
{"id": 1790, "prediction": "Sets the content id from the name of the attachment ."}
{"id": 1791, "prediction": "Resolves the content type ."}
{"id": 1792, "prediction": "Parses a type signature ."}
{"id": 1793, "prediction": "Returns the size in bytes of the attributes table ."}
{"id": 1794, "prediction": "Puts the module attributes into the given byte vector ."}
{"id": 1795, "prediction": "Decode the given string with the given encoding and return the decoded string . If the encoding is null or empty the original string is returned ."}
{"id": 1796, "prediction": "Decode a query string with the given encoding ."}
{"id": 1797, "prediction": "Starts the database ."}
{"id": 1798, "prediction": "Check the connection provider and close the connection ."}
{"id": 1799, "prediction": "overrides the visitor to create the method signature ."}
{"id": 1800, "prediction": "Overrides the visitor to collect all super classes and interfaces ."}
{"id": 1801, "prediction": "Create a method signature ."}
{"id": 1802, "prediction": "Converts an array of objects to a CSV string ."}
{"id": 1803, "prediction": "Convert a string to an array of strings ."}
{"id": 1804, "prediction": "Resolves a constructor for the given class ."}
{"id": 1805, "prediction": "Attempts to create a class reader for the given class ."}
{"id": 1806, "prediction": "Gets or creates a class reader for a proxy ."}
{"id": 1807, "prediction": "Returns the result of encrypting the specified string ."}
{"id": 1808, "prediction": "Decrypt a string ."}
{"id": 1809, "prediction": "Returns a logger by name ."}
{"id": 1810, "prediction": "Sets the cookie name ."}
{"id": 1811, "prediction": "Creates a new ActionRequest instance ."}
{"id": 1812, "prediction": "Create a new instance of the specified wrapper class ."}
{"id": 1813, "prediction": "Destroys a bean ."}
{"id": 1814, "prediction": "Called when the application is being destroyed ."}
{"id": 1815, "prediction": "Retrieves all messages from this folder and copies them to the target folder ."}
{"id": 1816, "prediction": "Launches the ClusteredServiceContainer ."}
{"id": 1817, "prediction": "Runs the reporting function ."}
{"id": 1818, "prediction": "Prints an error message ."}
{"id": 1819, "prediction": "Print rate ."}
{"id": 1820, "prediction": "Maps an existing file to a read - only buffer ."}
{"id": 1821, "prediction": "Close all streams and remove the replay destination ."}
{"id": 1822, "prediction": "Do the work ."}
{"id": 1823, "prediction": "Returns the current position in the log meta data ."}
{"id": 1824, "prediction": "Inserts a vector of messages into this buffer ."}
{"id": 1825, "prediction": "Adds padding to the current message ."}
{"id": 1826, "prediction": "Closes all resources associated with this session ."}
{"id": 1827, "prediction": "Polls for an error response from the server ."}
{"id": 1828, "prediction": "Sends a stop replay request for the given session id ."}
{"id": 1829, "prediction": "Fires an event message for an available image ."}
{"id": 1830, "prediction": "Indicate that an image is no longer available ."}
{"id": 1831, "prediction": "Reads status information from a counters reader and sends it to a channel ."}
{"id": 1832, "prediction": "Read the status of a receive channel ."}
{"id": 1833, "prediction": "Set the limit ."}
{"id": 1834, "prediction": "Appends a part of the given DirectBuffer to this BufferBuilder ."}
{"id": 1835, "prediction": "Return the next control session id and template id ."}
{"id": 1836, "prediction": "Maps a report file to a MappedByteBuffer ."}
{"id": 1837, "prediction": "Creates a snapshot of the current set of streams ."}
{"id": 1838, "prediction": "Create the default header ."}
{"id": 1839, "prediction": "Set the DirectBuffer containing the key information ."}
{"id": 1840, "prediction": "Set the DirectBuffer containing the labels of this counter message ."}
{"id": 1841, "prediction": "Connects to the remote Aeron server ."}
{"id": 1842, "prediction": "Attempts to connect to a remote peer ."}
{"id": 1843, "prediction": "Sends a close session request to the client ."}
{"id": 1844, "prediction": "Starts recording ."}
{"id": 1845, "prediction": "Sends a stop recording request to the server ."}
{"id": 1846, "prediction": "Sends a replay request ."}
{"id": 1847, "prediction": "Stops a replay request ."}
{"id": 1848, "prediction": "Lists recordings ."}
{"id": 1849, "prediction": "Helper method to encode and list recordings for uri ."}
{"id": 1850, "prediction": "List recording ."}
{"id": 1851, "prediction": "Extend recording ."}
{"id": 1852, "prediction": "Gets recording position ."}
{"id": 1853, "prediction": "Puts a stop position on the buffer ."}
{"id": 1854, "prediction": "Sends a list of subscriptions to the server ."}
{"id": 1855, "prediction": "Returns true if the tag matches the endpoint or control address ."}
{"id": 1856, "prediction": "Returns the address of the destination address for the given channel uri ."}
{"id": 1857, "prediction": "Returns a description of this UdpChannel ."}
{"id": 1858, "prediction": "Adds a destination to this image connection ."}
{"id": 1859, "prediction": "Inserts a packet to the server ."}
{"id": 1860, "prediction": "Attempts to find a controlToggle for the given counters ."}
{"id": 1861, "prediction": "Add a parameter ."}
{"id": 1862, "prediction": "Gets the channel tag ."}
{"id": 1863, "prediction": "Gets the entity tag ."}
{"id": 1864, "prediction": "Add a session id to a channel ."}
{"id": 1865, "prediction": "Returns the tag of the parameter value ."}
{"id": 1866, "prediction": "Append padding to the end of the log ."}
{"id": 1867, "prediction": "Update the publisher limit and clean the buffer if necessary ."}
{"id": 1868, "prediction": "Returns a new UnsafeBufferPosition for the given name type sessionId and channel ."}
{"id": 1869, "prediction": "Returns the label name for the given data type ."}
{"id": 1870, "prediction": "Scans for the next available frame in the given buffer starting at the given offset and ending at the given maxLength ."}
{"id": 1871, "prediction": "Returns this object with all the null fields set ."}
{"id": 1872, "prediction": "Validates this context ."}
{"id": 1873, "prediction": "Sets a prefix for this channel ."}
{"id": 1874, "prediction": "Set the media type ."}
{"id": 1875, "prediction": "Set the control mode ."}
{"id": 1876, "prediction": "Sets the term length ."}
{"id": 1877, "prediction": "Set the term offset ."}
{"id": 1878, "prediction": "Set the linger namespace of the channel ."}
{"id": 1879, "prediction": "Opens a datagram channel and binds it to the end point ."}
{"id": 1880, "prediction": "Closes this read session ."}
{"id": 1881, "prediction": "Checks if a frame is valid for the given buffer and length ."}
{"id": 1882, "prediction": "Receives a datagram and returns its address ."}
{"id": 1883, "prediction": "This method is called when a new reTransmit action is received ."}
{"id": 1884, "prediction": "Processes the timeouts and cancels any active retransmits ."}
{"id": 1885, "prediction": "Convert a long status to its string representation ."}
{"id": 1886, "prediction": "Allocates a counter with the given name type and channel and writes it to the given buffer ."}
{"id": 1887, "prediction": "Resets this vector s internal state ."}
{"id": 1888, "prediction": "Validates this vector ."}
{"id": 1889, "prediction": "Validate the given vectors and compute the message length ."}
{"id": 1890, "prediction": "Calculate the producer window length for a given term buffer length ."}
{"id": 1891, "prediction": "Validates the socket buffer lengths ."}
{"id": 1892, "prediction": "Validate that the given page size is a valid page size ."}
{"id": 1893, "prediction": "Validates that the given session id range is within the given range ."}
{"id": 1894, "prediction": "Validates that the publication Unblock timeout is within the specified time interval ."}
{"id": 1895, "prediction": "Set the error code of the response ."}
{"id": 1896, "prediction": "Resets the state of the candidate leader and leadership term ."}
{"id": 1897, "prediction": "Returns a string representation of the given cluster members ."}
{"id": 1898, "prediction": "Adds all the publications from the specified members to the specified channel uri ."}
{"id": 1899, "prediction": "Closes all the publication on the given cluster members ."}
{"id": 1900, "prediction": "Returns whether or not the given cluster has an active quorum ."}
{"id": 1901, "prediction": "Return the quorum position for the given set of members ."}
{"id": 1902, "prediction": "Resets the log positions for the given cluster members ."}
{"id": 1903, "prediction": "Returns whether or not a given position has been reached by a given leadership term ."}
{"id": 1904, "prediction": "Returns true if the specified array of members has aWon vote on full count false otherwise ."}
{"id": 1905, "prediction": "Returns true if the specified cluster members have a majority vote false otherwise ."}
{"id": 1906, "prediction": "Determines a member from the given cluster members with the given member id and the given member endpoints ."}
{"id": 1907, "prediction": "Validates if the given memberEndpoints is the same as the memberEndpoints ."}
{"id": 1908, "prediction": "Return true if the two members have the same endpoints ."}
{"id": 1909, "prediction": "Returns true if the given cluster member is not the same as the given cluster member ."}
{"id": 1910, "prediction": "Checks if the given cluster member is a quorum candidate ."}
{"id": 1911, "prediction": "Return true if the provided member endpoints detail is not the same as the provided memberEndpoints ."}
{"id": 1912, "prediction": "Returns the index of the given member from the given cluster members ."}
{"id": 1913, "prediction": "Removes a member from an array ."}
{"id": 1914, "prediction": "Returns the highest id of all the given cluster members ."}
{"id": 1915, "prediction": "Attempts to map an existing cnc file to the corresponding ByteBuffer ."}
{"id": 1916, "prediction": "Returns true if driver is active false otherwise ."}
{"id": 1917, "prediction": "Returns true if the driver is active ."}
{"id": 1918, "prediction": "Determines if the driver is active ."}
{"id": 1919, "prediction": "Returns true if the driver has terminated ."}
{"id": 1920, "prediction": "Reads the length of a frame from the given UnsafeBuffer at the given offset ."}
{"id": 1921, "prediction": "Calculate the length of a frame and store it in a given buffer ."}
{"id": 1922, "prediction": "Writes a specific frame type to the given buffer ."}
{"id": 1923, "prediction": "Writes the flags at the given offset to the given buffer ."}
{"id": 1924, "prediction": "Writes the frame term offset to the given buffer ."}
{"id": 1925, "prediction": "Writes a frame term id to a given buffer ."}
{"id": 1926, "prediction": "Find counter id by recording id ."}
{"id": 1927, "prediction": "Find counter id by session ."}
{"id": 1928, "prediction": "Get the recording id for the given counterId ."}
{"id": 1929, "prediction": "Determine if the given countersReader has already been read for the given recording id ."}
{"id": 1930, "prediction": "Puts the application - specific feedback field into the message ."}
{"id": 1931, "prediction": "Reload all entries from the file ."}
{"id": 1932, "prediction": "Returns the last term in the list ."}
{"id": 1933, "prediction": "Creates a recovery plan for the given archive and service count ."}
{"id": 1934, "prediction": "Creates a recovery plan from a list of snapshots ."}
{"id": 1935, "prediction": "Append a term record ."}
{"id": 1936, "prediction": "Append a snapshot of a record ."}
{"id": 1937, "prediction": "Commits the log position of the given record ."}
{"id": 1938, "prediction": "Writes a single entry to the current partition ."}
{"id": 1939, "prediction": "Closes the session and subscription ."}
{"id": 1940, "prediction": "Inserts a vector into this buffer ."}
{"id": 1941, "prediction": "Unblock the current term from the log meta data ."}
{"id": 1942, "prediction": "Returns a string representation of the channel ."}
{"id": 1943, "prediction": "Set the channel name ."}
{"id": 1944, "prediction": "Checks that the given term length is valid ."}
{"id": 1945, "prediction": "Checks that the given page size is a valid page size ."}
{"id": 1946, "prediction": "CAS the active term count for the given metadata buffer ."}
{"id": 1947, "prediction": "Computes the position of the given active term and term offset by the given amount of bits to shift ."}
{"id": 1948, "prediction": "Compute the log length for the given term length and file page size ."}
{"id": 1949, "prediction": "Stores the default frame header to the given UnsafeBuffer ."}
{"id": 1950, "prediction": "Applies the default header to the given metadata buffer and term buffer ."}
{"id": 1951, "prediction": "Rotates a log of the given term count and term id ."}
{"id": 1952, "prediction": "Initialises the tail with the given term id ."}
{"id": 1953, "prediction": "Gets the offset of the term from the raw data ."}
{"id": 1954, "prediction": "Gets the rawTailVolatile of the active term count and the partition index ."}
{"id": 1955, "prediction": "CAS the raw tail for a partition ."}
{"id": 1956, "prediction": "Set the token length and offset of the given DirectBuffer to the given values ."}
{"id": 1957, "prediction": "Allocates a counter ."}
{"id": 1958, "prediction": "Find the id of the counter ."}
{"id": 1959, "prediction": "Checks if the given counters have a replay ."}
{"id": 1960, "prediction": "Get snapshot recording id for the given counters ."}
{"id": 1961, "prediction": "Convert flags to chars ."}
{"id": 1962, "prediction": "Sets the channel name ."}
{"id": 1963, "prediction": "Puts a chunk of data into the buffer at the given offset ."}
{"id": 1964, "prediction": "Wraps the content of the given buffer starting from the given offset to the given length ."}
{"id": 1965, "prediction": "Commits the frame - length header to the stream ."}
{"id": 1966, "prediction": "Aborts the header ."}
{"id": 1967, "prediction": "Main entry point for the media driver ."}
{"id": 1968, "prediction": "Close all resources associated with this context ."}
{"id": 1969, "prediction": "Returns the position of this frame in terms of the frame length ."}
{"id": 1970, "prediction": "Allocates a counter with the specified service id and adds it to the specified buffer ."}
{"id": 1971, "prediction": "Find the counter id for a given service id ."}
{"id": 1972, "prediction": "Takes a snapshot of the counters ."}
{"id": 1973, "prediction": "Allocates a new counter ."}
{"id": 1974, "prediction": "Close the MappedByteBuffer and remove it from the cncByteBuffer ."}
{"id": 1975, "prediction": "Dispatch a recording descriptor to a consumer ."}
{"id": 1976, "prediction": "Add a new slab to the pool ."}
{"id": 1977, "prediction": "Set a byte at the given index ."}
{"id": 1978, "prediction": "Adds the statistics ."}
{"id": 1979, "prediction": "Calculates the row ranges based on the supplied FilterCompat ."}
{"id": 1980, "prediction": "Converts an array_element to a group type ."}
{"id": 1981, "prediction": "Convert a struct type to a group type ."}
{"id": 1982, "prediction": "Returns an annotation message for the given position ."}
{"id": 1983, "prediction": "Ends the previous bit packed run and resets the number of groups to zero ."}
{"id": 1984, "prediction": "Reads one thrift element and writes it to out ."}
{"id": 1985, "prediction": "Get a list of Footers for the specified path ."}
{"id": 1986, "prediction": "Read a list of Footers from the specified summary file ."}
{"id": 1987, "prediction": "Reads a footer with a given metadata filter ."}
{"id": 1988, "prediction": "Read the next row group ."}
{"id": 1989, "prediction": "Reads the next row group ."}
{"id": 1990, "prediction": "Reads a dictionary ."}
{"id": 1991, "prediction": "Adds an internalParquetRecordWriter to the memory manager ."}
{"id": 1992, "prediction": "Remove a writer ."}
{"id": 1993, "prediction": "Update the allocation for all the writers ."}
{"id": 1994, "prediction": "Register a call back . The call back is registered only if it has been registered already ."}
{"id": 1995, "prediction": "Starts the stream ."}
{"id": 1996, "prediction": "Starts a new block and sets up internal state ."}
{"id": 1997, "prediction": "Starts a new column"}
{"id": 1998, "prediction": "Writes a dictionary page ."}
{"id": 1999, "prediction": "Write a single data page ."}
{"id": 2000, "prediction": "Writes a new column to the index ."}
{"id": 2001, "prediction": "Ends the current block ."}
{"id": 2002, "prediction": "Copy a part of an input stream to another ."}
{"id": 2003, "prediction": "Ends the state and writes the current column indexes and offset indexes to the output stream ."}
{"id": 2004, "prediction": "Merge a list of metadata files into a single metadata object ."}
{"id": 2005, "prediction": "Write all the metadata files to the local filesystem ."}
{"id": 2006, "prediction": "Write a metadata file with all of the job footers ."}
{"id": 2007, "prediction": "Merges a set of GlobalMetaData objects into a single global metadata object ."}
{"id": 2008, "prediction": "Reads a single value ."}
{"id": 2009, "prediction": "Return true if the schema type is NULL or UNION"}
{"id": 2010, "prediction": "Returns the first non - null object ."}
{"id": 2011, "prediction": "Create a value from a string and a schema ."}
{"id": 2012, "prediction": "Extracts the ThriftMetaData from extra metadata ."}
{"id": 2013, "prediction": "Converts thrift class to ThriftMetaData"}
{"id": 2014, "prediction": "Converts to extra meta data ."}
{"id": 2015, "prediction": "Writes null to the log ."}
{"id": 2016, "prediction": "Write a single page of data ."}
{"id": 2017, "prediction": "Initializes the DeltaBinaryPackingConfig instance from a given page ."}
{"id": 2018, "prediction": "Allocates the values buffer ."}
{"id": 2019, "prediction": "Check that the enum at the given index is compatible with the expected enum type ."}
{"id": 2020, "prediction": "Calculate the bit widths for the mini block buffer"}
{"id": 2021, "prediction": "Throws an exception if the given exception is of the given type ."}
{"id": 2022, "prediction": "Gets statistics based on the primitive type ."}
{"id": 2023, "prediction": "Get a builder for a given primitive type ."}
{"id": 2024, "prediction": "Merge a statistics object into this object ."}
{"id": 2025, "prediction": "Gets the non - null schema ."}
{"id": 2026, "prediction": "Create a new TaskAttemptContext with the given configuration and TaskAttemptID ."}
{"id": 2027, "prediction": "Tries to invoke a method ."}
{"id": 2028, "prediction": "Display the members of this class as a string ."}
{"id": 2029, "prediction": "Merges all fields from the given group type into this one ."}
{"id": 2030, "prediction": "Initializes the counter from a reporter ."}
{"id": 2031, "prediction": "Get a filtered record filter ."}
{"id": 2032, "prediction": "Get all footer for a list of files ."}
{"id": 2033, "prediction": "Generates the splits from the row group blocks and the hdfs blocks array ."}
{"id": 2034, "prediction": "Writes a message to the message writer ."}
{"id": 2035, "prediction": "Check that all fields match the GroupType schema ."}
{"id": 2036, "prediction": "Serializes a message descriptor to a string ."}
{"id": 2037, "prediction": "Create a codec factory ."}
{"id": 2038, "prediction": "get a list of missing required fields"}
{"id": 2039, "prediction": "check set if it is a set"}
{"id": 2040, "prediction": "Reads the contents of an InputStream and returns a FileMetaData instance ."}
{"id": 2041, "prediction": "Closes the output stream ."}
{"id": 2042, "prediction": "Set the job s schema"}
{"id": 2043, "prediction": "Adds a type to the Parquet model ."}
{"id": 2044, "prediction": "Asserts that the given column type is a valid type for the given primitive type ."}
{"id": 2045, "prediction": "Throws an IllegalArgumentException if the given value is not an int ."}
{"id": 2046, "prediction": "Create a schema mapping from an arrow schema . The keys are the types of the keys and the values are the types of the values ."}
{"id": 2047, "prediction": "Create a schema mapping from a Parquet schema ."}
{"id": 2048, "prediction": "Given an arrow schema and an MessageType schema return a SchemaMapping representing the children of the schema ."}
{"id": 2049, "prediction": "Writes a new DataPageV2 header to an OutputStream ."}
{"id": 2050, "prediction": "Skip all records that match the criteria defined by the current definition level ."}
{"id": 2051, "prediction": "Serialize an object to the given configuration as a base64 string ."}
{"id": 2052, "prediction": "Removes an entry from the cache ."}
{"id": 2053, "prediction": "Add a new value to the cache ."}
{"id": 2054, "prediction": "Returns current value associated with key ."}
{"id": 2055, "prediction": "Write a value to an Avro schema ."}
{"id": 2056, "prediction": "Write value without conversion ."}
{"id": 2057, "prediction": "Set the glob as a regular expression ."}
{"id": 2058, "prediction": "Prints the content to a file ."}
{"id": 2059, "prediction": "Opens an input stream for the given filename ."}
{"id": 2060, "prediction": "Returns a record filter that matches columns whose descriptor matches the given predicate ."}
{"id": 2061, "prediction": "Converts the given struct type to the Thrift schema type ."}
{"id": 2062, "prediction": "Create a new group type with the given repetition and alias for the given logical type annotation and nested type ."}
{"id": 2063, "prediction": "Create a new group type for a list of elements ."}
{"id": 2064, "prediction": "Gets the merged key - value metadata ."}
{"id": 2065, "prediction": "Gets a single split from a ParquetInputSplit ."}
{"id": 2066, "prediction": "Get the fields by name ."}
{"id": 2067, "prediction": "Resolves the schema access for the requested column ."}
{"id": 2068, "prediction": "Get the list of input files based on the input name ."}
{"id": 2069, "prediction": "Throws an exception if the list of files is empty ."}
{"id": 2070, "prediction": "Get the list of input files from a partition directory ."}
{"id": 2071, "prediction": "Returns a new instance of the wrapped record filter that allows only a page of data ."}
{"id": 2072, "prediction": "Create a ListConsumer and pass it to the supplied consumer ."}
{"id": 2073, "prediction": "Initialize the pathToPartitionInfo map from the job configuration ."}
{"id": 2074, "prediction": "Merge the given tuple with the current data ."}
{"id": 2075, "prediction": "This method is used to sum up values in a Tuple"}
{"id": 2076, "prediction": "Fill in fields with non - empty fields ."}
{"id": 2077, "prediction": "Read a map entry ."}
{"id": 2078, "prediction": "Writes an integer to the output stream ."}
{"id": 2079, "prediction": "Read 4 bytes in little - endian byte order ."}
{"id": 2080, "prediction": "Set the Avro schema for the job ."}
{"id": 2081, "prediction": "Create a topic if does not exist ."}
{"id": 2082, "prediction": "Creates a copy of the given pipeline stage beans ."}
{"id": 2083, "prediction": "Creates a StageBean for a particular instance or a library task ."}
{"id": 2084, "prediction": "Create interceptors for a StageLibraryTask ."}
{"id": 2085, "prediction": "Creates interceptor bean ."}
{"id": 2086, "prediction": "Parses the given Avro schema and returns a Schema instance ."}
{"id": 2087, "prediction": "Converts milliseconds to days ."}
{"id": 2088, "prediction": "Extracts the AVRO schema from a header of a record ."}
{"id": 2089, "prediction": "upgrade from v1 to v2"}
{"id": 2090, "prediction": "Returns the length of the sequence ."}
{"id": 2091, "prediction": "Copy a list of files to a blobstore directory ."}
{"id": 2092, "prediction": "Resets the internal variables to their defaults ."}
{"id": 2093, "prediction": "Reports a thread health report ."}
{"id": 2094, "prediction": "Register a thread s health report gauge ."}
{"id": 2095, "prediction": "Stores the current configuration of the control hub for the given runtime info ."}
{"id": 2096, "prediction": "Returns true if the credential is authenticated false if not ."}
{"id": 2097, "prediction": "Attempts to upgrade a pipeline configuration if it doesn t already exist"}
{"id": 2098, "prediction": "Attempts to upgrade a library task into a stage configuration if the stage doesn t already exist ."}
{"id": 2099, "prediction": "Upgrade the stage if it s version is lower than def . version"}
{"id": 2100, "prediction": "Attempts to upgrade the specified service instance from the specified version to the current version if it doesn t already exist ."}
{"id": 2101, "prediction": "Attempts to upgrade the current instance of the StageDefinition to the version of the current one if it doesn t already exist ."}
{"id": 2102, "prediction": "Get all fields that do not exist"}
{"id": 2103, "prediction": "Checks if is system class ."}
{"id": 2104, "prediction": "Adds the specified element at the end of this list ."}
{"id": 2105, "prediction": "Adds the specified element to this queue and returns the evicted object . If the queue is full the specified element is evicted ."}
{"id": 2106, "prediction": "If value is present simply returns it . If value is not present simply returns it . If value is present simply returns it ."}
{"id": 2107, "prediction": "Add errors to a list of snapshots of all stages output ."}
{"id": 2108, "prediction": "Returns the descriptor for the given proto descriptor file and message type ."}
{"id": 2109, "prediction": "Given a set of file descriptors this method will return a map with the file descriptors as keys and the dependencies as values ."}
{"id": 2110, "prediction": "This method will go over every file descriptor and look for extensions and default values ."}
{"id": 2111, "prediction": "Returns the descriptor for the given message type or null if no such message type ."}
{"id": 2112, "prediction": "Convert a proto - file to a SDC field ."}
{"id": 2113, "prediction": "Convert a proto type message to a DynamicMessage ."}
{"id": 2114, "prediction": "Convert a proto type field into a protobuf message ."}
{"id": 2115, "prediction": "Converts a list of Config into a list of Config objects that can be moved to a JNDI config bean ."}
{"id": 2116, "prediction": "Check connection ."}
{"id": 2117, "prediction": "Converts a data type from a Kudu data type ."}
{"id": 2118, "prediction": "Creates a field from a row result ."}
{"id": 2119, "prediction": "Intercepts the given list of interceptors ."}
{"id": 2120, "prediction": "Returns the content of the line ."}
{"id": 2121, "prediction": "Adds missing configuration values to the specified stage ."}
{"id": 2122, "prediction": "Parse the response and return a Record instance ."}
{"id": 2123, "prediction": "Add the appropriate headers to the response ."}
{"id": 2124, "prediction": "Write response header to field ."}
{"id": 2125, "prediction": "Write response header to record header ."}
{"id": 2126, "prediction": "Save the metadata file ."}
{"id": 2127, "prediction": "Configures the client ."}
{"id": 2128, "prediction": "Attempts to parse the response headers only ."}
{"id": 2129, "prediction": "Increment source offset by 1 or by offset"}
{"id": 2130, "prediction": "Parse a pagination result ."}
{"id": 2131, "prediction": "Adds the first value of the request header to the header map ."}
{"id": 2132, "prediction": "Resolve all headers ."}
{"id": 2133, "prediction": "Processes a response and returns a single error message ."}
{"id": 2134, "prediction": "Returns true if the given property is defined false otherwise ."}
{"id": 2135, "prediction": "Convert a streamsets parser exception to a data parser exception ."}
{"id": 2136, "prediction": "Converts a generator exception to a data generator exception ."}
{"id": 2137, "prediction": "Attempts to retrieve the credentials from the file system ."}
{"id": 2138, "prediction": "previewWithOverride for a pipeline"}
{"id": 2139, "prediction": "Copy a character to a StringBuilder ."}
{"id": 2140, "prediction": "Removes duplicates from a set of packages ."}
{"id": 2141, "prediction": "This method removes all cached data from hdfs cache and removes them from hdfs cache ."}
{"id": 2142, "prediction": "Finds the next main line starting from the specified index ."}
{"id": 2143, "prediction": "Finds the complete line for the given chunk and adds it to the new chunk ."}
{"id": 2144, "prediction": "Closes the connection to the database ."}
{"id": 2145, "prediction": "Escapes | in a string so that it can be used in SQL statements ."}
{"id": 2146, "prediction": "Get the flow control settings ."}
{"id": 2147, "prediction": "Return a channel provider based on the current settings ."}
{"id": 2148, "prediction": "Puts the given batch of messages to this consumer ."}
{"id": 2149, "prediction": "Compiles the specified expression ."}
{"id": 2150, "prediction": "Create a GAppend expression that can be used as part of a digest expression ."}
{"id": 2151, "prediction": "Adds a dictionary from an input stream ."}
{"id": 2152, "prediction": "Adds a dictionary from the specified reader ."}
{"id": 2153, "prediction": "Stop the period and aggregate all data ."}
{"id": 2154, "prediction": "Roll up the data window and create a new data window ."}
{"id": 2155, "prediction": "Serialize Object to String"}
{"id": 2156, "prediction": "Deserialize a String body to a Java type"}
{"id": 2157, "prediction": "Deserialize Object from File"}
{"id": 2158, "prediction": "This is the main entry point for the error pipeline ."}
{"id": 2159, "prediction": "Evaluates an EL expression and returns the result of the evaluation ."}
{"id": 2160, "prediction": "Generate inner field from the list ."}
{"id": 2161, "prediction": "Returns the table name for the given metadata record ."}
{"id": 2162, "prediction": "Returns the name of the database associated with the given record . If no database is associated returns the default name ."}
{"id": 2163, "prediction": "Returns boolean value of internal field of the given record ."}
{"id": 2164, "prediction": "Returns the location of the given record ."}
{"id": 2165, "prediction": "Returns the value of CUSTOM_LOCATION record as a boolean . If the value is not a boolean the default value will be returned ."}
{"id": 2166, "prediction": "Get the AVRO schema from a given record ."}
{"id": 2167, "prediction": "Returns the data format of the given record"}
{"id": 2168, "prediction": "Create a new schema metadata field ."}
{"id": 2169, "prediction": "Throws an exception if the partition names are not in the Hive table names ."}
{"id": 2170, "prediction": "Generate a partition path for the given list of partitions ."}
{"id": 2171, "prediction": "Serialize a schema to an HMS ."}
{"id": 2172, "prediction": "Set the parameters based on the op code and the parameters ."}
{"id": 2173, "prediction": "Gets the system configuration ."}
{"id": 2174, "prediction": "Parses a date and time string into the number of milliseconds since the epoch ."}
{"id": 2175, "prediction": "Formats a string with the given template and the given arguments ."}
{"id": 2176, "prediction": "Starts a batch execution ."}
{"id": 2177, "prediction": "Check if record contains Solr fields and throw StageException if not ."}
{"id": 2178, "prediction": "Removes duplicate field names from the provided list ."}
{"id": 2179, "prediction": "Send an error exception to the error record handler ."}
{"id": 2180, "prediction": "Returns the dependency of the given jar name ."}
{"id": 2181, "prediction": "Parse the URL and return the dependency information ."}
{"id": 2182, "prediction": "Obtain an instance of a CouchbaseConnector ."}
{"id": 2183, "prediction": "Closes the bucket and environment ."}
{"id": 2184, "prediction": "Validate the config to make sure it is valid ."}
{"id": 2185, "prediction": "Gets label from string code ."}
{"id": 2186, "prediction": "Verifies that the dependency of the given ConfigDefinition exists ."}
{"id": 2187, "prediction": "This method is used to read a file from vault and add it to the leases map ."}
{"id": 2188, "prediction": "Gets the WriteOperationType from the header ."}
{"id": 2189, "prediction": "Writes a document to the bucket ."}
{"id": 2190, "prediction": "Build a subdoc mutation ."}
{"id": 2191, "prediction": "Generates a SQL string to add a column to a table ."}
{"id": 2192, "prediction": "Configures with the specified configs and a login context name ."}
{"id": 2193, "prediction": "Takes messages from the producer to the consumer ."}
{"id": 2194, "prediction": "Commits an offset to the consumer ."}
{"id": 2195, "prediction": "Indicates that the consumer has failed ."}
{"id": 2196, "prediction": "Injects configuration into the given stage ."}
{"id": 2197, "prediction": "Get definitions for a specific type"}
{"id": 2198, "prediction": "Returns the definition of the publisher with the given name ."}
{"id": 2199, "prediction": "Returns the formatted name of the given column . If the column name is not case sensitive it will be converted to upper case ."}
{"id": 2200, "prediction": "Returns a formatted version of the given value ."}
{"id": 2201, "prediction": "Get pipeline info by pipelineId and rev"}
{"id": 2202, "prediction": "Create a pipeline fragment"}
{"id": 2203, "prediction": "Returns a list of PipelineInfoJson objects for the specified filterText and label ."}
{"id": 2204, "prediction": "Import pipeline fragment"}
{"id": 2205, "prediction": "Returns the file path specified by dirPathTemplate and record ."}
{"id": 2206, "prediction": "Returns the operation code from the given record or - 1 if the operation is not supported ."}
{"id": 2207, "prediction": "Gets the field path ."}
{"id": 2208, "prediction": "Retrieves the enriched event from the queue waiting up to the specified time limit ."}
{"id": 2209, "prediction": "Returns the runner of the queue ."}
{"id": 2210, "prediction": "Get the runner that has been idle for the specified time . If no runner is currently in use this method returns null ."}
{"id": 2211, "prediction": "Returns a runner to the runtime ."}
{"id": 2212, "prediction": "Destroys this runner ."}
{"id": 2213, "prediction": "Validates that the container is not being destroyed and throws an exception if it is ."}
{"id": 2214, "prediction": "Checks to see if a specific stream exists ."}
{"id": 2215, "prediction": "Returns the last shard id for the given stream ."}
{"id": 2216, "prediction": "Process the error records in the given queue ."}
{"id": 2217, "prediction": "Override handleSqlException in order to add custom data error messages ."}
{"id": 2218, "prediction": "Get the column hash for the given op column ."}
{"id": 2219, "prediction": "Compares two files based on their last modified time ."}
{"id": 2220, "prediction": "If the given process is an instance of java . lang . Object this method retrieves the PID from the field . If the process is not an instance of java . lang . Object this method returns UNDETERMINED_PID ."}
{"id": 2221, "prediction": "Validate and extract fields to hash ."}
{"id": 2222, "prediction": "Get the UserGroupInformation for a given user ."}
{"id": 2223, "prediction": "Roll up and down statistics ."}
{"id": 2224, "prediction": "Get a snapshot of the current data collector information ."}
{"id": 2225, "prediction": "Ensure that a directory exists ."}
{"id": 2226, "prediction": "Runs the given schema table classifier on the given batch and writes the results to the given record writer ."}
{"id": 2227, "prediction": "Write a batch of records ."}
{"id": 2228, "prediction": "Writes an iterator of records to the cache ."}
{"id": 2229, "prediction": "Generates a more data event ."}
{"id": 2230, "prediction": "Returns the diff of the specified partition with the specified value . Returns null if no partition was found ."}
{"id": 2231, "prediction": "Update record header for HDFS based on avroSchema and location ."}
{"id": 2232, "prediction": "Processes the data associated with the given group and value ."}
{"id": 2233, "prediction": "Returns whether or not the given Stage definitions have the same version ."}
{"id": 2234, "prediction": "The main entry point for the Mesos driver ."}
{"id": 2235, "prediction": "Configure auth and build the OAuth client ."}
{"id": 2236, "prediction": "Resolve all headers ."}
{"id": 2237, "prediction": "Gets the HTTP method ."}
{"id": 2238, "prediction": "Fill null types ."}
{"id": 2239, "prediction": "Gets field null ."}
{"id": 2240, "prediction": "Attempts to load a schema from the schema registry ."}
{"id": 2241, "prediction": "Register a schema in the registry ."}
{"id": 2242, "prediction": "Loads a schema from the registry ."}
{"id": 2243, "prediction": "Gets the schema id for a given subject ."}
{"id": 2244, "prediction": "Loads a schema from the registry ."}
{"id": 2245, "prediction": "Write a schema id to an output stream ."}
{"id": 2246, "prediction": "Detects a schema id from a byte array ."}
{"id": 2247, "prediction": "Get all default values for a schema"}
{"id": 2248, "prediction": "Parses a single message ."}
{"id": 2249, "prediction": "Logs the validation results ."}
{"id": 2250, "prediction": "Returns a list of records which are bad for a given error sink ."}
{"id": 2251, "prediction": "Initializes the generator ."}
{"id": 2252, "prediction": "Gets the outward edge vertices for a given vertex ."}
{"id": 2253, "prediction": "Returns the inward edge vertices for a given vertex ."}
{"id": 2254, "prediction": "Serialize an offset map"}
{"id": 2255, "prediction": "Attempts to deserialize an offset map from the last source offset string ."}
{"id": 2256, "prediction": "Submits a report to the processing queue for processing ."}
{"id": 2257, "prediction": "Gets a report using the given report ID ."}
{"id": 2258, "prediction": "Checks if the check point file exists on HDFS ."}
{"id": 2259, "prediction": "Write offsets to the main offset file ."}
{"id": 2260, "prediction": "Deletes the blob with the given id ."}
{"id": 2261, "prediction": "Handle a GCS origin error ."}
{"id": 2262, "prediction": "If archiving is enabled copies the blob to the destination path . Otherwise move the blob to the destination path ."}
{"id": 2263, "prediction": "Gets the reader ."}
{"id": 2264, "prediction": "Releases the reader ."}
{"id": 2265, "prediction": "Set the DPM base URL ."}
{"id": 2266, "prediction": "Add a default header"}
{"id": 2267, "prediction": "Parses a String into a Date ."}
{"id": 2268, "prediction": "Escape a string for use in URL"}
{"id": 2269, "prediction": "Gets the client ."}
{"id": 2270, "prediction": "Initialize a connection with the given configuration ."}
{"id": 2271, "prediction": "Gets the table metadata ."}
{"id": 2272, "prediction": "Create a bulk inserter ."}
{"id": 2273, "prediction": "Creates a new EventBuilder ."}
{"id": 2274, "prediction": "Builds a schema from a map of fields and a set of levels ."}
{"id": 2275, "prediction": "Converts the given SDC code to an operation type ."}
{"id": 2276, "prediction": "Add a set of jars to the job for each class ."}
{"id": 2277, "prediction": "Add a set of jars to a job ."}
{"id": 2278, "prediction": "Checks if the field name is in the field order by list ."}
{"id": 2279, "prediction": "Checks if the field name is equal to one of the given condition expressions ."}
{"id": 2280, "prediction": "Get file size by offset ."}
{"id": 2281, "prediction": "Called by the Java premain method ."}
{"id": 2282, "prediction": "Return the parallelism of this consumer ."}
{"id": 2283, "prediction": "Runs a query ."}
{"id": 2284, "prediction": "Converts a list of field values to a LinkedHashMap ."}
{"id": 2285, "prediction": "Get the description for a table"}
{"id": 2286, "prediction": "Validate that a table can be inserted"}
{"id": 2287, "prediction": "Get the column type for a field"}
{"id": 2288, "prediction": "Returns true if type is nullable ."}
{"id": 2289, "prediction": "Get the schema for a table"}
{"id": 2290, "prediction": "Get the column properties"}
{"id": 2291, "prediction": "Returns the class for the given type name in the table schema ."}
{"id": 2292, "prediction": "This method initialises the Bean ."}
{"id": 2293, "prediction": "Gets the topic ."}
{"id": 2294, "prediction": "upgrade from version 5 to version 6"}
{"id": 2295, "prediction": "Returns an input stream that can be used to read the file ."}
{"id": 2296, "prediction": "Returns an OutputStream which can be used to write the file ."}
{"id": 2297, "prediction": "Returns true if the file exists false otherwise ."}
{"id": 2298, "prediction": "Create a permission from its string representation ."}
{"id": 2299, "prediction": "Checks that all required services are available for the current runtime engine ."}
{"id": 2300, "prediction": "Creates a simple aggregator instance ."}
{"id": 2301, "prediction": "Gets the aggregator unit ."}
{"id": 2302, "prediction": "Returns a new SimpleAggregatorData instance for the specified class and name with the specified time window ."}
{"id": 2303, "prediction": "Creates a new GroupByAggregator with the specified name and type ."}
{"id": 2304, "prediction": "Start the data provider with the given window end time ."}
{"id": 2305, "prediction": "Stop the aggregator data provider and return the data map ."}
{"id": 2306, "prediction": "Roll the aggregator data by the given window end time ."}
{"id": 2307, "prediction": "Acquire a login manager ."}
{"id": 2308, "prediction": "Releases the instance of LoginManager ."}
{"id": 2309, "prediction": "Converts a glob to a regular expression ."}
{"id": 2310, "prediction": "Lists the objects in the specified Amazon S3 bucket sorted lexicographically starting at the specified offset ."}
{"id": 2311, "prediction": "Stops the snapshot and deletes the snapshot from the snapshot store ."}
{"id": 2312, "prediction": "Returns an empty batch of all the runners that have been idle for a given time ."}
{"id": 2313, "prediction": "Creates a new failure snapshot ."}
{"id": 2314, "prediction": "Returns a BoundStatement for a given Record ."}
{"id": 2315, "prediction": "Set a new configuration ."}
{"id": 2316, "prediction": "Generates a KuduLookupKey for the given table ."}
{"id": 2317, "prediction": "Called when a partition is being Turned off or on ."}
{"id": 2318, "prediction": "Read a line and append it to a StringBuilder ."}
{"id": 2319, "prediction": "Roll the timer by a given multiplier ."}
{"id": 2320, "prediction": "Enable DPM on the RemoteSSO server"}
{"id": 2321, "prediction": "Disable aDPM instance ."}
{"id": 2322, "prediction": "Normalize Dpm base URL ."}
{"id": 2323, "prediction": "Retrieve the user token"}
{"id": 2324, "prediction": "Logout the current user"}
{"id": 2325, "prediction": "Updates the token file ."}
{"id": 2326, "prediction": "Updates the properties for the dpm . properties file ."}
{"id": 2327, "prediction": "Get the schema field for the given field ."}
{"id": 2328, "prediction": "Get the complex schema for the field ."}
{"id": 2329, "prediction": "Gets theimalScaleOrPrecision attribute of the given field . If the attribute is invalid then the default value is returned . If the attribute is not present then the default value is returned ."}
{"id": 2330, "prediction": "Returns the JsonNode representing the default value for the given schema ."}
{"id": 2331, "prediction": "Initializes the metrics if needed ."}
{"id": 2332, "prediction": "Compares two files based on last modified ."}
{"id": 2333, "prediction": "Get the index of the specified group ."}
{"id": 2334, "prediction": "Gets the names of all the groups ."}
{"id": 2335, "prediction": "Returns true if the given string contains a non - escaped character ; false otherwise ."}
{"id": 2336, "prediction": "Returns whether the character at the given position is escaping ."}
{"id": 2337, "prediction": "Return true if the position in the given string is not a escape character class ."}
{"id": 2338, "prediction": "Count the number of open parentheses in a string starting at pos ."}
{"id": 2339, "prediction": "Extract a group info from a named pattern ."}
{"id": 2340, "prediction": "Replaces all the occurrences of a regular expression with a replacement string ."}
{"id": 2341, "prediction": "This method does a get request and writes it to a JsonGenerator"}
{"id": 2342, "prediction": "Refresh the current table schema and table ."}
{"id": 2343, "prediction": "Return true if entry has expired ."}
{"id": 2344, "prediction": "Returns the file offset ."}
{"id": 2345, "prediction": "Reads the next EOL from the buffer and writes it back into the write mode ."}
{"id": 2346, "prediction": "This method returns an empty envelope for a Detached stage ."}
{"id": 2347, "prediction": "Converts a string to a number ."}
{"id": 2348, "prediction": "Parses a single part from the buffer ."}
{"id": 2349, "prediction": "Parses the values out of the buffer ."}
{"id": 2350, "prediction": "Looks up the primary keys for the specified table ."}
{"id": 2351, "prediction": "Creates the custom field mappings ."}
{"id": 2352, "prediction": "Returns the SQL type name for the given field type ."}
{"id": 2353, "prediction": "Returns the table name ."}
{"id": 2354, "prediction": "Set the primary keys of a record ."}
{"id": 2355, "prediction": "Format and throw a StageException ."}
{"id": 2356, "prediction": "Executes a batch of operations on this stage ."}
{"id": 2357, "prediction": "Prepare the given batch context ."}
{"id": 2358, "prediction": "Called after a batch execution has been completed ."}
{"id": 2359, "prediction": "Flattens the entire record into a map and a list ."}
{"id": 2360, "prediction": "Creates a DetachedStageRuntime instance ."}
{"id": 2361, "prediction": "Execute the operation and throw a OnRecordErrorException if the operation fails ."}
{"id": 2362, "prediction": "Gets the columns to parameters ."}
{"id": 2363, "prediction": "Gets the condition for the partition column ."}
{"id": 2364, "prediction": "Validates the stored and specified offset ."}
{"id": 2365, "prediction": "Returns the requested generator definitions ."}
{"id": 2366, "prediction": "Gets the non - empty arguments from a list of appArgs ."}
{"id": 2367, "prediction": "Returns an operation for the given table and operation code ."}
{"id": 2368, "prediction": "Convert bytes to display format ."}
{"id": 2369, "prediction": "Scans the current live file looking for files that match the current name ."}
{"id": 2370, "prediction": "Return the number of pending files ."}
{"id": 2371, "prediction": "Checks if a property is whitelisted in the specific whitelist ."}
{"id": 2372, "prediction": "Returns true if the set of versions matches the set of expected versions ."}
{"id": 2373, "prediction": "The main entry point for this example ."}
{"id": 2374, "prediction": "Propagate the runtime configuration into the current state ."}
{"id": 2375, "prediction": "Validate report description"}
{"id": 2376, "prediction": "Create a JdbcRecordWriter ."}
{"id": 2377, "prediction": "Create a new JdbcRecordWriter ."}
{"id": 2378, "prediction": "upgrade from v1 to v2"}
{"id": 2379, "prediction": "Extracts all named groups from the given raw data ."}
{"id": 2380, "prediction": "Sends a commit message to the consumer . The consumer will wait until the commit is completed ."}
{"id": 2381, "prediction": "Creates an embedded SDC instance ."}
{"id": 2382, "prediction": "Set the fields in record ."}
{"id": 2383, "prediction": "This method returns a list of PipelineAndValidationStatus objects ."}
{"id": 2384, "prediction": "Wraps the given future as an AckEvent and returns the results ."}
{"id": 2385, "prediction": "Create a gauge and add it to the registry ."}
{"id": 2386, "prediction": "Gets the columns to parameters ."}
{"id": 2387, "prediction": "Generate header attributes for a given file ."}
{"id": 2388, "prediction": "Validates the given record and throws an exception if it fails to do so ."}
{"id": 2389, "prediction": "Delete the old temp file ."}
{"id": 2390, "prediction": "Get avro input stream ."}
{"id": 2391, "prediction": "Returns a data file stream from the given input stream ."}
{"id": 2392, "prediction": "Write the data from an Avro file to a Parquet file ."}
{"id": 2393, "prediction": "Check input encrypt field ."}
{"id": 2394, "prediction": "Check input encrypt field ."}
{"id": 2395, "prediction": "Check input decrypt field ."}
{"id": 2396, "prediction": "Check input encrypted field ."}
{"id": 2397, "prediction": "Prepares the field for encrypting ."}
{"id": 2398, "prediction": "Use the given pattern as a parent matcher ."}
{"id": 2399, "prediction": "Appends the given replacement to the given StringBuffer ."}
{"id": 2400, "prediction": "Returns a map of all named groups ."}
{"id": 2401, "prediction": "Replaces all properties with the given replacement ."}
{"id": 2402, "prediction": "Ensure that an avro schema exists ."}
{"id": 2403, "prediction": "Retrieve a global variable from the data source ."}
{"id": 2404, "prediction": "Create start event record ."}
{"id": 2405, "prediction": "Create a record representing a pipeline stop event ."}
{"id": 2406, "prediction": "Fixes an offset for a column"}
{"id": 2407, "prediction": "Extracts valueStr from field with R runtime type"}
{"id": 2408, "prediction": "Add a query to add a partition to a table ."}
{"id": 2409, "prediction": "Executes alter table set table properties query ."}
{"id": 2410, "prediction": "Execute a describe database and return its location ."}
{"id": 2411, "prediction": "Executes the given SQL ."}
{"id": 2412, "prediction": "Executes a SQL query and returns the result set ."}
{"id": 2413, "prediction": "Run a single pipe at a time ."}
{"id": 2414, "prediction": "Iterates over all the records and calls the consumer for each of them ."}
{"id": 2415, "prediction": "Returns the trigger associated with the offset commit ."}
{"id": 2416, "prediction": "Returns true if any of the pipe has an error record set on this pipeline false otherwise ."}
{"id": 2417, "prediction": "Handles a consumer by passing a pipe to a consumer ."}
{"id": 2418, "prediction": "Returns the record id for the given record ."}
{"id": 2419, "prediction": "Gets the value from field ."}
{"id": 2420, "prediction": "Set the given DocumentFragment in the given Record ."}
{"id": 2421, "prediction": "Puts document in record ."}
{"id": 2422, "prediction": "Sets the N1QL property in the given record ."}
{"id": 2423, "prediction": "Creates a new S3FileRef based on the provided S3ObjectSummary . This is mostly used for extracting metadata and such ."}
{"id": 2424, "prediction": "Checks if the transaction contain the given gtid and seqNo ."}
{"id": 2425, "prediction": "Internal use of the current thread s context class loader ."}
{"id": 2426, "prediction": "Sets theStageCreator instance attribute ."}
{"id": 2427, "prediction": "Logs out from LDAP ."}
{"id": 2428, "prediction": "Sets the exceptions in the given configuration ."}
{"id": 2429, "prediction": "Replace the variables defined in the given path with the values defined in the configuration and resources directory ."}
{"id": 2430, "prediction": "Make sure that the class loader and the library that the class loader are allowed to access the path ."}
{"id": 2431, "prediction": "The main entry point for this example ."}
{"id": 2432, "prediction": "Get the directory path for the given date ."}
{"id": 2433, "prediction": "Renames a Path to a Path ."}
{"id": 2434, "prediction": "Checks if the record should be rolled ."}
{"id": 2435, "prediction": "Returns true if the given string matches the given pattern false otherwise ."}
{"id": 2436, "prediction": "Gets the file absolute paths ."}
{"id": 2437, "prediction": "Gets the remaining wait time ."}
{"id": 2438, "prediction": "Gets the Lag of the file offsetMap ."}
{"id": 2439, "prediction": "Creates and initializes a StageLibraryDelegate ."}
{"id": 2440, "prediction": "Create a StageLibraryDelegate from a StageLibraryTask ."}
{"id": 2441, "prediction": "Create new instance of delegate definitition ."}
{"id": 2442, "prediction": "Retrieve the value of a given metric from the metric registry ."}
{"id": 2443, "prediction": "Find the end of a header ."}
{"id": 2444, "prediction": "Returns the size of the response body in bytes ."}
{"id": 2445, "prediction": "Saves the data to a temporary file"}
{"id": 2446, "prediction": "Create SSLSocketFactory from keyAndTrustStoreClasspathPath and URL ."}
{"id": 2447, "prediction": "Return the MIME type for a given URI ."}
{"id": 2448, "prediction": "Sends the request to all registered interceptors ."}
{"id": 2449, "prediction": "Stops the server ."}
{"id": 2450, "prediction": "Add mappings to the router ."}
{"id": 2451, "prediction": "Sends the HTTP response to the given OutputStream ."}
{"id": 2452, "prediction": "Send a pending of bytes to the output stream ."}
{"id": 2453, "prediction": "Constructs a new fixed - length response ."}
{"id": 2454, "prediction": "Determines whether or not this instance should be used to create a gzip file ."}
{"id": 2455, "prediction": "Set a cookie ."}
{"id": 2456, "prediction": "Unload the queue of cookie headers from the response ."}
{"id": 2457, "prediction": "Decodes the given base64 - encoded value ."}
{"id": 2458, "prediction": "Encode cookie value as base64 string ."}
{"id": 2459, "prediction": "Sets the table name ."}
{"id": 2460, "prediction": "Returns the name of the given principal ."}
{"id": 2461, "prediction": "Inserts the session repository filter in the web . xml ."}
{"id": 2462, "prediction": "Resolves the principal name from the session ."}
{"id": 2463, "prediction": "Retrieve session from cache ."}
{"id": 2464, "prediction": "Returns the JNDI name associated with the specified model node ."}
{"id": 2465, "prediction": "Returns the canonical parameter types of the given view method ."}
{"id": 2466, "prediction": "Registers a synchronized object with the JCA for the current JCA instance ."}
{"id": 2467, "prediction": "The beforeCompletion method must be called before the jca syncs have completed their execution ."}
{"id": 2468, "prediction": "Returns the current transaction associated with this slot ."}
{"id": 2469, "prediction": "Checks to see if a BeanFactory is available and if so adds it to the deployment ."}
{"id": 2470, "prediction": "Returns true if the specified PersistenceUnitMetadata contains a valid cache region name ."}
{"id": 2471, "prediction": "Returns a list of all service names including client config and endpoint config ."}
{"id": 2472, "prediction": "Decrements the current readLock count and removes it from the pool ."}
{"id": 2473, "prediction": "Increments the readLockCount counter by one ."}
{"id": 2474, "prediction": "Adds a service to the deployment"}
{"id": 2475, "prediction": "This method sets the next expiration time in the future and sets the next date in the future ."}
{"id": 2476, "prediction": "Adds the search dependency to the deployment unit ."}
{"id": 2477, "prediction": "Make a non - standard bda visible from the top - level module ."}
{"id": 2478, "prediction": "Creates a JBoss agnostic meta data structure for the specified EJB deployment ."}
{"id": 2479, "prediction": "Set the config name and file ."}
{"id": 2480, "prediction": "Get a list of metadata from a list of SecurityConstraintMetaData objects ."}
{"id": 2481, "prediction": "Gets the servlet url pattern mappings ."}
{"id": 2482, "prediction": "Gets the servlet class mappings ."}
{"id": 2483, "prediction": "Resolves the bean ."}
{"id": 2484, "prediction": "Get the available connectors from the operation context ."}
{"id": 2485, "prediction": "Parse the core environment element ."}
{"id": 2486, "prediction": "Parse a process - id - environment element ."}
{"id": 2487, "prediction": "Returns the address of the resource represented by the given operation ."}
{"id": 2488, "prediction": "Sets the PathAddress on the given operation ."}
{"id": 2489, "prediction": "Returns the attribute value of the given operation ."}
{"id": 2490, "prediction": "Returns true if the default values should be included in the supplied operation ."}
{"id": 2491, "prediction": "Creates a composite operation ."}
{"id": 2492, "prediction": "Creates an operation that adds the given parameters to the given address ."}
{"id": 2493, "prediction": "Creates an operation that adds the given address to the given index ."}
{"id": 2494, "prediction": "Creates an operation that reads a single attribute from the given address ."}
{"id": 2495, "prediction": "Creates a write - attribute operation using the specified address and attribute value ."}
{"id": 2496, "prediction": "Creates an operation that undeferences a given attribute on the given address ."}
{"id": 2497, "prediction": "Returns the value associated with this context ."}
{"id": 2498, "prediction": "Adds a new URL context factory ."}
{"id": 2499, "prediction": "Remove a URL context factory ."}
{"id": 2500, "prediction": "Loads all providers using the given class loader ."}
{"id": 2501, "prediction": "Modify the deployment"}
{"id": 2502, "prediction": "Configure the endpoints of a servlet ."}
{"id": 2503, "prediction": "Modify the context root for the given deployment"}
{"id": 2504, "prediction": "Get the transport class name from the deployment ."}
{"id": 2505, "prediction": "Set the run as identity ."}
{"id": 2506, "prediction": "Removes the run as identity from the given security context ."}
{"id": 2507, "prediction": "This method is used to process the deployment management ."}
{"id": 2508, "prediction": "Injects a property value to an object ."}
{"id": 2509, "prediction": "Returns true if propertyType matches classType and propertyType"}
{"id": 2510, "prediction": "Finds a method matching the specified name and property type ."}
{"id": 2511, "prediction": "Find the field with the specified name and type ."}
{"id": 2512, "prediction": "Initialize the options ."}
{"id": 2513, "prediction": "Determines the useful information for the given HTTP request ."}
{"id": 2514, "prediction": "Perform a standalone collect ."}
{"id": 2515, "prediction": "Perform a simple collect operation that will return the contents of a report as a single report ."}
{"id": 2516, "prediction": "Registers a resource adapter deployment ."}
{"id": 2517, "prediction": "Unregisters a resource adapter deployment ."}
{"id": 2518, "prediction": "Register the transformers ."}
{"id": 2519, "prediction": "Writes an array of parameters to an output stream ."}
{"id": 2520, "prediction": "Read an exception from an input stream ."}
{"id": 2521, "prediction": "Gets the current thread as the owner of the lock ."}
{"id": 2522, "prediction": "Releases the lock on the session ."}
{"id": 2523, "prediction": "Adds a new log with the specified content ."}
{"id": 2524, "prediction": "Adds CDI flag to web . xml if CDI is enabled ."}
{"id": 2525, "prediction": "Returns the component view ."}
{"id": 2526, "prediction": "Invokes the method on the specified endpoint ."}
{"id": 2527, "prediction": "Returns the view method matching the specified sei method and the specified collection of view methods ."}
{"id": 2528, "prediction": "Returns whether the given sei method matches the given view method ."}
{"id": 2529, "prediction": "Create a JPA resource representing the statistics ."}
{"id": 2530, "prediction": "Get the security meta data for an EJB ."}
{"id": 2531, "prediction": "Gets the domain ."}
{"id": 2532, "prediction": "Ensure that the given domains are the same ."}
{"id": 2533, "prediction": "This method is only public so it can be accessed by sub - packages ."}
{"id": 2534, "prediction": "Returns the absolute name of the package ."}
{"id": 2535, "prediction": "Returns the JNDI name of the specified name ."}
{"id": 2536, "prediction": "Process the deployment root ."}
{"id": 2537, "prediction": "Override handleRequest in order to perform processing for the specified exchange ."}
{"id": 2538, "prediction": "Indicates whether or not the current transaction is active ."}
{"id": 2539, "prediction": "Returns the TransactionSynchronizationRegistry ."}
{"id": 2540, "prediction": "Returns the connection factory ."}
{"id": 2541, "prediction": "Gets the last component of a name ."}
{"id": 2542, "prediction": "Returns true if the given name is empty or contains only one element ."}
{"id": 2543, "prediction": "Get a NameNotFoundException ."}
{"id": 2544, "prediction": "Convenience method to create a NamingException with a message and a cause ."}
{"id": 2545, "prediction": "Convenience method to create a naming exception ."}
{"id": 2546, "prediction": "Create a CannotProceedException with the given object and remaining name ."}
{"id": 2547, "prediction": "Returns a NamingEnumeration based on a collection of objects ."}
{"id": 2548, "prediction": "Binds the supplied value to the specified name in the supplied context ."}
{"id": 2549, "prediction": "Get the current activeMQ component control ."}
{"id": 2550, "prediction": "Parse connection attributes 5 . 0 ."}
{"id": 2551, "prediction": "Creates a component instance and returns it ."}
{"id": 2552, "prediction": "This method is used to mount the latest Spring integration jar on a VFS ."}
{"id": 2553, "prediction": "Resolves the runtime name for the given address ."}
{"id": 2554, "prediction": "Create a listener builder ."}
{"id": 2555, "prediction": "Get the primitive analysis for the specified class ."}
{"id": 2556, "prediction": "Set the shutdown flag and wait until the component is restarted ."}
{"id": 2557, "prediction": "Get a linked list of URL patterns ."}
{"id": 2558, "prediction": "Get the servlets meta data ."}
{"id": 2559, "prediction": "Gets the servlet mappings ."}
{"id": 2560, "prediction": "Gets the security constraints ."}
{"id": 2561, "prediction": "Gets the login config meta data ."}
{"id": 2562, "prediction": "Gets the context params ."}
{"id": 2563, "prediction": "Returns the WebResourceCollectionsMetaData of the specified SecurityConstraintMetaData or a new WebResourceCollectionsMetaData object ."}
{"id": 2564, "prediction": "Returns a list of ParamValueMetaData from the specified ServletMetaData ."}
{"id": 2565, "prediction": "Create a new SecurityConstraintMetaData and add it to a list of SecurityConstraintMetaData ."}
{"id": 2566, "prediction": "Create a new WebResourceCollectionMetaData object ."}
{"id": 2567, "prediction": "Creates a new servlet with the specified name and class ."}
{"id": 2568, "prediction": "Create a new servlet mapping with the specified name and url patterns ."}
{"id": 2569, "prediction": "Create a new AuthConstraintMetaData with the specified role names and a new SecurityConstraintMetaData ."}
{"id": 2570, "prediction": "Create a new UserDataConstraintMetaData object and add it to the specified SecurityConstraintMetaData object ."}
{"id": 2571, "prediction": "Add a parameter value to a list of parameters ."}
{"id": 2572, "prediction": "Returns a new ParamValueMetaData with the specified key and value ."}
{"id": 2573, "prediction": "Registers SFSB interceptors for a session bean ."}
{"id": 2574, "prediction": "Processes the injection targets for the current resource ."}
{"id": 2575, "prediction": "Called when the container is stopped ."}
{"id": 2576, "prediction": "Returns the JNDI name of the specified model node ."}
{"id": 2577, "prediction": "Returns the value of the specified attribute in the specified model ."}
{"id": 2578, "prediction": "Determines the type of a URL pattern ."}
{"id": 2579, "prediction": "Checks to see if a pooled connection factory is targets a pooled connection factory ."}
{"id": 2580, "prediction": "Method that targets the external - pooled - connection - factory ."}
{"id": 2581, "prediction": "Get the activeMQ server name from properties ."}
{"id": 2582, "prediction": "Returns the default persistence unit name ."}
{"id": 2583, "prediction": "Start the activity ."}
{"id": 2584, "prediction": "Stops the activity and removes the creation listener ."}
{"id": 2585, "prediction": "Suspend all transactions and call the doneS suspended method ."}
{"id": 2586, "prediction": "Handles a resume of the server ."}
{"id": 2587, "prediction": "Called when an invocation is completed ."}
{"id": 2588, "prediction": "This method is called when a new transaction is created ."}
{"id": 2589, "prediction": "Start the resource bound to the naming store ."}
{"id": 2590, "prediction": "Stop the resource bound to the naming store ."}
{"id": 2591, "prediction": "Get the ServiceName for a given capability base name and dynamic parts"}
{"id": 2592, "prediction": "Creates the resource roots for the deployment ."}
{"id": 2593, "prediction": "Returns all module class loaders for the given deployment unit ."}
{"id": 2594, "prediction": "Do we need class file transformer?"}
{"id": 2595, "prediction": "Checks if the specified persistence unit allow two phase bootstrap ."}
{"id": 2596, "prediction": "Indicates whether or not data source should be use as a default data source ."}
{"id": 2597, "prediction": "Checks if data access should be skipped based on persistence . xml level check ."}
{"id": 2598, "prediction": "Returns an ORB instance for the specified server and port using the supplied environment ."}
{"id": 2599, "prediction": "Initialize an ORB with the given properties ."}
{"id": 2600, "prediction": "Initialize method handles ."}
{"id": 2601, "prediction": "Sets the active naming store ."}
{"id": 2602, "prediction": "Validate default values ."}
{"id": 2603, "prediction": "Check the parameter type ."}
{"id": 2604, "prediction": "Look up an annotation that has a default value ."}
{"id": 2605, "prediction": "Validate the base type of a method ."}
{"id": 2606, "prediction": "Return an array of ExtendedEntityManager instances ."}
{"id": 2607, "prediction": "Converts status constant to string ."}
{"id": 2608, "prediction": "Adds cache dependencies for the specified cache type ."}
{"id": 2609, "prediction": "Extracts the dialects from the properties ."}
{"id": 2610, "prediction": "Attempts to guess the database dialect from the data source ."}
{"id": 2611, "prediction": "Identify the dialect ."}
{"id": 2612, "prediction": "This method checks for the existence of a table in the database ."}
{"id": 2613, "prediction": "Returns the given date as a scheduler date . If the date is null returns null ."}
{"id": 2614, "prediction": "Set the node name in the prepared statement ."}
{"id": 2615, "prediction": "Marks the given deployment unit as a child of its parent ."}
{"id": 2616, "prediction": "Reads parameters from an input stream ."}
{"id": 2617, "prediction": "Writes an object to the retvalWriter"}
{"id": 2618, "prediction": "Writes an exception to the output stream ."}
{"id": 2619, "prediction": "Searches the class hierarchy starting at the specified index for the specified sub - class ."}
{"id": 2620, "prediction": "Begins a new SFSB creation ."}
{"id": 2621, "prediction": "Ends the creation of the SFSB ."}
{"id": 2622, "prediction": "Return the current SFSB call stack invocation ."}
{"id": 2623, "prediction": "Pushes a new list of entity managers to the stack and associates it with the current JTA transaction ."}
{"id": 2624, "prediction": "Removes the current SFSB call and returns the result as a Map ."}
{"id": 2625, "prediction": "Gets the current call ."}
{"id": 2626, "prediction": "Add beans . xml files in the deployment to the deployment manager s beans . xml files ."}
{"id": 2627, "prediction": "Reads all XML configuration files and tries to find a managed bean class ."}
{"id": 2628, "prediction": "Process all phase listeners defined in the configuration files ."}
{"id": 2629, "prediction": "Get the Java type name for a class ."}
{"id": 2630, "prediction": "Insert the specified primitive into the specified Any object ."}
{"id": 2631, "prediction": "Converts a Java name to a Unicode name ."}
{"id": 2632, "prediction": "Returns true if the specified string is a reserved keyword ."}
{"id": 2633, "prediction": "Returns a signature for a class ."}
{"id": 2634, "prediction": "Gets the signature for the given method ."}
{"id": 2635, "prediction": "Returns the corresponding primitive type name for the given primitive type ."}
{"id": 2636, "prediction": "Retrieves a BatchPermission instance by its name ."}
{"id": 2637, "prediction": "Gets or creates a transaction scoped entity manager ."}
{"id": 2638, "prediction": "Associates the specified value with the specified key in this map . If the map previously contained a mapping for the key the old value is replaced by the specified value ."}
{"id": 2639, "prediction": "Convert a camel - cased security - role definition into a ModelNode ."}
{"id": 2640, "prediction": "Returns the most recent entity version for the given TimerImpl ."}
{"id": 2641, "prediction": "Gets all timers for the specified object id ."}
{"id": 2642, "prediction": "Gets or creates the directory for the specified timed object id ."}
{"id": 2643, "prediction": "Add a naming listener to a named scope ."}
{"id": 2644, "prediction": "Remove a naming listener ."}
{"id": 2645, "prediction": "Fire a naming event ."}
{"id": 2646, "prediction": "Close the AutoCloseable ."}
{"id": 2647, "prediction": "Adds a credential to the subject s private credentials ."}
{"id": 2648, "prediction": "Attempts to retrieve an object instance using a registered object factory ."}
{"id": 2649, "prediction": "Adds a Tx interceptor for the given View ."}
{"id": 2650, "prediction": "Deletes the from and to characters from the given StringBuilder ."}
{"id": 2651, "prediction": "Create an in - VM transport configuration ."}
{"id": 2652, "prediction": "Adds the early prefix if the componentClass has a relative name ."}
{"id": 2653, "prediction": "Gets the root deployment unit ."}
{"id": 2654, "prediction": "Returns the service name of this view ."}
{"id": 2655, "prediction": "Create a view configuration for the given view class component configuration and component configuration ."}
{"id": 2656, "prediction": "Create an injection source for the given service ."}
{"id": 2657, "prediction": "Returns all view interceptors for the given method ."}
{"id": 2658, "prediction": "Adds or replaces an interceptor for all methods of the given interceptor factory with the given priority ."}
{"id": 2659, "prediction": "Adds a new view interceptor for the given method ."}
{"id": 2660, "prediction": "Returns all client interceptors for the given method ."}
{"id": 2661, "prediction": "Add a client interceptor to the proxy ."}
{"id": 2662, "prediction": "Add a client interceptor for the given method ."}
{"id": 2663, "prediction": "Puts a data object into the private data map ."}
{"id": 2664, "prediction": "Throws an exception reporting an unexpected XML element ."}
{"id": 2665, "prediction": "Returns the EJBEndpoint objects associated with the given DeploymentUnit ."}
{"id": 2666, "prediction": "Returns the JAX - WS endpoints of the given deployment unit ."}
{"id": 2667, "prediction": "Gets the endpoint name ."}
{"id": 2668, "prediction": "Gets the endpoint class ."}
{"id": 2669, "prediction": "Gets the servlet with the specified name ."}
{"id": 2670, "prediction": "Returns the required attachment value for the given attachment key ."}
{"id": 2671, "prediction": "Get optional attachment ."}
{"id": 2672, "prediction": "Returns the JBossWebMetaData for the given DeploymentUnit or null if it does not exist ."}
{"id": 2673, "prediction": "Get the JBossPortComponentMetaData for the port component with the specified name ."}
{"id": 2674, "prediction": "Gets the WebserviceMetadata EJBEndpoint ."}
{"id": 2675, "prediction": "Returns the context root of the deployment ."}
{"id": 2676, "prediction": "Loads the class with the given name ."}
{"id": 2677, "prediction": "Returns the URL of the resource with the given name ."}
{"id": 2678, "prediction": "Returns all resources with the given name ."}
{"id": 2679, "prediction": "Returns a list of all the resources under the specified path ."}
{"id": 2680, "prediction": "Removes a call to the non - transaction manager ."}
{"id": 2681, "prediction": "Gets the entity manager with the given name ."}
{"id": 2682, "prediction": "Registers a after - completion listener for the given JMS context ."}
{"id": 2683, "prediction": "Process web deployments ."}
{"id": 2684, "prediction": "Update a server configuration attribute ."}
{"id": 2685, "prediction": "Returns true if all fields of a class are public ."}
{"id": 2686, "prediction": "Creates a new HTTP endpoint and adds it to the deployment ."}
{"id": 2687, "prediction": "Create a new deployment from a deployment unit ."}
{"id": 2688, "prediction": "Checks if is jaxrs deployment ."}
{"id": 2689, "prediction": "Set the next expiration date ."}
{"id": 2690, "prediction": "Sets the timer state with the given thread ."}
{"id": 2691, "prediction": "Merges the scanning application and scan provider classes into the deployment data ."}
{"id": 2692, "prediction": "Add any module dependencies needed by the proxy ."}
{"id": 2693, "prediction": "Adds a remote transaction dependency on the passed EJB component description ."}
{"id": 2694, "prediction": "Gets the all container interceptors ."}
{"id": 2695, "prediction": "Determine if the given method is a method on this view ."}
{"id": 2696, "prediction": "Throws an exception if only one of the elements is present ."}
{"id": 2697, "prediction": "Gets the type ."}
{"id": 2698, "prediction": "Gets the component type at the specified index ."}
{"id": 2699, "prediction": "Returns a resource definition that can be used as a key store ."}
{"id": 2700, "prediction": "Returns a resource definition that can be used as a key manager ."}
{"id": 2701, "prediction": "Creates a resource definition that contains a list of supported trust managers ."}
{"id": 2702, "prediction": "Convert the given string representation to a CNCompoundName ."}
{"id": 2703, "prediction": "ins string to stringified compps ."}
{"id": 2704, "prediction": "Parse a component name from a string ."}
{"id": 2705, "prediction": "Shuts down theIR object and removes it from the pool ."}
{"id": 2706, "prediction": "Returns the corresponding CORBA object reference or null if there is no such object ."}
{"id": 2707, "prediction": "Authenticates using the specified username and password ."}
{"id": 2708, "prediction": "Checks if is type matched ."}
{"id": 2709, "prediction": "Lookup the binding with the given name ."}
{"id": 2710, "prediction": "Unbind a binding ."}
{"id": 2711, "prediction": "Instantiates a bean using reflection ."}
{"id": 2712, "prediction": "A utility method to configure a bean"}
{"id": 2713, "prediction": "Dispatches a lifecycle joinpoint ."}
{"id": 2714, "prediction": "Returns the current selector or the default selector if there is no current selector ."}
{"id": 2715, "prediction": "Returns a ServiceName for the given name and state ."}
{"id": 2716, "prediction": "Converts a Class into a ServiceName ."}
{"id": 2717, "prediction": "Replies the class with the given name ."}
{"id": 2718, "prediction": "Process the annotations defined in the composite index ."}
{"id": 2719, "prediction": "This method is called after parsing the steps of the persistence . xml ."}
{"id": 2720, "prediction": "Validates a descriptor ."}
{"id": 2721, "prediction": "Creates the web server descriptor and the web server metadata ."}
{"id": 2722, "prediction": "Create web . xml descriptor for the deployment ."}
{"id": 2723, "prediction": "Returns auth - method defined in deployment"}
{"id": 2724, "prediction": "Process the deployment descriptor ."}
{"id": 2725, "prediction": "Handles aStatelessSessionBean ."}
{"id": 2726, "prediction": "Generates the class for a given stub class ."}
{"id": 2727, "prediction": "Gets an anonymous object ID as a byte array ."}
{"id": 2728, "prediction": "Returns a copy of the persistence providers associated with the current deployment or sub - deployment ."}
{"id": 2729, "prediction": "Clears the cached deployment specific providers ."}
{"id": 2730, "prediction": "Add a persistence provider to a set of deployment class loaders ."}
{"id": 2731, "prediction": "Find the parent classloader of the given class loader ."}
{"id": 2732, "prediction": "Add the module dependencies to the deployment"}
{"id": 2733, "prediction": "Add the pu service to the deployment ."}
{"id": 2734, "prediction": "Sets the annotation indexes for the given deployment unit ."}
{"id": 2735, "prediction": "get a PersistenceProviderAdaptor for the given persistence provider"}
{"id": 2736, "prediction": "Saves the result of a persistence provider with the given module as a part of a deployment"}
{"id": 2737, "prediction": "Checks if the specified persistence provider is already associated with the specified deployment unit"}
{"id": 2738, "prediction": "Gets all classes that are annotated with the given URI set ."}
{"id": 2739, "prediction": "Creates the meta data for the specified deployment ."}
{"id": 2740, "prediction": "Builds the enterprise bean meta data ."}
{"id": 2741, "prediction": "Refresh the participant from the OperationContext ."}
{"id": 2742, "prediction": "Get an in - progress container analysis for the specified class ."}
{"id": 2743, "prediction": "Lookup a done analysis for the specified class ."}
{"id": 2744, "prediction": "Create a work in progress analysis ."}
{"id": 2745, "prediction": "Returns the IDL module name for this class ."}
{"id": 2746, "prediction": "Converts an integer to a hex string ."}
{"id": 2747, "prediction": "Converts a long to its hexadecimal representation ."}
{"id": 2748, "prediction": "Returns true if this method is an accessor method ."}
{"id": 2749, "prediction": "Returns true if the method is a mutator method ."}
{"id": 2750, "prediction": "Returns true if the method does not throw RemoteException . class ."}
{"id": 2751, "prediction": "Gets the attribute read name ."}
{"id": 2752, "prediction": "Gets the attribute write name ."}
{"id": 2753, "prediction": "Attempts to fix up the names of all operations that have been mapped ."}
{"id": 2754, "prediction": "Fixup case names ."}
{"id": 2755, "prediction": "Generate an escape string for anIR name ."}
{"id": 2756, "prediction": "Parse an element that represents an environment element ."}
{"id": 2757, "prediction": "Parse the default context propagation element ."}
{"id": 2758, "prediction": "Process the attributes ."}
{"id": 2759, "prediction": "Load a persistence provider by name ."}
{"id": 2760, "prediction": "Returns an AbstractAddStepHandler that executes the given operation on the given child type . If the given child type is not a sibling the operation is ignored ."}
{"id": 2761, "prediction": "This method is called by the framework once it has started the deployment"}
{"id": 2762, "prediction": "Write a simple attribute to an extended stream writer ."}
{"id": 2763, "prediction": "Returns a MethodIntf instance for the given interceptor context . If no view is attached directly to the context null is returned ."}
{"id": 2764, "prediction": "Creates a remote session ."}
{"id": 2765, "prediction": "Attempts to infer the destination name from the given address ."}
{"id": 2766, "prediction": "Registers a set of endpoint handlers ."}
{"id": 2767, "prediction": "Gets the xml names of the given job ."}
{"id": 2768, "prediction": "Parses the job XML and adds it to the internal list ."}
{"id": 2769, "prediction": "Return the URI of the request ."}
{"id": 2770, "prediction": "Create a ResolveResult using an URL ."}
{"id": 2771, "prediction": "Looks up an object based on its name ."}
{"id": 2772, "prediction": "Bind an object to the NamingException ."}
{"id": 2773, "prediction": "Attempts to unbind a named component ."}
{"id": 2774, "prediction": "Returns an enumeration of binding names ."}
{"id": 2775, "prediction": "Call destroy on the naming context ."}
{"id": 2776, "prediction": "This method destroys the supplied context ."}
{"id": 2777, "prediction": "Called to create a new naming context ."}
{"id": 2778, "prediction": "Creates a javax . naming . Context using the supplied CompositeName ."}
{"id": 2779, "prediction": "Looks up a named link ."}
{"id": 2780, "prediction": "Adds a property to the environment ."}
{"id": 2781, "prediction": "Removes a property from the environment ."}
{"id": 2782, "prediction": "Adds the transformations to the resource description builder ."}
{"id": 2783, "prediction": "Parse the credential element ."}
{"id": 2784, "prediction": "Removes the specified security domain from this session ."}
{"id": 2785, "prediction": "Looks up a JNDI context ."}
{"id": 2786, "prediction": "Creates a ModularReference for the given type and factoryClass ."}
{"id": 2787, "prediction": "Create a modular reference for a class ."}
{"id": 2788, "prediction": "Create a ModularReference for a class ."}
{"id": 2789, "prediction": "Returns the corresponding getIDL type for the given type code ."}
{"id": 2790, "prediction": "Waits for a ServiceController to be up ."}
{"id": 2791, "prediction": "Compute the masked password ."}
{"id": 2792, "prediction": "Initialize the security vault ."}
{"id": 2793, "prediction": "Start a new vault session with the specified vault alias ."}
{"id": 2794, "prediction": "Display the attribute created from the specified vault ."}
{"id": 2795, "prediction": "Display the configuration in a simple display ."}
{"id": 2796, "prediction": "Returns the vault configuration as a string ."}
{"id": 2797, "prediction": "Checks if the given value is not null and throws an exception if it is ."}
{"id": 2798, "prediction": "Get the deployment service name for a resource adapter ."}
{"id": 2799, "prediction": "Insert the specified value into the specified Any object ."}
{"id": 2800, "prediction": "Determine whether this person has the same bits as the specified permission ."}
{"id": 2801, "prediction": "Returns the actions as a comma separated string ."}
{"id": 2802, "prediction": "Returns the name of the log file ."}
{"id": 2803, "prediction": "Sends a notification for a state change ."}
{"id": 2804, "prediction": "Gets the state to bind ."}
{"id": 2805, "prediction": "Returns the value of the given type ."}
{"id": 2806, "prediction": "Gets the service name for the context ."}
{"id": 2807, "prediction": "Returns a set of all interceptors including the default interceptors ."}
{"id": 2808, "prediction": "Adds an interceptor for a method ."}
{"id": 2809, "prediction": "Add a service dependency ."}
{"id": 2810, "prediction": "Returns all component interceptors for the given method ."}
{"id": 2811, "prediction": "Returns all the timeout interceptors for the given method ."}
{"id": 2812, "prediction": "Add a timeout interceptor for the given method ."}
{"id": 2813, "prediction": "Add a interceptor factory to the list of aroundConstruct interceptors ."}
{"id": 2814, "prediction": "Adds a PostConstruct interceptor for the specified interceptor factory with the specified priority ."}
{"id": 2815, "prediction": "Add a preDestroy interceptor factory with the given priority ."}
{"id": 2816, "prediction": "Add a pre - passivate interceptor factory with the given priority ."}
{"id": 2817, "prediction": "Adds a post - activate interceptor to the chain ."}
{"id": 2818, "prediction": "Set the ComponentCreateServiceFactory ."}
{"id": 2819, "prediction": "Remove existing JNDI aliases ."}
{"id": 2820, "prediction": "Add the remote transport provider to the context builder ."}
{"id": 2821, "prediction": "Returns the service name for a given application module and component ."}
{"id": 2822, "prediction": "Returns the context service name of the given application and module ."}
{"id": 2823, "prediction": "Generate bind info for an environment entry ."}
{"id": 2824, "prediction": "Returns the BindInfo for the given jndiName ."}
{"id": 2825, "prediction": "Returns a LRU cache containing the DomainInfo objects ."}
{"id": 2826, "prediction": "Returns the value members ."}
{"id": 2827, "prediction": "Returns the value members for the code ."}
{"id": 2828, "prediction": "Create the subsystem root node ."}
{"id": 2829, "prediction": "Parses an xml config element ."}
{"id": 2830, "prediction": "Start the naming service ."}
{"id": 2831, "prediction": "Adds the weld integration to the target ."}
{"id": 2832, "prediction": "Returns the service name for a job - operator deployment ."}
{"id": 2833, "prediction": "Add a description to the components ."}
{"id": 2834, "prediction": "Add a message destination to the deployment ."}
{"id": 2835, "prediction": "Returns all components with the specified view type and deployment root ."}
{"id": 2836, "prediction": "Gets the description of a component ."}
{"id": 2837, "prediction": "Gets the components with the specified name from the deployment root ."}
{"id": 2838, "prediction": "Resolves a message destination by its path ."}
{"id": 2839, "prediction": "This method is used to build the transformers for the deployment ."}
{"id": 2840, "prediction": "Discard any attribute with a default value ."}
{"id": 2841, "prediction": "Rename an attribute"}
{"id": 2842, "prediction": "Pop the identity information from a state cache ."}
{"id": 2843, "prediction": "Loads all ids Manually ."}
{"id": 2844, "prediction": "Check to see if there are required modules to load the components ."}
{"id": 2845, "prediction": "Computes the slot for this version of JSF ."}
{"id": 2846, "prediction": "Gets the type code of a constant for a given class ."}
{"id": 2847, "prediction": "Adds a TypeCode to the type code map ."}
{"id": 2848, "prediction": "Ensure that a package exists in the given container ."}
{"id": 2849, "prediction": "Add the interfaces defined by this class to the list of interfaces implemented by this class ."}
{"id": 2850, "prediction": "Returns an array of Strings containing all of the ids of the abstract base value analysis s values ."}
{"id": 2851, "prediction": "Add a class to the registry ."}
{"id": 2852, "prediction": "Add an interface to this class ."}
{"id": 2853, "prediction": "Add a value to the value map ."}
{"id": 2854, "prediction": "Add an exception to the exception map ."}
{"id": 2855, "prediction": "Gets class level injection type ."}
{"id": 2856, "prediction": "Checks to see if JTS is enabled ."}
{"id": 2857, "prediction": "Start the service ."}
{"id": 2858, "prediction": "Closes the root context ."}
{"id": 2859, "prediction": "Checks if the specified method is allowed by the current interceptor context ."}
{"id": 2860, "prediction": "Check the status of a transaction sync and throw an exception if one was found ."}
{"id": 2861, "prediction": "Gets all component classes for the given deployment unit ."}
{"id": 2862, "prediction": "Returns a list of timers waiting on a transaction completion ."}
{"id": 2863, "prediction": "Returns extra parameters for a given set of key - value pairs ."}
{"id": 2864, "prediction": "Retrieve a set of parameters from a ModelNode ."}
{"id": 2865, "prediction": "Convert a Type to a Class ."}
{"id": 2866, "prediction": "Attempts to convert the given value into an object of the given class ."}
{"id": 2867, "prediction": "Returns the types of the given array of values ."}
{"id": 2868, "prediction": "Checks if typeNames and typeInfos are equal ."}
{"id": 2869, "prediction": "Returns the next binding in the binding list ."}
{"id": 2870, "prediction": "Retrieve the next binding ."}
{"id": 2871, "prediction": "Maps a binding to a full name ."}
{"id": 2872, "prediction": "Adds the result of a health check to the delegates ."}
{"id": 2873, "prediction": "Clean up all resources associated with the health Check instance ."}
{"id": 2874, "prediction": "Obtains a reference to the specified EJBLocator instance ."}
{"id": 2875, "prediction": "Create a home handle for the specified locator ."}
{"id": 2876, "prediction": "Converts the given ModelNode to an Enum ."}
{"id": 2877, "prediction": "Skips the specified number of bytes from the stream ."}
{"id": 2878, "prediction": "Throws an exception if the element1 and element2 are not contained in the set of seen elements ."}
{"id": 2879, "prediction": "Adds a component to this module ."}
{"id": 2880, "prediction": "Adds a set of class loaders to the deployment ."}
{"id": 2881, "prediction": "Unbinds the specified name ."}
{"id": 2882, "prediction": "Lookup a single name ."}
{"id": 2883, "prediction": "Return the list of classes for the specified name ."}
{"id": 2884, "prediction": "Returns a list of bindings for the given name ."}
{"id": 2885, "prediction": "Adds a context handle factory ."}
{"id": 2886, "prediction": "Saves the current setup context ."}
{"id": 2887, "prediction": "Create the IO subsystem under the given base address ."}
{"id": 2888, "prediction": "Create the handler that will handle the index content ."}
{"id": 2889, "prediction": "Get a bean from the pool . If the pool is empty create a new bean and return it ."}
{"id": 2890, "prediction": "Calculates the operation analysis map ."}
{"id": 2891, "prediction": "Collect metrics for a resource ."}
{"id": 2892, "prediction": "Builds the deployment and returns the deployment unit ."}
{"id": 2893, "prediction": "This method deploys the service target ."}
{"id": 2894, "prediction": "This method is called by the framework to publish the web . xml file to the web . xml file ."}
{"id": 2895, "prediction": "This method stops the web application deployment ."}
{"id": 2896, "prediction": "Start the container ."}
{"id": 2897, "prediction": "Registers an endpoint config ."}
{"id": 2898, "prediction": "Attempts to retry the timeout of the specified Timer object ."}
{"id": 2899, "prediction": "Post a timeout processing event to the timer store ."}
{"id": 2900, "prediction": "Get the declared methods of a class"}
{"id": 2901, "prediction": "Get the declared fields of a class"}
{"id": 2902, "prediction": "Get a constructor"}
{"id": 2903, "prediction": "Get a method from a class ."}
{"id": 2904, "prediction": "Add a messaging activeMQ extension"}
{"id": 2905, "prediction": "Returns true if the parameter is allowed for the given resource type ."}
{"id": 2906, "prediction": "Method for generic transport migration ."}
{"id": 2907, "prediction": "Cancel the current state ."}
{"id": 2908, "prediction": "This is a blocking method that will wait until the state is cancelled ."}
{"id": 2909, "prediction": "Change the type ."}
{"id": 2910, "prediction": "Checks if a function can be indexed by an index ."}
{"id": 2911, "prediction": "Estimates the number of unique indexes for a given class ."}
{"id": 2912, "prediction": "Finds all classes in the directory ."}
{"id": 2913, "prediction": "Returns all classes that implement the given interface from the given package ."}
{"id": 2914, "prediction": "Returns the generic class for the given field ."}
{"id": 2915, "prediction": "Evaluates the record and returns the result ."}
{"id": 2916, "prediction": "Derives the type of the field with the given name ."}
{"id": 2917, "prediction": "Update record ."}
{"id": 2918, "prediction": "Returns the record with the given ID from the cache ."}
{"id": 2919, "prediction": "Get theimal set of nodes for sharded query ."}
{"id": 2920, "prediction": "Flattens the list of equality expressions on the left side of the where clause ."}
{"id": 2921, "prediction": "Adds the ORDER BY to the query planning info ."}
{"id": 2922, "prediction": "Extract the sub queries from the query plan ."}
{"id": 2923, "prediction": "Checks if is from clusters ."}
{"id": 2924, "prediction": "Handles the class with index for sort only ."}
{"id": 2925, "prediction": "Checks if the given class is a newly created class ."}
{"id": 2926, "prediction": "Checks if the item is on the order by field of the query plan ."}
{"id": 2927, "prediction": "Returns true if the given key condition requires multiple index lookups ."}
{"id": 2928, "prediction": "Finds the best index for the given class ."}
{"id": 2929, "prediction": "Builds a new IndexSearchDescriptor from the given index and block ."}
{"id": 2930, "prediction": "Computes the common factor between the list of index search descriptors ."}
{"id": 2931, "prediction": "Creates a new field handling strategy ."}
{"id": 2932, "prediction": "Checks if the user has the required permission to execute the operation against the resource ."}
{"id": 2933, "prediction": "Checks if a rule is defined for this user ."}
{"id": 2934, "prediction": "Returns a string representation of the status of a distributed server ."}
{"id": 2935, "prediction": "Initialize the system database ."}
{"id": 2936, "prediction": "Load all of the local databases ."}
{"id": 2937, "prediction": "Removes the given member from the cluster ."}
{"id": 2938, "prediction": "Returns the name of the lock manager that is associated with the lock manager ."}
{"id": 2939, "prediction": "Attempts to assign a lock manager to the cluster s lock manager server ."}
{"id": 2940, "prediction": "Commits the transaction ."}
{"id": 2941, "prediction": "Rolls back the transaction and sets the active flag to false ."}
{"id": 2942, "prediction": "Updates the identity update if the record was reinserted ."}
{"id": 2943, "prediction": "Update record cache after rollback ."}
{"id": 2944, "prediction": "Creates the storage directories for the given path based on the creation or replacement path ."}
{"id": 2945, "prediction": "Attempts to atomic move a source file to a target file . If an atomic move is not possible fall back to regular move ."}
{"id": 2946, "prediction": "Gets the disjoint patterns ."}
{"id": 2947, "prediction": "Execute onlyLocally for the specified cluster ."}
{"id": 2948, "prediction": "Adds characters to the document ."}
{"id": 2949, "prediction": "Returns true if the socket is closed false otherwise ."}
{"id": 2950, "prediction": "Merge two buffers into a short ."}
{"id": 2951, "prediction": "Split short to buffers ."}
{"id": 2952, "prediction": "Execute the CREATE INSTANCE ."}
{"id": 2953, "prediction": "Adds a single value to the index ."}
{"id": 2954, "prediction": "Removes a value from the collection ."}
{"id": 2955, "prediction": "Runs the command and returns the result ."}
{"id": 2956, "prediction": "Run the first command ."}
{"id": 2957, "prediction": "Creates the classic file ."}
{"id": 2958, "prediction": "Check if the requested regions are within the file size and throw an exception if they are ."}
{"id": 2959, "prediction": "Replaces the content of the specified file with the contents of the specified file ."}
{"id": 2960, "prediction": "Execute a command ."}
{"id": 2961, "prediction": "End a request ."}
{"id": 2962, "prediction": "Adds the host to the map ."}
{"id": 2963, "prediction": "Start a request to a remote peer ."}
{"id": 2964, "prediction": "Gets the current database ."}
{"id": 2965, "prediction": "Gets a connection to the given channel ."}
{"id": 2966, "prediction": "Kill the given client connection ."}
{"id": 2967, "prediction": "Interrupt the connection associated with the given channel ."}
{"id": 2968, "prediction": "Disconnects a connection from the server ."}
{"id": 2969, "prediction": "PushDistribCfg2 clients to the cluster ."}
{"id": 2970, "prediction": "Swaps the entry at the specified index with the specified value ."}
{"id": 2971, "prediction": "Releases all locks against the current record ."}
{"id": 2972, "prediction": "Synchronize the schema with the current database ."}
{"id": 2973, "prediction": "Updates the metadata ."}
{"id": 2974, "prediction": "Reads the next cluster ."}
{"id": 2975, "prediction": "Returns the next character in the stream"}
{"id": 2976, "prediction": "Execute the subQuery ."}
{"id": 2977, "prediction": "Called when the operation failed to replication ."}
{"id": 2978, "prediction": "Register a new storage compression algorithm ."}
{"id": 2979, "prediction": "Get the number of open files in the disk cache ."}
{"id": 2980, "prediction": "Allow indexed function execution on target ."}
{"id": 2981, "prediction": "Moves the iFrom position to iPosition ."}
{"id": 2982, "prediction": "Fill the buffer with the requested length with the given byte ."}
{"id": 2983, "prediction": "Execute all steps until the last step contains a return value . Return the last step ."}
{"id": 2984, "prediction": "Execute a full execution step ."}
{"id": 2985, "prediction": "Evaluates the record and returns the result ."}
{"id": 2986, "prediction": "Execute the CREATE EDGES command ."}
{"id": 2987, "prediction": "Loads the configuration from the database ."}
{"id": 2988, "prediction": "Parses the given command request and creates a new executor ."}
{"id": 2989, "prediction": "Executes the request and returns the result ."}
{"id": 2990, "prediction": "Updates the schedule starting at the given node ."}
{"id": 2991, "prediction": "Add index ."}
{"id": 2992, "prediction": "Splits the result of an aggregation into a single projection"}
{"id": 2993, "prediction": "Determines the type of the given result and returns it as an Object ."}
{"id": 2994, "prediction": "Returns the collate of the given document ."}
{"id": 2995, "prediction": "Gets the string value ."}
{"id": 2996, "prediction": "Advances the given probe by Throw away its internal value ."}
{"id": 2997, "prediction": "Execute the CREATE INSTANCE command ."}
{"id": 2998, "prediction": "Loads a JSON document from a file ."}
{"id": 2999, "prediction": "Compares the provided password to the provided hash and checks the salt against the provided hash ."}
{"id": 3000, "prediction": "Creates a hash from the input string using the specified algorithm ."}
{"id": 3001, "prediction": "Returns true if the specified algorithm is supported by this JVM ."}
{"id": 3002, "prediction": "Creates an index with the given parameters ."}
{"id": 3003, "prediction": "Returns all vertices in the graph ."}
{"id": 3004, "prediction": "Returns all the edges of the graph ."}
{"id": 3005, "prediction": "Gets the partition key ."}
{"id": 3006, "prediction": "Gets cache timeout in seconds ."}
{"id": 3007, "prediction": "Returns a feature set that contains all the features supported by this class ."}
{"id": 3008, "prediction": "Checks if the changes have been truncated up to the specified page index ."}
{"id": 3009, "prediction": "Parses the timeout command ."}
{"id": 3010, "prediction": "Parses the KEYWORD_LOCK value and validates the value ."}
{"id": 3011, "prediction": "Creates a new cluster in the system database ."}
{"id": 3012, "prediction": "Remove a cluster with the given id ."}
{"id": 3013, "prediction": "Called at cache initialization time ."}
{"id": 3014, "prediction": "This method will be called when the server shuts down ."}
{"id": 3015, "prediction": "Creates a singleton result set ."}
{"id": 3016, "prediction": "Grant access to a specific resource ."}
{"id": 3017, "prediction": "Revokes access to a specific resource ."}
{"id": 3018, "prediction": "Calculates if the record is valid and returns true if it is valid otherwise add it to the list of all deleted records ."}
{"id": 3019, "prediction": "Binds the parameter parameters ."}
{"id": 3020, "prediction": "Clears and resets the table ."}
{"id": 3021, "prediction": "Returns the index of the specified item in the table ."}
{"id": 3022, "prediction": "Applies a supplemental hash function to a given value"}
{"id": 3023, "prediction": "Create an OIndex of the given type ."}
{"id": 3024, "prediction": "Drops all property indexes ."}
{"id": 3025, "prediction": "Gets the global index ."}
{"id": 3026, "prediction": "Return the linked class ."}
{"id": 3027, "prediction": "Converts the document to a stream ."}
{"id": 3028, "prediction": "Remove listener for record ."}
{"id": 3029, "prediction": "Registers a database with the server manager ."}
{"id": 3030, "prediction": "timeout a request"}
{"id": 3031, "prediction": "Creates a copy of this document ."}
{"id": 3032, "prediction": "Try to merge this value with the given one ."}
{"id": 3033, "prediction": "Replaces the specified element with a tree bag ."}
{"id": 3034, "prediction": "Transforms the given result object ."}
{"id": 3035, "prediction": "Execute the CREATE TABLE ."}
{"id": 3036, "prediction": "Closes all pooled databases ."}
{"id": 3037, "prediction": "Invoked when a storage is unregistered ."}
{"id": 3038, "prediction": "Returns a set of all function names ."}
{"id": 3039, "prediction": "Returns a set of collate names ."}
{"id": 3040, "prediction": "Gets all command names ."}
{"id": 3041, "prediction": "Gets the field size and type from the current position ."}
{"id": 3042, "prediction": "Write the status code and reason to the response"}
{"id": 3043, "prediction": "Write the headers to the response ."}
{"id": 3044, "prediction": "Write records ."}
{"id": 3045, "prediction": "Write a record to the response"}
{"id": 3046, "prediction": "Send the status code and content to the response ."}
{"id": 3047, "prediction": "Set the response body as stream ."}
{"id": 3048, "prediction": "Opens a new database document with the given parameters ."}
{"id": 3049, "prediction": "Closes the current connection ."}
{"id": 3050, "prediction": "Create a unique identifier for the collection and listen for changes ."}
{"id": 3051, "prediction": "Complete a component operation ."}
{"id": 3052, "prediction": "Pushes all registered component counters into the snapshot ."}
{"id": 3053, "prediction": "Push the specified WritCacheCounters into this cache ."}
{"id": 3054, "prediction": "Used to push a StorageCountersHolder into the snapshot ."}
{"id": 3055, "prediction": "This will create a new WALCountersHolder and push it data into it ."}
{"id": 3056, "prediction": "Push the performance counters of the specified component ."}
{"id": 3057, "prediction": "Stop the write cache flush timer ."}
{"id": 3058, "prediction": "Stop the expiry time timer and make a snapshot of the checkpoint count"}
{"id": 3059, "prediction": "Stop the full checkpoint timer ."}
{"id": 3060, "prediction": "Stop the commit timer ."}
{"id": 3061, "prediction": "Stop the entry in the timer ."}
{"id": 3062, "prediction": "Stop the flush timer ."}
{"id": 3063, "prediction": "Parses a string representation of a SQL statement ."}
{"id": 3064, "prediction": "Initialize and start a thread to receive messages from the distributed discovery server ."}
{"id": 3065, "prediction": "Start a timer to check if known servers are alive"}
{"id": 3066, "prediction": "Removes the record from the graph ."}
{"id": 3067, "prediction": "Sets a property on this graph ."}
{"id": 3068, "prediction": "Removes a property from the record ."}
{"id": 3069, "prediction": "Checks if a class with the given name exists in the schema and creates it if it does not exist ."}
{"id": 3070, "prediction": "Wraps a cursor in an OIndex ."}
{"id": 3071, "prediction": "Define a vertex attribute strategy ."}
{"id": 3072, "prediction": "Define an edge attribute strategy for the vertex attributes ."}
{"id": 3073, "prediction": "Returns new record entries by class ."}
{"id": 3074, "prediction": "Called by cluster iterator to find new record entries by cluster ids ."}
{"id": 3075, "prediction": "Adds an entry to the index ."}
{"id": 3076, "prediction": "Merge set ."}
{"id": 3077, "prediction": "Update the record based on the passed in record ."}
{"id": 3078, "prediction": "Checks if a function can be executed in the from clause with an index ."}
{"id": 3079, "prediction": "Prepares keys ."}
{"id": 3080, "prediction": "Writes a page to the output ."}
{"id": 3081, "prediction": "Reads a page ."}
{"id": 3082, "prediction": "Truncates the log file to the specified page index ."}
{"id": 3083, "prediction": "Opens a new page for writing ."}
{"id": 3084, "prediction": "Is this replication node active?"}
{"id": 3085, "prediction": "Gets the new node strategy from the configuration ."}
{"id": 3086, "prediction": "Checks if is execution mode synchronous ."}
{"id": 3087, "prediction": "Checks to see if the cluster is in distributed - config . json or not ."}
{"id": 3088, "prediction": "Return a map of all the servers in the specified collection ."}
{"id": 3089, "prediction": "Get all configured servers for a given cluster ."}
{"id": 3090, "prediction": "Checks if a server contains all clusters ."}
{"id": 3091, "prediction": "Returns true if the server is contained in the cluster false otherwise ."}
{"id": 3092, "prediction": "Returns a list of all the masters in the current cluster ."}
{"id": 3093, "prediction": "Returns a list of all configured servers ."}
{"id": 3094, "prediction": "Get all clusters on a server ."}
{"id": 3095, "prediction": "Return all clusters owned by the specified server ."}
{"id": 3096, "prediction": "Returns the owner of the cluster ."}
{"id": 3097, "prediction": "Returns the owner of the cluster with the specified name ."}
{"id": 3098, "prediction": "Gets the configured servers for the given cluster ."}
{"id": 3099, "prediction": "Returns the names of the currently registered servers ."}
{"id": 3100, "prediction": "Returns the data centers of the graph ."}
{"id": 3101, "prediction": "Returns the current quorum number for the specified data center ."}
{"id": 3102, "prediction": "Returns true if the server is sharded ."}
{"id": 3103, "prediction": "Gets the server list from the data center ."}
{"id": 3104, "prediction": "Returns the data center of the specified server"}
{"id": 3105, "prediction": "Get the global read quorum of the cluster ."}
{"id": 3106, "prediction": "Gets the write quorum ."}
{"id": 3107, "prediction": "Returns the configuration of the cluster ."}
{"id": 3108, "prediction": "Returns the data center configuration in distributed database ."}
{"id": 3109, "prediction": "Clears the initialization stack ."}
{"id": 3110, "prediction": "Gets an index of the specified type ."}
{"id": 3111, "prediction": "Drops an index by its name ."}
{"id": 3112, "prediction": "Adds a vertex with the given id to the graph ."}
{"id": 3113, "prediction": "Adds an edge to the graph ."}
{"id": 3114, "prediction": "Returns the vertex with the RID of the given id ."}
{"id": 3115, "prediction": "Returns all vertices of the class iClassName ."}
{"id": 3116, "prediction": "Returns all edges of the class iClassName ."}
{"id": 3117, "prediction": "Returns an Edge instance with the given id ."}
{"id": 3118, "prediction": "Reuse the current graph ."}
{"id": 3119, "prediction": "Shuts down the context and closes the database ."}
{"id": 3120, "prediction": "Returns the base type of this vertex ."}
{"id": 3121, "prediction": "Returns the type of the vertex with the given name ."}
{"id": 3122, "prediction": "Creates a new cluster vertex type with the specified class name and number of clusters ."}
{"id": 3123, "prediction": "Drops a vertex type from the graph ."}
{"id": 3124, "prediction": "Returns the type of the edge with the given name ."}
{"id": 3125, "prediction": "Creates an edge type with the specified class name and number of clusters ."}
{"id": 3126, "prediction": "Returns the ODocument object with the given id or null if the object does not exist ."}
{"id": 3127, "prediction": "Drops a key index ."}
{"id": 3128, "prediction": "Creates a key index on an element class ."}
{"id": 3129, "prediction": "Remove a listener from the list of listeners ."}
{"id": 3130, "prediction": "Notifies all registered listeners of an exception ."}
{"id": 3131, "prediction": "Stop monitoring the data ."}
{"id": 3132, "prediction": "Registers the given MBean with the storage name and storage id ."}
{"id": 3133, "prediction": "Unregisters the MBean for the given storage name and storage id ."}
{"id": 3134, "prediction": "Fetches the WritCacheCountersHolder from cache ."}
{"id": 3135, "prediction": "Fetch all system counters and accumulate statistics from snapshot holder ."}
{"id": 3136, "prediction": "Fetch statistics from all threads and accumulate statistic only for live threads"}
{"id": 3137, "prediction": "Compress the given JSON string using GZIP ."}
{"id": 3138, "prediction": "Gets the value of a property ."}
{"id": 3139, "prediction": "Detaches an entity from the cache ."}
{"id": 3140, "prediction": "Returns the version of the i POJO ."}
{"id": 3141, "prediction": "Execute a command"}
{"id": 3142, "prediction": "Sets the dirty state of the object ."}
{"id": 3143, "prediction": "Unsets theDirty property of the model object ."}
{"id": 3144, "prediction": "Gets all index types ."}
{"id": 3145, "prediction": "Returns a set of all index engines ."}
{"id": 3146, "prediction": "Returns the list of missing nodes ."}
{"id": 3147, "prediction": "Return a list of the servers with the best response in the group ."}
{"id": 3148, "prediction": "Get the index of the most coherent response group ."}
{"id": 3149, "prediction": "Computes the final quorum response and sets it as the final quorumResponse ."}
{"id": 3150, "prediction": "Returns the list of received response objects ."}
{"id": 3151, "prediction": "Get an execution plan from the cache ."}
{"id": 3152, "prediction": "Allow indexed function execution on target ."}
{"id": 3153, "prediction": "Get the library for the given database and language ."}
{"id": 3154, "prediction": "Release a database engine ."}
{"id": 3155, "prediction": "Returns the next position in the cache ."}
{"id": 3156, "prediction": "Calculates and returns the total number of entries in the collection ."}
{"id": 3157, "prediction": "Gets the value at the given index ."}
{"id": 3158, "prediction": "Checks if the index can be used by an ORDER BY clause after a filter ."}
{"id": 3159, "prediction": "Returns the index of the specified character inside the specified string ."}
{"id": 3160, "prediction": "Jump white spaces between the current position and the maximum position ."}
{"id": 3161, "prediction": "Jump the current position to the next character ."}
{"id": 3162, "prediction": "Set the fetch plan ."}
{"id": 3163, "prediction": "Enqueue a repair record for the given record id ."}
{"id": 3164, "prediction": "Cancels a repair record ."}
{"id": 3165, "prediction": "Enqueue a repair cluster ."}
{"id": 3166, "prediction": "Gets the dependencies of a pattern ."}
{"id": 3167, "prediction": "Creates a POJO by its class name ."}
{"id": 3168, "prediction": "Registers the entity class names ."}
{"id": 3169, "prediction": "Registers all the entity classes in the class handler"}
{"id": 3170, "prediction": "Set the class handler ."}
{"id": 3171, "prediction": "Acquires a DB from the pool ."}
{"id": 3172, "prediction": "Gets the number of available connections to the database ."}
{"id": 3173, "prediction": "Acquires a DB ."}
{"id": 3174, "prediction": "Executes the synchronization of the cluster and returns the result ."}
{"id": 3175, "prediction": "Looks up an iterator of instances of the specified class using the current ClassLoader as the ClassLoader ."}
{"id": 3176, "prediction": "Check the memory limit of the cache"}
{"id": 3177, "prediction": "Create a Vertex from the given JSON ."}
{"id": 3178, "prediction": "Create an edge from a JSONObject ."}
{"id": 3179, "prediction": "Convert an Element to a JSONObject ."}
{"id": 3180, "prediction": "Create a GraphSON object node from a graphson Element ."}
{"id": 3181, "prediction": "Starts the import process ."}
{"id": 3182, "prediction": "Returns the status of the graph ."}
{"id": 3183, "prediction": "Returns a map with all data centers as keys and the list of active data centers as values ."}
{"id": 3184, "prediction": "Utility method to separate the algorithm name from the transform ."}
{"id": 3185, "prediction": "Creates a new OSymmetricKey from the given OSymmetricKeyConfig ."}
{"id": 3186, "prediction": "Creates a new OSymmetricKey from a file with the given algorithm and path ."}
{"id": 3187, "prediction": "Create a new OSymmetricKey from an input stream ."}
{"id": 3188, "prediction": "Encrypts the specified bytes using the specified Encrypt or decrypt mode ."}
{"id": 3189, "prediction": "Save the key to an OutputStream ."}
{"id": 3190, "prediction": "Save a key to a keystore ."}
{"id": 3191, "prediction": "Set the child context ."}
{"id": 3192, "prediction": "Adds the given object to the unique result set ."}
{"id": 3193, "prediction": "Returns the value as object or map ."}
{"id": 3194, "prediction": "Authenticates a database using the provided username and password ."}
{"id": 3195, "prediction": "Returns the value associated with the key from the map ."}
{"id": 3196, "prediction": "Return the record associated with this operation ."}
{"id": 3197, "prediction": "Read the current record ."}
{"id": 3198, "prediction": "Returns the graph associated with this graph instance ."}
{"id": 3199, "prediction": "get no - tx graph"}
{"id": 3200, "prediction": "Sets up a new database pool ."}
{"id": 3201, "prediction": "Gets a property by its name ."}
{"id": 3202, "prediction": "Stops the active transaction ."}
{"id": 3203, "prediction": "Parse an OStatement ."}
{"id": 3204, "prediction": "Returns the next token ."}
{"id": 3205, "prediction": "Returns the token at the specified index ."}
{"id": 3206, "prediction": "Generate ParseException ."}
{"id": 3207, "prediction": "Returns all the vertices in the graph with the given labels ."}
{"id": 3208, "prediction": "Removes this vertex from the graph ."}
{"id": 3209, "prediction": "Adds a new edge to the vertex with the given label ."}
{"id": 3210, "prediction": "Adds an edge to the graph having a class with the specified label ."}
{"id": 3211, "prediction": "Gets the class name for the connection field ."}
{"id": 3212, "prediction": "Returns a pair of Direction - > iFieldName - > iClassNames"}
{"id": 3213, "prediction": "Reads all of the records which were detected as broken during database export and sets of links on those records ."}
{"id": 3214, "prediction": "Returns a map of all the console methods declared on this class ."}
{"id": 3215, "prediction": "Executes a task on a local node ."}
{"id": 3216, "prediction": "Get the number of nodes that have the given status ."}
{"id": 3217, "prediction": "Backup an existing file ."}
{"id": 3218, "prediction": "Wait until next retry ."}
{"id": 3219, "prediction": "Get the argument at this position ."}
{"id": 3220, "prediction": "Returns the number of parameters in the request with the specified names ."}
{"id": 3221, "prediction": "Connects to a remote node ."}
{"id": 3222, "prediction": "Get a list of all databases ."}
{"id": 3223, "prediction": "Gets server information ."}
{"id": 3224, "prediction": "Checks if a database exists in a remote storage ."}
{"id": 3225, "prediction": "Drops a database from a remote server ."}
{"id": 3226, "prediction": "Close a remote database ."}
{"id": 3227, "prediction": "Releases a database from a remote server ."}
{"id": 3228, "prediction": "Returns the status of the cluster ."}
{"id": 3229, "prediction": "Execute the CREATE INDEX ."}
{"id": 3230, "prediction": "Returns graph ."}
{"id": 3231, "prediction": "Parses the retry command ."}
{"id": 3232, "prediction": "Save the record ."}
{"id": 3233, "prediction": "Delete the record ."}
{"id": 3234, "prediction": "Gets the authentication header ."}
{"id": 3235, "prediction": "Authenticates a user using the specified username and password ."}
{"id": 3236, "prediction": "Checks if a user is authorized to the specified resource ."}
{"id": 3237, "prediction": "Runs the server ."}
{"id": 3238, "prediction": "Adjust the specified line and column for the start of the token ."}
{"id": 3239, "prediction": "Sets the bucket pointer at the given page offset ."}
{"id": 3240, "prediction": "Gets a bucket pointer ."}
{"id": 3241, "prediction": "Ends an atomic operation and removes it from the set of active atomic operations ."}
{"id": 3242, "prediction": "Acquires an exclusive lock associated with the given lock . If the lock is already in the cache this method will return without any effect ."}
{"id": 3243, "prediction": "Changes the maximum amount of memory used by the disk cache ."}
{"id": 3244, "prediction": "Start listening on the specified host ."}
{"id": 3245, "prediction": "Read the parameters ."}
{"id": 3246, "prediction": "Shut down the JVM ."}
{"id": 3247, "prediction": "Adds an item to the cache ."}
{"id": 3248, "prediction": "Removes an entry from the cache ."}
{"id": 3249, "prediction": "Acquires an entry from the cache ."}
{"id": 3250, "prediction": "Get the value associated with the given key ."}
{"id": 3251, "prediction": "Clears all entries from the list ."}
{"id": 3252, "prediction": "Closes a key - value mapping ."}
{"id": 3253, "prediction": "empty read buffers ."}
{"id": 3254, "prediction": "Attempts to add the given task to the stateBuffer and immediately drain the buffers ."}
{"id": 3255, "prediction": "Callback after an entry is read from the read buffer ."}
{"id": 3256, "prediction": "Puts an entry in the read buffer ."}
{"id": 3257, "prediction": "Returns the closest power of two to the specified value ."}
{"id": 3258, "prediction": "Called when a push request is received ."}
{"id": 3259, "prediction": "Convert the value associated with the specified key ."}
{"id": 3260, "prediction": "Convert all values ."}
{"id": 3261, "prediction": "Returns the OBinarySerializer for the given OType ."}
{"id": 3262, "prediction": "Initialize the shutdown queue ."}
{"id": 3263, "prediction": "Returns the OEngine for the given engine name ."}
{"id": 3264, "prediction": "Execute the operation and return the result set as a result set"}
{"id": 3265, "prediction": "Executes the given SQL as aynch query and returns the performance statistics ."}
{"id": 3266, "prediction": "Adds a state entry ."}
{"id": 3267, "prediction": "Authenticates a user for a given token ."}
{"id": 3268, "prediction": "Creates the metadata ."}
{"id": 3269, "prediction": "Attempts to acquire a read lock before the specified timeout ."}
{"id": 3270, "prediction": "Returns the vertex of the specified direction in the current graph ."}
{"id": 3271, "prediction": "Returns a unique ID for the current graph in the same thread ."}
{"id": 3272, "prediction": "Sets the value of a property in the current graph ."}
{"id": 3273, "prediction": "Remove a property from the current graph ."}
{"id": 3274, "prediction": "Clears all sub - trees in the cache ."}
{"id": 3275, "prediction": "Deletes all the subTrees in the file ."}
{"id": 3276, "prediction": "Ends the batch processing and closes the underlying database ."}
{"id": 3277, "prediction": "Create a vertex in the graph ."}
{"id": 3278, "prediction": "Parses a strategy word ."}
{"id": 3279, "prediction": "Get the positions from an embedded collection ."}
{"id": 3280, "prediction": "Execute the INSERT UPDATE or DELETE command ."}
{"id": 3281, "prediction": "Fixes a link ."}
{"id": 3282, "prediction": "Fill a record ."}
{"id": 3283, "prediction": "Set the version of a record ."}
{"id": 3284, "prediction": "Gets record type ."}
{"id": 3285, "prediction": "Initializes the database instance ."}
{"id": 3286, "prediction": "Returns the full stack trace of an exception"}
{"id": 3287, "prediction": "Execute an index query ."}
{"id": 3288, "prediction": "Convert the item to record ."}
{"id": 3289, "prediction": "Register a command instance ."}
{"id": 3290, "prediction": "Creates a new OServerUserConfiguration from a ODocument ."}
{"id": 3291, "prediction": "Analyze filter branch and return search results ."}
{"id": 3292, "prediction": "Create search result from item ."}
{"id": 3293, "prediction": "Attaches all the fields of the given object to the end of the document ."}
{"id": 3294, "prediction": "Gets the index class ."}
{"id": 3295, "prediction": "Sends next action with new current value ."}
{"id": 3296, "prediction": "Truncates all classes ."}
{"id": 3297, "prediction": "Adds the base class to the set of subclasses ."}
{"id": 3298, "prediction": "Add all polling cluster ids to the index ."}
{"id": 3299, "prediction": "Serialize a link object into a StringBuilder ."}
{"id": 3300, "prediction": "Releases a pointer back to the pool ."}
{"id": 3301, "prediction": "Check to see if a memory allocation has been detected ."}
{"id": 3302, "prediction": "Clears all entries from the pool ."}
{"id": 3303, "prediction": "Converts a byte array to an int ."}
{"id": 3304, "prediction": "Called when a new database is opened ."}
{"id": 3305, "prediction": "Installs a class in a distributed database ."}
{"id": 3306, "prediction": "This method dumps the current server status to the log ."}
{"id": 3307, "prediction": "Returns the index of the specified object in the array or - 1 if the object is not in the array ."}
{"id": 3308, "prediction": "Returns the index of the object in the array or - 1 if object is not in the array ."}
{"id": 3309, "prediction": "Returns a list of all cluster names that exist in the database ."}
{"id": 3310, "prediction": "Processes the result and adds it to the result list ."}
{"id": 3311, "prediction": "Get the unique temporary RID counter for this command ."}
{"id": 3312, "prediction": "Reports a TIP message ."}
{"id": 3313, "prediction": "Parses the fetch plan ."}
{"id": 3314, "prediction": "Parses out if the key word is no cache ."}
{"id": 3315, "prediction": "Gets the optimize sort for the given schema class ."}
{"id": 3316, "prediction": "Returns the status of the graph ."}
{"id": 3317, "prediction": "Execute the operation and return the result ."}
{"id": 3318, "prediction": "Called by OLogManager when an error occurs while trying to recover from a VM ."}
{"id": 3319, "prediction": "Writes a value to an index in the current transaction ."}
{"id": 3320, "prediction": "Rolls back the passed micro - transaction ."}
{"id": 3321, "prediction": "Execute a command ."}
{"id": 3322, "prediction": "Registers a cluster in the database ."}
{"id": 3323, "prediction": "Set a property"}
{"id": 3324, "prediction": "Execute the CREATE CLASS ."}
{"id": 3325, "prediction": "Executes the sync database ."}
{"id": 3326, "prediction": "Delete the record ."}
{"id": 3327, "prediction": "Callback hooks for a specific record id ."}
{"id": 3328, "prediction": "Delete the record with the given ID ."}
{"id": 3329, "prediction": "Returns the count of a given view in the database ."}
{"id": 3330, "prediction": "Count the number of classes in the database ."}
{"id": 3331, "prediction": "Activates this document on the current thread ."}
{"id": 3332, "prediction": "Registers the encryption ."}
{"id": 3333, "prediction": "Gets the relative index of the given data chunk ."}
{"id": 3334, "prediction": "Parses the next word . If no word is found null is returned ."}
{"id": 3335, "prediction": "Parses a required word from the current position of the parser ."}
{"id": 3336, "prediction": "Returns the index of the next character ."}
{"id": 3337, "prediction": "Parses an optional keyword ."}
{"id": 3338, "prediction": "Checks to see if the given character is a separator ."}
{"id": 3339, "prediction": "Execute the CREATE CLASS ."}
{"id": 3340, "prediction": "Clears the configuration files ."}
{"id": 3341, "prediction": "Returns the number of bytes in the buffer as a byte offset ."}
{"id": 3342, "prediction": "Extracts the access token with the specified type ."}
{"id": 3343, "prediction": "Acquire an access token for the current resource ."}
{"id": 3344, "prediction": "Copy the access token to the current context ."}
{"id": 3345, "prediction": "Checks if there are no more characters to read ."}
{"id": 3346, "prediction": "Reads the next line from an array of bytes and returns the number of bytes read ."}
{"id": 3347, "prediction": "Read a line from an array of bytes ."}
{"id": 3348, "prediction": "Skips the specified number of bytes from the underlying stream ."}
{"id": 3349, "prediction": "Skips the specified number of bytes ."}
{"id": 3350, "prediction": "Ensures that the given offset and length are non - negative ."}
{"id": 3351, "prediction": "Perform a recursive merge sort of the given arrays ."}
{"id": 3352, "prediction": "Swaps a b and n positions ."}
{"id": 3353, "prediction": "Performs a parallel quick sort ."}
{"id": 3354, "prediction": "MurmurHash3 64 - bit"}
{"id": 3355, "prediction": "MurmurHash3 64 - bit"}
{"id": 3356, "prediction": "Writes the contents of the given ByteBuffer to the file channel ."}
{"id": 3357, "prediction": "Truncates the file to the specified size ."}
{"id": 3358, "prediction": "Changes the position of the underlying byte stream ."}
{"id": 3359, "prediction": "Report that metric reporting is not critical to consumer refresh ."}
{"id": 3360, "prediction": "Waits for the result of all tasks to be completed ."}
{"id": 3361, "prediction": "Returns all matches for the specified query ."}
{"id": 3362, "prediction": "Returns a compact set of target types that are dependent on each other ."}
{"id": 3363, "prediction": "Delete all the snapshot files that have been modified since the last time the snapshot was deleted ."}
{"id": 3364, "prediction": "Returns the hash code for a specific field of an object ."}
{"id": 3365, "prediction": "Returns true if the two fields are equal ."}
{"id": 3366, "prediction": "Remove all references outside of a closure ."}
{"id": 3367, "prediction": "Called when an announcement is completed ."}
{"id": 3368, "prediction": "Called when a cycle is completed ."}
{"id": 3369, "prediction": "Reads header tags ."}
{"id": 3370, "prediction": "Extract the primary key from the given object ."}
{"id": 3371, "prediction": "Clears all the segments ."}
{"id": 3372, "prediction": "Reads the array of ordinals from the data stream and notify the given listeners ."}
{"id": 3373, "prediction": "Returns the size of this bit set in bytes ."}
{"id": 3374, "prediction": "Gets the field value for the given row ."}
{"id": 3375, "prediction": "Copies length bytes from src to dest"}
{"id": 3376, "prediction": "Copies length bytes from srcPos into destPos"}
{"id": 3377, "prediction": "Returns true if the first range equals the second range ."}
{"id": 3378, "prediction": "Performs an ordered copy of the given byte array starting from the source array starting at the given position ."}
{"id": 3379, "prediction": "Does an ordered copy of data starting from srcPos into destPos ."}
{"id": 3380, "prediction": "Reads a given number of bytes from an input stream ."}
{"id": 3381, "prediction": "Write the specified range of bytes to the specified OutputStream ."}
{"id": 3382, "prediction": "Ensures that the segment at segmentIndex exists ."}
{"id": 3383, "prediction": "Returns the index of the field with the given name . Returns - 1 if the field does not exist ."}
{"id": 3384, "prediction": "Calculates the size of each bucket and the total number of select buckets ."}
{"id": 3385, "prediction": "Returns true if the given dataset contains any collections ."}
{"id": 3386, "prediction": "Generates the class files for the specified package ."}
{"id": 3387, "prediction": "Generates the necessary files for a given set of schema files ."}
{"id": 3388, "prediction": "Returns true if the ordinal of this key matches one of the supplied keys ."}
{"id": 3389, "prediction": "Get the record key based on its ordinal value ."}
{"id": 3390, "prediction": "Returns the field path for the primary key ."}
{"id": 3391, "prediction": "Returns a field path for the given hash index ."}
{"id": 3392, "prediction": "Creates a field path for a prefix index ."}
{"id": 3393, "prediction": "Associates the specified object with the specified ordinal ."}
{"id": 3394, "prediction": "Initialize the prefix index ."}
{"id": 3395, "prediction": "Returns true if the specified key is present in the current template false otherwise ."}
{"id": 3396, "prediction": "Returns the percent of the change between the latest and the previous cardinality ."}
{"id": 3397, "prediction": "Adds a field to the filter for the specified type ."}
{"id": 3398, "prediction": "Returns a list of all the given schemas ordered by their names ."}
{"id": 3399, "prediction": "Inits the object with the next major version defaults ."}
{"id": 3400, "prediction": "Gets the bit at the given index ."}
{"id": 3401, "prediction": "Given a field name and a value find all the records that match that field ."}
{"id": 3402, "prediction": "Find all records of the given type that match the given field value ."}
{"id": 3403, "prediction": "Set the paths for all elements that match one of the provided paths ."}
{"id": 3404, "prediction": "Sets the paths of elements that match the specified key paths ."}
{"id": 3405, "prediction": "Calculates the hashed results ."}
{"id": 3406, "prediction": "Restore the data model from the last state ."}
{"id": 3407, "prediction": "This method is called in an incremental cycle ."}
{"id": 3408, "prediction": "Exclude a key from being included in the result set ."}
{"id": 3409, "prediction": "Adds all objects which are not referenced by this instance to the excluded set ."}
{"id": 3410, "prediction": "Writes the FastBlob header data to the given DataOutputStream ."}
{"id": 3411, "prediction": "Calculates type metrics ."}
{"id": 3412, "prediction": "Write data to the given byte buffer ."}
{"id": 3413, "prediction": "Write a fixed - length integer to the given byte data buffer ."}
{"id": 3414, "prediction": "Write a fixed length long to the field data buffer ."}
{"id": 3415, "prediction": "Return an ordinal to the pool ."}
{"id": 3416, "prediction": "Sorts the free ordinals in ascending order ."}
{"id": 3417, "prediction": "Generate a hash code for an array of objects ."}
{"id": 3418, "prediction": "Generate a hash code for a field ."}
{"id": 3419, "prediction": "Resizes the storage ."}
{"id": 3420, "prediction": "Finds the preferred ordinal and returns the id of the previous one ."}
{"id": 3421, "prediction": "Prepares for write ."}
{"id": 3422, "prediction": "Compares a key with its serialized representation ."}
{"id": 3423, "prediction": "Grows the key array by a given amount ."}
{"id": 3424, "prediction": "Recompute the previously added data for the given key ."}
{"id": 3425, "prediction": "Returns an empty key array ."}
{"id": 3426, "prediction": "Returns true if the given match index is the same as the one given ."}
{"id": 3427, "prediction": "Extract the unique type of a match ."}
{"id": 3428, "prediction": "Swaps the current read state with the current read state ."}
{"id": 3429, "prediction": "Calculates the size of a hash table for a given number of elements ."}
{"id": 3430, "prediction": "Runs a CompactionCycle if the config is not null and readStates has current stateEngine ."}
{"id": 3431, "prediction": "Writes a snapshot of the data to the given output stream ."}
{"id": 3432, "prediction": "Writes the delta to the output stream ."}
{"id": 3433, "prediction": "Adds the given schema names to the given set if it is a primitive type or a collection ."}
{"id": 3434, "prediction": "Normalize field path to upper case and convert to lower case ."}
{"id": 3435, "prediction": "Reindex hash index ."}
{"id": 3436, "prediction": "Finds matches for the given query ."}
{"id": 3437, "prediction": "Trigger an async refresh with a random delay ."}
{"id": 3438, "prediction": "Trigger an async refresh with a delay ."}
{"id": 3439, "prediction": "Add a type diff ."}
{"id": 3440, "prediction": "Calculates the diffs ."}
{"id": 3441, "prediction": "Writes a long value to the OutputStream as a variable - length format ."}
{"id": 3442, "prediction": "Writes a variable - length int to an output stream ."}
{"id": 3443, "prediction": "Write a variable - length int to the byte array starting at the given position ."}
{"id": 3444, "prediction": "Reads a variable - length int from the stream ."}
{"id": 3445, "prediction": "Reads a long value from the stream ."}
{"id": 3446, "prediction": "Internal method for adding a child view ."}
{"id": 3447, "prediction": "RefreshLoadingViewsSize Method ."}
{"id": 3448, "prediction": "Update the UI for the mode ."}
{"id": 3449, "prediction": "Pulls the event onto the page ."}
{"id": 3450, "prediction": "Calculate the over - scroll value for the specified view using the specified properties ."}
{"id": 3451, "prediction": "Adds a given rule with the given name and value ."}
{"id": 3452, "prediction": "Add additional constraints to the rule ."}
{"id": 3453, "prediction": "Create a new builder for the given rule class and action type ."}
{"id": 3454, "prediction": "Create a new builder ."}
{"id": 3455, "prediction": "Returns a builder for the specified fact type ."}
{"id": 3456, "prediction": "Returns a new builder for the given result type ."}
{"id": 3457, "prediction": "Create a new rule with the specified name and value ."}
{"id": 3458, "prediction": "Create a new GivenRuleBuilder with the specified names ."}
{"id": 3459, "prediction": "Create a new AuditableRule and apply the supplied action to it ."}
{"id": 3460, "prediction": "Returns a new instance of the specified rule instance ."}
{"id": 3461, "prediction": "Gets a field from a class that is annotated with given annotation ."}
{"id": 3462, "prediction": "Gets a method annotated with the given annotation from the given class ."}
{"id": 3463, "prediction": "Returns the first annotation of the given type or null if no such annotation exists ."}
{"id": 3464, "prediction": "Registers a new Auditable rule ."}
{"id": 3465, "prediction": "Updates the status for a given rule ."}
{"id": 3466, "prediction": "Returns the status of all requests in the order they were received ."}
{"id": 3467, "prediction": "The result type to be used when building a new RuleBook ."}
{"id": 3468, "prediction": "Adds an action to the rule ."}
{"id": 3469, "prediction": "Adds an action to the rule ."}
{"id": 3470, "prediction": "Resets the value to the default value ."}
{"id": 3471, "prediction": "Adds a new rule with the specified fact type ."}
{"id": 3472, "prediction": "Returns the rules in the package ."}
{"id": 3473, "prediction": "Reads an empty line or end of table ."}
{"id": 3474, "prediction": "Returns the services as an array ."}
{"id": 3475, "prediction": "Get the list of ports from a build configuration ."}
{"id": 3476, "prediction": "Extract the ports from the config ."}
{"id": 3477, "prediction": "Parse a port mapping configuration into a ServicePort object ."}
{"id": 3478, "prediction": "Add the given port to the list if it is not null ."}
{"id": 3479, "prediction": "shift the service port or return null ."}
{"id": 3480, "prediction": "Adds missing service parts ."}
{"id": 3481, "prediction": "Appends an image stream descriptor to a target file ."}
{"id": 3482, "prediction": "Returns true if the given service port matches the given int or string ."}
{"id": 3483, "prediction": "Returns the service port environment variable or the empty string if the service port is not available ."}
{"id": 3484, "prediction": "Retrieve the host and port from a system property or a system property ."}
{"id": 3485, "prediction": "Adds a value to a map if not already present ."}
{"id": 3486, "prediction": "Adds all key - value pairs to the given map if they are not already present in the given map ."}
{"id": 3487, "prediction": "Merge two maps ."}
{"id": 3488, "prediction": "Puts all elements in the given map to the given map if the map is not null ."}
{"id": 3489, "prediction": "Waits until a pod is ready ."}
{"id": 3490, "prediction": "Throws an IllegalArgumentException if the value is not valid ."}
{"id": 3491, "prediction": "Converts an object to a list of metadata ."}
{"id": 3492, "prediction": "Returns the resource version for the given entity or null if no resource version is defined ."}
{"id": 3493, "prediction": "Return true if the pod is ready ."}
{"id": 3494, "prediction": "Get the current context from the configuration ."}
{"id": 3495, "prediction": "Checks to see if a route with the given name exists ."}
{"id": 3496, "prediction": "Checks if the given list of paths contains a resource ."}
{"id": 3497, "prediction": "Reads and enrichs the fragment for the given file ."}
{"id": 3498, "prediction": "Converts a list of environment variables to a list of environment variables ."}
{"id": 3499, "prediction": "Merges two resources into one ."}
{"id": 3500, "prediction": "Takes an override map and removes any empty strings from it ."}
{"id": 3501, "prediction": "Checks if the pod is local ."}
{"id": 3502, "prediction": "Reads configuration from a file ."}
{"id": 3503, "prediction": "Add a port to a map if the port is not valid ."}
{"id": 3504, "prediction": "Returns the docker config as a JSON string ."}
{"id": 3505, "prediction": "Returns the configuration of a plugin ."}
{"id": 3506, "prediction": "Gets the secret configuration for a given secret id ."}
{"id": 3507, "prediction": "Download the given URL into the given target file ."}
{"id": 3508, "prediction": "Compare two version strings"}
{"id": 3509, "prediction": "Extracts the specified ProcessorConfig from the specified profile and adds it to the ProcessorConfig ."}
{"id": 3510, "prediction": "Looks up the profile with the given name in the given directory ."}
{"id": 3511, "prediction": "Read profile from classpath ."}
{"id": 3512, "prediction": "Load all profile for a given extension from the classpath ."}
{"id": 3513, "prediction": "Finds the profile yaml file in the given directory ."}
{"id": 3514, "prediction": "Obtains the profile file names for a specific profile type ."}
{"id": 3515, "prediction": "Create a list of profile from a YAML stream ."}
{"id": 3516, "prediction": "Get image pull policy from config ."}
{"id": 3517, "prediction": "Returns true if open shift mode is enabled ."}
{"id": 3518, "prediction": "Gets the replica count ."}
{"id": 3519, "prediction": "Return the first child element with the specified name ."}
{"id": 3520, "prediction": "Installs a template on Kubernetes ."}
{"id": 3521, "prediction": "Removes all tags with the given tag name from the given list ."}
{"id": 3522, "prediction": "Apply the given namespace to the existing entity ."}
{"id": 3523, "prediction": "Attempts to apply the given project to the context ."}
{"id": 3524, "prediction": "Apply a ProjectRequest to an existing entity ."}
{"id": 3525, "prediction": "Returns the namespace for the given entity or the default namespace if no namespace exists ."}
{"id": 3526, "prediction": "This method is called when an error occurs ."}
{"id": 3527, "prediction": "Creates the list items ."}
{"id": 3528, "prediction": "Adds namespace annotation from the namespace and project objects being generated ."}
{"id": 3529, "prediction": "Returns the environment variables for the main class ."}
{"id": 3530, "prediction": "Convert a duration to a number of seconds ."}
{"id": 3531, "prediction": "Convert a time unit in a string into a BigDecimal ."}
{"id": 3532, "prediction": "Scans the specified directory for files matching the specified pattern ."}
{"id": 3533, "prediction": "Disable OpenShift support for templates ."}
{"id": 3534, "prediction": "Checks to see if a service has a In setup rule ."}
{"id": 3535, "prediction": "Parses the given input stream and returns a map of filename - to - list of files ."}
{"id": 3536, "prediction": "Creates a new generator context based on the current generator configuration ."}
{"id": 3537, "prediction": "Extracts the generator config ."}
{"id": 3538, "prediction": "Gets enricher context ."}
{"id": 3539, "prediction": "Extracts the enricher config from the profile ."}
{"id": 3540, "prediction": "Returns the default icon reference ."}
{"id": 3541, "prediction": "Copy the contents of an app . config file to a new directory ."}
{"id": 3542, "prediction": "Load a properties file from a URL"}
{"id": 3543, "prediction": "Gets the spring boot version for the given maven project ."}
{"id": 3544, "prediction": "Create a list of service objects from the given descriptor paths ."}
{"id": 3545, "prediction": "Runs the enricher and returns the result ."}
{"id": 3546, "prediction": "Gets raw config ."}
{"id": 3547, "prediction": "Builds a new flattened map from the given source ."}
{"id": 3548, "prediction": "Extract the watcher config from the profile ."}
{"id": 3549, "prediction": "If the list contains a single Template lets unwrap it ."}
{"id": 3550, "prediction": "Get a timestamp for the current build reference ."}
{"id": 3551, "prediction": "Returns the value for the given configuration key or the default value if no value is given ."}
{"id": 3552, "prediction": "Returns an unmodifiable map of all configuration properties with the given name ."}
{"id": 3553, "prediction": "Prepares the processor for the given list of names and type ."}
{"id": 3554, "prediction": "Adds the from configuration to the builder ."}
{"id": 3555, "prediction": "Get from selector default mode ."}
{"id": 3556, "prediction": "Returns the name of the image to display ."}
{"id": 3557, "prediction": "Gets the registry ."}
{"id": 3558, "prediction": "Checks if is online or not ."}
{"id": 3559, "prediction": "Get the URL for a service by serviceName and protocol ."}
{"id": 3560, "prediction": "Returns the value of a property as a Boolean ."}
{"id": 3561, "prediction": "Creates a best client based on the configuration ."}
{"id": 3562, "prediction": "Creates a new internal node and starts it ."}
{"id": 3563, "prediction": "Scans the classpath for all plugins ."}
{"id": 3564, "prediction": "Deserializes a AmericanExpressRewardsBalance from JSON ."}
{"id": 3565, "prediction": "Gets the current American rewards balance ."}
{"id": 3566, "prediction": "Converts a string representation of a JSON object to aUrl instance ."}
{"id": 3567, "prediction": "Gets the resource at the given path and calls the provided callback with the path . If the path does not exist the callback is called with no arguments ."}
{"id": 3568, "prediction": "Do a POST request to the specified path ."}
{"id": 3569, "prediction": "Create a new VenmoConfiguration instance from a JSON object ."}
{"id": 3570, "prediction": "Collects device data from a fragment and sends it to the given listener ."}
{"id": 3571, "prediction": "Collects device data from the device manager ."}
{"id": 3572, "prediction": "Collect pay individual data and send it to the given listener ."}
{"id": 3573, "prediction": "Gets the client metadata id ."}
{"id": 3574, "prediction": "Checks if a signature is valid ."}
{"id": 3575, "prediction": "Get a optional string value from a json object or fallback if it is null ."}
{"id": 3576, "prediction": "Returns a list of PaymentMethodNonces from the given JSON object ."}
{"id": 3577, "prediction": "Gets the specification for the browser Checkout configuration ."}
{"id": 3578, "prediction": "Gets BillingAgreementConfig for the current browser ."}
{"id": 3579, "prediction": "Sends a GET request to the server ."}
{"id": 3580, "prediction": "Submits a request to the server and calls a callback on the response ."}
{"id": 3581, "prediction": "Do a HTTP POST request to the given path ."}
{"id": 3582, "prediction": "Start a payment using the provided parameters ."}
{"id": 3583, "prediction": "Approves a payment using the provided request ."}
{"id": 3584, "prediction": "Registers all listeners ."}
{"id": 3585, "prediction": "Unregister a listener ."}
{"id": 3586, "prediction": "Request the Billing Agreement ."}
{"id": 3587, "prediction": "Sends a result back to the browser for the given data ."}
{"id": 3588, "prediction": "Parses the response ."}
{"id": 3589, "prediction": "Addsouns to a dictionary ."}
{"id": 3590, "prediction": "Removes a single word from a dictionary ."}
{"id": 3591, "prediction": "Convert a set of Korean tokens to a Java String list ."}
{"id": 3592, "prediction": "Gets a list of KoreanPhrase from a set of Korean tokens ."}
{"id": 3593, "prediction": "DetTokenize a list of tokens ."}
{"id": 3594, "prediction": "Reads from the given channel and returns it as a ByteBuffer ."}
{"id": 3595, "prediction": "Converts a list of nal units into a 4 - byte buffer ."}
{"id": 3596, "prediction": "Convert a list of nal units into a ByteBuffer ."}
{"id": 3597, "prediction": "Returns the profile for the specified integer or UNKNOWN ."}
{"id": 3598, "prediction": "Normalize and generate fixed precision ."}
{"id": 3599, "prediction": "Reads to the next marker partial ."}
{"id": 3600, "prediction": "Reads the data to the next marker and combine it with a new one ."}
{"id": 3601, "prediction": "Gets the maximum available frame ."}
{"id": 3602, "prediction": "Attempts to modify an MP4 file ."}
{"id": 3603, "prediction": "Attempts to copy a single file to another file"}
{"id": 3604, "prediction": "Get the total duration of all edits in the track ."}
{"id": 3605, "prediction": "Converts a frame number to a time value ."}
{"id": 3606, "prediction": "Converts a time value to a frame for a given trak ."}
{"id": 3607, "prediction": "Get the duration of a particular media from a trak box or the duration of a particular media by adding or subtracting the duration of a particular media by adding or subtracting the duration of a particular media by adding or subtracting the duration of a particular media ."}
{"id": 3608, "prediction": "Convert edited time to media time ."}
{"id": 3609, "prediction": "Get the frame with the given media frame number from the TrakBox ."}
{"id": 3610, "prediction": "Get the time when the video track was edited from a particular media frame ."}
{"id": 3611, "prediction": "Convert a timevalue to a Timecode frame for a specific movie"}
{"id": 3612, "prediction": "Helper method to format the timecode for a particular track ."}
{"id": 3613, "prediction": "Returns a 7 - bit integer extracted from the given values ."}
{"id": 3614, "prediction": "Set the specified number of bits to the specified value ."}
{"id": 3615, "prediction": "Returns true if the given color space matches this color space ."}
{"id": 3616, "prediction": "Calculate the compSize of a given size"}
{"id": 3617, "prediction": "Create a raw MP4 demuxer for a given input channel ."}
{"id": 3618, "prediction": "Reads the cache ."}
{"id": 3619, "prediction": "Create a WavHeader for the given AudioFormat with the given number of samples ."}
{"id": 3620, "prediction": "Create a multi - channel wav header from an array of headers ."}
{"id": 3621, "prediction": "Parse the MP4 decoder specific info ."}
{"id": 3622, "prediction": "Encode a symbol to a context"}
{"id": 3623, "prediction": "This method is used to read the aminoacid marks from a slice header ."}
{"id": 3624, "prediction": "Takes a MovieBox and a TrakBox track and a tvMv and splits them into a list of Edit instances ."}
{"id": 3625, "prediction": "Decode a frame ."}
{"id": 3626, "prediction": "Set the bigEndian flag ."}
{"id": 3627, "prediction": "Staging forMBP messages ."}
{"id": 3628, "prediction": "Encode a native frame . The input images are assumed to be in RGB color space ."}
{"id": 3629, "prediction": "Encode length of long to big - endian byte array ."}
{"id": 3630, "prediction": "Returns the bits required to encode a long as an 8 bit integer ."}
{"id": 3631, "prediction": "Add a tag to the buffer ."}
{"id": 3632, "prediction": "Reposition the file to the beginning of the read buffers ."}
{"id": 3633, "prediction": "Decode bin ."}
{"id": 3634, "prediction": "Decode a bin by pass ."}
{"id": 3635, "prediction": "Extract a marker from the given ByteBuffer ."}
{"id": 3636, "prediction": "Returns the SampleFrequency for the specified integer ."}
{"id": 3637, "prediction": "Make the plane predictor ."}
{"id": 3638, "prediction": "Starts a block with the specified number of bytes ."}
{"id": 3639, "prediction": "Converts an integer array into a COEFF array at a specific level ."}
{"id": 3640, "prediction": "Computes the finish of a block ."}
{"id": 3641, "prediction": "Concatenates this buffer and the specified BitsBuffer into this buffer ."}
{"id": 3642, "prediction": "Returns the reverse 32 - bit integer of a given length"}
{"id": 3643, "prediction": "reverses the bits in [ lo hi )"}
{"id": 3644, "prediction": "Seeks to the key frame ."}
{"id": 3645, "prediction": "Get the video pixels in a single frame ."}
{"id": 3646, "prediction": "returns the id of the change point"}
{"id": 3647, "prediction": "Convert a byte array to an int at a specified depth ."}
{"id": 3648, "prediction": "Convert an int value to a byte array at a specific depth ."}
{"id": 3649, "prediction": "Generates a float buffer for the specified AudioFormat ."}
{"id": 3650, "prediction": "Decodes a float buffer according to the specified AudioFormat ."}
{"id": 3651, "prediction": "Writes the contents of the given buffer to the given output buffer ."}
{"id": 3652, "prediction": "Deserialize inb the buffer array with the specified parameters ."}
{"id": 3653, "prediction": "Gets the size of the video track ."}
{"id": 3654, "prediction": "Build the out map for a given bounding box ."}
{"id": 3655, "prediction": "Build a wipe map ."}
{"id": 3656, "prediction": "Reads a batch of bytes into an array ."}
{"id": 3657, "prediction": "Read a 32 - bit integer array from the given ByteBuffer ."}
{"id": 3658, "prediction": "Calculates thePrediction median of three columns ."}
{"id": 3659, "prediction": "Encode a given picture ."}
{"id": 3660, "prediction": "Encode an IDR frame ."}
{"id": 3661, "prediction": "Encode a P - frame ."}
{"id": 3662, "prediction": "Retrieve a list of all supported codecs ."}
{"id": 3663, "prediction": "Returns a list of the tags that are supported by this codec ."}
{"id": 3664, "prediction": "Attempts to add a new reference ."}
{"id": 3665, "prediction": "Delete all heap references ."}
{"id": 3666, "prediction": "Flushes all the references to the cache ."}
{"id": 3667, "prediction": "Loads the given library using the given name and version ."}
{"id": 3668, "prediction": "Unpacks a shared library ."}
{"id": 3669, "prediction": "Delete temporary files ."}
{"id": 3670, "prediction": "Returns the default Audio channel layout for the specified number of channels ."}
{"id": 3671, "prediction": "Returns the AudioChannel type from the specified layout at the specified index ."}
{"id": 3672, "prediction": "Make a MediaPacket ."}
{"id": 3673, "prediction": "Get the information about the current version ."}
{"id": 3674, "prediction": "Returns the default time base ."}
{"id": 3675, "prediction": "Convenient factory method . Returns null if no channel is available ."}
{"id": 3676, "prediction": "Plays a video from the specified filename ."}
{"id": 3677, "prediction": "Display a video at a specific time ."}
{"id": 3678, "prediction": "Creates a new codec descriptor with the specified id ."}
{"id": 3679, "prediction": "Print an option to java . io . PrintStream"}
{"id": 3680, "prediction": "Register a URL protocol factory ."}
{"id": 3681, "prediction": "Generates a unique name for an object ."}
{"id": 3682, "prediction": "Make a media sample from one layout to the other ."}
{"id": 3683, "prediction": "Get a list of all supported video frame rates ."}
{"id": 3684, "prediction": "Gets a list of the supported video pixel formats ."}
{"id": 3685, "prediction": "Gets the list of supported audio sample rates ."}
{"id": 3686, "prediction": "Return a list of the supported audio formats ."}
{"id": 3687, "prediction": "Returns a list of the supported AudioChannel Layouts ."}
{"id": 3688, "prediction": "Set the given flag to the given value ."}
{"id": 3689, "prediction": "Set the value of a given flag ."}
{"id": 3690, "prediction": "Returns a decoder for this stream ."}
{"id": 3691, "prediction": "Returns the demuxer for this stream ."}
{"id": 3692, "prediction": "Retrieve a collection of all the formats ."}
{"id": 3693, "prediction": "Returns a new filter graph ."}
{"id": 3694, "prediction": "Returns the type of the filter ."}
{"id": 3695, "prediction": "Gets a ByteBuffer of the specified length from the buffer at the specified offset ."}
{"id": 3696, "prediction": "Creates a new AudioFrame from the given audio format ."}
{"id": 3697, "prediction": "Res rethrow a given picture object"}
{"id": 3698, "prediction": "Throws an IllegalArgumentException if the image is not of the correct type ."}
{"id": 3699, "prediction": "Throws an exception if the picture is not complete ."}
{"id": 3700, "prediction": "Get the current filter graph ."}
{"id": 3701, "prediction": "Gets the meta data associated with this media ."}
{"id": 3702, "prediction": "Extracts the CPUArch from the given String"}
{"id": 3703, "prediction": "Extracts the CPUArch from the GNU string ."}
{"id": 3704, "prediction": "Returns the operating system family for the given operating system name ."}
{"id": 3705, "prediction": "Given a GNU string returns the family of the operating system the JVM is running on"}
{"id": 3706, "prediction": "Plays a sound ."}
{"id": 3707, "prediction": "Attempts to load a library with the given name and major version . If the library was already loaded this method will do nothing ."}
{"id": 3708, "prediction": "Set the library with the given name and major version ."}
{"id": 3709, "prediction": "Attempts to load a library from the list of candidates ."}
{"id": 3710, "prediction": "Initialize search path variables ."}
{"id": 3711, "prediction": "Returns true if the specified library has already been loaded ; false otherwise ."}
{"id": 3712, "prediction": "Record a screen ."}
{"id": 3713, "prediction": "Releases the lock and removes it from the memory manager ."}
{"id": 3714, "prediction": "Get the MuxerStream at the given position ."}
{"id": 3715, "prediction": "Returns the Muxer for this stream ."}
{"id": 3716, "prediction": "Create a script transaction ."}
{"id": 3717, "prediction": "Decode a base58 string into an array of bytes ."}
{"id": 3718, "prediction": "Generate a random string ."}
{"id": 3719, "prediction": "Get a transaction by its id"}
{"id": 3720, "prediction": "Returns a list of transactions for the specified address ."}
{"id": 3721, "prediction": "Returns a list of transactions for the given address ."}
{"id": 3722, "prediction": "Get the list of headers for a block from a block to a block ."}
{"id": 3723, "prediction": "Get a block by its signature"}
{"id": 3724, "prediction": "Sends a transaction ."}
{"id": 3725, "prediction": "Set a script in a chain ."}
{"id": 3726, "prediction": "Compile a script ."}
{"id": 3727, "prediction": "Write primitive array to the stream ."}
{"id": 3728, "prediction": "Flushes the output stream ."}
{"id": 3729, "prediction": "Converts an object to a memory address ."}
{"id": 3730, "prediction": "Get the FSTClazzInfo for the lastDirectClass property ."}
{"id": 3731, "prediction": "Write an object to the buffer ."}
{"id": 3732, "prediction": "Set the FileChannel data ."}
{"id": 3733, "prediction": "Get specificity of a class ."}
{"id": 3734, "prediction": "Resizes the memory mapped file to the required size ."}
{"id": 3735, "prediction": "Remove a binary entry from the cache ."}
{"id": 3736, "prediction": "Write a string in ascending order"}
{"id": 3737, "prediction": "Set the output stream ."}
{"id": 3738, "prediction": "Creates a FSTConfiguration instance with the specified pretty and share - references settings ."}
{"id": 3739, "prediction": "Create a configuration for a struct ."}
{"id": 3740, "prediction": "Calculates the size of an object that is not aUtility ."}
{"id": 3741, "prediction": "Clears all cached objects ."}
{"id": 3742, "prediction": "Get an FSTObjectInput based on an InputStream"}
{"id": 3743, "prediction": "Get a FSTObjectInput based on the contents of the specified array and reset for reuse use array ."}
{"id": 3744, "prediction": "Get a copy of an array of bytes"}
{"id": 3745, "prediction": "Get the FSTObjectOutput associated with this object ."}
{"id": 3746, "prediction": "Registers cross - platform class mapping for the keys and values ."}
{"id": 3747, "prediction": "Return the name of the class or the super class ."}
{"id": 3748, "prediction": "Write int ."}
{"id": 3749, "prediction": "Write a long value to the output stream as a raw int ."}
{"id": 3750, "prediction": "Write packed data to the current byte order"}
{"id": 3751, "prediction": "Write an array to the stream ."}
{"id": 3752, "prediction": "Write a number of bytes from the specified buffered name to the stream ."}
{"id": 3753, "prediction": "Get a FSTClazzInfo . FSTFieldInfo for this class ."}
{"id": 3754, "prediction": "Called when an object has been written to the stream ."}
{"id": 3755, "prediction": "Called when the object has been written to the stream ."}
{"id": 3756, "prediction": "Get the FSTClazzInfo for a particular field info"}
{"id": 3757, "prediction": "Write an array ."}
{"id": 3758, "prediction": "Set the length of this string to the length of the specified string ."}
{"id": 3759, "prediction": "Writes a primitive array to the underlying stream ."}
{"id": 3760, "prediction": "Takes a snapshot of the current file s changes and returns the corresponding FSTStructChange which has been tracking it ."}
{"id": 3761, "prediction": "Takes a snapshot of the changes that have occurred in the buffer ."}
{"id": 3762, "prediction": "Register an object for writing"}
{"id": 3763, "prediction": "Write an Object to the stream"}
{"id": 3764, "prediction": "Converts a byte array to an object ."}
{"id": 3765, "prediction": "Reads a number of bytes from the queue ."}
{"id": 3766, "prediction": "Reads a four - byte integer from the queue ."}
{"id": 3767, "prediction": "back a given number of bytes"}
{"id": 3768, "prediction": "Sets whether or not the thread pool should be used ."}
{"id": 3769, "prediction": "Starts an embedded cassandra ."}
{"id": 3770, "prediction": "Clean data embedded with native driver ."}
{"id": 3771, "prediction": "Copy a resource to a directory"}
{"id": 3772, "prediction": "Prints information about all active and waited threads to a PrintWriter ."}
{"id": 3773, "prediction": "Returns true if a remote port has been taken ."}
{"id": 3774, "prediction": "Returns an empty subscriber state ."}
{"id": 3775, "prediction": "Returns a map of op descriptors from a JSON file ."}
{"id": 3776, "prediction": "Calculates the output shape of this argument ."}
{"id": 3777, "prediction": "Returns true if the given complex array is the or of the given condition false otherwise ."}
{"id": 3778, "prediction": "Perform logical and over a vector"}
{"id": 3779, "prediction": "Perform an and over a set of dimensions"}
{"id": 3780, "prediction": "Returns an array with the elements of the first array matching the specified condition for the specified dimension"}
{"id": 3781, "prediction": "Apply a where on an ndarray"}
{"id": 3782, "prediction": "Returns the first index of the array that satisfies the given condition"}
{"id": 3783, "prediction": "Returns the FlatProperties for this buffer builder ."}
{"id": 3784, "prediction": "Create a new FunctionProperties from a FlatProperties"}
{"id": 3785, "prediction": "Returns the properties as a flat buffer builder ."}
{"id": 3786, "prediction": "Set the exception to the given value ."}
{"id": 3787, "prediction": "Set the t if this is the first exception to be thrown"}
{"id": 3788, "prediction": "Takes a list of x and y and returns a list of x and y . If the x and y are the same the function will throw an exception ."}
{"id": 3789, "prediction": "Partition the data set by a specified chunk ."}
{"id": 3790, "prediction": "Returns the nd4j type from the given OnNX data type ."}
{"id": 3791, "prediction": "Shuts down the transport and releases all resources associated with it ."}
{"id": 3792, "prediction": "This method returns current device arch"}
{"id": 3793, "prediction": "Create a 2D INDArray for the specified column vector using the specified configuration ."}
{"id": 3794, "prediction": "Pooling 2D implementation"}
{"id": 3795, "prediction": "Create a new compression descriptor from a ByteBuffer"}
{"id": 3796, "prediction": "Get a list of Batch objects for each partition of the given list ."}
{"id": 3797, "prediction": "Validate that all arrays have the same shape and the same number of dimensions"}
{"id": 3798, "prediction": "Sets the opType"}
{"id": 3799, "prediction": "Computes a scalar given the number of arguments ."}
{"id": 3800, "prediction": "Flatten a collection of matrices ."}
{"id": 3801, "prediction": "Generate a bilinear product for the given columns and rows"}
{"id": 3802, "prediction": "Converts a double array to a complex ndarray ."}
{"id": 3803, "prediction": "Create a new complex number array with the specified value"}
{"id": 3804, "prediction": "This method is used to assign a scalar value to a complex array"}
{"id": 3805, "prediction": "Determines whether the entry should be replicated ."}
{"id": 3806, "prediction": "Subtract a complex number from this complex number ."}
{"id": 3807, "prediction": "Calculate the angle of a complex number"}
{"id": 3808, "prediction": "Calculate the ceil of a complex number"}
{"id": 3809, "prediction": "Calculate the neg of a complex number"}
{"id": 3810, "prediction": "Calculate the absolute value of a complex number ."}
{"id": 3811, "prediction": "Calculate the power of two complex numbers"}
{"id": 3812, "prediction": "Returns the context of the media driver ."}
{"id": 3813, "prediction": "binarize the dataset by a given amount ."}
{"id": 3814, "prediction": "Sample a dataset"}
{"id": 3815, "prediction": "Get the memory footprint of the Nd4j backend"}
{"id": 3816, "prediction": "Convert a Throwable to a string ."}
{"id": 3817, "prediction": "Given a string containing a host name extract the full host name ."}
{"id": 3818, "prediction": "Convert an array of Strings to a String ."}
{"id": 3819, "prediction": "Converts a range of a byte array into a hex string ."}
{"id": 3820, "prediction": "Returns an array of strings from the specified string . If the specified string is null or empty the array is empty ."}
{"id": 3821, "prediction": "Splits the given string around matches of the given separator character ."}
{"id": 3822, "prediction": "Splits the given string by the given separator ."}
{"id": 3823, "prediction": "Returns the index of the next occurrence of the specified separator or - 1 if no separator was found ."}
{"id": 3824, "prediction": "Escapes a string so that it can be used as an HTML entity ."}
{"id": 3825, "prediction": "Joins the given strings with the given separator ."}
{"id": 3826, "prediction": "Converts a string to camel case ."}
{"id": 3827, "prediction": "Replaces all tokens in the given string with the given replacement string ."}
{"id": 3828, "prediction": "Gets the stack trace as a String ."}
{"id": 3829, "prediction": "Calculate the inverse of an array"}
{"id": 3830, "prediction": "Get the BigInteger at the specified index ."}
{"id": 3831, "prediction": "Determines whether this object is actual on the host side ."}
{"id": 3832, "prediction": "Return true if the object is actual on the device side ."}
{"id": 3833, "prediction": "This method creates shape information for the given shape"}
{"id": 3834, "prediction": "This method returns shape information for the given shape"}
{"id": 3835, "prediction": "Check if the shape is a vector"}
{"id": 3836, "prediction": "Get the order of an ndarray"}
{"id": 3837, "prediction": "Compute the offset for the given array and indexes"}
{"id": 3838, "prediction": "Convert an array of indices to an array of indexes ."}
{"id": 3839, "prediction": "Gets a short from the data buffer at the specified offset ."}
{"id": 3840, "prediction": "This method will reallocate a copy of the workspace data buffer ."}
{"id": 3841, "prediction": "Copy a buffer at specified stride to another"}
{"id": 3842, "prediction": "This method returns a data buffer which will store the given array as a constant"}
{"id": 3843, "prediction": "Get the URI to use for the Kafka serialization ."}
{"id": 3844, "prediction": "Element - wise power function ."}
{"id": 3845, "prediction": "Compute the logarithm of an ndarray"}
{"id": 3846, "prediction": "Max function with a scalar"}
{"id": 3847, "prediction": "Element - wise maximum of the second array and the first array ."}
{"id": 3848, "prediction": "minimum function with a scalar"}
{"id": 3849, "prediction": "Element - wise minimum function between first and second"}
{"id": 3850, "prediction": "Stabilizes an ndarray"}
{"id": 3851, "prediction": "Element - wise Expm1 function ."}
{"id": 3852, "prediction": "Element - wise log1p operation"}
{"id": 3853, "prediction": "Prepare an array of bounds for a given x"}
{"id": 3854, "prediction": "Adjust the scheme to bounds based on the specified bounds ."}
{"id": 3855, "prediction": "Compute the next data set ."}
{"id": 3856, "prediction": "Performs a LAPACKE decomposition using LAPACKE and LAPACKE_ by Copy the upper part of Q into the result ."}
{"id": 3857, "prediction": "Constructs a AllocationShape for the specified DataBuffer ."}
{"id": 3858, "prediction": "Returns true if the given name exists in the given path ."}
{"id": 3859, "prediction": "Custom deserialization for Java serialization"}
{"id": 3860, "prediction": "Convenience method to sweep the tail of the queue of events ."}
{"id": 3861, "prediction": "Create an ndarray from a NpyPointer"}
{"id": 3862, "prediction": "Create an ndarray from a File"}
{"id": 3863, "prediction": "This method is used to allocate a PagedPointer in the given workspace ."}
{"id": 3864, "prediction": "Attaches an object to the lock manager ."}
{"id": 3865, "prediction": "Determines whether the server is started"}
{"id": 3866, "prediction": "This method executes the specified operation ."}
{"id": 3867, "prediction": "This method flushes the queue to disk"}
{"id": 3868, "prediction": "Gets the InputStream of the resource . If the resource is a jar file the InputStream is returned as an InputStream . Otherwise a RuntimeException is thrown ."}
{"id": 3869, "prediction": "This method returns device id for the specified thread ."}
{"id": 3870, "prediction": "Attaches a thread to a device ."}
{"id": 3871, "prediction": "This method returns the device associated with the specified thread id ."}
{"id": 3872, "prediction": "Returns the operating system name ."}
{"id": 3873, "prediction": "Calculates the architecture based on the operating system architecture ."}
{"id": 3874, "prediction": "This method publishes the given ndarray"}
{"id": 3875, "prediction": "Starts the server by reading the server configuration file from the classpath ."}
{"id": 3876, "prediction": "Creates a copy of this buffer"}
{"id": 3877, "prediction": "Intercepts a given operation and checks if the data type of the operation is INT"}
{"id": 3878, "prediction": "Add another complex number ."}
{"id": 3879, "prediction": "This method is called when message is received from server"}
{"id": 3880, "prediction": "Max pooling 3d operation ."}
{"id": 3881, "prediction": "WiseConv2D on the specified inputs using the specified configuration ."}
{"id": 3882, "prediction": "Resets the state of the manager ."}
{"id": 3883, "prediction": "Returns the op class name for the given Op"}
{"id": 3884, "prediction": "Allocate a new array and return it ."}
{"id": 3885, "prediction": "Get the shape of the array"}
{"id": 3886, "prediction": "Evaluate the operation and return the EvaluateResult"}
{"id": 3887, "prediction": "This method will compress the given double array"}
{"id": 3888, "prediction": "Convert an array of complex numbers to an array of real numbers ."}
{"id": 3889, "prediction": "Returns the center of the given complex array ."}
{"id": 3890, "prediction": "Truncate a vector to the specified dimension"}
{"id": 3891, "prediction": "Pad an array with zeros to the specified shape ."}
{"id": 3892, "prediction": "finds the element with the maximum absolute value ."}
{"id": 3893, "prediction": "This method is used to broadcast given array to current thread"}
{"id": 3894, "prediction": "Sends an aggregation message ."}
{"id": 3895, "prediction": "Returns the GAMMA value of the given precision ."}
{"id": 3896, "prediction": "Returns the square root of the given number ."}
{"id": 3897, "prediction": "Cbrt a big decimal ."}
{"id": 3898, "prediction": "Computes the root of a number ."}
{"id": 3899, "prediction": "Return the exponential of the given value ."}
{"id": 3900, "prediction": "Returns the exponential of the given MathContext ."}
{"id": 3901, "prediction": "Returns the power of two numbers ."}
{"id": 3902, "prediction": "Returns the power of the given number rounded to the nearest integer ."}
{"id": 3903, "prediction": "Sine a BigDecimal ."}
{"id": 3904, "prediction": "Calculate the Tangent of a number ."}
{"id": 3905, "prediction": "Computes the cosine of a given number ."}
{"id": 3906, "prediction": "Computes the cosine of a number ."}
{"id": 3907, "prediction": "Computes the inverse of a BigDecimal ."}
{"id": 3908, "prediction": "Returns the value of the argument if the argument is not zero . Otherwise the argument is returned ."}
{"id": 3909, "prediction": "Computes the cosine of a given number ."}
{"id": 3910, "prediction": "Gamma function ."}
{"id": 3911, "prediction": "Computes the exact error accumulation of a given size p and an array of ints ."}
{"id": 3912, "prediction": "Return a new BigDecimal with correct scale using d + x ."}
{"id": 3913, "prediction": "Scales a BigDecimal by its precision ."}
{"id": 3914, "prediction": "Computes the Euclidean norm of a BigDecimal ."}
{"id": 3915, "prediction": "Put a new function instance by id"}
{"id": 3916, "prediction": "Returns the input arguments for a specified function ."}
{"id": 3917, "prediction": "Updates the given array for the given variable name ."}
{"id": 3918, "prediction": "Put a new shape for a given variable name ."}
{"id": 3919, "prediction": "Associates the specified INDArray with the specified SDVariable ."}
{"id": 3920, "prediction": "Gets property for function ."}
{"id": 3921, "prediction": "Add the specified property to the list of properties for the specified function"}
{"id": 3922, "prediction": "Add the given outgoing arguments for the given function"}
{"id": 3923, "prediction": "Add arguments for a given function ."}
{"id": 3924, "prediction": "Determines whether the given function has arguments ."}
{"id": 3925, "prediction": "This is for debugging ."}
{"id": 3926, "prediction": "Create a new variable with the specified shape with all values initialized to 1 . 0"}
{"id": 3927, "prediction": "Applies an ones - like operation to the specified SDVariable ."}
{"id": 3928, "prediction": "Returns a copy of the specified SDVariable where the value is not the same as the input"}
{"id": 3929, "prediction": "Remove the argument with the given name from the function ."}
{"id": 3930, "prediction": "Set the gradient for the specified SDVariable"}
{"id": 3931, "prediction": "Average pooling 3d operation ."}
{"id": 3932, "prediction": "The gru cell output variables ."}
{"id": 3933, "prediction": "Execute a list of function"}
{"id": 3934, "prediction": "Create a While statement ."}
{"id": 3935, "prediction": "Execute the differentiated diff function ."}
{"id": 3936, "prediction": "Executes the operation and returns the results ."}
{"id": 3937, "prediction": "Execute backward and end result"}
{"id": 3938, "prediction": "Add a variable as a place holder ."}
{"id": 3939, "prediction": "This method is used to allocate host memory"}
{"id": 3940, "prediction": "Returns the length for the opType for the data type ."}
{"id": 3941, "prediction": "Returns a string representation of the data type for the given allocation mode ."}
{"id": 3942, "prediction": "get the dtype from the configuration"}
{"id": 3943, "prediction": "Get the opNum for a given opName ."}
{"id": 3944, "prediction": "This method destroys all workspaces associated with the current thread ."}
{"id": 3945, "prediction": "This method prints the statistics of all workspaces in the current thread and the workspace name in the pinned thread ."}
{"id": 3946, "prediction": "Computes the dot product of the diagonal elements of a vector by the given matrix ."}
{"id": 3947, "prediction": "Receives an ndarray from a consumer"}
{"id": 3948, "prediction": "This method runs the accumulation under the specified dimensions ."}
{"id": 3949, "prediction": "This implementation uses the default implementation of threshold decode"}
{"id": 3950, "prediction": "Returns read node name for the given name ."}
{"id": 3951, "prediction": "Do the tad magic to return the offsets for the given dimension"}
{"id": 3952, "prediction": "Assert that no workspaces are currently open"}
{"id": 3953, "prediction": "Computes the negative log likelihood of the given labels"}
{"id": 3954, "prediction": "Request a tick"}
{"id": 3955, "prediction": "Attempts to request TOE ."}
{"id": 3956, "prediction": "Releases the object toe ."}
{"id": 3957, "prediction": "Returns the current state ."}
{"id": 3958, "prediction": "Build an environment for Nd4j"}
{"id": 3959, "prediction": "This method does the actual processing of a VectorCompleteMessage ."}
{"id": 3960, "prediction": "Initializes the curr dataset from the list of examples ."}
{"id": 3961, "prediction": "Initialize host collectors ."}
{"id": 3962, "prediction": "This method returns actual device pointer of given buffer ."}
{"id": 3963, "prediction": "This method needs to be synchronized on host side"}
{"id": 3964, "prediction": "Applies the given update to the view state ."}
{"id": 3965, "prediction": "Waits until the memory is enqueued and then removes the entry from the host memory ."}
{"id": 3966, "prediction": "Create an ndarray index from an ndarray or vector"}
{"id": 3967, "prediction": "Gets properties for function ."}
{"id": 3968, "prediction": "Does any of the arguments have place holder variables?"}
{"id": 3969, "prediction": "Perform the &lt ; &gt ; &lt ; &gt ; &gt ; - &gt ; - &gt ; - &gt ; - &gt ; - &gt ; - &gt ;"}
{"id": 3970, "prediction": "Formats the given ndarray as a string ."}
{"id": 3971, "prediction": "This method is used to import a graph ."}
{"id": 3972, "prediction": "Convert a complex array to a blob"}
{"id": 3973, "prediction": "Load a complex array from a blob"}
{"id": 3974, "prediction": "Saves an array ."}
{"id": 3975, "prediction": "Copy the real values to the array"}
{"id": 3976, "prediction": "Copy the magnitude of this vector to the vector real ."}
{"id": 3977, "prediction": "Adds values from other to this array except the ones from this and other ."}
{"id": 3978, "prediction": "Assigns a given array to this array ."}
{"id": 3979, "prediction": "Returns a new complex matrix with the given row indices ."}
{"id": 3980, "prediction": "Adds a row to the INDArray toPut ."}
{"id": 3981, "prediction": "Put a column to a matrix"}
{"id": 3982, "prediction": "Subtract an ndarray from another"}
{"id": 3983, "prediction": "Add an ndarray to another"}
{"id": 3984, "prediction": "Subtract one element from the other element ."}
{"id": 3985, "prediction": "Add an element to another"}
{"id": 3986, "prediction": "Assigns a given number to this array"}
{"id": 3987, "prediction": "Returns a new complex array with all the scalar values in it ."}
{"id": 3988, "prediction": "Return the eigenvalues of the matrix"}
{"id": 3989, "prediction": "Compute generalized eigenvalues of a symmetric matrix ."}
{"id": 3990, "prediction": "Calculates the absolute value of the element of a complex array ."}
{"id": 3991, "prediction": "Copies the elements of x into y ."}
{"id": 3992, "prediction": "Computes the product of a vector by a scalar ."}
{"id": 3993, "prediction": "This method calculates dot product for SkipGramMessage"}
{"id": 3994, "prediction": "Returns the non - zero count of the specified weights"}
{"id": 3995, "prediction": "Perform aReduce on the specified outputs"}
{"id": 3996, "prediction": "Gets a no - arg constructor ."}
{"id": 3997, "prediction": "Returns a method handle for a constructor ."}
{"id": 3998, "prediction": "Invoke the given method handle with the given parameters ."}
{"id": 3999, "prediction": "Returns the first annotation of the specified type ."}
{"id": 4000, "prediction": "Gets the declared annotation ."}
{"id": 4001, "prediction": "Returns true if the specified annotation is present on the specified class false otherwise ."}
{"id": 4002, "prediction": "Create a proxy instance for the given interface ."}
{"id": 4003, "prediction": "Loads a single entity from the datastore"}
{"id": 4004, "prediction": "Saves the specified POJO ."}
{"id": 4005, "prediction": "Create a proxy for the given service ."}
{"id": 4006, "prediction": "Returns the metadata for the specified entity type . If no entity class has been registered for the specified kind an IllegalArgumentException is thrown ."}
{"id": 4007, "prediction": "Query keys only ."}
{"id": 4008, "prediction": "Returns a new QueryResults for a given key query ."}
{"id": 4009, "prediction": "Executes a normal query and returns the results ."}
{"id": 4010, "prediction": "Execute a projection query and return the results ."}
{"id": 4011, "prediction": "Counts the number of results of a key query ."}
{"id": 4012, "prediction": "Partition the input iterator so that no more than 1000 keys will be returned ."}
{"id": 4013, "prediction": "Loads the result from the given keys ."}
{"id": 4014, "prediction": "Returns a message for the given path ."}
{"id": 4015, "prediction": "Creates a key with the specified POJO ."}
{"id": 4016, "prediction": "Compare with identity hash code ."}
{"id": 4017, "prediction": "Converts a raw key to a cloud datastore key ."}
{"id": 4018, "prediction": "Gets the raw value of a key ."}
{"id": 4019, "prediction": "Gets the kind here for the specified class ."}
{"id": 4020, "prediction": "Returns true if the given type has no type parameters ."}
{"id": 4021, "prediction": "Returns true if the given type is the same as the given type s super type ."}
{"id": 4022, "prediction": "Get the exact direct super types for the given type ."}
{"id": 4023, "prediction": "Captures a type ."}
{"id": 4024, "prediction": "Gets the translator for a given path ."}
{"id": 4025, "prediction": "Return a Populator for the given class and path ."}
{"id": 4026, "prediction": "Get index instruction for a given class ."}
{"id": 4027, "prediction": "Returns true if the method is of interest ."}
{"id": 4028, "prediction": "Returns a list of all properties of the given class including fields and methods ."}
{"id": 4029, "prediction": "Gets the key metadata ."}
{"id": 4030, "prediction": "Returns the result for the given key . If the key does not exist it will be created ."}
{"id": 4031, "prediction": "Executes the next round ."}
{"id": 4032, "prediction": "Fetch any of the pending entities ."}
{"id": 4033, "prediction": "Add indexed discriminators from a class ."}
{"id": 4034, "prediction": "Register a subclass with the given translator ."}
{"id": 4035, "prediction": "Gets the component type for a collection ."}
{"id": 4036, "prediction": "Returns the type of the map key ."}
{"id": 4037, "prediction": "Returns the next forward path after the specified path ."}
{"id": 4038, "prediction": "Get the final path ."}
{"id": 4039, "prediction": "Converts the current object to a string ."}
{"id": 4040, "prediction": "Returns the number of elements up to the root ."}
{"id": 4041, "prediction": "Puts all the specified updates into the cache ."}
{"id": 4042, "prediction": "Adds an empty entry to the cache ."}
{"id": 4043, "prediction": "Add a Put to the cache if the buckets are not cacheable ."}
{"id": 4044, "prediction": "Get all the values from the cache with the given keys ."}
{"id": 4045, "prediction": "Get keys of a collection of buckets ."}
{"id": 4046, "prediction": "Find the primary key fields in the class hierarchy ."}
{"id": 4047, "prediction": "Sets a new key builder for the given POJO ."}
{"id": 4048, "prediction": "Sets the id of the specified POJO ."}
{"id": 4049, "prediction": "Gets the raw value of the parent key ."}
{"id": 4050, "prediction": "Registers a subclass of the given class translator ."}
{"id": 4051, "prediction": "Returns true if type1 and type2 could have a common supertype ."}
{"id": 4052, "prediction": "Transforms the specified owner type into the specified class ."}
{"id": 4053, "prediction": "Returns an annotation any where the specified type is annotated with the specified annotation ."}
{"id": 4054, "prediction": "Add all values from the given session to this session ."}
{"id": 4055, "prediction": "Attempts to load an object with the specified key from the PrivateAsyncTransaction ."}
{"id": 4056, "prediction": "Executes the action ."}
{"id": 4057, "prediction": "Translates the given raw result into a result cache ."}
{"id": 4058, "prediction": "Fetches a set of entities from the datastore ."}
{"id": 4059, "prediction": "Loads the specified entity from the datastore ."}
{"id": 4060, "prediction": "Creates a raw key with the specified parent kind and id ."}
{"id": 4061, "prediction": "Gets the raw value of the given key ."}
{"id": 4062, "prediction": "Gets the id value of the given incomplete key ."}
{"id": 4063, "prediction": "Gets the datastore key from a url safe key ."}
{"id": 4064, "prediction": "Makes a new transactionless object ."}
{"id": 4065, "prediction": "Transact new with a limit ofries ."}
{"id": 4066, "prediction": "Transact a work object once ."}
{"id": 4067, "prediction": "Returns true if the value matches the POJO ."}
{"id": 4068, "prediction": "Objectify the current context ."}
{"id": 4069, "prediction": "Creates a new Async datastore with the same configuration as this one but the same configuration as the original datastore ."}
{"id": 4070, "prediction": "Gets the metadata for an entity ."}
{"id": 4071, "prediction": "Allocates a key range ."}
{"id": 4072, "prediction": "Opens a new Objectify with the given options ."}
{"id": 4073, "prediction": "Close the context"}
{"id": 4074, "prediction": "Converts a list of indexes into a list of indexes if necessary ."}
{"id": 4075, "prediction": "Creates a Ref with the specified value ."}
{"id": 4076, "prediction": "Throws a NotFoundException if this map contains no mapping for the key ."}
{"id": 4077, "prediction": "Add the value to the list associated with the given key ."}
{"id": 4078, "prediction": "Returns true if the raw is done false otherwise ."}
{"id": 4079, "prediction": "Generates the If conditions for a given field ."}
{"id": 4080, "prediction": "Executes the queued tasks ."}
{"id": 4081, "prediction": "Returns the first container of the specified type in the container path ."}
{"id": 4082, "prediction": "Returns the stat for the given kind creating a new one if necessary ."}
{"id": 4083, "prediction": "If the exception is an instance of RuntimeException or Error then unwrap and throw . If the exception is an instance of ExecutionException then unwrap and throw ."}
{"id": 4084, "prediction": "Returns the translator for the given type key . If no translator exists for the given type key then a new translator is created ."}
{"id": 4085, "prediction": "Gets the root ."}
{"id": 4086, "prediction": "Creates a new translator for the given type key ."}
{"id": 4087, "prediction": "Loads the property from the container and into POJO . If the property is not present an exception is thrown ."}
{"id": 4088, "prediction": "Gets the value of a property from a container ."}
{"id": 4089, "prediction": "Set the value of a POJO ."}
{"id": 4090, "prediction": "Save a single property value ."}
{"id": 4091, "prediction": "Retrieve the value of the specified POJO from the persistence context ."}
{"id": 4092, "prediction": "Write extensions ."}
{"id": 4093, "prediction": "Writes a content category ."}
{"id": 4094, "prediction": "Writes a list of categories to the JSON stream ."}
{"id": 4095, "prediction": "Process the given snippet using the given processor context ."}
{"id": 4096, "prediction": "Gets all bids from the given BID response builder ."}
{"id": 4097, "prediction": "Gets a builder with the specified id from the BidResponse . Builder list ."}
{"id": 4098, "prediction": "Updates all bid builder lists in the given response builder list with the given updater function ."}
{"id": 4099, "prediction": "Removes all Bids from the given response builder list using the given filter ."}
{"id": 4100, "prediction": "Returns the set of imps matching the given predicate ."}
{"id": 4101, "prediction": "This method is used to read extensions from a JsonParser ."}
{"id": 4102, "prediction": "Returns true if the current JsonParser is strict and empty to null false otherwise ."}
{"id": 4103, "prediction": "Register a new ExtendableBuilder ."}
{"id": 4104, "prediction": "Registers a new writer for a specific field ."}
{"id": 4105, "prediction": "Processes the provided snippet processor context ."}
{"id": 4106, "prediction": "Processes all the fields defined in the given snippet processor context ."}
{"id": 4107, "prediction": "Updates all objects in the given iterable using the given updater ."}
{"id": 4108, "prediction": "Filters a list of objects according to a given predicate ."}
{"id": 4109, "prediction": "Returns the current name or an empty string ."}
{"id": 4110, "prediction": "Reads a JSON object from the current position in a JsonParser"}
{"id": 4111, "prediction": "Extracts the next token from a JsonParser ."}
{"id": 4112, "prediction": "Returns the next token from a JsonParser ."}
{"id": 4113, "prediction": "Writes a boolean field to a JsonGenerator ."}
{"id": 4114, "prediction": "Write a list of strings to a JsonGenerator ."}
{"id": 4115, "prediction": "Writes a list of integers to a JsonGenerator ."}
{"id": 4116, "prediction": "Write long values ."}
{"id": 4117, "prediction": "Write a list of enums to the JsonGenerator ."}
{"id": 4118, "prediction": "Attempts to resolve the given URL as a URL relative to the base URL ."}
{"id": 4119, "prediction": "Fixes target URL by replacing ? at the end of the base URL"}
{"id": 4120, "prediction": "Returns all the host segments of the given URL as an array ."}
{"id": 4121, "prediction": "Returns the host of the given URL ."}
{"id": 4122, "prediction": "Gets the full url and replace the query string with and empty URL ."}
{"id": 4123, "prediction": "Loads a list of strings from storm conf ."}
{"id": 4124, "prediction": "Extract a single configuration element from a map ."}
{"id": 4125, "prediction": "Returns the protocol for the given URL ."}
{"id": 4126, "prediction": "Generates the WARC info as a byte array ."}
{"id": 4127, "prediction": "Extracts refresh url from value ."}
{"id": 4128, "prediction": "Gets the metadata for the outlink ."}
{"id": 4129, "prediction": "Filter the metadata by mdToTransfer and return the filtered metadata ."}
{"id": 4130, "prediction": "Adds a URL with the given metadata to the queue ."}
{"id": 4131, "prediction": "Clean the field name to make it lower case"}
{"id": 4132, "prediction": "Gets the charset from the BOM ."}
{"id": 4133, "prediction": "Gets the charset from the byte array and checks if the charset is valid ."}
{"id": 4134, "prediction": "Attempts to find the charset from the meta element ."}
{"id": 4135, "prediction": "Returns true if the first position of the given content is found false otherwise ."}
{"id": 4136, "prediction": "Sets a value for a given key ."}
{"id": 4137, "prediction": "Gets the first value for the specified keys ."}
{"id": 4138, "prediction": "Gets a list of cookies from a String array ."}
{"id": 4139, "prediction": "Checks if the cookie domain match the urlHostName ."}
{"id": 4140, "prediction": "Returns the cache key for the given URL ."}
{"id": 4141, "prediction": "Gets the robot rules set from the cache ."}
{"id": 4142, "prediction": "Extract the meta tags from a DocumentFragment ."}
{"id": 4143, "prediction": "Acknowledge a request for the given URL ."}
{"id": 4144, "prediction": "Filter a URL by metadata ."}
{"id": 4145, "prediction": "Filter URL string by substitution ."}
{"id": 4146, "prediction": "Read the rules from the rules file ."}
{"id": 4147, "prediction": "Processes the query elements of a URL ."}
{"id": 4148, "prediction": "Constructs a NavigationFilters object from a conf file"}
{"id": 4149, "prediction": "Add a record format at the given position ."}
{"id": 4150, "prediction": "Determine how many queries have been sent in a delay between two queries . If the difference between the last time that was sent is less than the minimum delay between the two queries ."}
{"id": 4151, "prediction": "Attempts to trigger one or more queries at a time ."}
{"id": 4152, "prediction": "Parse filters from conf file"}
{"id": 4153, "prediction": "Append a Node to the document ."}
{"id": 4154, "prediction": "Ignorable whitespace characters ."}
{"id": 4155, "prediction": "Add a processing instruction ."}
{"id": 4156, "prediction": "Add a comment ."}
{"id": 4157, "prediction": "Copy a set of whitespace characters from the current node ."}
{"id": 4158, "prediction": "Do nothing for now ."}
{"id": 4159, "prediction": "Get the namespace URI for a given prefix ."}
{"id": 4160, "prediction": "Returns the value of the given URL tuple ."}
{"id": 4161, "prediction": "Trim the text if it is longer than the maxLengthText ."}
{"id": 4162, "prediction": "Check if the given status is a custom interval and return the duration for it ."}
{"id": 4163, "prediction": "Creates a URLFilters instance from a conf file ."}
{"id": 4164, "prediction": "Set the list view index ."}
{"id": 4165, "prediction": "Resolve size and state ."}
{"id": 4166, "prediction": "Set the drawable used to draw the empty item ."}
{"id": 4167, "prediction": "Set the selected angle ."}
{"id": 4168, "prediction": "Updates the index of the currently selected item ."}
{"id": 4169, "prediction": "Invalidates the legacy item drawable at a specific position ."}
{"id": 4170, "prediction": "Translates a position in the adapter to aager position ."}
{"id": 4171, "prediction": "Update the velocity with the given delta time ."}
{"id": 4172, "prediction": "Get the contrast color from the map entry color name ."}
{"id": 4173, "prediction": "Clamp value to upperLimit"}
{"id": 4174, "prediction": "Writes the coverage data to a JsonWriter ."}
{"id": 4175, "prediction": "Gets the data as a ByteBuffer ."}
{"id": 4176, "prediction": "Set a string to the storage"}
{"id": 4177, "prediction": "1 - D String Array ."}
{"id": 4178, "prediction": "Make an ArrayChar from a string ."}
{"id": 4179, "prediction": "Returns a new ArrayChar for the longest string in the given array object ."}
{"id": 4180, "prediction": "Convert an ArrayObject to a char array"}
{"id": 4181, "prediction": "Get theorecast time interval offset for a record ."}
{"id": 4182, "prediction": "Shows this window ."}
{"id": 4183, "prediction": "Shows this window if it is iconified ."}
{"id": 4184, "prediction": "Makes a size estimate for a single point ."}
{"id": 4185, "prediction": "The main entry point for this example ."}
{"id": 4186, "prediction": "Create a new unit name with the given name and plural ."}
{"id": 4187, "prediction": "Create a new unit name with the given parameters ."}
{"id": 4188, "prediction": "Returns a plural version of the given name ."}
{"id": 4189, "prediction": "Returns true if the specified date is included in this period ."}
{"id": 4190, "prediction": "Returns this range with the intersection of the specified range with the specified clip date range ."}
{"id": 4191, "prediction": "Extends this range to the end of the specified date range ."}
{"id": 4192, "prediction": "Extend the range to a given date ."}
{"id": 4193, "prediction": "Sets the start date ."}
{"id": 4194, "prediction": "Sets the end date ."}
{"id": 4195, "prediction": "Sets the duration of the event ."}
{"id": 4196, "prediction": "Recalculate the duration ."}
{"id": 4197, "prediction": "Add a MapBean to this context ."}
{"id": 4198, "prediction": "Show an error message ."}
{"id": 4199, "prediction": "Gets the name of this location ."}
{"id": 4200, "prediction": "Returns a string representation of the parameters ."}
{"id": 4201, "prediction": "Opens a DAP file from a byte array ."}
{"id": 4202, "prediction": "Computes the bounds of the specified bounding box ."}
{"id": 4203, "prediction": "ynch the UI ."}
{"id": 4204, "prediction": "Computes the actual chunking for each dimension . If the number of elements is smaller than the chunk size the chunking is ignored ."}
{"id": 4205, "prediction": "Registers a watcher with the service ."}
{"id": 4206, "prediction": "Process the events ."}
{"id": 4207, "prediction": "Set a reference date ."}
{"id": 4208, "prediction": "Opens a new dataset for given feature type and location ."}
{"id": 4209, "prediction": "Wrap a dataset ."}
{"id": 4210, "prediction": "Return true if the specified feature type is ok ."}
{"id": 4211, "prediction": "Searches for a feature type in the CF file . If no feature type is found null is returned ."}
{"id": 4212, "prediction": "Writes a single catalog to the response ."}
{"id": 4213, "prediction": "Converts a catalog to an HTML page ."}
{"id": 4214, "prediction": "Returns the user CSS link for the current page ."}
{"id": 4215, "prediction": "Gets the user head table ."}
{"id": 4216, "prediction": "Create a dynamic catalog for a dataset ."}
{"id": 4217, "prediction": "Add the services used in the dataset to the catalog ."}
{"id": 4218, "prediction": "Initialize the HTTP client with a custom user agent ."}
{"id": 4219, "prediction": "Get the contents of the specified HTTP session as a String ."}
{"id": 4220, "prediction": "Convenience method to make a PUT request to a URL"}
{"id": 4221, "prediction": "Returns a front page for the specified DAP request ."}
{"id": 4222, "prediction": "Create a new catalog for the specified grib collection and request path"}
{"id": 4223, "prediction": "Extracts a ge physical location from a GribCollectionImmutable . GroupGC object ."}
{"id": 4224, "prediction": "Get a single Dataset by type name or null ."}
{"id": 4225, "prediction": "Returns true if value1 and value2 are same ."}
{"id": 4226, "prediction": "Create a new unit ID from a name plural and a symbol ."}
{"id": 4227, "prediction": "Parses a string representation of an attribute ."}
{"id": 4228, "prediction": "Reads the top of the file ."}
{"id": 4229, "prediction": "Converts two shorts to int ."}
{"id": 4230, "prediction": "Converts a byte array to an int ."}
{"id": 4231, "prediction": "Get the Date for a julian day ."}
{"id": 4232, "prediction": "Converts a string into a string that can be used as a schema name ."}
{"id": 4233, "prediction": "Tells whether or not the given object name is a well known network model object name ."}
{"id": 4234, "prediction": "Open a file for writing ."}
{"id": 4235, "prediction": "Reads record data from the section ."}
{"id": 4236, "prediction": "Reads the record data and creates the full shape array ."}
{"id": 4237, "prediction": "This method runs through each variable and generates a constant array for it ."}
{"id": 4238, "prediction": "Creates a time struct with the value at the specified time ."}
{"id": 4239, "prediction": "Make a time struct from a calendar ."}
{"id": 4240, "prediction": "Returns true if the given string contains a time template false otherwise ."}
{"id": 4241, "prediction": "Adds a function to the server - side ."}
{"id": 4242, "prediction": "Returns a boolean function by name ."}
{"id": 4243, "prediction": "Returns the BTFunction with the given name ."}
{"id": 4244, "prediction": "Loads a new function ."}
{"id": 4245, "prediction": "Returns the Level name of a record ."}
{"id": 4246, "prediction": "Returns a human - readable description of the level of the given record ."}
{"id": 4247, "prediction": "Returns the name of a level unit ."}
{"id": 4248, "prediction": "Returns the projection type of the specified grid definition record ."}
{"id": 4249, "prediction": "Checks if the given grid record is a vertical coordinate ."}
{"id": 4250, "prediction": "Checks if the given record is a layer ."}
{"id": 4251, "prediction": "Make a CoordinateTransform from the CF attributes ."}
{"id": 4252, "prediction": "Make a dummy transform variable for a given coordinate transform ."}
{"id": 4253, "prediction": "Make a new Projection from a coverage transform ."}
{"id": 4254, "prediction": "The main entry point for this class ."}
{"id": 4255, "prediction": "Saves the current state of the collection name table and the info window ."}
{"id": 4256, "prediction": "Returns a copy of this chronology with the specified time zone ."}
{"id": 4257, "prediction": "Write the specified count into the count buffer ."}
{"id": 4258, "prediction": "Write an object array to the serial stream ."}
{"id": 4259, "prediction": "Writes len bytes to the output stream ."}
{"id": 4260, "prediction": "Writes a range of bytes to the output stream ."}
{"id": 4261, "prediction": "Finish initialization of the manager ."}
{"id": 4262, "prediction": "Returns a new DateRange instance ."}
{"id": 4263, "prediction": "Create a new Grib2Gds instance from the given data ."}
{"id": 4264, "prediction": "Parses a DDS document from the given text ."}
{"id": 4265, "prediction": "Converts a text in DAS format to an int using the DAS parser ."}
{"id": 4266, "prediction": "Swaps the header of a grid ."}
{"id": 4267, "prediction": "Read a grid record into an array ."}
{"id": 4268, "prediction": "Main method to run the GridReader on a file ."}
{"id": 4269, "prediction": "Writes a single constraint element"}
{"id": 4270, "prediction": "Writes the headers to the output file ."}
{"id": 4271, "prediction": "Writes the list of operations to a file ."}
{"id": 4272, "prediction": "Iterates over all the files in the directory and passes the closure to collects the statistics ."}
{"id": 4273, "prediction": "Scans a file for requests and passes them to the given closure ."}
{"id": 4274, "prediction": "Computes the type of the grid packing given a grid number ."}
{"id": 4275, "prediction": "Finds a grid with a specified parameter ."}
{"id": 4276, "prediction": "from DM_RPKG"}
{"id": 4277, "prediction": "Unpack data into an array ."}
{"id": 4278, "prediction": "Compute an UGRB grid for a given number of parameters ."}
{"id": 4279, "prediction": "Unpack Grib1 data into an array ."}
{"id": 4280, "prediction": "Unpack Grib2 data into an array ."}
{"id": 4281, "prediction": "Prints out all the grids in the index to stdout ."}
{"id": 4282, "prediction": "Reads the next byte from the file ."}
{"id": 4283, "prediction": "Constructs a Calendar date from the given data ."}
{"id": 4284, "prediction": "Constructs a CalendarDate from a java . util . Date ."}
{"id": 4285, "prediction": "Returns a CalendarDate instance for the given milliseconds using the ISOChronology in the specified time zone ."}
{"id": 4286, "prediction": "Constructs a CalendarDate from the given Calendar and a time period ."}
{"id": 4287, "prediction": "Parse a given UD units into a CalendarDate ."}
{"id": 4288, "prediction": "Returns the difference between this date and the specified CalendarPeriod field ."}
{"id": 4289, "prediction": "Internal method to create an atomic var ."}
{"id": 4290, "prediction": "Set up the DownloadParameters object ."}
{"id": 4291, "prediction": "Escapes a string so that it can be used as a URI ."}
{"id": 4292, "prediction": "Create a list of slice of a list of Range objects ."}
{"id": 4293, "prediction": "Unwraps a dataset ."}
{"id": 4294, "prediction": "Returns true if the given list of dimensions contains at least one variable length ."}
{"id": 4295, "prediction": "Compute the effective shape for a given set of dimensions ."}
{"id": 4296, "prediction": "Add a given date ."}
{"id": 4297, "prediction": "Multiply by another unit ."}
{"id": 4298, "prediction": "Divide by another unit ."}
{"id": 4299, "prediction": "Divides one unit into another ."}
{"id": 4300, "prediction": "Returns the unit mapped to the given power ."}
{"id": 4301, "prediction": "Calculates the derived unit of this unit by the given amount ."}
{"id": 4302, "prediction": "Converts an array of float values to a derived unit ."}
{"id": 4303, "prediction": "Decode a derived unit amount ."}
{"id": 4304, "prediction": "Gets the canonical string representation of this parameter ."}
{"id": 4305, "prediction": "Reads the data from the specified section Iterable into an Array ."}
{"id": 4306, "prediction": "Reads data from either the partition or the y range and the x range ."}
{"id": 4307, "prediction": "Flattens a list of station features into a single PointCollection ."}
{"id": 4308, "prediction": "Finds a service by its name ."}
{"id": 4309, "prediction": "Returns the preferred size for the specified data type ."}
{"id": 4310, "prediction": "Returns the starting date for the specified data type ."}
{"id": 4311, "prediction": "Returns the rate count for the given data type ."}
{"id": 4312, "prediction": "Write an XML document to an OutputStream ."}
{"id": 4313, "prediction": "Returns the preferred size of the given container ."}
{"id": 4314, "prediction": "Verifies that a path is descendant of an ancestor dataset ."}
{"id": 4315, "prediction": "Generates a InvCatalog based on the contents of the catalog and a ProxyDatasetHandler ."}
{"id": 4316, "prediction": "Returns a calendar date unit ."}
{"id": 4317, "prediction": "Constructs a new CalendarDateUnit with a string representation for the specified Calendar object . If the Calendar object is null the default calendar is used ."}
{"id": 4318, "prediction": "Returns a new DateUnit instance ."}
{"id": 4319, "prediction": "Calculate the offset from a ref date ."}
{"id": 4320, "prediction": "Makes a CalendarDate from a double value ."}
{"id": 4321, "prediction": "Returns the product product product dimension ."}
{"id": 4322, "prediction": "Checks to see if the given file contains valid data . If the file does not contain data then false is returned ."}
{"id": 4323, "prediction": "Read a set of stn names ."}
{"id": 4324, "prediction": "Reads data from a section ."}
{"id": 4325, "prediction": "Reads the integer data out of a variable ."}
{"id": 4326, "prediction": "Reads all data into a byte channel ."}
{"id": 4327, "prediction": "Calculates the elevation of an angle ."}
{"id": 4328, "prediction": "Calculate the step value ."}
{"id": 4329, "prediction": "Calculate the angle in degrees between two points ."}
{"id": 4330, "prediction": "Calculates the data for a given parameter ."}
{"id": 4331, "prediction": "Calculates Nyquist"}
{"id": 4332, "prediction": "Make a vertical transform for a given dataset and time dimension ."}
{"id": 4333, "prediction": "Set the debug flags based on the current value of the DebugFlags object"}
{"id": 4334, "prediction": "Set index extend write access mode ."}
{"id": 4335, "prediction": "Reads the missing values in the xRange parameter from the data in the yRange parameter ."}
{"id": 4336, "prediction": "Return whether or not the data point at the specified time is missing the data point at the specified ens index ."}
{"id": 4337, "prediction": "Gets the LatLon bounding box from the current coordinate axis ."}
{"id": 4338, "prediction": "Finish the building of the data structures ."}
{"id": 4339, "prediction": "Set a tab to a string buffer ."}
{"id": 4340, "prediction": "Pad a string to a certain width ."}
{"id": 4341, "prediction": "Returns a string containing an integer followed by a line break ."}
{"id": 4342, "prediction": "Returns a string representation of the given long value padded with space characters if necessary ."}
{"id": 4343, "prediction": "Formats a byte size as a human - readable string ."}
{"id": 4344, "prediction": "Shows the result of a d - > d ."}
{"id": 4345, "prediction": "Show the difference between 0 and 1 ."}
{"id": 4346, "prediction": "Return the shape as a string ."}
{"id": 4347, "prediction": "Finishes the slice by making sure that the current index and the stop index are non - zero ."}
{"id": 4348, "prediction": "Returns a string representation of this DAP constraint ."}
{"id": 4349, "prediction": "Compose a slice from the source slice to the target slice ."}
{"id": 4350, "prediction": "Converts a slice to a MAP ."}
{"id": 4351, "prediction": "This method dumps the contents of a ByteBuffer into a byte array ."}
{"id": 4352, "prediction": "Dumps the contents of a ByteBuffer ."}
{"id": 4353, "prediction": "Returns the type of the given name ."}
{"id": 4354, "prediction": "Returns the type of the specified epsgId ."}
{"id": 4355, "prediction": "Decodes a DataCol into an array of variable length arrays ."}
{"id": 4356, "prediction": "Decode a vlen array from a data col ."}
{"id": 4357, "prediction": "Extract URL and return list of URL objects"}
{"id": 4358, "prediction": "Get the text content from a URL"}
{"id": 4359, "prediction": "Remove any meta tags from the input stream ."}
{"id": 4360, "prediction": "Reads all data in a section to a byte channel ."}
{"id": 4361, "prediction": "Adds all the attributes ."}
{"id": 4362, "prediction": "Removes the attribute with the given name ."}
{"id": 4363, "prediction": "Removes the attribute with the specified name ignoring case ."}
{"id": 4364, "prediction": "Gets getOffsets in time units ."}
{"id": 4365, "prediction": "Add action source listener"}
{"id": 4366, "prediction": "Returns the standard date represented by the given text ."}
{"id": 4367, "prediction": "Get the standard or ISO date for a given text ."}
{"id": 4368, "prediction": "Returns the origin of this time scale ."}
{"id": 4369, "prediction": "Returns the date represented by this object in seconds ."}
{"id": 4370, "prediction": "Converts a double to a Date ."}
{"id": 4371, "prediction": "Returns the value of the given date converted from seconds to milliseconds ."}
{"id": 4372, "prediction": "Converts a double to a date and returns it as a ISO formatted string ."}
{"id": 4373, "prediction": "Returns grid spacing in km ."}
{"id": 4374, "prediction": "Add dimensions to a Net data set ."}
{"id": 4375, "prediction": "Add coordinate axis ."}
{"id": 4376, "prediction": "Make a projection for the specified projection type ."}
{"id": 4377, "prediction": "Adds all the parameters specified in gds to the given variable ."}
{"id": 4378, "prediction": "Add a new coordinate system variable ."}
{"id": 4379, "prediction": "Compute the Lambert conformal and Lambert distortion origin ."}
{"id": 4380, "prediction": "Computes and sets up thePS projection ."}
{"id": 4381, "prediction": "Constructs a Mercator Projection using the Grib version 1 or 2 ."}
{"id": 4382, "prediction": "Makes the msggeostationary of the originating point in the GRIB ."}
{"id": 4383, "prediction": "Set the DX and Dy parameters from the specified projection object ."}
{"id": 4384, "prediction": "Read and create a new InvDataset object from an XML document ."}
{"id": 4385, "prediction": "Reads a dataset scan from an XML document ."}
{"id": 4386, "prediction": "Read metadata content from a URL ."}
{"id": 4387, "prediction": "Gets the level type for level 1 ."}
{"id": 4388, "prediction": "Checks if the provided file is a valid file ."}
{"id": 4389, "prediction": "Writes an array of bytes ."}
{"id": 4390, "prediction": "Sets the specified clearname ."}
{"id": 4391, "prediction": "Gets the coordinate name for the specified axis ."}
{"id": 4392, "prediction": "Returns the getCoordinate name for the given axis ."}
{"id": 4393, "prediction": "Builds the error response as an XML string ."}
{"id": 4394, "prediction": "Builds a DAP exception ."}
{"id": 4395, "prediction": "Get the levels of the breakup for a given level ."}
{"id": 4396, "prediction": "Make the Z -Coord axis given the list of values and units ."}
{"id": 4397, "prediction": "Create new variables at the specified level ."}
{"id": 4398, "prediction": "Make a time axis from a reference array ."}
{"id": 4399, "prediction": "This function shave the specified float value with the specified bit mask ."}
{"id": 4400, "prediction": "The main entry point for this example ."}
{"id": 4401, "prediction": "Wraps the ncfile in the given mode if necessary ."}
{"id": 4402, "prediction": "Open a dataset file ."}
{"id": 4403, "prediction": "Clear coordinate systems ."}
{"id": 4404, "prediction": "Finds a coordinate axis of the specified type ."}
{"id": 4405, "prediction": "Find the coordinate axis with the given full name ."}
{"id": 4406, "prediction": "Find the coordinate system with the given name ."}
{"id": 4407, "prediction": "Find a coordinate transform by its name ."}
{"id": 4408, "prediction": "Enhances the given set of Enhance objects if they are needed ."}
{"id": 4409, "prediction": "Sets the values of a given variable ."}
{"id": 4410, "prediction": "Set the values of a given variable"}
{"id": 4411, "prediction": "Converts a list of strings to an Array"}
{"id": 4412, "prediction": "Returns the offset of the vector in each dimension ."}
{"id": 4413, "prediction": "Gets an existing file on the operating system ."}
{"id": 4414, "prediction": "Get the features intersecting the given bounding box"}
{"id": 4415, "prediction": "Discretize the data"}
{"id": 4416, "prediction": "Adds the specified ThreddsMetadata to the current metadata ."}
{"id": 4417, "prediction": "Adds documentation to the current document ."}
{"id": 4418, "prediction": "Removes all documentation of a given type ."}
{"id": 4419, "prediction": "Returns the number of bytes that would be larger than the specified start ."}
{"id": 4420, "prediction": "Determine if the provided CDM file contains at least one context field and only one context field ."}
{"id": 4421, "prediction": "Adds a dataset to the registry ."}
{"id": 4422, "prediction": "breakup convention names ."}
{"id": 4423, "prediction": "Build a single attribute for the main convatts . The main convatts are separated by a comma separated string ."}
{"id": 4424, "prediction": "Build the coordinate systems for the VarProcess ."}
{"id": 4425, "prediction": "Finds the coordinate axes of all variables in the given dataset ."}
{"id": 4426, "prediction": "Find coordinate systems for a given dataset ."}
{"id": 4427, "prediction": "Make the coordinate system of all the variables in the varlist ."}
{"id": 4428, "prediction": "Make the coordinate systems maximal ."}
{"id": 4429, "prediction": "Checks to see if the given axis is a coordinate axis for the given variable ."}
{"id": 4430, "prediction": "Adds a coordinate variable for the given dimension ."}
{"id": 4431, "prediction": "Perform a subset operation on the data set ."}
{"id": 4432, "prediction": "Set a dataset filter to be applied to the dataset ."}
{"id": 4433, "prediction": "Checks if a dataset can be marked for deletion"}
{"id": 4434, "prediction": "Delete a dataset"}
{"id": 4435, "prediction": "Initialize the Context only once ."}
{"id": 4436, "prediction": "Counts the given value ."}
{"id": 4437, "prediction": "Adds a new symbol and its definition to the prefix ."}
{"id": 4438, "prediction": "Compares two rows according to their names ."}
{"id": 4439, "prediction": "Compares two boolean values on the same row ."}
{"id": 4440, "prediction": "Returns the group scope"}
{"id": 4441, "prediction": "This method is used to pass the reserved attribute values to a node ."}
{"id": 4442, "prediction": "Returns true if the specified date range is valid ."}
{"id": 4443, "prediction": "Returns true if this . index is within the current slice ."}
{"id": 4444, "prediction": "Register a class ."}
{"id": 4445, "prediction": "Register a class ."}
{"id": 4446, "prediction": "Checks if a class is registered in the registry ."}
{"id": 4447, "prediction": "Unregisters a dspclass from the registry ."}
{"id": 4448, "prediction": "Convenient factory method to build and return a table instance ."}
{"id": 4449, "prediction": "Returns theorecast time interval size in hours ."}
{"id": 4450, "prediction": "Gets theorecast time interval offset for a record ."}
{"id": 4451, "prediction": "Returns the VertCoordType with the given code ."}
{"id": 4452, "prediction": "Finishes the parsing of the DAP file ."}
{"id": 4453, "prediction": "Sorts the node list and assigns indices to each node ."}
{"id": 4454, "prediction": "Gets the RAF for a given part ."}
{"id": 4455, "prediction": "Find a variable with an attribute ."}
{"id": 4456, "prediction": "Find a variable with a certain attribute value ."}
{"id": 4457, "prediction": "Find the short name of a variable with a certain attribute value ."}
{"id": 4458, "prediction": "Find a variable with a specific attribute value"}
{"id": 4459, "prediction": "Returns the first Structure that has any variables ."}
{"id": 4460, "prediction": "Returns true if the given dataset has a data - structure defined as a RecordStructure variable ."}
{"id": 4461, "prediction": "Get a literal attribute from a dataset ."}
{"id": 4462, "prediction": "Get the value of a feature type property ."}
{"id": 4463, "prediction": "Get a variable name from a dataset ."}
{"id": 4464, "prediction": "Returns the i - coordinate of the j - th entry ."}
{"id": 4465, "prediction": "Connect a double value to a short value"}
{"id": 4466, "prediction": "Returns the values of the fields of this coordinate axis as a double array ."}
{"id": 4467, "prediction": "Adds a set of ranges to a coordinate axis ."}
{"id": 4468, "prediction": "Finds the closest point to the specified target ."}
{"id": 4469, "prediction": "Returns the full name of this variable ."}
{"id": 4470, "prediction": "Adds an action to the specified menu ."}
{"id": 4471, "prediction": "Matches a path against this pattern ."}
{"id": 4472, "prediction": "The main entry point ."}
{"id": 4473, "prediction": "Returns the index of the first occurence of the specified data in the array ."}
{"id": 4474, "prediction": "Add a given source picture to the cache ."}
{"id": 4475, "prediction": "Report the contents of the cache ."}
{"id": 4476, "prediction": "Stop the background loading ."}
{"id": 4477, "prediction": "Stop background loading for a given URL ."}
{"id": 4478, "prediction": "HTTP GET method ."}
{"id": 4479, "prediction": "Returns a HTTPMethod object for the given session and url ."}
{"id": 4480, "prediction": "Returns a random float array of the specified type ."}
{"id": 4481, "prediction": "Returns the next count ."}
{"id": 4482, "prediction": "Reads a variable array from the given section ."}
{"id": 4483, "prediction": "Get the provider for a file system ."}
{"id": 4484, "prediction": "Reads the station table ."}
{"id": 4485, "prediction": "Extracts the value of the given gr and returns it as an Integer ."}
{"id": 4486, "prediction": "Remove a data variable ."}
{"id": 4487, "prediction": "Get the cloud hgt2meters for a height ."}
{"id": 4488, "prediction": "Checks if the given variable has already been read and if so opens it ."}
{"id": 4489, "prediction": "Set the number of colors ."}
{"id": 4490, "prediction": "Calculates the transform for the specified screen and world bounds ."}
{"id": 4491, "prediction": "Convert a URI to an auth scope ."}
{"id": 4492, "prediction": "Finish the current transaction ."}
{"id": 4493, "prediction": "Returns true if this factor isReciprocal of the specified factor ."}
{"id": 4494, "prediction": "Gets the InvCatalog for the specified directory and filter pattern ."}
{"id": 4495, "prediction": "Find the index of the specified element ."}
{"id": 4496, "prediction": "Read metadata content from a URL ."}
{"id": 4497, "prediction": "Read metadata content ."}
{"id": 4498, "prediction": "Add metadata content ."}
{"id": 4499, "prediction": "Validate metadata content ."}
{"id": 4500, "prediction": "Reads the catGen configuration element ."}
{"id": 4501, "prediction": "Read a DatasetSource XML element from a InvDataset ."}
{"id": 4502, "prediction": "Read a DatasetN Span from an XML document ."}
{"id": 4503, "prediction": "Read a DatasetFilter XML Element into a DatasetFilter object"}
{"id": 4504, "prediction": "Read a ResultService element from a InvDataset ."}
{"id": 4505, "prediction": "Create a JDOM Element representing the catalog gen configuration element ."}
{"id": 4506, "prediction": "Create a JDOM Element that represents a dataset source ."}
{"id": 4507, "prediction": "Create a JDOM Element that represents a Dataset ."}
{"id": 4508, "prediction": "Create a JDOM Element that represents a DatasetFilter ."}
{"id": 4509, "prediction": "Creates an element that represents a ResultService XML element ."}
{"id": 4510, "prediction": "Return true if flag is set"}
{"id": 4511, "prediction": "This method is used to construct a menu from a menu ."}
{"id": 4512, "prediction": "Add the given prefs to the given menu ."}
{"id": 4513, "prediction": "Adds the parameters from a file ."}
{"id": 4514, "prediction": "Make a parameter from a list of words ."}
{"id": 4515, "prediction": "Returns the parameter for the given name creating it if it doesn t exist ."}
{"id": 4516, "prediction": "Reads the contents of an InputStream and returns it as a String ."}
{"id": 4517, "prediction": "Read a byte array from an input stream ."}
{"id": 4518, "prediction": "Replaces the template id of a file with its id from the list ."}
{"id": 4519, "prediction": "Sets the values for the stnIdVName and stnDescVName ."}
{"id": 4520, "prediction": "Add the valid value to the given StringBuffer . If the value is different than the valid value the store value is updated ."}
{"id": 4521, "prediction": "This method shows the information about the format of the given text field ."}
{"id": 4522, "prediction": "Reads a bitmap from a file ."}
{"id": 4523, "prediction": "Set the NetJSON file to use ."}
{"id": 4524, "prediction": "Set the debug flags based on the passed in value ."}
{"id": 4525, "prediction": "Parse a name into a pieces object ."}
{"id": 4526, "prediction": "Returns true if the given DStructure is a group ."}
{"id": 4527, "prediction": "Get the strlen dimension of a DODS variable"}
{"id": 4528, "prediction": "Returns a dimension that is shared with the specified group . If the group is null the group is the root group . Otherwise the group is added to the root group ."}
{"id": 4529, "prediction": "Construct a list of dimensions from the specified group and dods array ."}
{"id": 4530, "prediction": "Returns true if the specified type is an unsigned byte or an int ."}
{"id": 4531, "prediction": "This method is used to read DataDDS from the server ."}
{"id": 4532, "prediction": "get the icon from the file system"}
{"id": 4533, "prediction": "Get an image from a resource ."}
{"id": 4534, "prediction": "Create a custom cursor ."}
{"id": 4535, "prediction": "Reads data from a file using a fill value ."}
{"id": 4536, "prediction": "The method to read the data from a data input stream using a fill value . The type of the fill value is determined by the index of the data stream ."}
{"id": 4537, "prediction": "Reads a fill value from a layout ."}
{"id": 4538, "prediction": "Returns a primitive array of the given size and data type ."}
{"id": 4539, "prediction": "Convert byte array to char UTF"}
{"id": 4540, "prediction": "Converts a char array to a UTF - 8 encoded byte array"}
{"id": 4541, "prediction": "Convert a char array to a byte array ."}
{"id": 4542, "prediction": "Read an array from a ParsedSectionSpec ."}
{"id": 4543, "prediction": "Returns a new ArrayStructureW for the given sub - section ."}
{"id": 4544, "prediction": "Get a string representation of a structure ."}
{"id": 4545, "prediction": "Get the value of a member as a StructureData object"}
{"id": 4546, "prediction": "Return a member array for a given member ."}
{"id": 4547, "prediction": "Recursively computes all the members of a structure ."}
{"id": 4548, "prediction": "Add dimensions to a Net data file ."}
{"id": 4549, "prediction": "Creates a new CrawlableDataset instance from the given path and class name ."}
{"id": 4550, "prediction": "Normalize a path ."}
{"id": 4551, "prediction": "Add an explicit dataset ."}
{"id": 4552, "prediction": "Add a dataset scan ."}
{"id": 4553, "prediction": "Finish the scan and build a new dataset ."}
{"id": 4554, "prediction": "Makes a list of datasets based on the filename and date ."}
{"id": 4555, "prediction": "Gets theTypicalDataset from this aggregation ."}
{"id": 4556, "prediction": "Make a dataset ."}
{"id": 4557, "prediction": "Put a DatasetScan or InvDatasetFmrc into the hash ."}
{"id": 4558, "prediction": "Add a point to the path"}
{"id": 4559, "prediction": "Get the upper bound of the bounding box ."}
{"id": 4560, "prediction": "Get the lower bound of the bounding box ."}
{"id": 4561, "prediction": "Validates the expression and writes it to the output buffer ."}
{"id": 4562, "prediction": "Checks whether this filter applies to the given dataset ."}
{"id": 4563, "prediction": "Adds all data from specified point to this data set ."}
{"id": 4564, "prediction": "Parses the constraint expression from the ReqState ."}
{"id": 4565, "prediction": "Evaluate all clauses of the given specialO ."}
{"id": 4566, "prediction": "Print a constraint table to a PrintWriter ."}
{"id": 4567, "prediction": "Attempts to amend a given group from an ODL file ."}
{"id": 4568, "prediction": "Set the shared dimensions for a variable ."}
{"id": 4569, "prediction": "Check if the dimension at the given location is one of the given unknownDims and if so return the new dimension . If not return null ."}
{"id": 4570, "prediction": "Finds a group with the given name nested in the given parent group ."}
{"id": 4571, "prediction": "Get the Xlink content ."}
{"id": 4572, "prediction": "Gets the standard uri ."}
{"id": 4573, "prediction": "setProjection set the projection of the class"}
{"id": 4574, "prediction": "Add a component to the current SpringLayout"}
{"id": 4575, "prediction": "Called to invalidate a layout ."}
{"id": 4576, "prediction": "Remove a component from the constraint map"}
{"id": 4577, "prediction": "This will return the minimum size of the layout in the specified container ."}
{"id": 4578, "prediction": "Called when a Container is layouted ."}
{"id": 4579, "prediction": "Checks to see if a coordinate system is a radial and elevation axis ."}
{"id": 4580, "prediction": "Gets the maximum radial axis value ."}
{"id": 4581, "prediction": "Opens a URL for reading ."}
{"id": 4582, "prediction": "Converts the geographic coordinates to sat coordinates ."}
{"id": 4583, "prediction": "Converts WGS84 to WGS84 ."}
{"id": 4584, "prediction": "Convert the goes toGEOS coordinates"}
{"id": 4585, "prediction": "Convert the scan geometry to the sweep angle axis ."}
{"id": 4586, "prediction": "Get the scan geom for an angle - axis"}
{"id": 4587, "prediction": "Set the runtime coordinates ."}
{"id": 4588, "prediction": "Writes a data point obs dataset to a file ."}
{"id": 4589, "prediction": "Rewrite a single feature - point dataset to a file ."}
{"id": 4590, "prediction": "Get the array sequence for the specified member ."}
{"id": 4591, "prediction": "Gets the full name of the package ."}
{"id": 4592, "prediction": "Returns a unique ID ."}
{"id": 4593, "prediction": "Gets the invariant access of a given service ."}
{"id": 4594, "prediction": "Finds a dataset by its name ."}
{"id": 4595, "prediction": "Gets the parent catalog ."}
{"id": 4596, "prediction": "Get all metadata of a given type"}
{"id": 4597, "prediction": "Searches for the service with the given name ."}
{"id": 4598, "prediction": "Gets a list of variables for a given vocab"}
{"id": 4599, "prediction": "Find all the catalog refs in the dataset tree ."}
{"id": 4600, "prediction": "Escapes a path so that it can be used as a URI ."}
{"id": 4601, "prediction": "Adds aagger to an existing array ."}
{"id": 4602, "prediction": "Computes the extrapolation of the provided array ."}
{"id": 4603, "prediction": "Computes the radius of a given location ."}
{"id": 4604, "prediction": "Returns the detail info as a string ."}
{"id": 4605, "prediction": "Create a new structure with the specified part name and the specified dimensions ."}
{"id": 4606, "prediction": "Create a missing variable ."}
{"id": 4607, "prediction": "Create a parameter variable ."}
{"id": 4608, "prediction": "Add the global attributes for this file ."}
{"id": 4609, "prediction": "Returns the size of the variable with the given name ."}
{"id": 4610, "prediction": "get a 1D array of the given length"}
{"id": 4611, "prediction": "Returns the state of the target at the specified yysym ."}
{"id": 4612, "prediction": "Print the error message for a particular token ."}
{"id": 4613, "prediction": "Print all the symbols being reduced and their result ."}
{"id": 4614, "prediction": "Reads a DMR chunk and returns it as a String ."}
{"id": 4615, "prediction": "Reads an error document ."}
{"id": 4616, "prediction": "Reads len bytes into the specified buffer starting at the specified offset"}
{"id": 4617, "prediction": "Reads a header from an input stream ."}
{"id": 4618, "prediction": "Converts an ISO8601 string into a Date ."}
{"id": 4619, "prediction": "Reads a table from a URL ."}
{"id": 4620, "prediction": "Transfer a group ."}
{"id": 4621, "prediction": "Gets the stn file from the given location ."}
{"id": 4622, "prediction": "Overrides the open method to read the file from the file system and write the file to the file system ."}
{"id": 4623, "prediction": "Returns the new beginning of the node at the specified index ."}
{"id": 4624, "prediction": "Returns the end of the node with the specified index ."}
{"id": 4625, "prediction": "Create all the runtime collections ."}
{"id": 4626, "prediction": "Set the value of this field in the edit text field ."}
{"id": 4627, "prediction": "get data type for a specific format"}
{"id": 4628, "prediction": "Converts an ECF - > LLA into an array of doubles ."}
{"id": 4629, "prediction": "Returns a clean version of the unit ."}
{"id": 4630, "prediction": "Removes leading and trailing spaces from the name and returns the new name ."}
{"id": 4631, "prediction": "Returns true if the given unit isUnitless ."}
{"id": 4632, "prediction": "Create aNote instance for a given note sort ."}
{"id": 4633, "prediction": "Returns the var id of the given variable note ."}
{"id": 4634, "prediction": "Parse the DAS file ."}
{"id": 4635, "prediction": "Searches for a dodsV with the specified name ."}
{"id": 4636, "prediction": "Returns the DodsV for the specified DodsV if the DodsV is the DodsV itself or a Grid array ."}
{"id": 4637, "prediction": "Returns the DodsV with the specified index ."}
{"id": 4638, "prediction": "Gets the parent group ."}
{"id": 4639, "prediction": "Get the dimension of the i - th dimension ."}
{"id": 4640, "prediction": "Returns the index of the dimension with the given name ."}
{"id": 4641, "prediction": "Returns the units attribute value ."}
{"id": 4642, "prediction": "Get the shape as a section of the variable ."}
{"id": 4643, "prediction": "Create a copy of this variable with the specified dimension and the specified value ."}
{"id": 4644, "prediction": "Sets the value of the enumTypedef property ."}
{"id": 4645, "prediction": "Reads an array from the array ."}
{"id": 4646, "prediction": "Reads a scalar string ."}
{"id": 4647, "prediction": "Call this method to read the array from the cache . The caller is responsible for closing the cache ."}
{"id": 4648, "prediction": "Reads the contents of the given section ."}
{"id": 4649, "prediction": "Returns a CDL - formatted string representation of this object ."}
{"id": 4650, "prediction": "Returns a debug string representation of this variable ."}
{"id": 4651, "prediction": "Sets the data type of this variable ."}
{"id": 4652, "prediction": "Set the number of dimensions for this shape ."}
{"id": 4653, "prediction": "Reset the shape of this array so that it can be used again ."}
{"id": 4654, "prediction": "Set the dimensions of this group ."}
{"id": 4655, "prediction": "Resets the dimensions of this variable to their original values ."}
{"id": 4656, "prediction": "Sets the dimension of the specified index ."}
{"id": 4657, "prediction": "Set the cached data"}
{"id": 4658, "prediction": "Returns a list of all the dimensions in this table ."}
{"id": 4659, "prediction": "Set the bounding box of the system to the largest bounding box ."}
{"id": 4660, "prediction": "Completes all coordinates with the same name ."}
{"id": 4661, "prediction": "Returns a list of all Dataset objects ."}
{"id": 4662, "prediction": "Returns true if the path ends with any of the specified DSP extensions ."}
{"id": 4663, "prediction": "Opens a new CDMDSP instance ."}
{"id": 4664, "prediction": "Builds the DMR tree from the CDM file ."}
{"id": 4665, "prediction": "Recursive method to build the seqtypes for each variable ."}
{"id": 4666, "prediction": "In the case that the dimensions associated with the variable are not the same object as those dimensions as declared ."}
{"id": 4667, "prediction": "Attempts to find a matching enum for the given value ."}
{"id": 4668, "prediction": "Returns the core dimensions of the given dimension set ."}
{"id": 4669, "prediction": "Scans aBufr file for messages and returns the number of messages found ."}
{"id": 4670, "prediction": "Convert aBufr message into a dataset ."}
{"id": 4671, "prediction": "Submits a request for a file upload ."}
{"id": 4672, "prediction": "Gets the current transform for this navigation ."}
{"id": 4673, "prediction": "Returns true if rotation should occur for the specified display width and height ."}
{"id": 4674, "prediction": "Get the map area ."}
{"id": 4675, "prediction": "Converts world coordinates to screen coordinates ."}
{"id": 4676, "prediction": "Fire the panning event ."}
{"id": 4677, "prediction": "zoom the image by a given width and height"}
{"id": 4678, "prediction": "Recalculates the navigation properties from a bounding box"}
{"id": 4679, "prediction": "Add a listener to the list of listeners"}
{"id": 4680, "prediction": "Remove listener"}
{"id": 4681, "prediction": "Sends an event to all listeners ."}
{"id": 4682, "prediction": "Sends event to all listeners except the source ."}
{"id": 4683, "prediction": "Print a command to a Writer"}
{"id": 4684, "prediction": "Writes the command to the given file ."}
{"id": 4685, "prediction": "Print the data of a variable to a Writer ."}
{"id": 4686, "prediction": "Returns the content of a Variable s data section ."}
{"id": 4687, "prediction": "Prints a StructureData object to a PrintWriter ."}
{"id": 4688, "prediction": "Prints an array without its local iterator ."}
{"id": 4689, "prediction": "Prints an array to a print writer ."}
{"id": 4690, "prediction": "Writes NCML data to the given writer ."}
{"id": 4691, "prediction": "Read a double value from an attribute container"}
{"id": 4692, "prediction": "Adds a parameter to a coordinate transform ."}
{"id": 4693, "prediction": "Main method for testing ."}
{"id": 4694, "prediction": "Reads a single slice from a DAP stream ."}
{"id": 4695, "prediction": "Checks to see if the record is positive up ."}
{"id": 4696, "prediction": "Returns true if this unit is compatible with the given unit ."}
{"id": 4697, "prediction": "Create a label for a given quantity ID ."}
{"id": 4698, "prediction": "Set the offset of the next bit in the bit buffer ."}
{"id": 4699, "prediction": "Read bits into a long ."}
{"id": 4700, "prediction": "Convert a number of bits in an unsigned integer to a signed integer ."}
{"id": 4701, "prediction": "Open the connection"}
{"id": 4702, "prediction": "Returns the das command ."}
{"id": 4703, "prediction": "Execute a DDS command on the DAP2 server ."}
{"id": 4704, "prediction": "Return the complete part of the supplied CE ."}
{"id": 4705, "prediction": "Converts a ProjectionPoint to a LatLonPoint ."}
{"id": 4706, "prediction": "Get the IDV dataset catalog from an XML string ."}
{"id": 4707, "prediction": "A convenience method to convert a non - overlapping date range to a compatible date range ."}
{"id": 4708, "prediction": "Checks if the given file can be parsed ."}
{"id": 4709, "prediction": "Handles the norad information from the SAT file ."}
{"id": 4710, "prediction": "This method handles the sensor information ."}
{"id": 4711, "prediction": "Returns the root element of the document ."}
{"id": 4712, "prediction": "Utility method to clean out XML characters ."}
{"id": 4713, "prediction": "Xun escape a string and return it as a String ."}
{"id": 4714, "prediction": "Escapes a string so that it can be used as a URL query ."}
{"id": 4715, "prediction": "Unescapes a string for use in a URL query ."}
{"id": 4716, "prediction": "Converts all backslash encoded characters in the given string to a full string ."}
{"id": 4717, "prediction": "Escapes a string so that it can be used as an escape sequence ."}
{"id": 4718, "prediction": "Add lightning global attributes to the file ."}
{"id": 4719, "prediction": "Swap a short from the byte array at the given offset ."}
{"id": 4720, "prediction": "Calculate a four byte integer starting from an offset in the byte array ."}
{"id": 4721, "prediction": "Swaps a double with a single byte ."}
{"id": 4722, "prediction": "Swaps a float with another float ."}
{"id": 4723, "prediction": "Swaps a double with another double ."}
{"id": 4724, "prediction": "Convert short to byte array ."}
{"id": 4725, "prediction": "Converts an integer to a byte array ."}
{"id": 4726, "prediction": "Converts a long to an array of bytes ."}
{"id": 4727, "prediction": "Create a vertical transform that contains only the x_range and the y_range ."}
{"id": 4728, "prediction": "Returns an XML - formatted string representation of the document with the specified last modified date ."}
{"id": 4729, "prediction": "Computes the C - coordinate of the given array ."}
{"id": 4730, "prediction": "Start the XML document ."}
{"id": 4731, "prediction": "Writes the information about each feature to an XML file ."}
{"id": 4732, "prediction": "Adds level coordinate to grid coordinates ."}
{"id": 4733, "prediction": "Add an additional dimension to the net file ."}
{"id": 4734, "prediction": "Add data from a Group g to the NetCCL file ."}
{"id": 4735, "prediction": "Finds the coordinate transform attribute of the given group ."}
{"id": 4736, "prediction": "Gets the index of the specified record ."}
{"id": 4737, "prediction": "Terminates the cache ."}
{"id": 4738, "prediction": "Returns a File object representing the contents of the given file . If the file does not exist and the directory is not writeable an exception is thrown . If the file does not exist and the directory is not writeable an exception is thrown ."}
{"id": 4739, "prediction": "Returns a File object representing the file or null if it does not exist ."}
{"id": 4740, "prediction": "Show the contents of the cache directory ."}
{"id": 4741, "prediction": "Removes all files and directories from the disk cache ."}
{"id": 4742, "prediction": "Calculates theearing of the given point e from pt1 to pt2 with the given result ."}
{"id": 4743, "prediction": "Calculates aearing for a given point pt1 pt2 . The defaultearing will be used if no defaultearing is specified ."}
{"id": 4744, "prediction": "Main entry point for the Bearing example ."}
{"id": 4745, "prediction": "Returns a point with distance from the given point to the given result ."}
{"id": 4746, "prediction": "Returns a point with the specified distance from pt1 to pt1 . The defaultEarth distance is used to calculate the distance from pt1 to pt1 ."}
{"id": 4747, "prediction": "Returns the point at the specified location . If the location is not specified the defaultEarth will be returned ."}
{"id": 4748, "prediction": "Starts a new loading thread for the given URL ."}
{"id": 4749, "prediction": "Loads the given imageUrl with the given rotation ."}
{"id": 4750, "prediction": "Loads a single photo from the source photo ."}
{"id": 4751, "prediction": "Stop the loading of the specified picture ."}
{"id": 4752, "prediction": "Stop the loading of an image except for a specific URL ."}
{"id": 4753, "prediction": "Gets the width and height of this photo ."}
{"id": 4754, "prediction": "Set the source BufferedImage ."}
{"id": 4755, "prediction": "Get the standard URI for this dataset ."}
{"id": 4756, "prediction": "Returns a DataDescriptor for an Associated field ."}
{"id": 4757, "prediction": "Transfers info from one list to another"}
{"id": 4758, "prediction": "Count the number of bytes in each DataDescriptor ."}
{"id": 4759, "prediction": "Compares two DataDescriptors ."}
{"id": 4760, "prediction": "Load the dbase header and return the number of records ."}
{"id": 4761, "prediction": "Loads the data ."}
{"id": 4762, "prediction": "Returns the field of this descriptor with the specified name ."}
{"id": 4763, "prediction": "Get a double array by name ."}
{"id": 4764, "prediction": "Returns an array of strings corresponding to the name of this field ."}
{"id": 4765, "prediction": "Returns an array containing all boolean values matching a field name ."}
{"id": 4766, "prediction": "Returns the name of the i - th field ."}
{"id": 4767, "prediction": "Gets the field names ."}
{"id": 4768, "prediction": "The main entry point for this example ."}
{"id": 4769, "prediction": "Gets the attributes ."}
{"id": 4770, "prediction": "Sets the attribute of the DAP ."}
{"id": 4771, "prediction": "Removes an attribute from the DAP ."}
{"id": 4772, "prediction": "Returns the group associated with this node ."}
{"id": 4773, "prediction": "Returns the parent node of this node ."}
{"id": 4774, "prediction": "Get the escaped short name ."}
{"id": 4775, "prediction": "Returns the full path to the parent node of this node ."}
{"id": 4776, "prediction": "Get the path to the group nodes ."}
{"id": 4777, "prediction": "Returns the fully - qualified FQN name of this node ."}
{"id": 4778, "prediction": "Returns true if this node is a top - level node ."}
{"id": 4779, "prediction": "Builds a D4DataCompiler object with the databuffer section of the server response ."}
{"id": 4780, "prediction": "Associates the specified value with the specified key . If the old value is equal to the new value the old value is replaced by the new value ."}
{"id": 4781, "prediction": "get a List object from the context"}
{"id": 4782, "prediction": "Returns the value for the key . If the key does not exist returns null ."}
{"id": 4783, "prediction": "Reads data from a file ."}
{"id": 4784, "prediction": "Print the current element of the DSP dataset ."}
{"id": 4785, "prediction": "Prints a compound instance ."}
{"id": 4786, "prediction": "Returns a string representation of the given element ."}
{"id": 4787, "prediction": "Write an Element to a file ."}
{"id": 4788, "prediction": "Write an XML Element to an OutputStream using the default encoding ."}
{"id": 4789, "prediction": "Write an Element to a Writer ."}
{"id": 4790, "prediction": "Create an element that represents a private dimension ."}
{"id": 4791, "prediction": "Make aCoordinateTransform attribute from an attribute container ."}
{"id": 4792, "prediction": "Get an int array representation of an attribute ."}
{"id": 4793, "prediction": "Get the unit with the specified name and symbol with the specified number of units ."}
{"id": 4794, "prediction": "Gets the unit with the given name and symbol from the given definition ."}
{"id": 4795, "prediction": "Return a UnitDB with all unit data ."}
{"id": 4796, "prediction": "Create a derived unit database ."}
{"id": 4797, "prediction": "Get the singleton instance of SI ."}
{"id": 4798, "prediction": "Finds theCoordElement corresponding to a given axis ."}
{"id": 4799, "prediction": "Find the closest point to the specified target ."}
{"id": 4800, "prediction": "Finds all points in the specified axis that are within the specified stride ."}
{"id": 4801, "prediction": "Opens a feature dataset using the provided task ."}
{"id": 4802, "prediction": "Open a feature dataset ."}
{"id": 4803, "prediction": "Annotate a dataset ."}
{"id": 4804, "prediction": "Reads data from a file starting at a specified position ."}
{"id": 4805, "prediction": "Assemble the specified parts into a fully - qualified URI ."}
{"id": 4806, "prediction": "Returns the canonical version of the given string ."}
{"id": 4807, "prediction": "Normalize the units ."}
{"id": 4808, "prediction": "Compile and return the DAP dataset ."}
{"id": 4809, "prediction": "Finish the metadata process"}
{"id": 4810, "prediction": "Returns the value associated with the specified key ."}
{"id": 4811, "prediction": "Associates the specified value with the specified key ."}
{"id": 4812, "prediction": "Returns the date as a Date object"}
{"id": 4813, "prediction": "Prints XML attributes of the given element ."}
{"id": 4814, "prediction": "Print an XML attribute ."}
{"id": 4815, "prediction": "Return true if the attribute is a special attribute ."}
{"id": 4816, "prediction": "Prints the names of the dimensions of a given variable ."}
{"id": 4817, "prediction": "Returns true if the provided file is a valid area file ."}
{"id": 4818, "prediction": "Set the area directory attributes ."}
{"id": 4819, "prediction": "Sets the attributes for the nav block ."}
{"id": 4820, "prediction": "Returns the type of the given cal name ."}
{"id": 4821, "prediction": "Adds the attribute values for the given calType to the image ."}
{"id": 4822, "prediction": "Finds all the coordinates of a given table configuration ."}
{"id": 4823, "prediction": "Finds the full name of the coordinates of a given axis type ."}
{"id": 4824, "prediction": "Finds a coordinate axis that has a particular axis type ."}
{"id": 4825, "prediction": "Finds the coordinate axis with the specified type ."}
{"id": 4826, "prediction": "Find the dimension of a given axis type ."}
{"id": 4827, "prediction": "Finds the coordinate system with the highest rank ."}
{"id": 4828, "prediction": "Find the dependent axis of a given axis type"}
{"id": 4829, "prediction": "Get the value of a variable ."}
{"id": 4830, "prediction": "This is an old version of deserialize that doesn t support the format of the StatusUI ."}
{"id": 4831, "prediction": "Reads a marker ."}
{"id": 4832, "prediction": "Writes a marker"}
{"id": 4833, "prediction": "Reports a fatal error ."}
{"id": 4834, "prediction": "Create a series for a regular time series ."}
{"id": 4835, "prediction": "Main entry point for the example ."}
{"id": 4836, "prediction": "Gets a String array from a structure member ."}
{"id": 4837, "prediction": "Returns a list of all the parameters ."}
{"id": 4838, "prediction": "The list of stations to redraw ."}
{"id": 4839, "prediction": "Set the current selected station ."}
{"id": 4840, "prediction": "Redraw the panel and clear it"}
{"id": 4841, "prediction": "Reads the rectangle from a stream ."}
{"id": 4842, "prediction": "Custom serialization ."}
{"id": 4843, "prediction": "Add the contents of the given unit db object to this unit db object ."}
{"id": 4844, "prediction": "Add a unit to this unit set ."}
{"id": 4845, "prediction": "Adds a symbol ."}
{"id": 4846, "prediction": "Gets a unit by its ID ."}
{"id": 4847, "prediction": "Adds a name to a unit ."}
{"id": 4848, "prediction": "Add a unit by its symbol ."}
{"id": 4849, "prediction": "Add a unit to the map throwing an exception if the unit is already in the map ."}
{"id": 4850, "prediction": "Adds a Plaf component to the given menu ."}
{"id": 4851, "prediction": "Tries to find a record in the given file starting at drsPos ."}
{"id": 4852, "prediction": "Reads the scalar data for a given dataset ."}
{"id": 4853, "prediction": "Serializes a single CEEvaluator to a DataOutputStream ."}
{"id": 4854, "prediction": "Returns the values of a compressed RDAT parameter as an array of float values ."}
{"id": 4855, "prediction": "Creates a copy of this view with the default map area ."}
{"id": 4856, "prediction": "Open a feature dataset ."}
{"id": 4857, "prediction": "Open a feature dataset ."}
{"id": 4858, "prediction": "Open a dataset ."}
{"id": 4859, "prediction": "Add attributes to a non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty non - empty attributes"}
{"id": 4860, "prediction": "Returns a new list that contains all properties of the given list except those that are not present in the original list ."}
{"id": 4861, "prediction": "Add a new partition for the given variable index ."}
{"id": 4862, "prediction": "Creates a new grib collection from the specified index file ."}
{"id": 4863, "prediction": "A convenience method to match on dataset name ."}
{"id": 4864, "prediction": "A convenience method to match on dataset path ."}
{"id": 4865, "prediction": "Return true if the file was written as XML ."}
{"id": 4866, "prediction": "Read data from a section into an array structure ."}
{"id": 4867, "prediction": "Sets the legend for the given filename URL ."}
{"id": 4868, "prediction": "Set the given image as a buffered image with a status message ."}
{"id": 4869, "prediction": "zoom to fit"}
{"id": 4870, "prediction": "Called when the component is Dragging ."}
{"id": 4871, "prediction": "Returns date and time as two integer arrays . If the date or time is out of range return an empty array . If the time is out of range return an empty array ."}
{"id": 4872, "prediction": "Converts a date and time array into a TI - CDTM string ."}
{"id": 4873, "prediction": "Returns the TI -ITOC format of the given integer array ."}
{"id": 4874, "prediction": "Returns the day of the month in the given year ."}
{"id": 4875, "prediction": "Convert LV code point to LV code point ."}
{"id": 4876, "prediction": "Converts an array of ints to an array of ints starting from a specified index ."}
{"id": 4877, "prediction": "Returns the String name of the grid packing type ."}
{"id": 4878, "prediction": "Gets the data type ."}
{"id": 4879, "prediction": "Call this method to read the data from the input stream ."}
{"id": 4880, "prediction": "externalizes the given OutputStream using the specified headers"}
{"id": 4881, "prediction": "Get the TagEnum associated with the code ."}
{"id": 4882, "prediction": "Get the next image ."}
{"id": 4883, "prediction": "Returns the size of the given DAP type ."}
{"id": 4884, "prediction": "Returns the sum of the elements of an array ."}
{"id": 4885, "prediction": "Create a spatial grid with the specified width and height ."}
{"id": 4886, "prediction": "Sets the overlap level ."}
{"id": 4887, "prediction": "Clears all values in the grid array ."}
{"id": 4888, "prediction": "Mark an object if it is clear"}
{"id": 4889, "prediction": "Finds the intersection between the specified rectangle and this rectangle ."}
{"id": 4890, "prediction": "Finds the intersection between the two points ."}
{"id": 4891, "prediction": "Finds the closest point to the given pt ."}
{"id": 4892, "prediction": "Get the Euclidean distance squared from the specified point ."}
{"id": 4893, "prediction": "Get or create a base unit ."}
{"id": 4894, "prediction": "Search the fragment for a protocol and return the corresponding ServiceType"}
{"id": 4895, "prediction": "Returns the first matching path for the specified URL ."}
{"id": 4896, "prediction": "Decodes a path extension to a service type ."}
{"id": 4897, "prediction": "Checks to see if the specified location is a dods service ."}
{"id": 4898, "prediction": "Checks to see if the given URL points to a DAP4 file ."}
{"id": 4899, "prediction": "Sends data for a given variable to an output stream ."}
{"id": 4900, "prediction": "Get the suffix of a fully qualified FQN ."}
{"id": 4901, "prediction": "Get the prefix of a FQN ."}
{"id": 4902, "prediction": "Locates a file in the local filesystem ."}
{"id": 4903, "prediction": "Locates a relative path ."}
{"id": 4904, "prediction": "Extract bytes from given ByteBuffer ."}
{"id": 4905, "prediction": "Returns the structure path for a given variable ."}
{"id": 4906, "prediction": "Returns null if the given path is null or empty ."}
{"id": 4907, "prediction": "Joins the elements of an array into a single string ."}
{"id": 4908, "prediction": "Returns true if the path contains a letter ."}
{"id": 4909, "prediction": "Returns a list of all protocols including host and path ."}
{"id": 4910, "prediction": "Converts a DAP variable index to a list of Slice objects ."}
{"id": 4911, "prediction": "Converts an offset to a list of Slice objects ."}
{"id": 4912, "prediction": "Returns true if the slice list is contiguous false otherwise ."}
{"id": 4913, "prediction": "Returns true if the slice is a single point ."}
{"id": 4914, "prediction": "Converts a list of slice to an index ."}
{"id": 4915, "prediction": "Reads data from an input stream and writes it to a file ."}
{"id": 4916, "prediction": "Sets the values for the StationInfo ."}
{"id": 4917, "prediction": "Set short names for the time series ."}
{"id": 4918, "prediction": "Read a feature collection configuration from a catalog file ."}
{"id": 4919, "prediction": "Adds a declaration to the group ."}
{"id": 4920, "prediction": "Update the list of groups"}
{"id": 4921, "prediction": "Returns the variable in the group with the given name ."}
{"id": 4922, "prediction": "Gets the AxisType attribute of the VariableEnhanced object ."}
{"id": 4923, "prediction": "Get theStatType based on the time range indicator ."}
{"id": 4924, "prediction": "subset the lon axis with the specified region stride ."}
{"id": 4925, "prediction": "Get the RangeIterators of the y - axis and the X - axis ."}
{"id": 4926, "prediction": "Set the default values for the given properties ."}
{"id": 4927, "prediction": "Gets the session ID ."}
{"id": 4928, "prediction": "Set the maximum redirects allowed for this session ."}
{"id": 4929, "prediction": "Set whether to use sessions or not ."}
{"id": 4930, "prediction": "Closes this connection and all its associated methods ."}
{"id": 4931, "prediction": "Set the HttpClientBuilder to use authentication and proxy ."}
{"id": 4932, "prediction": "Adds a session to the HTTP session list ."}
{"id": 4933, "prediction": "Sets the global credentials provider for the given scope ."}
{"id": 4934, "prediction": "Validate the contents of the URL"}
{"id": 4935, "prediction": "Returns an Index instance for the given shape ."}
{"id": 4936, "prediction": "Computes theides of a given shape and stride ."}
{"id": 4937, "prediction": "Adds the specified range to the specified section ."}
{"id": 4938, "prediction": "Perform the reduce operation on the specified index ."}
{"id": 4939, "prediction": "Returns a new index for the specified dimension ."}
{"id": 4940, "prediction": "Create a copy of this Index with the specified indices ."}
{"id": 4941, "prediction": "Returns a copy of this Index with the specified number of elements permuted"}
{"id": 4942, "prediction": "Returns an IndexIterator for the given Array ."}
{"id": 4943, "prediction": "Returns the current element of the matrix ."}
{"id": 4944, "prediction": "Set current index to the specified array ."}
{"id": 4945, "prediction": "Set the value of a given dimension ."}
{"id": 4946, "prediction": "Set the values of this Index to v0 and v2 ."}
{"id": 4947, "prediction": "Returns the name of the time interval ."}
{"id": 4948, "prediction": "Makes a CalendarDateRange ."}
{"id": 4949, "prediction": "Make a list of date and time ."}
{"id": 4950, "prediction": "Converts a DMPart part into a list of parameters ."}
{"id": 4951, "prediction": "Returns the list of Stations for a given SLAT ."}
{"id": 4952, "prediction": "Make a GalakStation from a header ."}
{"id": 4953, "prediction": "Returns a list of all key names of the current Station ."}
{"id": 4954, "prediction": "Returns a list of dates ."}
{"id": 4955, "prediction": "Returns the index of a given station ."}
{"id": 4956, "prediction": "Gets the file type ."}
{"id": 4957, "prediction": "Adds n to the current depth of the tree ."}
{"id": 4958, "prediction": "Set depth of the tree ."}
{"id": 4959, "prediction": "Read or create an index from a single file ."}
{"id": 4960, "prediction": "Add directory scan to the collection ."}
{"id": 4961, "prediction": "Returns true if a scan is needed for the collection ."}
{"id": 4962, "prediction": "Scans the entire collection for files that have been modified since the first time ."}
{"id": 4963, "prediction": "Set the debug flags to use when writing and writing to a file ."}
{"id": 4964, "prediction": "Add a new variable and return it ."}
{"id": 4965, "prediction": "Write the variable list to a file ."}
{"id": 4966, "prediction": "Validates the given XML document and throws an exception if validation fails ."}
{"id": 4967, "prediction": "Returns a string representation of this constraint ."}
{"id": 4968, "prediction": "Set the original variable for this Structure object ."}
{"id": 4969, "prediction": "If the orgVar is non - null returns the data as Array . If the orgVar is null returns null ."}
{"id": 4970, "prediction": "Gets the data from the given section and converts it to an Array ."}
{"id": 4971, "prediction": "Checks to see if the conversion is needed for the given data ."}
{"id": 4972, "prediction": "Convert from ArrayStructureMA to ArrayStructureMAMA"}
{"id": 4973, "prediction": "Convert the member information from the wrapperSm to the structure data structure data ."}
{"id": 4974, "prediction": "Finds a variable by its original name ."}
{"id": 4975, "prediction": "Does this variable have data?"}
{"id": 4976, "prediction": "Enhances all variables with the given mode ."}
{"id": 4977, "prediction": "Check to see if the user has allowed access to the resource"}
{"id": 4978, "prediction": "Create an empty sequence from the members of the given sequence ."}
{"id": 4979, "prediction": "Create an ArraySequence from an array of values ."}
{"id": 4980, "prediction": "Make a sequence for the specified part ."}
{"id": 4981, "prediction": "Adds the verticalCoord attribute to the variable ."}
{"id": 4982, "prediction": "Reads a catalog from XML ."}
{"id": 4983, "prediction": "Converts a string representation of a catalog into a InvCatalog object ."}
{"id": 4984, "prediction": "Reads an InvCatalog object from a string representation ."}
{"id": 4985, "prediction": "Writes an XML catalog object to an output stream ."}
{"id": 4986, "prediction": "Get a metadata converter by its key ."}
{"id": 4987, "prediction": "Returns the dimensionless ID of the unit ."}
{"id": 4988, "prediction": "Computes the MultiplyBy of this unit and another unit ."}
{"id": 4989, "prediction": "Divides one unit by another ."}
{"id": 4990, "prediction": "Convert an array of float values to a derived unit array ."}
{"id": 4991, "prediction": "Returns true if this unit is compatible with the specified unit ."}
{"id": 4992, "prediction": "Write a feature to the given geometry ."}
{"id": 4993, "prediction": "Writes the given point as an XML string ."}
{"id": 4994, "prediction": "Writes the line to an XML String ."}
{"id": 4995, "prediction": "Writes a Polygon to an XML String ."}
{"id": 4996, "prediction": "Pull the value of the named attribute from the given node ."}
{"id": 4997, "prediction": "Get the list of Subnodes from a parent node ."}
{"id": 4998, "prediction": "Parses the root node of a XML document ."}
{"id": 4999, "prediction": "Adds the attributes of the given node to the given DAPNode ."}
{"id": 5000, "prediction": "Get the sub - set of a variable ."}
{"id": 5001, "prediction": "Create an ArrayStructureMA from an existing structure ."}
{"id": 5002, "prediction": "Set the data array for a given member ."}
{"id": 5003, "prediction": "Create an ArrayStructureMA from a Structure"}
{"id": 5004, "prediction": "Return the geometry type of a given CF name ."}
{"id": 5005, "prediction": "Make a station from a structure ."}
{"id": 5006, "prediction": "Compiles the given AST and performs semantic checks on it ."}
{"id": 5007, "prediction": "Compiles a filter expression ."}
{"id": 5008, "prediction": "Adds a dimension redef to a constraint ."}
{"id": 5009, "prediction": "Returns a view of the specified index ."}
{"id": 5010, "prediction": "Returns true if the specified rectangle is contained in this rectangle ."}
{"id": 5011, "prediction": "Extend the bounding box by a given point ."}
{"id": 5012, "prediction": "Extend the bounding box by the given rectangle ."}
{"id": 5013, "prediction": "Intersects the specified LatLonRect with this one ."}
{"id": 5014, "prediction": "Adds the elements of the given arrays to the current array ."}
{"id": 5015, "prediction": "Returns true if array a conformable to array b ."}
{"id": 5016, "prediction": "Returns true if the specified shape is conformable with the specified shape ."}
{"id": 5017, "prediction": "Convert an array to another array type"}
{"id": 5018, "prediction": "Copy the contents of the given array to the given array ."}
{"id": 5019, "prediction": "Copies the elements of the specified array into the specified array . The array must be conformable ."}
{"id": 5020, "prediction": "Copies the contents of an array to a new array"}
{"id": 5021, "prediction": "Returns the min and max of the specified array ."}
{"id": 5022, "prediction": "Set the value of a double index to a double value ."}
{"id": 5023, "prediction": "Make a new CatalogBuilder ."}
{"id": 5024, "prediction": "Returns an adapter for the specified projection ."}
{"id": 5025, "prediction": "Unescapes a DAP identifier ."}
{"id": 5026, "prediction": "URL - decode a string ."}
{"id": 5027, "prediction": "Unescapes a URL so it can be used as a URL ."}
{"id": 5028, "prediction": "Escapes a string with a backslash ."}
{"id": 5029, "prediction": "Escapes backslash characters in a string ."}
{"id": 5030, "prediction": "Takes an escaped name and tokenizes it into a list of strings ."}
{"id": 5031, "prediction": "Gets the index of a character in a escaped name ."}
{"id": 5032, "prediction": "Converts back to DAP ."}
{"id": 5033, "prediction": "Read an atomic scalar ."}
{"id": 5034, "prediction": "Gets the path of the given cursor ."}
{"id": 5035, "prediction": "Returns the default value for the specified class and property ."}
{"id": 5036, "prediction": "Returns the correct class for the given component ."}
{"id": 5037, "prediction": "Compile the variable data to the databuffer ."}
{"id": 5038, "prediction": "Compiles a structure array ."}
{"id": 5039, "prediction": "Compile a structure into a D4DSP structure ."}
{"id": 5040, "prediction": "Compiles a sequence array ."}
{"id": 5041, "prediction": "Compile a sequence ."}
{"id": 5042, "prediction": "Reads an 8 byte long in little - endian format ."}
{"id": 5043, "prediction": "Returns the field with the given name ."}
{"id": 5044, "prediction": "Returns the value of the specified field ."}
{"id": 5045, "prediction": "Set a field value ."}
{"id": 5046, "prediction": "Add a field to the cursor ."}
{"id": 5047, "prediction": "Adds a CheckBox field ."}
{"id": 5048, "prediction": "Add a date field ."}
{"id": 5049, "prediction": "Adds a double field ."}
{"id": 5050, "prediction": "Adds an int field ."}
{"id": 5051, "prediction": "Add a password field ."}
{"id": 5052, "prediction": "Adds a text field ."}
{"id": 5053, "prediction": "Adds a new Text combo field ."}
{"id": 5054, "prediction": "Adds a text field ."}
{"id": 5055, "prediction": "Adds a heading and a row to the layout ."}
{"id": 5056, "prediction": "Adds a component to the layout"}
{"id": 5057, "prediction": "Adds an empty row to the grid ."}
{"id": 5058, "prediction": "Finds an active frame ."}
{"id": 5059, "prediction": "Returns the cell spacing between the two cells ."}
{"id": 5060, "prediction": "Returns an array of factors ."}
{"id": 5061, "prediction": "Computes a factor array that contains all the elements of the specified dimension ."}
{"id": 5062, "prediction": "Returns an array with all the factors that have a power of the given value ."}
{"id": 5063, "prediction": "Returns true if this dimension is reciprocal of the specified dimension ."}
{"id": 5064, "prediction": "Returns true if all the sub - components are non - dimensionless ."}
{"id": 5065, "prediction": "Create a new Grib1ParamTables instance ."}
{"id": 5066, "prediction": "Create a new Grib1ParamTables instance from a JDOM Element ."}
{"id": 5067, "prediction": "Adds a parameter table lookup ."}
{"id": 5068, "prediction": "Adds a table to the standard lookup ."}
{"id": 5069, "prediction": "Returns this unit s current power to the specified power ."}
{"id": 5070, "prediction": "Convert an array of float values to a derived unit ."}
{"id": 5071, "prediction": "Initialize the unit table ."}
{"id": 5072, "prediction": "Generate a Variable object for a vertical axis ."}
{"id": 5073, "prediction": "Returns the name of the directory or null if the directory is empty ."}
{"id": 5074, "prediction": "Extract a short from the byte array at the given offset ."}
{"id": 5075, "prediction": "Extract int from byte array at given offset"}
{"id": 5076, "prediction": "Reads a float from the page data ."}
{"id": 5077, "prediction": "Reads a double from the Descriptor ."}
{"id": 5078, "prediction": "Uses the supplied alias to lookup a named unit ."}
{"id": 5079, "prediction": "Adds a single symbol to a unit ."}
{"id": 5080, "prediction": "Create a converter from two units ."}
{"id": 5081, "prediction": "Initialize the table with a list of StructureData ."}
{"id": 5082, "prediction": "Sets the data for the point features ."}
{"id": 5083, "prediction": "Draws this button using the given graphics context and the given transformation ."}
{"id": 5084, "prediction": "Gets all the shapes of the specified GisFeatureAdapter ."}
{"id": 5085, "prediction": "Reads all data from the stream ."}
{"id": 5086, "prediction": "Read the data from an InputStream into a byte array"}
{"id": 5087, "prediction": "Reads the number of bytes we ve read so far and returns what we ve read ."}
{"id": 5088, "prediction": "Reads len bytes into a byte array starting at the specified offset"}
{"id": 5089, "prediction": "Skips the given number of bytes ."}
{"id": 5090, "prediction": "Add dimensions to the net process file ."}
{"id": 5091, "prediction": "Return the index of the coordinate at the current level or - 1 if no coordinate was found ."}
{"id": 5092, "prediction": "Returns true if the given file can be parsed ."}
{"id": 5093, "prediction": "Parses the content of the file and creates the data structure from it ."}
{"id": 5094, "prediction": "Reads data from a given section ."}
{"id": 5095, "prediction": "Read one row of data"}
{"id": 5096, "prediction": "Populate coordinate variables from grid array variables and grid array variables ."}
{"id": 5097, "prediction": "Create a type for a variable ."}
{"id": 5098, "prediction": "Fire the map area event"}
{"id": 5099, "prediction": "Set the map area ."}
{"id": 5100, "prediction": "Set the map area ."}
{"id": 5101, "prediction": "Set the lat lon center of the map area ."}
{"id": 5102, "prediction": "Set the current projection of this world to the specified projection"}
{"id": 5103, "prediction": "Add the actions to the given menu ."}
{"id": 5104, "prediction": "Redraw this Timer after the specified delay ."}
{"id": 5105, "prediction": "Set the screen size of this panel to the same size as the specified one ."}
{"id": 5106, "prediction": "Selects the given variable ."}
{"id": 5107, "prediction": "Returns the value at the given offset as a double ."}
{"id": 5108, "prediction": "Get a double at a specific index ."}
{"id": 5109, "prediction": "Get an object at a specific index ."}
{"id": 5110, "prediction": "Gets the Sector ID for a given ent_id ."}
{"id": 5111, "prediction": "Reads a scaled integer from the buffer and returns it as a double ."}
{"id": 5112, "prediction": "Returns the first parameter with the specified name ignoring case ."}
{"id": 5113, "prediction": "Returns true if there are more elements to move ."}
{"id": 5114, "prediction": "Calculate the byte order of the file based on the operating system arch ."}
{"id": 5115, "prediction": "Get the time steps for a given file ."}
{"id": 5116, "prediction": "Gets the file name ."}
{"id": 5117, "prediction": "Gets the file names ."}
{"id": 5118, "prediction": "Returns the path to the DDF file ."}
{"id": 5119, "prediction": "Gets the full path of the file ."}
{"id": 5120, "prediction": "Adds a sub to the chsub list ."}
{"id": 5121, "prediction": "Convert a reference date to a time unit"}
{"id": 5122, "prediction": "Reads the WMO product header from the given file ."}
{"id": 5123, "prediction": "Returns the uncomp data at the specified offset of the specified data ."}
{"id": 5124, "prediction": "pcode 12n13n14"}
{"id": 5125, "prediction": "The parameter hoff and len are the size of the circle"}
{"id": 5126, "prediction": "Check the file for the nids product header ."}
{"id": 5127, "prediction": "The pcode5 function . The pcode5 function has the following attributes ."}
{"id": 5128, "prediction": "The pcode_128 function ."}
{"id": 5129, "prediction": "The pcode - WM - WM - WM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DWM - DD - DWM -"}
{"id": 5130, "prediction": "Extract levels from an array ."}
{"id": 5131, "prediction": "Gets the getDualPolLevels attribute of the XLogPDescriptor object ."}
{"id": 5132, "prediction": "Add a new variable to the net fcfile ."}
{"id": 5133, "prediction": "Add a new parameter to the netfile"}
{"id": 5134, "prediction": "Uncompress an array of bytes from a byte buffer ."}
{"id": 5135, "prediction": "Returns an unsigned integer value of the specified number of bytes from the specified byte array ."}
{"id": 5136, "prediction": "Get a variable - length integer value from a byte array ."}
{"id": 5137, "prediction": "Convert a byte array to an array of primitive types ."}
{"id": 5138, "prediction": "Process a DMR request ."}
{"id": 5139, "prediction": "Returns the current request state ."}
{"id": 5140, "prediction": "Send an error response to the client ."}
{"id": 5141, "prediction": "Return true if the point is anchor to the given point ."}
{"id": 5142, "prediction": "Draws the stretched component at the specified point ."}
{"id": 5143, "prediction": "Gets the bounding rectangle of the stretched region ."}
{"id": 5144, "prediction": "Returns a rectangle that contains the last point relative to the anchor point ."}
{"id": 5145, "prediction": "Convert a string to a date only format ."}
{"id": 5146, "prediction": "Replace the data variables of the given member ."}
{"id": 5147, "prediction": "Ensure that the size of an array is ok for the given attributeTo ."}
{"id": 5148, "prediction": "Reads a two - byte integer from a file in a RandomAccessFile ."}
{"id": 5149, "prediction": "Reads an int from a file ."}
{"id": 5150, "prediction": "Reads a three - byte int from a RandomAccessFile ."}
{"id": 5151, "prediction": "Reads a 2 byte integer from a file in a RandomAccessFile ."}
{"id": 5152, "prediction": "Reads a 3 - byte integer from a file in a RandomAccessFile ."}
{"id": 5153, "prediction": "Reads a 4 - byte float from a RandomAccessFile ."}
{"id": 5154, "prediction": "Returns a 4 - byte float value ."}
{"id": 5155, "prediction": "Reads a 8 byte int from a file and returns it as a long ."}
{"id": 5156, "prediction": "Count the number of bits in an array of bytes ."}
{"id": 5157, "prediction": "Return a copy of the current Projection object ."}
{"id": 5158, "prediction": "Generates a String representation of this object as a WGS84 object ."}
{"id": 5159, "prediction": "Escapes a string with &lt ; and &gt ; characters ."}
{"id": 5160, "prediction": "Escapes backslash characters in a string ."}
{"id": 5161, "prediction": "Returns a list of strings separated by the given separator ."}
{"id": 5162, "prediction": "Makes a FMRC invariant ."}
{"id": 5163, "prediction": "Get the service name from a path ."}
{"id": 5164, "prediction": "Returns the number of projected components in this array ."}
{"id": 5165, "prediction": "Returns a copy of this date with the same values as the argument ."}
{"id": 5166, "prediction": "Make a new ArrayStructureBB from a given Section ."}
{"id": 5167, "prediction": "The main entry point for this example ."}
{"id": 5168, "prediction": "Read a single record ."}
{"id": 5169, "prediction": "Determine whether the given NetHandlesFile has at least one of the attributes XCELL NColS and YCELL ."}
{"id": 5170, "prediction": "Create a projection for theUTM Projection ."}
{"id": 5171, "prediction": "Re - acquires the area reader ."}
{"id": 5172, "prediction": "Is the given date before the given date?"}
{"id": 5173, "prediction": "Return true if the given date is before the given date ."}
{"id": 5174, "prediction": "Returns true if the specified date is after the specified date ."}
{"id": 5175, "prediction": "Set the value at the specified index ."}
{"id": 5176, "prediction": "Adds the specified coordinate system to this variable ."}
{"id": 5177, "prediction": "Set the value of the units attribute ."}
{"id": 5178, "prediction": "Returns the units attribute value or null if there is no units attribute ."}
{"id": 5179, "prediction": "Initializes this object with the given read mode and a preferences object ."}
{"id": 5180, "prediction": "Reads a catalog from the classpath ."}
{"id": 5181, "prediction": "Process all datasets ."}
{"id": 5182, "prediction": "Read all cats from the specified directory ."}
{"id": 5183, "prediction": "Returns true if the lon is between lonBeg and lonEnd ."}
{"id": 5184, "prediction": "Converts a given latitude to a string ."}
{"id": 5185, "prediction": "Returns a string representation of the given long value ."}
{"id": 5186, "prediction": "Compares this to the specified item ."}
{"id": 5187, "prediction": "Returns the selected dataset ."}
{"id": 5188, "prediction": "Select a dataset ."}
{"id": 5189, "prediction": "Create a tree path from a TreeNode"}
{"id": 5190, "prediction": "Opens the InvCatalog tree with all the catalog files ."}
{"id": 5191, "prediction": "Set the catalog from the given location ."}
{"id": 5192, "prediction": "Change the value of the catalog ."}
{"id": 5193, "prediction": "Find the alias for a dataset ."}
{"id": 5194, "prediction": "Writes a variable - length int to the output stream ."}
{"id": 5195, "prediction": "Writes a range of characters ."}
{"id": 5196, "prediction": "Reads a range of characters ."}
{"id": 5197, "prediction": "Set the debug flags to use for this component ."}
{"id": 5198, "prediction": "Adds a member to this set ."}
{"id": 5199, "prediction": "Returns the index of the member or - 1 if it is not present ."}
{"id": 5200, "prediction": "A list of member names ."}
{"id": 5201, "prediction": "Returns the member with the given name ."}
{"id": 5202, "prediction": "Reads a bitmap from the given file ."}
{"id": 5203, "prediction": "Restore the state of the column model and the header order ."}
{"id": 5204, "prediction": "Returns an iterator of all selected rows in the table ."}
{"id": 5205, "prediction": "Get the model index of the column"}
{"id": 5206, "prediction": "Returns the array for a given member ."}
{"id": 5207, "prediction": "Gets a scalar as a double ."}
{"id": 5208, "prediction": "Get the Java array for a given member as a double array ."}
{"id": 5209, "prediction": "Get the float representation of a structure member ."}
{"id": 5210, "prediction": "Returns a float array for the given member ."}
{"id": 5211, "prediction": "Gets a scalar byte from a member ."}
{"id": 5212, "prediction": "Get the byte array for a given member ."}
{"id": 5213, "prediction": "Get the scalar index for a given member ."}
{"id": 5214, "prediction": "Gets a Java array for the given member ."}
{"id": 5215, "prediction": "Get the scalar value for a given member ."}
{"id": 5216, "prediction": "Get the array for this member as a short array ."}
{"id": 5217, "prediction": "Gets a scalar as a long ."}
{"id": 5218, "prediction": "Returns a long array for the given member ."}
{"id": 5219, "prediction": "Gets a scalar character from a member ."}
{"id": 5220, "prediction": "Gets the java array character of the given member ."}
{"id": 5221, "prediction": "Do one dataset ."}
{"id": 5222, "prediction": "Is a dataset useable?"}
{"id": 5223, "prediction": "Returns a copy of a dataset ."}
{"id": 5224, "prediction": "Transfers metadata from one dataset to another ."}
{"id": 5225, "prediction": "Gets the metadata for a Thredds dataset inheritable format ."}
{"id": 5226, "prediction": "Adds a product record to the grid ."}
{"id": 5227, "prediction": "Show the information about the missing data ."}
{"id": 5228, "prediction": "Show the total number of missing records ."}
{"id": 5229, "prediction": "Find a record based on the ens and time ."}
{"id": 5230, "prediction": "Dump the current state of the grid ."}
{"id": 5231, "prediction": "Returns a human - readable version of the name of the grid parameter ."}
{"id": 5232, "prediction": "subset by intervals"}
{"id": 5233, "prediction": "Returns true if the two byte arrays have the same length false otherwise ."}
{"id": 5234, "prediction": "Parse a DMR document and return a DMR dataset object ."}
{"id": 5235, "prediction": "Processes all attributes of the given dataset ."}
{"id": 5236, "prediction": "Adds coordinates to a PartitionCollectionMutable . Partition part ."}
{"id": 5237, "prediction": "Set the Gaussian latencies of this coordinate system to the given values ."}
{"id": 5238, "prediction": "Parse a variable selector and return the ParsedSectionSpec ."}
{"id": 5239, "prediction": "Returns a string representation of a section spec given a list of ranges ."}
{"id": 5240, "prediction": "Returns true if the specified locations are contained in a box9 matrix false otherwise ."}
{"id": 5241, "prediction": "Close the connection to the remote server ."}
{"id": 5242, "prediction": "Executes the request and returns the status code ."}
{"id": 5243, "prediction": "Identify the Encoding dimension and the station dimension ."}
{"id": 5244, "prediction": "Match axis type and dimension ."}
{"id": 5245, "prediction": "Set the stream ."}
{"id": 5246, "prediction": "Reads the next character from the stream ."}
{"id": 5247, "prediction": "This method starts the ProgressMonitor ."}
{"id": 5248, "prediction": "Parse a string into a URI"}
{"id": 5249, "prediction": "Add the given URI to the list of exclude URIs ."}
{"id": 5250, "prediction": "Returns null if the given string is null or empty . Otherwise returns the given string ."}
{"id": 5251, "prediction": "Returns a canonical version of the given path ."}
{"id": 5252, "prediction": "Returns true if the given dataset was modified before the last modified limit ; false otherwise ."}
{"id": 5253, "prediction": "Copies information from another GribCollectionMutable into this ."}
{"id": 5254, "prediction": "Get all file names ."}
{"id": 5255, "prediction": "Set the RandomAccessFile as the index file ."}
{"id": 5256, "prediction": "Returns the full path to the index file ."}
{"id": 5257, "prediction": "Closes the index ."}
{"id": 5258, "prediction": "Return the number of named counters ."}
{"id": 5259, "prediction": "Add a global attribute ."}
{"id": 5260, "prediction": "Add a global attribute with the given name and array values ."}
{"id": 5261, "prediction": "Delete the attribute with the specified name from the global group ."}
{"id": 5262, "prediction": "Rename the global attribute with the given name ."}
{"id": 5263, "prediction": "Add a variable attribute"}
{"id": 5264, "prediction": "Adds an Array attribute to the variable ."}
{"id": 5265, "prediction": "Deletes an attribute from the variable with the given name ."}
{"id": 5266, "prediction": "Rename a variable by its name"}
{"id": 5267, "prediction": "Make the sub type of the file ."}
{"id": 5268, "prediction": "Write the headers andBB information to the output file"}
{"id": 5269, "prediction": "Writes the members of the current geometry to a file ."}
{"id": 5270, "prediction": "Returns an XML representation of the dataset ."}
{"id": 5271, "prediction": "Write the station collection as an XML string ."}
{"id": 5272, "prediction": "Write a DSR string ."}
{"id": 5273, "prediction": "Sends a DXR message ."}
{"id": 5274, "prediction": "Sends an Error response ."}
{"id": 5275, "prediction": "Closes the underlying output stream ."}
{"id": 5276, "prediction": "Flushes the output stream ."}
{"id": 5277, "prediction": "Construct a copy of this Projection"}
{"id": 5278, "prediction": "Returns true if the specified array contains the specified element ."}
{"id": 5279, "prediction": "Gets the element at the specified index ."}
{"id": 5280, "prediction": "Shifts the specified origin by one ."}
{"id": 5281, "prediction": "Reads data from a file using the specified index and data type ."}
{"id": 5282, "prediction": "Reads the data from a file ."}
{"id": 5283, "prediction": "Returns a subset of this vector ."}
{"id": 5284, "prediction": "Retrieves all CatalogExts from the current catalog ."}
{"id": 5285, "prediction": "Delete the dataset tracker before the given file path ."}
{"id": 5286, "prediction": "Sets the values of this GDS object ."}
{"id": 5287, "prediction": "Gets the data chunk iterator without applying a filter for the specified section ."}
{"id": 5288, "prediction": "Make an array of doubles from an array of ints ."}
{"id": 5289, "prediction": "Gets a list of available dataset boundaries ."}
{"id": 5290, "prediction": "Checks if the requested grid variables are contained in the current dataset ."}
{"id": 5291, "prediction": "Get a Dataset from the hash ."}
{"id": 5292, "prediction": "Returns the full path to the given location ."}
{"id": 5293, "prediction": "Finds the largest vert coord and adds it to the net file ."}
{"id": 5294, "prediction": "Reads a PB file ."}
{"id": 5295, "prediction": "Close all the resources and release resources ."}
{"id": 5296, "prediction": "This method transfers metadata from one group to another ."}
{"id": 5297, "prediction": "Transfer metadata from another dataset to this one ."}
{"id": 5298, "prediction": "This method is used to transfer metadata from one dataset to another ."}
{"id": 5299, "prediction": "Returns a copy of the supplied Con attributor objects ."}
{"id": 5300, "prediction": "Adds a dataset to this InvDataset and sets its parent to the specified index ."}
{"id": 5301, "prediction": "Remove a dataset from this catalog ."}
{"id": 5302, "prediction": "Replace a dataset in this catalog with another one ."}
{"id": 5303, "prediction": "Add a service to the set of services ."}
{"id": 5304, "prediction": "Remove a service from this server ."}
{"id": 5305, "prediction": "A list of services that may be registered on the server ."}
{"id": 5306, "prediction": "Remove metadata from the local dataset ."}
{"id": 5307, "prediction": "Gets the value of a user property ."}
{"id": 5308, "prediction": "This method validates the variable and appends it to the validation output ."}
{"id": 5309, "prediction": "Returns a list of all the descriptors ."}
{"id": 5310, "prediction": "Construct the path to the wfs server ."}
{"id": 5311, "prediction": "Get the capabilities for the server ."}
{"id": 5312, "prediction": "Get a single feature ."}
{"id": 5313, "prediction": "Check that the request and version are valid and throw an exception if not ."}
{"id": 5314, "prediction": "Handle http request ."}
{"id": 5315, "prediction": "Return the contents of a URL as a String ."}
{"id": 5316, "prediction": "Returns the size of this dataset in bytes from S3 ."}
{"id": 5317, "prediction": "Returns the last modified time of the S3 object ."}
{"id": 5318, "prediction": "Adds a new dataset to the DAP dataset ."}
{"id": 5319, "prediction": "Return a file with the given path ."}
{"id": 5320, "prediction": "Return the contents of the given string to the HttpServletResponse"}
{"id": 5321, "prediction": "Set the content length of the response ."}
{"id": 5322, "prediction": "Get the URI for the specified request ."}
{"id": 5323, "prediction": "Returns the full path of the specified request ."}
{"id": 5324, "prediction": "Returns a query string for the specified request ."}
{"id": 5325, "prediction": "Returns the value of the specified parameter from the specified request ignoring case ."}
{"id": 5326, "prediction": "Saves the current list box so that it can be restored ."}
{"id": 5327, "prediction": "Writes a directory to the response as HTML ."}
{"id": 5328, "prediction": "Set the bit offset for a given data descriptor ."}
{"id": 5329, "prediction": "Make an instance of this class nested in a sub - counter ."}
{"id": 5330, "prediction": "Count the number of bits in a row starting at the specified start bit ."}
{"id": 5331, "prediction": "Append a line to the text history ."}
{"id": 5332, "prediction": "Make a Document representing a LatLonRect with the specified names ."}
{"id": 5333, "prediction": "Get a DOM Document representing the configuration ."}
{"id": 5334, "prediction": "Get the record for this subset ."}
{"id": 5335, "prediction": "Returns the coordinate at the specified index in the group ."}
{"id": 5336, "prediction": "Adds an item to the list ."}
{"id": 5337, "prediction": "Handles exception handling ."}
{"id": 5338, "prediction": "Returns the slice of the element at the specified index ."}
{"id": 5339, "prediction": "step in the range [ firstpos lastpos ) ."}
{"id": 5340, "prediction": "Gets the NCEP Table 1 = description ."}
{"id": 5341, "prediction": "Checks to see if the endpoint is a Cdmrf endpoint"}
{"id": 5342, "prediction": "Set whether this buffer has a value ."}
{"id": 5343, "prediction": "Returns a Grib1Gds factory for the specified grid number from the specified center ."}
{"id": 5344, "prediction": "Copy bytes from an InputStream to an OutputStream ."}
{"id": 5345, "prediction": "Reads the contents of an InputStream and returns it as a String ."}
{"id": 5346, "prediction": "Reads the contents of an input stream into a byte array ."}
{"id": 5347, "prediction": "Writes a string contents to an OutputStream"}
{"id": 5348, "prediction": "Copy a file into an OutputStream using a specified buffer size ."}
{"id": 5349, "prediction": "Copies a byte array from a RandomAccessFile to an OutputStream ."}
{"id": 5350, "prediction": "Copies a directory tree to another directory ."}
{"id": 5351, "prediction": "Reads the contents of a file into a byte array ."}
{"id": 5352, "prediction": "Read a file and return its content as a String ."}
{"id": 5353, "prediction": "Write the contents of a String to a file ."}
{"id": 5354, "prediction": "Writes a string to a file ."}
{"id": 5355, "prediction": "Write an InputStream to a file ."}
{"id": 5356, "prediction": "Get the exception information and set it on the response ."}
{"id": 5357, "prediction": "Set the response status to SC_NOT_FOUND and status code based on the given DAP2Exception ."}
{"id": 5358, "prediction": "Sends a bad URL page to the client ."}
{"id": 5359, "prediction": "Get the catalog information from the server"}
{"id": 5360, "prediction": "Prints the catalog for this server ."}
{"id": 5361, "prediction": "Prints the status of the server ."}
{"id": 5362, "prediction": "Prints the error page that contains the URLs that could not be recognized by this server ."}
{"id": 5363, "prediction": "Returns a date that can be used as a reference date ."}
{"id": 5364, "prediction": "Reads len data from a file ."}
{"id": 5365, "prediction": "Create a new NcMLCollectionReader from a String ."}
{"id": 5366, "prediction": "Open a new NcmlCollectionReader ."}
{"id": 5367, "prediction": "Replace special characters in a string with the given character ."}
{"id": 5368, "prediction": "Remove any bytes from the byte array h that are > = 32 ."}
{"id": 5369, "prediction": "Filter a string by only letters or digits ."}
{"id": 5370, "prediction": "Filter a string to only contain a certain number of bits ."}
{"id": 5371, "prediction": "Makes a valid Cdm object name ."}
{"id": 5372, "prediction": "Returns how many times the first character matches the second character ."}
{"id": 5373, "prediction": "Pad a string with a given length to the left"}
{"id": 5374, "prediction": "Pad a string with a given number of characters to the right ."}
{"id": 5375, "prediction": "Removes all occurrences of the specified string from the specified string ."}
{"id": 5376, "prediction": "Remove the specified character from the specified string ."}
{"id": 5377, "prediction": "Removes a character from the end of a string ."}
{"id": 5378, "prediction": "Strip leading and trailing whitespace from a string ."}
{"id": 5379, "prediction": "Replaces a character in a String with another character in a String ."}
{"id": 5380, "prediction": "replace with a string"}
{"id": 5381, "prediction": "Replace all occurrences of the pattern in the string with the given value ."}
{"id": 5382, "prediction": "Replace all occurrences of the given string with the given string ."}
{"id": 5383, "prediction": "Substitutes a set of Strings with a set of Strings ."}
{"id": 5384, "prediction": "Removes all occurrences of the specified character from the specified string ."}
{"id": 5385, "prediction": "Remove all occurrences of the given character from the given string ."}
{"id": 5386, "prediction": "Replaces all occurrences of a character in a String with a character in a StringBuilder ."}
{"id": 5387, "prediction": "Substitute the input string with the result string ."}
{"id": 5388, "prediction": "Returns the string with the bad characters removed ."}
{"id": 5389, "prediction": "Process a collection update event ."}
{"id": 5390, "prediction": "Check the current state of the dataset ."}
{"id": 5391, "prediction": "Update the collection with the specified force ."}
{"id": 5392, "prediction": "Show the Unique GDS and PDS templates ."}
{"id": 5393, "prediction": "Gets the dataset list ."}
{"id": 5394, "prediction": "Release any resources held by this object ."}
{"id": 5395, "prediction": "Copy a StructureData object to a new structureData object ."}
{"id": 5396, "prediction": "Copy an ArrayStructureBB to an ArrayStructureBB ."}
{"id": 5397, "prediction": "Copy a structure into an ArrayStructureBB ."}
{"id": 5398, "prediction": "Copy all members from an ArrayStructureBB to an ArrayStructureBB ."}
{"id": 5399, "prediction": "Copy a structure into an ArrayStructureBB ."}
{"id": 5400, "prediction": "Gets theorecast time interval size in hours ."}
{"id": 5401, "prediction": "Adds a range to the specified section ."}
{"id": 5402, "prediction": "Create a new TableAnalyzer using this TableConfigurer ."}
{"id": 5403, "prediction": "Returns the first feature type in the tree ."}
{"id": 5404, "prediction": "Analyze the feature data and create nested tables ."}
{"id": 5405, "prediction": "Flushes the file to disk ."}
{"id": 5406, "prediction": "Convenience method to return a start index of values of a specified type as double array ."}
{"id": 5407, "prediction": "Swaps a 64 - bit long with a 32 - bit long ."}
{"id": 5408, "prediction": "Swap a byte array to a float ."}
{"id": 5409, "prediction": "Returns the character at the specified offset of the specified byte array ."}
{"id": 5410, "prediction": "Override this method if you want to override the default coordinate axes ."}
{"id": 5411, "prediction": "Convenience method for adding a parameter to a coordinate transform ."}
{"id": 5412, "prediction": "Returns the common parent of this group and the given group ."}
{"id": 5413, "prediction": "Returns true if this group is the parent group of the other group ."}
{"id": 5414, "prediction": "Sets the parent group of this group ."}
{"id": 5415, "prediction": "Adds the given dimension to this group ."}
{"id": 5416, "prediction": "Adds the given dimension to this group if it does not already exist ."}
{"id": 5417, "prediction": "Adds the given group to this group and sets its parent to this group ."}
{"id": 5418, "prediction": "Adds an enum typedef to this group ."}
{"id": 5419, "prediction": "Adds a variable to this Group ."}
{"id": 5420, "prediction": "Removes the dimension with the given name ."}
{"id": 5421, "prediction": "Create a relative group from a file path ."}
{"id": 5422, "prediction": "Convert a DDS alias field to a DAS alias field name ."}
{"id": 5423, "prediction": "Print the DAS to the specified PrintWriter ."}
{"id": 5424, "prediction": "Get the base type of a variable by name ."}
{"id": 5425, "prediction": "Write a grid dataset ."}
{"id": 5426, "prediction": "Replace the missing values in an array with a default value ."}
{"id": 5427, "prediction": "Replace missing values and scale ."}
{"id": 5428, "prediction": "Returns the xstart of an array of LatLonPoint with the given value ."}
{"id": 5429, "prediction": "Write a GeoReferencedArray to the JSON file"}
{"id": 5430, "prediction": "Writes the XML response to the HTTP response writer ."}
{"id": 5431, "prediction": "Returns the name of any of the libraryvers ."}
{"id": 5432, "prediction": "Creates the top index file for a collection ."}
{"id": 5433, "prediction": "Reads a GribCollectionType from a file in CDM ."}
{"id": 5434, "prediction": "Update arib collection ."}
{"id": 5435, "prediction": "Update a leaf collection ."}
{"id": 5436, "prediction": "Opens a grib collection from the specified file ."}
{"id": 5437, "prediction": "Opens a GribCollectionImmutable from a data file ."}
{"id": 5438, "prediction": "Opens a GribCollection from a data file ."}
{"id": 5439, "prediction": "Returns true if the URL pattern matches the URL pattern ."}
{"id": 5440, "prediction": "Add a key - value pair to the cache ."}
{"id": 5441, "prediction": "Returns the value of a key with a URL ."}
{"id": 5442, "prediction": "If there are no URLs in the dfaltRC then set all of them as well - known ."}
{"id": 5443, "prediction": "Attempts to load the URL from a file ."}
{"id": 5444, "prediction": "Adds the given object to this triple and returns the previous object ."}
{"id": 5445, "prediction": "Gets the dataset names local ."}
{"id": 5446, "prediction": "Searches for a dataset with the given name ."}
{"id": 5447, "prediction": "Set the project to use ."}
{"id": 5448, "prediction": "Returns an iterator of pixels representing the features in the specified graphics context and the transformation matrix ."}
{"id": 5449, "prediction": "Make a list of shapes from an Iterator of GisFeature"}
{"id": 5450, "prediction": "Compare this ID with the specified string ."}
{"id": 5451, "prediction": "Start a progress monitor task"}
{"id": 5452, "prediction": "Does the given collection index file need to be updated?"}
{"id": 5453, "prediction": "Normalize an EnsCoord ."}
{"id": 5454, "prediction": "Set a value in the structure at the specified index ."}
{"id": 5455, "prediction": "Get the structure data at the specified index ."}
{"id": 5456, "prediction": "Copy a set of Structures from one location to another ."}
{"id": 5457, "prediction": "Converts an integer to a scalar object ."}
{"id": 5458, "prediction": "Convert a scalar to a double ."}
{"id": 5459, "prediction": "Converts a scalar to an int ."}
{"id": 5460, "prediction": "Get a float at a given recnum"}
{"id": 5461, "prediction": "Gets a single byte from the data array ."}
{"id": 5462, "prediction": "Get a short value from a structure member ."}
{"id": 5463, "prediction": "Gets a single character from the data array ."}
{"id": 5464, "prediction": "Gets a scalar string from a structure member ."}
{"id": 5465, "prediction": "Get the ArrayStructure for a given member"}
{"id": 5466, "prediction": "Get the ArraySequence for a given member ."}
{"id": 5467, "prediction": "Get the ArrayObject for a given member"}
{"id": 5468, "prediction": "Returns the minimum and maximum of the given value between the given minimum and maximum . If the given value is &gt ; = the minimum value is returned . If the given value is &ge ; the maximum value is returned ."}
{"id": 5469, "prediction": "Evaluate a single CEAST expression ."}
{"id": 5470, "prediction": "Returns a string representation of this variable map ."}
{"id": 5471, "prediction": "Returns true if the given DAP node references this DAP node ."}
{"id": 5472, "prediction": "Returns true if the variable matches the filter condition ."}
{"id": 5473, "prediction": "Returns the expansion count of the given DAP structure ."}
{"id": 5474, "prediction": "Computes all enum types and adds them to the set of enums"}
{"id": 5475, "prediction": "Computes the groups of the DAP ."}
{"id": 5476, "prediction": "Converts a string representation of a DAP constraint into a DAP constraint ."}
{"id": 5477, "prediction": "Return true if the given file is a valid GRIB2 file ."}
{"id": 5478, "prediction": "Create the action system ."}
{"id": 5479, "prediction": "Gets the byte order for a given level of hierarchy ."}
{"id": 5480, "prediction": "Set byte order for the file system ."}
{"id": 5481, "prediction": "Returns the key with the given name ."}
{"id": 5482, "prediction": "Returns the file header with the specified name ."}
{"id": 5483, "prediction": "Gets the file header for the specified file ."}
{"id": 5484, "prediction": "Prints the contents of the parts array to stdout ."}
{"id": 5485, "prediction": "Get the data pointer of the specified part ."}
{"id": 5486, "prediction": "Reads a DM_RFLT value from the file at the specified offset ."}
{"id": 5487, "prediction": "Reads a DM_RSTR from the file at the specified offset ."}
{"id": 5488, "prediction": "Returns an array with the number of packed records for a given DMPart and the values of the packed records ."}
{"id": 5489, "prediction": "Returns bits as a string ."}
{"id": 5490, "prediction": "Write to a channel ."}
{"id": 5491, "prediction": "Parse the base element ."}
{"id": 5492, "prediction": "Parse a Grid Element ."}
{"id": 5493, "prediction": "Parse the aliases of an element ."}
{"id": 5494, "prediction": "Decode a list of data descriptors ."}
{"id": 5495, "prediction": "Recursively replicates a set of data descriptors ."}
{"id": 5496, "prediction": "Get the dataset filename ."}
{"id": 5497, "prediction": "Gets the type of the file ."}
{"id": 5498, "prediction": "Returns true if a and b are approximatively equal using the absolute difference ."}
{"id": 5499, "prediction": "Returns true if this node references the given node ."}
{"id": 5500, "prediction": "Parses a string representation of a unit ."}
{"id": 5501, "prediction": "Probe an object ."}
{"id": 5502, "prediction": "Returns true if the given variable is tile ."}
{"id": 5503, "prediction": "Make the best coordinate from the complete coordinate ."}
{"id": 5504, "prediction": "Converts a LatLonRect into a projection rectangle ."}
{"id": 5505, "prediction": "Takes a list of logs and prints out a time series for each ."}
{"id": 5506, "prediction": "Make a map from a list of attributes ."}
{"id": 5507, "prediction": "Returns the value of this field as an Array object"}
{"id": 5508, "prediction": "Returns the numeric value at the given index or null if the index is out of bounds ."}
{"id": 5509, "prediction": "Write the CDL ."}
{"id": 5510, "prediction": "Sets the value of the attribute as a String ."}
{"id": 5511, "prediction": "Sets the attribute values ."}
{"id": 5512, "prediction": "Set the values of an Array ."}
{"id": 5513, "prediction": "Scans the current level of the catalog and creates the skeleton catalog ."}
{"id": 5514, "prediction": "Generate a catalog for a given ProxyDatasetHandler ."}
{"id": 5515, "prediction": "Schedules a write of a message ."}
{"id": 5516, "prediction": "Set the datatype for a given dataset"}
{"id": 5517, "prediction": "Create a new thredds dataset based on the data from the WMS . If the WMS is specified as a WMS URL the WMS URL is returned . If the WMS URL is specified as a standard URL the WMS URL is returned . If the WMS URL is specified as a standard URL the WMS URL is returned . If the WMS URL is specified as a standard URL the WMS URL is returned ."}
{"id": 5518, "prediction": "Jum exceeds ThreddsDatatype"}
{"id": 5519, "prediction": "Set the dataset to be displayed"}
{"id": 5520, "prediction": "Apply the Nimbus - L&F look - in the system menu to the UI . If the Nimbus - L&F look - in the system menu then the UI will be used . If the Nimbus - L&F look - in the system menu then the UI is used ."}
{"id": 5521, "prediction": "Create the UI and add it to the frame ."}
{"id": 5522, "prediction": "Make a name for the given list of coordinate axes ."}
{"id": 5523, "prediction": "Returns the lesser rank of the given coordinate axis ."}
{"id": 5524, "prediction": "Finds the axis with the specified type ."}
{"id": 5525, "prediction": "Get the ProjectionCT of this coordinate system ."}
{"id": 5526, "prediction": "Is geoXY boolean ."}
{"id": 5527, "prediction": "Returns true if the axis is regular ."}
{"id": 5528, "prediction": "Returns true if the set is a subset of the subset ."}
{"id": 5529, "prediction": "Checks to see if the list of coordinate axes are contained in the want axes ."}
{"id": 5530, "prediction": "Does this coordinate axis contain the given axis?"}
{"id": 5531, "prediction": "Returns whether or not the given domain contains any of the given dimensions ."}
{"id": 5532, "prediction": "Returns whether or not the list of axis types contains any of the specified axis types ."}
{"id": 5533, "prediction": "Checks if this geometry object contains a specific axis type ."}
{"id": 5534, "prediction": "Creates a clone of this node from the given map ."}
{"id": 5535, "prediction": "Returns the currently selected bean ."}
{"id": 5536, "prediction": "Return the currently selected beans ."}
{"id": 5537, "prediction": "Returns the currently selected cells in the jtable ."}
{"id": 5538, "prediction": "Set the selected bean ."}
{"id": 5539, "prediction": "Restore the column state to its original state ."}
{"id": 5540, "prediction": "Creates a UnknownUnit ."}
{"id": 5541, "prediction": "Closes the underlying stream ."}
{"id": 5542, "prediction": "Returns true if the given variable is an extra ."}
{"id": 5543, "prediction": "Returns true if the given variable is a coordinate ."}
{"id": 5544, "prediction": "Look for a coordinate axis ."}
{"id": 5545, "prediction": "Adds all data variables in the given table to the given list ."}
{"id": 5546, "prediction": "Add a parent join to the cursor s table ."}
{"id": 5547, "prediction": "Makes a StationFeature from a structure ."}
{"id": 5548, "prediction": "Create and return a new NodeMap for this Dataset ."}
{"id": 5549, "prediction": "Gets the factory with exceptions ."}
{"id": 5550, "prediction": "Returns a new SimpleUnit instance ."}
{"id": 5551, "prediction": "Create a unit ."}
{"id": 5552, "prediction": "Checks if the given unit strings are compatible with exceptions ."}
{"id": 5553, "prediction": "Return true if the given unit is compatible with the date reference ."}
{"id": 5554, "prediction": "Returns true if the given string is a time unit ."}
{"id": 5555, "prediction": "Returns the conversion factor between the given input unit and the given output unit ."}
{"id": 5556, "prediction": "Converts the given value to the given unit ."}
{"id": 5557, "prediction": "Return true if this is an unknown unit ."}
{"id": 5558, "prediction": "Get the value of this unit as a double ."}
{"id": 5559, "prediction": "Creates a new RelOpClause ."}
{"id": 5560, "prediction": "Create a new boolean clause for a given function ."}
{"id": 5561, "prediction": "Create a SubClause for a given function . The function can be used as a constraint clause ."}
{"id": 5562, "prediction": "Create a java . awt . image . BufferedImage from an Array ."}
{"id": 5563, "prediction": "Runs the crawl on the specified catalog object ."}
{"id": 5564, "prediction": "crawl a dataset and write the results to out ."}
{"id": 5565, "prediction": "Processes all datasets with access to a specified CatalogRef and writes the results to the specified out ."}
{"id": 5566, "prediction": "Gets the file or cache ."}
{"id": 5567, "prediction": "Gets an existing file or cache ."}
{"id": 5568, "prediction": "Set the debugLeaks flag ."}
{"id": 5569, "prediction": "Returns a list of all files sorted by name ."}
{"id": 5570, "prediction": "Close the file ."}
{"id": 5571, "prediction": "Sets the current file position ."}
{"id": 5572, "prediction": "Flush the buffer to the underlying file ."}
{"id": 5573, "prediction": "Reads a byte from the file ."}
{"id": 5574, "prediction": "Read a number of bytes from the stream ."}
{"id": 5575, "prediction": "Reads a four - byte integer from the stream at the given position ."}
{"id": 5576, "prediction": "Read a number of bytes from an array ."}
{"id": 5577, "prediction": "Read a long value from an array ."}
{"id": 5578, "prediction": "Reads a number of float values from the given floating point array ."}
{"id": 5579, "prediction": "Read n elements from the given double array starting at the given index ."}
{"id": 5580, "prediction": "Reads a string ."}
{"id": 5581, "prediction": "Reads a string with a maximum length ."}
{"id": 5582, "prediction": "Writes an array of boolean values to the underlying stream ."}
{"id": 5583, "prediction": "Writes a short array to the underlying stream ."}
{"id": 5584, "prediction": "Writes a range of characters to the underlying stream ."}
{"id": 5585, "prediction": "Writes n elements from the specified array starting from the specified index ."}
{"id": 5586, "prediction": "Writes a long array to the underlying stream ."}
{"id": 5587, "prediction": "Write a float array to the underlying stream ."}
{"id": 5588, "prediction": "Writes a double array to the underlying stream ."}
{"id": 5589, "prediction": "Writes a string to the stream ."}
{"id": 5590, "prediction": "Writes a portion of a char array ."}
{"id": 5591, "prediction": "Search forward to the end of the buffer ."}
{"id": 5592, "prediction": "Appends the Query part of the URL ."}
{"id": 5593, "prediction": "Create a new MCollection ."}
{"id": 5594, "prediction": "Finds the index ."}
{"id": 5595, "prediction": "Returns true if the partition is a leaf partition ."}
{"id": 5596, "prediction": "Constructs the children from an IndexReader"}
{"id": 5597, "prediction": "Scans the directory for children and adds them to the list of children ."}
{"id": 5598, "prediction": "Read files from index ."}
{"id": 5599, "prediction": "Gets the gridsets ."}
{"id": 5600, "prediction": "Acquire a file cacheable for a dataset ."}
{"id": 5601, "prediction": "Remove the specified CacheFile from the cache ."}
{"id": 5602, "prediction": "Remove an element from the cache ."}
{"id": 5603, "prediction": "Release the FileCacheable ."}
{"id": 5604, "prediction": "Returns a 4 - bit integer ."}
{"id": 5605, "prediction": "Update an element in the cache ."}
{"id": 5606, "prediction": "Clears all files from the cache ."}
{"id": 5607, "prediction": "Make a vertical transform for the given dataset ."}
{"id": 5608, "prediction": "Returns true if this is a global lon attribute ."}
{"id": 5609, "prediction": "Returns true if the vertification is positive ."}
{"id": 5610, "prediction": "Returns an array with the indices of the X axis and the Y axis ."}
{"id": 5611, "prediction": "Returns an array with the index of the x - axis and the index of the y - axis ."}
{"id": 5612, "prediction": "Returns an array with all coordinates of the specified lat lon pair in the specified result array ."}
{"id": 5613, "prediction": "Returns an array with the indices of all coordinates within the specified lat long bounds ."}
{"id": 5614, "prediction": "Get the position of the item in the arrow"}
{"id": 5615, "prediction": "Returns the item of the arrow at the specified pixel"}
{"id": 5616, "prediction": "Iterates over all the files in the collection and collects the attributes ."}
{"id": 5617, "prediction": "Sets the cancel task and updates the text area in background ."}
{"id": 5618, "prediction": "Returns the name of the sub center ."}
{"id": 5619, "prediction": "Convert a string representation to a CalendarPeriod . Field object ."}
{"id": 5620, "prediction": "Create a new CalendarPeriod with the specified value and field ."}
{"id": 5621, "prediction": "Creates a new CalendarPeriod instance by parsing a period string ."}
{"id": 5622, "prediction": "Subtracts a given date to this date ."}
{"id": 5623, "prediction": "Gets the conversion factor ."}
{"id": 5624, "prediction": "Gets the value in milliseconds ."}
{"id": 5625, "prediction": "Gets the offset ."}
{"id": 5626, "prediction": "Synchronously syncs the file to the file system ."}
{"id": 5627, "prediction": "Initialize the parameters for the tables ."}
{"id": 5628, "prediction": "Add a dataRootExt to the map and return true if it was added ."}
{"id": 5629, "prediction": "Searches for the longest path that matches the specified request path ."}
{"id": 5630, "prediction": "Find the data root for the specified path ."}
{"id": 5631, "prediction": "Converts a DataRootExt to a DataRoot"}
{"id": 5632, "prediction": "Returns a date range based on the given Calendar object . If the given Calendar object does not have a date range a date range will be returned . Otherwise a date range will be returned ."}
{"id": 5633, "prediction": "Takes a list of coordinates and returns the index of each coordinate in the list ."}
{"id": 5634, "prediction": "Create a new Net specified NC4 location with the specified version and chunker ."}
{"id": 5635, "prediction": "Add a new group with the specified name under the specified parent group ."}
{"id": 5636, "prediction": "Add a typedef to a group ."}
{"id": 5637, "prediction": "Delete an attribute from a Group ."}
{"id": 5638, "prediction": "Renames a group attribute ."}
{"id": 5639, "prediction": "Add a record variable ."}
{"id": 5640, "prediction": "Aborts and closes the swap ."}
{"id": 5641, "prediction": "Writes properties of an object to a print writer ."}
{"id": 5642, "prediction": "Extract data from a thredds dataset ."}
{"id": 5643, "prediction": "Divides one unit into another ."}
{"id": 5644, "prediction": "Converts this unit to a derived unit by adding the given amount ."}
{"id": 5645, "prediction": "Decode a derived unit amount ."}
{"id": 5646, "prediction": "Convert a nested variable into an array ."}
{"id": 5647, "prediction": "Convert a top - level array to a DAP 2 array ."}
{"id": 5648, "prediction": "Converts a DodsV into an Array ."}
{"id": 5649, "prediction": "Close all the databases ."}
{"id": 5650, "prediction": "Opens a new database ."}
{"id": 5651, "prediction": "Convert an int value to a joda time Period ."}
{"id": 5652, "prediction": "Ensures that the underlying String array has at least the given capacity ."}
{"id": 5653, "prediction": "Returns the value at the specified index in this StringArray ."}
{"id": 5654, "prediction": "Create a new InvCatalog for the given directory ."}
{"id": 5655, "prediction": "Create a new InvCatalog instance from a path and a base URI ."}
{"id": 5656, "prediction": "Gets the getCoordinateType attribute of the dataset . If the first dimension is a string then a DataType . DOUBLE is returned . If the second dimension is a double then a DataType . STRING is returned ."}
{"id": 5657, "prediction": "Creates a new instance of Grib2Pds using the specified template ."}
{"id": 5658, "prediction": "Calculates the time at the specified time ."}
{"id": 5659, "prediction": "Applies a scale factor to a given value ."}
{"id": 5660, "prediction": "Parses a single concept file ."}
{"id": 5661, "prediction": "Reads a concept file and adds it to the context ."}
{"id": 5662, "prediction": "Removes leading and trailing spaces and new line characters ."}
{"id": 5663, "prediction": "This method stores a parameter and value pair in the parameter table for the specified table version ."}
{"id": 5664, "prediction": "Write the specified Grib1 tables to the file system ."}
{"id": 5665, "prediction": "This method writes a lookup table file ."}
{"id": 5666, "prediction": "Shows the local concepts ."}
{"id": 5667, "prediction": "Main entry point for this example ."}
{"id": 5668, "prediction": "Returns the DatasetSourceType for the given name ."}
{"id": 5669, "prediction": "Expand the current catalog ."}
{"id": 5670, "prediction": "Expand a dataset in full mode ."}
{"id": 5671, "prediction": "Name all datasets in a dataset container ."}
{"id": 5672, "prediction": "Create a new and temporary dataset in which to hold named datasets ."}
{"id": 5673, "prediction": "Takes a dataset and tries to name it with its names ."}
{"id": 5674, "prediction": "Method that will load a photo from the given URL with a given rotation ."}
{"id": 5675, "prediction": "Stop loading except for the given URL ."}
{"id": 5676, "prediction": "Fire a sourceStatusChange event for a SourceImage ."}
{"id": 5677, "prediction": "Add a notification of a given status code ."}
{"id": 5678, "prediction": "Create a scaled picture in a thread ."}
{"id": 5679, "prediction": "Gets the scaled size ."}
{"id": 5680, "prediction": "Gets the scaled size as a string ."}
{"id": 5681, "prediction": "Gets the merged parts ."}
{"id": 5682, "prediction": "Creates the header for a given date and time ."}
{"id": 5683, "prediction": "Check for mandatory groups and check for optional parameter lists ."}
{"id": 5684, "prediction": "Checks for valid group ."}
{"id": 5685, "prediction": "Sets the root directory for the cache ."}
{"id": 5686, "prediction": "Create the root directory ."}
{"id": 5687, "prediction": "Method to get the cache file"}
{"id": 5688, "prediction": "Utility method to clean the cache files before cutoff ."}
{"id": 5689, "prediction": "Remove files with maxBytes bytes from the disk cache ."}
{"id": 5690, "prediction": "Returns true if the given short is aBufr table ."}
{"id": 5691, "prediction": "Factory method to create a coordinate - axis for a given dataset ."}
{"id": 5692, "prediction": "Create a copy of this coordinate axis with no cache ."}
{"id": 5693, "prediction": "Returns true if this field is a numeric field ."}
{"id": 5694, "prediction": "Returns a string representation of this dataset s info ."}
{"id": 5695, "prediction": "Gets the Calendar value from the CF attribute ."}
{"id": 5696, "prediction": "Set the list of rows ."}
{"id": 5697, "prediction": "Returns the currently selected row ."}
{"id": 5698, "prediction": "Increments the currently selected row ."}
{"id": 5699, "prediction": "Get the model index of the column"}
{"id": 5700, "prediction": "Set the selected index ."}
{"id": 5701, "prediction": "Sorts the specified array using the quick sort algorithm ."}
{"id": 5702, "prediction": "Swaps the elements at positions i and j with T ."}
{"id": 5703, "prediction": "Returns an existing MFileOS object with the given filename ."}
{"id": 5704, "prediction": "Rotates an array by a given rotation ."}
{"id": 5705, "prediction": "Create a new XMLStore instance from a file ."}
{"id": 5706, "prediction": "Create a new XMLStore object from two input streams ."}
{"id": 5707, "prediction": "Create a new XMLStore object from a resource path ."}
{"id": 5708, "prediction": "Makes a standard filename for the given app name and store name ."}
{"id": 5709, "prediction": "Saves the current prefs to the specified file ."}
{"id": 5710, "prediction": "Saves the preferences to an output stream ."}
{"id": 5711, "prediction": "Writes an atomic variable to the given stream ."}
{"id": 5712, "prediction": "Write a single instance of the DAP structure to the given writer ."}
{"id": 5713, "prediction": "Write a structure object to the stream dst ."}
{"id": 5714, "prediction": "Write sequence ."}
{"id": 5715, "prediction": "Write a record to dst ."}
{"id": 5716, "prediction": "Return true if the file is a valid bifurcated file ."}
{"id": 5717, "prediction": "Get the wmo ID ."}
{"id": 5718, "prediction": "Read a row of data from a data input stream ."}
{"id": 5719, "prediction": "Get the data at the given index ."}
{"id": 5720, "prediction": "Gets the data points directly from a file in Grib2Drs . Type 0 ."}
{"id": 5721, "prediction": "Gets the data points from a file ."}
{"id": 5722, "prediction": "Reads a single slice of a variable ."}
{"id": 5723, "prediction": "Create a new CFGrid file ."}
{"id": 5724, "prediction": "Make a file size estimate for a given grid dataset ."}
{"id": 5725, "prediction": "Generate a file with the specified parameters ."}
{"id": 5726, "prediction": "A list of StationUI s ."}
{"id": 5727, "prediction": "Selects a StationUI with the specified name ."}
{"id": 5728, "prediction": "Selects a station from the nearest point ."}
{"id": 5729, "prediction": "Selects a station which is closest to the given point ."}
{"id": 5730, "prediction": "Returns the currently selected Station ."}
{"id": 5731, "prediction": "Generate and return the file name for the specified projection type ."}
{"id": 5732, "prediction": "Get a list of stations in the provided bounding box ."}
{"id": 5733, "prediction": "Get a station by name ."}
{"id": 5734, "prediction": "Get the Station data iterator ."}
{"id": 5735, "prediction": "Get the data iterator for Station dates ."}
{"id": 5736, "prediction": "Reads data in the specified gate range from the specified file ."}
{"id": 5737, "prediction": "Computes the dot product of this vector with another vector ."}
{"id": 5738, "prediction": "Returns the Euclidean norm of this vector ."}
{"id": 5739, "prediction": "Normalize this vector ."}
{"id": 5740, "prediction": "Recursively sets the services for each DatasetBuilder ."}
{"id": 5741, "prediction": "Gets a parameter from the parameter table ."}
{"id": 5742, "prediction": "Gets a parameter from the parameter table ."}
{"id": 5743, "prediction": "Adds a new name to the prefix set ."}
{"id": 5744, "prediction": "Adds a new symbol and its value ."}
{"id": 5745, "prediction": "Gets the prefix ."}
{"id": 5746, "prediction": "Returns true if the email address is valid for the given source ."}
{"id": 5747, "prediction": "Returns the value of a parameter ."}
{"id": 5748, "prediction": "Calculates a CRC for the block ."}
{"id": 5749, "prediction": "Returns true if this packet is aThin packet ."}
{"id": 5750, "prediction": "Returns the index of the given field on the given object ."}
{"id": 5751, "prediction": "Returns a time type name for the specified time range indicator ."}
{"id": 5752, "prediction": "Gets the timeCoord ."}
{"id": 5753, "prediction": "Set the next polygon in the CFPolygon list ."}
{"id": 5754, "prediction": "Set the previous polygon in the CFPolygon list ."}
{"id": 5755, "prediction": "Finds a property by its name ."}
{"id": 5756, "prediction": "Set the current projection ."}
{"id": 5757, "prediction": "Calculates the subset from time axis ."}
{"id": 5758, "prediction": "Registers an IO provider by its fully qualified class name ."}
{"id": 5759, "prediction": "Register an IOProvider ."}
{"id": 5760, "prediction": "Attempts to register the given IOProvider as preferred for the given class ."}
{"id": 5761, "prediction": "Returns true if the class of the provider has already been registered ."}
{"id": 5762, "prediction": "De - registers the IOProvider with the specified class ."}
{"id": 5763, "prediction": "Returns true if the file can be opened in the given location ."}
{"id": 5764, "prediction": "Open an in memory file with the given name and type ."}
{"id": 5765, "prediction": "Open an in memory file ."}
{"id": 5766, "prediction": "Copy the contents of the given file to an in - memory file ."}
{"id": 5767, "prediction": "Opens the file for the given URI in memory ."}
{"id": 5768, "prediction": "Returns the global attribute with the given name ignoring case ."}
{"id": 5769, "prediction": "Converts to NcML ."}
{"id": 5770, "prediction": "Write the CDL ."}
{"id": 5771, "prediction": "Write a CDL block to the specified PrintWriter ."}
{"id": 5772, "prediction": "Writes a CDL statement ."}
{"id": 5773, "prediction": "Adds an attribute to a parent group . If the parent group is null its parent is set to the root group ."}
{"id": 5774, "prediction": "Adds an attribute to a group ."}
{"id": 5775, "prediction": "Adds the specified group as a child of the specified group . If the group s parent is null then the group is added to the root group ."}
{"id": 5776, "prediction": "Adds the specified dimension to the specified group and returns the result . If the group is null then its parent is the root group ."}
{"id": 5777, "prediction": "Remove the dimension of the given group . If the group is null then it is removed from the root group ."}
{"id": 5778, "prediction": "Adds a variable to a group ."}
{"id": 5779, "prediction": "Adds a new variable to this group ."}
{"id": 5780, "prediction": "Adds a new string variable to the specified group ."}
{"id": 5781, "prediction": "Removes a variable from the given group . If the group is null then it is removed from the root group ."}
{"id": 5782, "prediction": "Send a message to the SPI server ."}
{"id": 5783, "prediction": "Makes the record structure for this IOSP instance ."}
{"id": 5784, "prediction": "Finish the current group and clean up all internal variables and dimensions ."}
{"id": 5785, "prediction": "Reads a variable section from this file ."}
{"id": 5786, "prediction": "Reads a value into a byte channel ."}
{"id": 5787, "prediction": "Reads a list of arrays ."}
{"id": 5788, "prediction": "Reads aNetdfFile into an Array object ."}
{"id": 5789, "prediction": "Returns the full name of the node including its parent group and the qualified name ."}
{"id": 5790, "prediction": "Returns the full name of the path with the given name escaped if needed ."}
{"id": 5791, "prediction": "Returns true if the mfile should be included ."}
{"id": 5792, "prediction": "Return true if the mfile should be excluded ."}
{"id": 5793, "prediction": "Returns true if the mfile matches the andFilters parameter ."}
{"id": 5794, "prediction": "Append a value to this vector ."}
{"id": 5795, "prediction": "Check a String value to see if it is valid"}
{"id": 5796, "prediction": "Makes sure that the given value is a valid value for an attribute type ."}
{"id": 5797, "prediction": "Check a String to see if it is a Byte value ."}
{"id": 5798, "prediction": "Checks if a string is a valid short value ."}
{"id": 5799, "prediction": "Utility method to check if a string is an integer ."}
{"id": 5800, "prediction": "Check if a String is a valid unsigned integer ."}
{"id": 5801, "prediction": "Checks if the specified string is a float value ."}
{"id": 5802, "prediction": "Checks if a string is a valid double ."}
{"id": 5803, "prediction": "Get data type for an attribute ."}
{"id": 5804, "prediction": "Return true if the given Dataset is viewable ."}
{"id": 5805, "prediction": "Checks if a given string is a valid boolean string ."}
{"id": 5806, "prediction": "Returns true if the given string is a valid alphanumeric string false otherwise ."}
{"id": 5807, "prediction": "Returns true if all characters in constrainedSet are valid for alphanUM string ."}
{"id": 5808, "prediction": "Decide only the file path ."}
{"id": 5809, "prediction": "Converts a Unicode code point to a Unicode string representation ."}
{"id": 5810, "prediction": "Get the parameter value for a given key . If the key does not exist the default value is returned ."}
{"id": 5811, "prediction": "Compares two records ."}
{"id": 5812, "prediction": "Reads all data from the stream until the end of the stream is reached ."}
{"id": 5813, "prediction": "readBUFR messages from the input stream"}
{"id": 5814, "prediction": "Removes double quotes from a string ."}
{"id": 5815, "prediction": "Mark a stack of variables as marked by the compiler ."}
{"id": 5816, "prediction": "Writes a NcML dataset to the file system ."}
{"id": 5817, "prediction": "Gets the value from the Thredds config ."}
{"id": 5818, "prediction": "Returns a CDL - formatted string representation of this object ."}
{"id": 5819, "prediction": "This method creates a StationHelper object which contains a list of all the stations ."}
{"id": 5820, "prediction": "Validates this ResultService based on the passed in String builder ."}
{"id": 5821, "prediction": "Gets the azimuth of the message ."}
{"id": 5822, "prediction": "Gets the elevation of the message ."}
{"id": 5823, "prediction": "Gets the latitude and longitude of the ASIB ."}
{"id": 5824, "prediction": "Returns an array of all the lons at this location ."}
{"id": 5825, "prediction": "Returns the degrees ofAltitude if any ."}
{"id": 5826, "prediction": "Gets the azimuths ."}
{"id": 5827, "prediction": "Gets the elevations for this day ."}
{"id": 5828, "prediction": "Selects the structure with the given member names ."}
{"id": 5829, "prediction": "Selects the structure with the given variable name ."}
{"id": 5830, "prediction": "Adds a new member variable to this structure ."}
{"id": 5831, "prediction": "Sets the member variables to the given list ."}
{"id": 5832, "prediction": "Sets the parent group ."}
{"id": 5833, "prediction": "Calculates the element size of all variables ."}
{"id": 5834, "prediction": "Reads the structure at the specified index and returns it ."}
{"id": 5835, "prediction": "Read an array structure from the file ."}
{"id": 5836, "prediction": "Get an iterator over the Structure data ."}
{"id": 5837, "prediction": "Gets the data category for a given category ."}
{"id": 5838, "prediction": "Gets the class name ."}
{"id": 5839, "prediction": "Add a parameter to the manifest ."}
{"id": 5840, "prediction": "Get the name class and parameters header as a string ."}
{"id": 5841, "prediction": "Converts a LatLonRect to a bounding box 2D rectangle ."}
{"id": 5842, "prediction": "Returns the version of the specifiedConvName or - 1 if it doesn t exist ."}
{"id": 5843, "prediction": "Convert from Millibar to CF . POSITIVE_UP"}
{"id": 5844, "prediction": "Deletes the file and removes it from the list ."}
{"id": 5845, "prediction": "Set the new min and max values for the color scale"}
{"id": 5846, "prediction": "Render the plan view ."}
{"id": 5847, "prediction": "Returns true if the specified group is a child of the specified group ."}
{"id": 5848, "prediction": "Returns the corresponding MessageType for the given name ."}
{"id": 5849, "prediction": "Installs the renderers in all columns of the given table with the specified alignment ."}
{"id": 5850, "prediction": "Sets the API key and secret for the builder ."}
{"id": 5851, "prediction": "Returns a new label with the given value ."}
{"id": 5852, "prediction": "Creates a new label based on the given lines ."}
{"id": 5853, "prediction": "Generates a new label with the given text as its HTML representation ."}
{"id": 5854, "prediction": "Connects to the specified Cloud SQL instance via a Unix socket ."}
{"id": 5855, "prediction": "Get a list of available IP types ."}
{"id": 5856, "prediction": "Connects to the Doradus server using the specified port number and properties ."}
{"id": 5857, "prediction": "Removes a logger if it exists ."}
{"id": 5858, "prediction": "Attempts to compile all of the source code ."}
{"id": 5859, "prediction": "Compiles a single class from source code ."}
{"id": 5860, "prediction": "Adds a source code to the compiler ."}
{"id": 5861, "prediction": "ReadsGraphicControlExt Method ."}
{"id": 5862, "prediction": "Returns the next frame from the Color Table ."}
{"id": 5863, "prediction": "Returns a SelectableStringList that contains the name of the first and last name of the person . If the person does not exist a SelectableStringList is created ."}
{"id": 5864, "prediction": "Initialize the list change listener ."}
{"id": 5865, "prediction": "Gets the person with the specified id ."}
{"id": 5866, "prediction": "Adds a validator to the internal list of messages ."}
{"id": 5867, "prediction": "Sets the person id ."}
{"id": 5868, "prediction": "Creates a new view model and passes it to the provided consumer . If no view can be created a RuntimeException is thrown ."}
{"id": 5869, "prediction": "Attempts to create an instance of the given view type ."}
{"id": 5870, "prediction": "Loads the country list from the file ISO 3166_LOCATION ."}
{"id": 5871, "prediction": "Loads the list of available subdivisions ."}
{"id": 5872, "prediction": "Adds a StringProperty to this bean where the value of the property is changed ."}
{"id": 5873, "prediction": "Returns an immutable StringProperty where the value of the given StringGetter is different from the value of the given StringSetter ."}
{"id": 5874, "prediction": "Create a new step representing a JavaView of the specified type ."}
{"id": 5875, "prediction": "Returns a new step that creates a new view of the specified type ."}
{"id": 5876, "prediction": "Clears all entries in the map ."}
{"id": 5877, "prediction": "Creates the event listeners ."}
{"id": 5878, "prediction": "Attempts to access the given callable from the given member ."}
{"id": 5879, "prediction": "Loads theTuple for the specified view type ."}
{"id": 5880, "prediction": "Creates the fxml path from the view type ."}
{"id": 5881, "prediction": "Query for a style row from a style mapping row"}
{"id": 5882, "prediction": "Get the pixel value from the image"}
{"id": 5883, "prediction": "Get the pixel values from the image ."}
{"id": 5884, "prediction": "Validate the image type"}
{"id": 5885, "prediction": "Create a coverage data image from a tile size"}
{"id": 5886, "prediction": "Set the tile data from a bitmap ."}
{"id": 5887, "prediction": "Perform a raw query on the database ."}
{"id": 5888, "prediction": "Wraps a query and returns a cursor result ."}
{"id": 5889, "prediction": "Executes the query and returns the result ."}
{"id": 5890, "prediction": "Query the database using a user query ."}
{"id": 5891, "prediction": "Handles a cursor by setting the query and table ."}
{"id": 5892, "prediction": "Get the feature row for the given geometry index"}
{"id": 5893, "prediction": "Register a GeoPackage cursor wrapper for a table"}
{"id": 5894, "prediction": "Get the tile row for the given x y and zoom"}
{"id": 5895, "prediction": "Get the coverage data"}
{"id": 5896, "prediction": "Get the coverage data from the GeoPackage"}
{"id": 5897, "prediction": "Get the coverage data for the GeoPackage"}
{"id": 5898, "prediction": "Get the coverage data tile results for the requested bounding box and overlapping pixels"}
{"id": 5899, "prediction": "Get the coverage data tile results for the specified tile matrix"}
{"id": 5900, "prediction": "Get the coverage data tile results for the specified tile matrix"}
{"id": 5901, "prediction": "Get the results for the specified tile matrix and overlapping pixels"}
{"id": 5902, "prediction": "Get the tile matrix based on the coverage data bounding box"}
{"id": 5903, "prediction": "Get the value of the tile at the specified location ."}
{"id": 5904, "prediction": "Set the icon for the geometry type"}
{"id": 5905, "prediction": "Get the icon for the geometry type"}
{"id": 5906, "prediction": "Attempts to open or get a SQLite database ."}
{"id": 5907, "prediction": "Create a bitmap from a byte array ."}
{"id": 5908, "prediction": "Compress the bitmap to a byte array ."}
{"id": 5909, "prediction": "Add the table metadata to the GeoPackage"}
{"id": 5910, "prediction": "Delete the table metadata for the specified GeoPackage and table ."}
{"id": 5911, "prediction": "Get the table metadata or create it if it doesn t exist"}
{"id": 5912, "prediction": "Get the id of a GeoPackage metadata"}
{"id": 5913, "prediction": "Create a table metadata instance from a cursor ."}
{"id": 5914, "prediction": "Create the extensions ."}
{"id": 5915, "prediction": "Get the feature row from the index table ."}
{"id": 5916, "prediction": "Perform a raw query on the RTree ."}
{"id": 5917, "prediction": "Query for features within the bounding box in the provided projection"}
{"id": 5918, "prediction": "Query for rows within the geometry envelope"}
{"id": 5919, "prediction": "Count the number of points within a given envelope"}
{"id": 5920, "prediction": "Query for rows within the specified bounds ."}
{"id": 5921, "prediction": "Builds the where columns need to be included ."}
{"id": 5922, "prediction": "Query for features within the bounding box in the provided projection"}
{"id": 5923, "prediction": "Count the number of features in the bounding box in the provided projection"}
{"id": 5924, "prediction": "Query for features within the given envelope ."}
{"id": 5925, "prediction": "Query for features within the specified bounding box ."}
{"id": 5926, "prediction": "Count the number of rows within the specified bounds ."}
{"id": 5927, "prediction": "Set the data from a bitmap with CompressFormat ."}
{"id": 5928, "prediction": "Set the data of a bitmap with a specific format and quality ."}
{"id": 5929, "prediction": "Set the compression configuration for the bitmap ."}
{"id": 5930, "prediction": "Get the total number of tiles in the current projection"}
{"id": 5931, "prediction": "Adjust the WGS84 bounding box and the zoom level for the provided bounding box"}
{"id": 5932, "prediction": "Adjust the WGS84 bounding box to be the world bounding box"}
{"id": 5933, "prediction": "Adjust the WGS84 bounding box to fit the tile grid and zoom level to fit the tile grid"}
{"id": 5934, "prediction": "Adjust the GeoPackage bounds based on the tile grid and the zoom level"}
{"id": 5935, "prediction": "Get the bounding box of the tile at the provided zoom level"}
{"id": 5936, "prediction": "Get the tile grid for the given zoom level"}
{"id": 5937, "prediction": "Query for a tile row by column row and zoom level"}
{"id": 5938, "prediction": "Query for the tile description at the given zoom level"}
{"id": 5939, "prediction": "Get the closest zoom level for the given length"}
{"id": 5940, "prediction": "Get the approximate zoom level for a given length"}
{"id": 5941, "prediction": "Query for the tile grid for the given zoom level"}
{"id": 5942, "prediction": "Delete the tile with the specified row and zoom level"}
{"id": 5943, "prediction": "Get the count of the tile at the zoom level"}
{"id": 5944, "prediction": "Returns true if the bounding box contains at least one Google tiles false otherwise ."}
{"id": 5945, "prediction": "Gets the pixel value from the TIFF image ."}
{"id": 5946, "prediction": "Gets the pixel values from the TIFF image ."}
{"id": 5947, "prediction": "Validate the image type"}
{"id": 5948, "prediction": "Creates a coverage data tiff image ."}
{"id": 5949, "prediction": "Set the pixel value in the coverage data tiff image"}
{"id": 5950, "prediction": "Get or open a GeoPackage ."}
{"id": 5951, "prediction": "Returns the current row in the table ."}
{"id": 5952, "prediction": "Move the cursor to the next invalid position"}
{"id": 5953, "prediction": "Query for style mappings by base feature id"}
{"id": 5954, "prediction": "Delete a style by base id"}
{"id": 5955, "prediction": "Get a rectangle with the specified width height bounding box and bounding box section within the outer box to build the rectangle from"}
{"id": 5956, "prediction": "Get a rectangle with rounded floating point boundaries using the bounding box and the bounding box section within the outer box to build the rectangle from"}
{"id": 5957, "prediction": "Removes all databases not found in the list ."}
{"id": 5958, "prediction": "Create the GeoPackage and close the GeoPackage"}
{"id": 5959, "prediction": "Check if a GeoPackage database is valid"}
{"id": 5960, "prediction": "Validate database and close on error ."}
{"id": 5961, "prediction": "Validates a SQLiteDatabase and closes it ."}
{"id": 5962, "prediction": "Validate a SQLite database ."}
{"id": 5963, "prediction": "Validate the GeoPackage SQLite header"}
{"id": 5964, "prediction": "Check if the database header is a valid SQLITE header"}
{"id": 5965, "prediction": "Add the list of internal databases to the context ."}
{"id": 5966, "prediction": "Adds any external databases that are not already present in the cache ."}
{"id": 5967, "prediction": "Imports a GeoPackage from a GeoPackage stream"}
{"id": 5968, "prediction": "Get the GeoPackage metadata"}
{"id": 5969, "prediction": "Get the GeoPackageMetadata at the external path"}
{"id": 5970, "prediction": "Create a new table for the given geometry metadata"}
{"id": 5971, "prediction": "Populate a geometry metadata object from an envelope"}
{"id": 5972, "prediction": "Delete the geometry meta data for the specified GeoPackage"}
{"id": 5973, "prediction": "Creates or updates the geometry with the given metadata ."}
{"id": 5974, "prediction": "Update the table column with the given metadata"}
{"id": 5975, "prediction": "Count the number of rows in the GeoPackage for the table and bounding box"}
{"id": 5976, "prediction": "Create a geometry metadata object ."}
{"id": 5977, "prediction": "Update the table with the given values"}
{"id": 5978, "prediction": "Draw a tile with the specified text ."}
{"id": 5979, "prediction": "Get a list of SimpleAttributesRow objects from a list of ids"}
{"id": 5980, "prediction": "Checks to see if the cursor is integrity - check and close it if so ."}
{"id": 5981, "prediction": "Get a UserMappingDao"}
{"id": 5982, "prediction": "Returns a SimpleAttributesDao that can be used to retrieve the attributes from the specified table ."}
{"id": 5983, "prediction": "Gets theappings for the base with the given id ."}
{"id": 5984, "prediction": "Gets the mappings for the given related id from the given extended relation ."}
{"id": 5985, "prediction": "Check if the base id and related id has a mapping"}
{"id": 5986, "prediction": "Gets the count of the cursor ."}
{"id": 5987, "prediction": "Register a cursor wrapper for the table in the GeoPackage"}
{"id": 5988, "prediction": "Read the table and return a UserCustomDao instance ."}
{"id": 5989, "prediction": "Get the tile from the request bounding box"}
{"id": 5990, "prediction": "Draw a tile from a list of tile results"}
{"id": 5991, "prediction": "Reproject the tile to the requested projection"}
{"id": 5992, "prediction": "Get the tile results by Querying the tile grid and tile matrix"}
{"id": 5993, "prediction": "Calculates the overlap between the width and height of the pointIcon and the linePaint ."}
{"id": 5994, "prediction": "Set the density ."}
{"id": 5995, "prediction": "Sets the paint that will be used to draw the line ."}
{"id": 5996, "prediction": "Set the polygon paint with the stroke width ."}
{"id": 5997, "prediction": "Draw the tile as bytes at the x y and zoom level"}
{"id": 5998, "prediction": "Draw a tile at the x y and zoom level ."}
{"id": 5999, "prediction": "Draw the tile from the x y and zoom level using the feature index query"}
{"id": 6000, "prediction": "Query for feature results in the x y and zoom"}
{"id": 6001, "prediction": "Query for feature results in the bounding box"}
{"id": 6002, "prediction": "Query for feature results in the x y and zoom"}
{"id": 6003, "prediction": "Query for feature results in the bounding box"}
{"id": 6004, "prediction": "Draw the tile using a tile query for all features"}
{"id": 6005, "prediction": "Simplifies a list of points with the given simplify tolerance ."}
{"id": 6006, "prediction": "Get the paint for the point based on the feature style ."}
{"id": 6007, "prediction": "Get the line paint for the feature style ."}
{"id": 6008, "prediction": "Get the polygon paint for the feature style ."}
{"id": 6009, "prediction": "Get the polygon fill paint for the feature style"}
{"id": 6010, "prediction": "Get the paint for the feature style"}
{"id": 6011, "prediction": "Get the style paint from the cache or create a new one"}
{"id": 6012, "prediction": "Get the paint for a style row"}
{"id": 6013, "prediction": "Get the paint for the style with the given id and FeatureDrawType"}
{"id": 6014, "prediction": "Puts a bitmap for an icon row ."}
{"id": 6015, "prediction": "Create a bitmap for an icon ."}
{"id": 6016, "prediction": "Wraps all values in a ContentValues so that they can be quoted ."}
{"id": 6017, "prediction": "Create a bitmap for all layers ."}
{"id": 6018, "prediction": "Recycles the layered canvas ."}
{"id": 6019, "prediction": "Get the bitmap for the layer index"}
{"id": 6020, "prediction": "Get the canvas for the layer index ."}
{"id": 6021, "prediction": "Create a bitmap and canvas ."}
{"id": 6022, "prediction": "Get the style mapping dao"}
{"id": 6023, "prediction": "Get the Style DAO"}
{"id": 6024, "prediction": "Get the IconDao"}
{"id": 6025, "prediction": "Get the feature table s styles and icons from a feature table ."}
{"id": 6026, "prediction": "Get the styles for the feature table"}
{"id": 6027, "prediction": "Get the table style for the feature table and geometry type"}
{"id": 6028, "prediction": "Gets the table icons for a feature table ."}
{"id": 6029, "prediction": "Get the icon for the feature table and geometry type"}
{"id": 6030, "prediction": "Get the style of the feature row"}
{"id": 6031, "prediction": "Get the styles for a feature table and feature id"}
{"id": 6032, "prediction": "Get the styles for the given feature row"}
{"id": 6033, "prediction": "Get the getIcons for the FeatureRow"}
{"id": 6034, "prediction": "Get the styles for the feature"}
{"id": 6035, "prediction": "Get the icons for the feature"}
{"id": 6036, "prediction": "Set the table feature styles"}
{"id": 6037, "prediction": "Sets the table styles for the feature table ."}
{"id": 6038, "prediction": "Set the table icons for the feature table"}
{"id": 6039, "prediction": "Set the feature styles for the feature row"}
{"id": 6040, "prediction": "Set or delete the feature styles for the feature table and feature id"}
{"id": 6041, "prediction": "Set the styles for the feature row"}
{"id": 6042, "prediction": "Set the styles for a feature table and feature id"}
{"id": 6043, "prediction": "Set the style for the feature row"}
{"id": 6044, "prediction": "Set the default style for the feature row"}
{"id": 6045, "prediction": "Apply a default style for the feature table and feature id ."}
{"id": 6046, "prediction": "Set the icons for a feature row ."}
{"id": 6047, "prediction": "Set the icons for a feature table and feature id"}
{"id": 6048, "prediction": "Set the icon for the feature row"}
{"id": 6049, "prediction": "Set the default icon for the feature row"}
{"id": 6050, "prediction": "Set the feature icon as the default for the feature table and feature id"}
{"id": 6051, "prediction": "Get the style id or create it if it does not exist ."}
{"id": 6052, "prediction": "Get the icon id or create it if it does not exist ."}
{"id": 6053, "prediction": "Insert a style mapping row into the style mapping table ."}
{"id": 6054, "prediction": "Delete the feature table style mapping"}
{"id": 6055, "prediction": "Delete the icon mapping for the feature table and geometry type"}
{"id": 6056, "prediction": "Delete feature table mappings"}
{"id": 6057, "prediction": "Delete the feature table mapping"}
{"id": 6058, "prediction": "Delete the mapping for the feature id and geometry type"}
{"id": 6059, "prediction": "Get all table style ids"}
{"id": 6060, "prediction": "Get all table icon ids for the feature table"}
{"id": 6061, "prediction": "Get all style ids for the feature table"}
{"id": 6062, "prediction": "Get all icon ids for the feature table"}
{"id": 6063, "prediction": "Gets the image bytes ."}
{"id": 6064, "prediction": "Flushes the output stream and closes it ."}
{"id": 6065, "prediction": "Get the pixel at the given x and y"}
{"id": 6066, "prediction": "Reads the pixels from the image ."}
{"id": 6067, "prediction": "Draw the feature"}
{"id": 6068, "prediction": "Draw a path on the canvas ."}
{"id": 6069, "prediction": "Draw a polygon path on the canvas ."}
{"id": 6070, "prediction": "Add a line string to the path"}
{"id": 6071, "prediction": "Add a polygon to the bounding box ."}
{"id": 6072, "prediction": "Get the cache for the specified table . If the cache doesn t exist it will be created ."}
{"id": 6073, "prediction": "Remove the feature row from the table ."}
{"id": 6074, "prediction": "Clear all caches and resize with the specified maximum size ."}
{"id": 6075, "prediction": "Get the cached styles for this table ."}
{"id": 6076, "prediction": "Gets the cached table icons ."}
{"id": 6077, "prediction": "Get the RTree Index Table DAO for the Feature DAO"}
{"id": 6078, "prediction": "Set the width of the map"}
{"id": 6079, "prediction": "Set the height of the map"}
{"id": 6080, "prediction": "Returns the derived width and height of the image ."}
{"id": 6081, "prediction": "Returns the density of the tile ."}
{"id": 6082, "prediction": "Reads a blob value from the table ."}
{"id": 6083, "prediction": "Read a custom table from a GeoPackage connection"}
{"id": 6084, "prediction": "Gets the current color or creates a new one ."}
{"id": 6085, "prediction": "Validate the color is valid"}
{"id": 6086, "prediction": "Create a color object from a hex color and an opacity ."}
{"id": 6087, "prediction": "Get the GeoPackageManager"}
{"id": 6088, "prediction": "Set the progress for the feature table and the tree table DAO"}
{"id": 6089, "prediction": "Returns the current index count for the specified list of feature types or the default count if not specified ."}
{"id": 6090, "prediction": "Index a list of feature row for a list of types ."}
{"id": 6091, "prediction": "Delete a collection of feature index types ."}
{"id": 6092, "prediction": "Delete the index for the given row and the list of types ."}
{"id": 6093, "prediction": "Deletes the index for the given geomId and list of feature index types ."}
{"id": 6094, "prediction": "Delete the feature table index"}
{"id": 6095, "prediction": "Is this feature indexed in the query order?"}
{"id": 6096, "prediction": "Gets all indexed types ."}
{"id": 6097, "prediction": "Query for all feature index results"}
{"id": 6098, "prediction": "Count the features in the index ."}
{"id": 6099, "prediction": "Get the bounding box for this feature table"}
{"id": 6100, "prediction": "Query for feature index results within the bounding box"}
{"id": 6101, "prediction": "Gets the indexed type ."}
{"id": 6102, "prediction": "Gets the internal file ."}
{"id": 6103, "prediction": "Gets internal file path ."}
{"id": 6104, "prediction": "Gets the geometry type ."}
{"id": 6105, "prediction": "Set the geometry type ."}
{"id": 6106, "prediction": "Checks if the url contains a bounding box"}
{"id": 6107, "prediction": "Replace x y z in the url"}
{"id": 6108, "prediction": "Checks to see if the given url is actually part of another url ."}
{"id": 6109, "prediction": "Replaces the url bounding box in the provided projection with the provided bounding box in the provided coordinates ."}
{"id": 6110, "prediction": "Replace the url parts with the bounding box"}
{"id": 6111, "prediction": "Get the geometry data"}
{"id": 6112, "prediction": "Index a feature row"}
{"id": 6113, "prediction": "Update the last indexed time"}
{"id": 6114, "prediction": "Delete index ."}
{"id": 6115, "prediction": "Delete the index for the given geomId"}
{"id": 6116, "prediction": "Returns true if the feature has been indexed"}
{"id": 6117, "prediction": "Query for geometry metadata"}
{"id": 6118, "prediction": "Query for rows within the bounding box"}
{"id": 6119, "prediction": "Get the number of features in the bounding box"}
{"id": 6120, "prediction": "Query for Geometry Envelope"}
{"id": 6121, "prediction": "Get the count of Geometry Envelope"}
{"id": 6122, "prediction": "Query the feature bounding box in the provided projection"}
{"id": 6123, "prediction": "Get the count of feature bounding box in the provided projection"}
{"id": 6124, "prediction": "Get the feature bounding box in the provided projection"}
{"id": 6125, "prediction": "Get the geometry metadata for a cursor ."}
{"id": 6126, "prediction": "Get a feature row from a cursor ."}
{"id": 6127, "prediction": "Get the feature row for the given geometry metadata"}
{"id": 6128, "prediction": "Get the tile DAOs for the feature table"}
{"id": 6129, "prediction": "Get the Feature DAO for the tile table"}
{"id": 6130, "prediction": "Get the bounding box from the feature tiles bounding box and the projection"}
{"id": 6131, "prediction": "Query by both base id and related id"}
{"id": 6132, "prediction": "Returns a list of unique base ids from the table"}
{"id": 6133, "prediction": "Return a list of unique related ids"}
{"id": 6134, "prediction": "Delete by base id"}
{"id": 6135, "prediction": "Delete by related id"}
{"id": 6136, "prediction": "Delete rows with the given base id and related id"}
{"id": 6137, "prediction": "Builds a SQL WHERE clause to retrieve the ids of the base and related ids ."}
{"id": 6138, "prediction": "Create a GeoPackage metadata record"}
{"id": 6139, "prediction": "Delete the metadata for the database"}
{"id": 6140, "prediction": "Rename the metadata object"}
{"id": 6141, "prediction": "Rename the column name"}
{"id": 6142, "prediction": "Get all metadata"}
{"id": 6143, "prediction": "Get the metadata for the database"}
{"id": 6144, "prediction": "Get the metadata for the id"}
{"id": 6145, "prediction": "Get or create the metadata object if it doesn t exist"}
{"id": 6146, "prediction": "Check if the database is external"}
{"id": 6147, "prediction": "Get the metadata for an external path"}
{"id": 6148, "prediction": "Get the metadata rows where the column name is like the like"}
{"id": 6149, "prediction": "Get the metadata where name is not like the sort column"}
{"id": 6150, "prediction": "Get the metadata column names like ? or notLike"}
{"id": 6151, "prediction": "Create a GeoPackageMetadata object from a cursor"}
{"id": 6152, "prediction": "Handles the creation of a view ."}
{"id": 6153, "prediction": "Adds a par content view to the list of views on the specified page ."}
{"id": 6154, "prediction": "This method is called when a view is created . It tries to inflate the base class . If that fails it tries to inflate the base class ."}
{"id": 6155, "prediction": "Internal method to create a custom view ."}
{"id": 6156, "prediction": "Append an event to the specified callback ."}
{"id": 6157, "prediction": "Tries to find the configuration file from the system properties ."}
{"id": 6158, "prediction": "Returns the URL of the resource with the given filename in the given class loader ."}
{"id": 6159, "prediction": "Automatic config ."}
{"id": 6160, "prediction": "Show the status of a given resource ."}
{"id": 6161, "prediction": "Returns the socket address as a string ."}
{"id": 6162, "prediction": "Creates a new executor service that will use the default thread pool to create tasks ."}
{"id": 6163, "prediction": "Starts all converters starting from the head of the list ."}
{"id": 6164, "prediction": "Appends the given event to the currently active file ."}
{"id": 6165, "prediction": "Add a value to the map . If the value is null the key is ignored ."}
{"id": 6166, "prediction": "Returns the value for the given key ."}
{"id": 6167, "prediction": "Runs the compiler on the given node ."}
{"id": 6168, "prediction": "Returns the next node in the scan ."}
{"id": 6169, "prediction": "Advances to the next token ."}
{"id": 6170, "prediction": "Escapes the special characters ."}
{"id": 6171, "prediction": "Generate regular expression for a fixed date ."}
{"id": 6172, "prediction": "The main entry point for this class ."}
{"id": 6173, "prediction": "This method is called at the end of a call to the evaluate method ."}
{"id": 6174, "prediction": "Initialize with a default LoggerContext and a key ."}
{"id": 6175, "prediction": "Attempts to create a new ContextSelector from the given string ."}
{"id": 6176, "prediction": "Set up the properties ."}
{"id": 6177, "prediction": "Returns the path of the external storage directory ."}
{"id": 6178, "prediction": "Gets the path to the database directory ."}
{"id": 6179, "prediction": "Gets an absolute path for a file name ."}
{"id": 6180, "prediction": "Evaluates the log level of the given logging event ."}
{"id": 6181, "prediction": "Get the value associated with the key from the logging event ."}
{"id": 6182, "prediction": "Update the mask if necessary ."}
{"id": 6183, "prediction": "Returns the chain decision of the given event ."}
{"id": 6184, "prediction": "Creates the key managers from the key store ."}
{"id": 6185, "prediction": "Creates the trust managers ."}
{"id": 6186, "prediction": "Creates a key store based on system properties ."}
{"id": 6187, "prediction": "Gets the location from a system property ."}
{"id": 6188, "prediction": "Returns the URL of the given location ."}
{"id": 6189, "prediction": "chainHandlesThrowable to ensure that only one conversion can be done at a time ."}
{"id": 6190, "prediction": "Stops the context manager and cleans up all associated resources ."}
{"id": 6191, "prediction": "Print error messages or warnings for the given context ."}
{"id": 6192, "prediction": "Print error message if context has no status manager"}
{"id": 6193, "prediction": "Prints a context s status to the status manager ."}
{"id": 6194, "prediction": "Handles the first line of a throwable ."}
{"id": 6195, "prediction": "Gets an entry from either the live map or the lingerers map ."}
{"id": 6196, "prediction": "Removes an entry from the live map and adds it to the map ."}
{"id": 6197, "prediction": "Returns a FormatInfo instance for the specified string ."}
{"id": 6198, "prediction": "Renames the specified source file to the specified target ."}
{"id": 6199, "prediction": "Returns whether or not the source file and the target file exist on the same path ."}
{"id": 6200, "prediction": "Gets the value of an environment variable ."}
{"id": 6201, "prediction": "Gets an Android system property by its key ."}
{"id": 6202, "prediction": "Set the value of the MDCPropertyMap property ."}
{"id": 6203, "prediction": "Returns the MDC for each key - value pair in the given map ."}
{"id": 6204, "prediction": "Extract the caller data for the given exception ."}
{"id": 6205, "prediction": "Checks if the current class is in the framework space list"}
{"id": 6206, "prediction": "Add a status to the status list ."}
{"id": 6207, "prediction": "Add a StatusListener to the status listener list ."}
{"id": 6208, "prediction": "Look up the implicit action for a given element path and attributes ."}
{"id": 6209, "prediction": "Returns a list of actions applicable to the given element path ."}
{"id": 6210, "prediction": "Set the class loader"}
{"id": 6211, "prediction": "Returns the value for the specified key from the system properties . If the key does not exist the default value is returned ."}
{"id": 6212, "prediction": "Returns a boolean property value or the default if the property is not set ."}
{"id": 6213, "prediction": "Decapitalizes a class name ."}
{"id": 6214, "prediction": "Returns an array of method descriptors for the specified class ."}
{"id": 6215, "prediction": "Returns an array of PropertyDescriptors for the specified class ."}
{"id": 6216, "prediction": "Starts the appender ."}
{"id": 6217, "prediction": "Add a new OnConsoleStatusListener instance to the status manager ."}
{"id": 6218, "prediction": "End property definer ."}
{"id": 6219, "prediction": "Determines the getDiscriminate value for a logging event ."}
{"id": 6220, "prediction": "Returns whether or not the logging event is discardable ."}
{"id": 6221, "prediction": "Adds information about the shutdown hook ."}
{"id": 6222, "prediction": "Ends the hook and registers the shutdown hook ."}
{"id": 6223, "prediction": "Get the list of enabled protocols ."}
{"id": 6224, "prediction": "Enable or disable a set of cipher suite names ."}
{"id": 6225, "prediction": "Returns the included and excluded strings from an array of strings ."}
{"id": 6226, "prediction": "Convert a string representation of a scope to a Scope enum ."}
{"id": 6227, "prediction": "Set properties on an InterpretationContext"}
{"id": 6228, "prediction": "Adds a new Appender to the end of the list ."}
{"id": 6229, "prediction": "Detaches the specified appender from the appender list ."}
{"id": 6230, "prediction": "Removes the appender with the specified name from the appender list ."}
{"id": 6231, "prediction": "Handles a parent level change ."}
{"id": 6232, "prediction": "Call all the appenders of this Logger with the given logging event ."}
{"id": 6233, "prediction": "Detaches the specified appender from this appender ."}
{"id": 6234, "prediction": "Create a child logger with the last part passed as parameter ."}
{"id": 6235, "prediction": "Calls turbo filters ."}
{"id": 6236, "prediction": "This method logs the given LoggingEvent ."}
{"id": 6237, "prediction": "Calls the method and waits for a response ."}
{"id": 6238, "prediction": "Creates the parent directories of the given file if they don t already exist ."}
{"id": 6239, "prediction": "Returns the level as a Integer ."}
{"id": 6240, "prediction": "Converts an integer to a Level . If the conversion is not possible returns the supplied default ."}
{"id": 6241, "prediction": "Returns a set of URLs representing the number of occurrences of the given resource in the given class loader ."}
{"id": 6242, "prediction": "Returns the URL of the given resource on the given class loader ."}
{"id": 6243, "prediction": "Returns the classloader of the specified object ."}
{"id": 6244, "prediction": "Get the ClassLoader of the given Class as a pooled ClassLoader . If the Class has a ClassLoader permission null is returned ."}
{"id": 6245, "prediction": "Returns the classloader of the given class ."}
{"id": 6246, "prediction": "Starts the tag encoder ."}
{"id": 6247, "prediction": "Returns the tag associated with the given logging event ."}
{"id": 6248, "prediction": "Adds the SubstitutionProperty elements to the InterpretationContext ."}
{"id": 6249, "prediction": "Gets the dot index of a dot or dot substring starting at a given index ."}
{"id": 6250, "prediction": "Evaluates if the logging event is contained in the marker list ."}
{"id": 6251, "prediction": "Returns the name of the client thread ."}
{"id": 6252, "prediction": "Returns true if the two files are on the same file store ."}
{"id": 6253, "prediction": "Starts the subject layout ."}
{"id": 6254, "prediction": "Create a copy of the given event object and append it to the buffer ."}
{"id": 6255, "prediction": "Send the last event object and fill the buffer ."}
{"id": 6256, "prediction": "Adds a MDC value LevelPair"}
{"id": 6257, "prediction": "Creates a DynamicConverter . Adds error messages if the converter is not registered ."}
{"id": 6258, "prediction": "Creates a composite converter ."}
{"id": 6259, "prediction": "Determines the compression mode based on the filename pattern ."}
{"id": 6260, "prediction": "Configure a URL ."}
{"id": 6261, "prediction": "Configure a file ."}
{"id": 6262, "prediction": "Configure from an input stream ."}
{"id": 6263, "prediction": "Build the interpreter ."}
{"id": 6264, "prediction": "This method extracts the current configuration from the input source ."}
{"id": 6265, "prediction": "This is the entry point for the session configuration ."}
{"id": 6266, "prediction": "Gets the property for the given key ."}
{"id": 6267, "prediction": "Sets the name of this context ."}
{"id": 6268, "prediction": "Returns true if the context has a status listener ."}
{"id": 6269, "prediction": "Gets the time of the last reset ."}
{"id": 6270, "prediction": "Starts converter ."}
{"id": 6271, "prediction": "Return the effective converter map for this context ."}
{"id": 6272, "prediction": "Returns the header for the HTML file ."}
{"id": 6273, "prediction": "Gets the file footer ."}
{"id": 6274, "prediction": "Called when the appender is starting ."}
{"id": 6275, "prediction": "Start the appender and pop an object from the stack ."}
{"id": 6276, "prediction": "Returns a copy of the clients ."}
{"id": 6277, "prediction": "Adds a client to the cluster ."}
{"id": 6278, "prediction": "Remove a client from the set of clients ."}
{"id": 6279, "prediction": "Return a copy of the current thread s context map ."}
{"id": 6280, "prediction": "Gets the value of method ."}
{"id": 6281, "prediction": "Computes the result of the turbo algorithm execution ."}
{"id": 6282, "prediction": "Returns true if the current platform is Android ."}
{"id": 6283, "prediction": "Automatically configure the default logger context ."}
{"id": 6284, "prediction": "Get all files in a folder that match a certain stem regex ."}
{"id": 6285, "prediction": "Retrospective print of all status objects ."}
{"id": 6286, "prediction": "Converts the given String to an int value ."}
{"id": 6287, "prediction": "Gets the path of the database file ."}
{"id": 6288, "prediction": "Clears expired logs ."}
{"id": 6289, "prediction": "Check if the last check has expired ."}
{"id": 6290, "prediction": "Append a logging event to the logging table ."}
{"id": 6291, "prediction": "Append a secondary sub - append event ."}
{"id": 6292, "prediction": "Binds the logging event to the statement ."}
{"id": 6293, "prediction": "Returns the given object s string representation wrapped in quotes or empty string if the object is null ."}
{"id": 6294, "prediction": "Compute the reference mask for a logging event ."}
{"id": 6295, "prediction": "Merges the context properties and the logging event properties into a single map ."}
{"id": 6296, "prediction": "Insert exception ."}
{"id": 6297, "prediction": "Gets the prefix match length ."}
{"id": 6298, "prediction": "Returns the effective level of the status ."}
{"id": 6299, "prediction": "Set the property with the specified name to the specified value ."}
{"id": 6300, "prediction": "Returns true if the class is an interface or a no - arg constructor or a no - arg constructor ."}
{"id": 6301, "prediction": "Returns a HashMap where the keys are the keys and the values are the values ."}
{"id": 6302, "prediction": "Processes an include URL ."}
{"id": 6303, "prediction": "Opens an input stream for the specified URL ."}
{"id": 6304, "prediction": "This method removes the head and tail elements from the event list ."}
{"id": 6305, "prediction": "Returns true if the server should be started ."}
{"id": 6306, "prediction": "Returns true if the response status code is transient ."}
{"id": 6307, "prediction": "Sets the default hosts for this connection ."}
{"id": 6308, "prediction": "Ensures that the local index is not null ."}
{"id": 6309, "prediction": "Synchronizes all data selection queries to the client ."}
{"id": 6310, "prediction": "Check if the last sync date is after the specified delay . If it is the same date after the specified delay . If it is the same date before the specified delay ."}
{"id": 6311, "prediction": "Wait for a task"}
{"id": 6312, "prediction": "Get the list of indexes offline sync ."}
{"id": 6313, "prediction": "Converts an InputStream to a String ."}
{"id": 6314, "prediction": "Converts an InputStream to a byte array ."}
{"id": 6315, "prediction": "Attempts to consume and close an input stream and disconnect the connection ."}
{"id": 6316, "prediction": "Returns the hosts that are up orCouldBeRetried ."}
{"id": 6317, "prediction": "Sets the type oflaces query ."}
{"id": 6318, "prediction": "Starts the index asynchronously ."}
{"id": 6319, "prediction": "Adds the given value to the cache and returns the previous value ."}
{"id": 6320, "prediction": "Get a value from the LRU cache ."}
{"id": 6321, "prediction": "Waits for all threads to complete ."}
{"id": 6322, "prediction": "Compare a string version to a string version ."}
{"id": 6323, "prediction": "Reports an exception to the coordinator ."}
{"id": 6324, "prediction": "Copies all the files from the given directory to the given target directory . If the target directory does not exist it will be created ."}
{"id": 6325, "prediction": "Loads the properties from the given file ."}
{"id": 6326, "prediction": "Retrieves the value of a static field ."}
{"id": 6327, "prediction": "Searches for a method with the given name ."}
{"id": 6328, "prediction": "Format the given value as percentage of the given base value ."}
{"id": 6329, "prediction": "Returns a string representation of a given number with the specified length padding left to the right ."}
{"id": 6330, "prediction": "Returns a string representation of a given number with the specified length padding left if necessary ."}
{"id": 6331, "prediction": "Reads a JSON syntax character from the stream ."}
{"id": 6332, "prediction": "Returns the hex value of the given character ."}
{"id": 6333, "prediction": "Writes a JSON string ."}
{"id": 6334, "prediction": "Write a number as a JSON integer ."}
{"id": 6335, "prediction": "Write a double as a JSON string ."}
{"id": 6336, "prediction": "Read a JSON string ."}
{"id": 6337, "prediction": "Reads JSON numeric characters ."}
{"id": 6338, "prediction": "Read a long value from the JSON stream ."}
{"id": 6339, "prediction": "Reads a JSON - encoded double ."}
{"id": 6340, "prediction": "Reads JSON string and decodes it as base64 ."}
{"id": 6341, "prediction": "Execute a method call ."}
{"id": 6342, "prediction": "Invokes a method call and returns the result ."}
{"id": 6343, "prediction": "Adds a method call to the queue of pending calls ."}
{"id": 6344, "prediction": "Gets a file from theFS path ."}
{"id": 6345, "prediction": "Updates the decoration for the selected workbench ."}
{"id": 6346, "prediction": "Refreshes the repository view ."}
{"id": 6347, "prediction": "Returns the resource history view ."}
{"id": 6348, "prediction": "Open an editor with the given contents and name ."}
{"id": 6349, "prediction": "Creates a message indicating that the authentication process failed ."}
{"id": 6350, "prediction": "Displays a prompt for authentication ."}
{"id": 6351, "prediction": "Creates the default page ."}
{"id": 6352, "prediction": "Start a new thread to show the Servers view ."}
{"id": 6353, "prediction": "Set the keep - all alive flag ."}
{"id": 6354, "prediction": "Set the isOmit flag ."}
{"id": 6355, "prediction": "Set the owner element ."}
{"id": 6356, "prediction": "Add a new condition factor ."}
{"id": 6357, "prediction": "Create a Condition term from a StreamTokenizer ."}
{"id": 6358, "prediction": "Returns true if this condition matches the specified condition term ."}
{"id": 6359, "prediction": "Returns the contents of a DDL configuration file as an InputStream ."}
{"id": 6360, "prediction": "Load the DSL configuration from the given file ."}
{"id": 6361, "prediction": "This method is used to parse the configuration file ."}
{"id": 6362, "prediction": "Returns the sub - menu for this wizard ."}
{"id": 6363, "prediction": "Add a response element ."}
{"id": 6364, "prediction": "Add a href attribute ."}
{"id": 6365, "prediction": "Insert a new href before the specified href ."}
{"id": 6366, "prediction": "Remove the specified href ."}
{"id": 6367, "prediction": "Add a property stat element to this node ."}
{"id": 6368, "prediction": "Returns the href attribute of the URL ."}
{"id": 6369, "prediction": "Returns the status of the node ."}
{"id": 6370, "prediction": "Replies the current stack frame for the given value ."}
{"id": 6371, "prediction": "Returns true if class1 is a subtype of class2 ."}
{"id": 6372, "prediction": "Checks if the given list of proposal contains the given newProposal ."}
{"id": 6373, "prediction": "Clone a node ."}
{"id": 6374, "prediction": "Resets the header to its initial state ."}
{"id": 6375, "prediction": "Create the actions for the buttons ."}
{"id": 6376, "prediction": "Adds a connection to this connection descriptor ."}
{"id": 6377, "prediction": "Returns the value of the given propertyId ."}
{"id": 6378, "prediction": "Removes a connection from this connection object ."}
{"id": 6379, "prediction": "Sets the new location of the map ."}
{"id": 6380, "prediction": "Sets the location and size of a given property ."}
{"id": 6381, "prediction": "Sets the size of the gauge ."}
{"id": 6382, "prediction": "Converts an array of constraints to a string ."}
{"id": 6383, "prediction": "Add a new lock entry ."}
{"id": 6384, "prediction": "Adds a vertex as a child of this node ."}
{"id": 6385, "prediction": "Removes a vertex from this graph ."}
{"id": 6386, "prediction": "Called when the OSGi framework starts our bundle ."}
{"id": 6387, "prediction": "Called when the bundle is stopped ."}
{"id": 6388, "prediction": "Returns the key from the Drools plugin s resource bundle or the key if no such bundle exists ."}
{"id": 6389, "prediction": "Returns the resource bundle for this plugin ."}
{"id": 6390, "prediction": "Returns the form colors that should be used to colorize the rules for the rule builder ."}
{"id": 6391, "prediction": "Set the date time from a string ."}
{"id": 6392, "prediction": "Set the date using the given pattern ."}
{"id": 6393, "prediction": "Returns an error status with the specified message and exception ."}
{"id": 6394, "prediction": "Logs an error with the specified message ."}
{"id": 6395, "prediction": "Adds a field ."}
{"id": 6396, "prediction": "Adjusts the number of columns in the grid to the number of columns ."}
{"id": 6397, "prediction": "Apply the font to all fields ."}
{"id": 6398, "prediction": "Returns the maximum number of columns in the table ."}
{"id": 6399, "prediction": "Initializes the field editor ."}
{"id": 6400, "prediction": "Fires a property change event to all registered listeners ."}
{"id": 6401, "prediction": "Sets the active editor ."}
{"id": 6402, "prediction": "Add the given tool bar to the given tool bar manager ."}
{"id": 6403, "prediction": "Determines the dialect based on the back text ."}
{"id": 6404, "prediction": "Create a new context based on the locator and add the locator label to the context ."}
{"id": 6405, "prediction": "Save the current file ."}
{"id": 6406, "prediction": "Create table listeners to be used when table is selected"}
{"id": 6407, "prediction": "Creates the table with the columns for the language mapping table ."}
{"id": 6408, "prediction": "Adds an entry to the cache for a given URL ."}
{"id": 6409, "prediction": "Adds an entry for the given URL key ."}
{"id": 6410, "prediction": "Adds a new token to the tree ."}
{"id": 6411, "prediction": "Adds a child node to this node ."}
{"id": 6412, "prediction": "Set the file offset and length of the line ."}
{"id": 6413, "prediction": "Adds a new condition ."}
{"id": 6414, "prediction": "Add a condition for a state token ."}
{"id": 6415, "prediction": "Returns true if the given condition matches this condition ."}
{"id": 6416, "prediction": "Returns the prop node ."}
{"id": 6417, "prediction": "Returns the status of the node ."}
{"id": 6418, "prediction": "Set a property on this node ."}
{"id": 6419, "prediction": "Returns the last line of the string"}
{"id": 6420, "prediction": "Returns the last non - dash line from the input text"}
{"id": 6421, "prediction": "Binds the given id with the given binding ."}
{"id": 6422, "prediction": "Binds two strings ."}
{"id": 6423, "prediction": "Returns the message for the given id based on the given bindings ."}
{"id": 6424, "prediction": "Create a Java process for the given type ."}
{"id": 6425, "prediction": "Create the Java file called com . sample . java to launch the Java process ."}
{"id": 6426, "prediction": "Returns the current runtime id as a string ."}
{"id": 6427, "prediction": "Visits a rete vertex ."}
{"id": 6428, "prediction": "Visits all the nodes in the graph ."}
{"id": 6429, "prediction": "Returns a dot - id of the given object ."}
{"id": 6430, "prediction": "Add a remove prop element ."}
{"id": 6431, "prediction": "Add a set prop ."}
{"id": 6432, "prediction": "Create a new locator for the specified resource URL and label ."}
{"id": 6433, "prediction": "Get the presentation Reconciler for the given source viewer ."}
{"id": 6434, "prediction": "Returns true if the given object is the same as this object ."}
{"id": 6435, "prediction": "Returns true if the condition contains the specified term ."}
{"id": 6436, "prediction": "Create a new ConditionFactor from a StreamTokenizer ."}
{"id": 6437, "prediction": "Add the text editor and rete viewer ."}
{"id": 6438, "prediction": "Performs HTTP DELETE request for the given string ."}
{"id": 6439, "prediction": "A helper method to perform a HTTP POST request"}
{"id": 6440, "prediction": "Get the status of the given job ."}
{"id": 6441, "prediction": "Execute the pull operation and store the results in the results map"}
{"id": 6442, "prediction": "Handles results from a pull request ."}
{"id": 6443, "prediction": "Set the element at the given index to the given value ."}
{"id": 6444, "prediction": "Add an active lock ."}
{"id": 6445, "prediction": "Filter properties based on the given prefix ."}
{"id": 6446, "prediction": "Reads backwards from a document ."}
{"id": 6447, "prediction": "Calculates the row list for a rete graph ."}
{"id": 6448, "prediction": "Paints this button ."}
{"id": 6449, "prediction": "Create the part for the given model element ."}
{"id": 6450, "prediction": "Replies the image descriptor for the given path ."}
{"id": 6451, "prediction": "Adds an image to the image registry ."}
{"id": 6452, "prediction": "Adds a vertex at the specified index ."}
{"id": 6453, "prediction": "Returns the row index for the given vertex ."}
{"id": 6454, "prediction": "Get the total width of all rows ."}
{"id": 6455, "prediction": "Dumps the current graph to stdout ."}
{"id": 6456, "prediction": "Convenience method to call the optimize method on all the rows ."}
{"id": 6457, "prediction": "Load a RETE Tree from the given file contents ."}
{"id": 6458, "prediction": "Initialize the graphical viewer ."}
{"id": 6459, "prediction": "Draw a new ReteGraph ."}
{"id": 6460, "prediction": "Returns a DroolsLine breakpoint matching the given source ."}
{"id": 6461, "prediction": "Set the href for the link ."}
{"id": 6462, "prediction": "See if the DAV client canalk the DAV ."}
{"id": 6463, "prediction": "Copy a set of properties ."}
{"id": 6464, "prediction": "Examines the given response for a multi - status request ."}
{"id": 6465, "prediction": "Extract the prop stats from a list of properties ."}
{"id": 6466, "prediction": "Get the response body as an InputStream"}
{"id": 6467, "prediction": "Gets all active locks ."}
{"id": 6468, "prediction": "Returns the status of a property ."}
{"id": 6469, "prediction": "Sends request to server and returns the response context ."}
{"id": 6470, "prediction": "Returns a new lock token ."}
{"id": 6471, "prediction": "Convenience method to move a list of properties to a specified destination location ."}
{"id": 6472, "prediction": "This is a helper method that performs the check in . It calls the service to see if the response from the service is correct ."}
{"id": 6473, "prediction": "Refreshes a lock on the DAV server ."}
{"id": 6474, "prediction": "Remove a collection of properties ."}
{"id": 6475, "prediction": "Remove a property from the store ."}
{"id": 6476, "prediction": "Sets the content of the response with the specified content type from an InputStream ."}
{"id": 6477, "prediction": "Set a collection of properties"}
{"id": 6478, "prediction": "Set a property of this model ."}
{"id": 6479, "prediction": "Release the lock with the specified token ."}
{"id": 6480, "prediction": "Update the dAV resource using the specified locator ."}
{"id": 6481, "prediction": "Convenient method to send version - control"}
{"id": 6482, "prediction": "Delete an existing DAV file ."}
{"id": 6483, "prediction": "Examines the status code ."}
{"id": 6484, "prediction": "Returns true if the property with the given name has a child with the given name false otherwise ."}
{"id": 6485, "prediction": "Write the response to the output stream"}
{"id": 6486, "prediction": "Convert a byte array to a hex string ."}
{"id": 6487, "prediction": "Convert an array to a hex string ."}
{"id": 6488, "prediction": "Set the isAllProp flag ."}
{"id": 6489, "prediction": "Set whether or not the element is a valid property name ."}
{"id": 6490, "prediction": "Set the property ."}
{"id": 6491, "prediction": "Strip the last word from a string ."}
{"id": 6492, "prediction": "Update the tree viewer ."}
{"id": 6493, "prediction": "Writes the content to the given OutputStream ."}
{"id": 6494, "prediction": "Step over the current stack frame ."}
{"id": 6495, "prediction": "Adds marker for parser errors ."}
{"id": 6496, "prediction": "Skip over whitespace characters ."}
{"id": 6497, "prediction": "Adds a file to the guvnor ."}
{"id": 6498, "prediction": "Commits changes to a given file ."}
{"id": 6499, "prediction": "Returns the age of the application ."}
{"id": 6500, "prediction": "Returns the length of the content ."}
{"id": 6501, "prediction": "Returns the maximum allowed forwards ."}
{"id": 6502, "prediction": "Determines if the file should be overwrite or not ."}
{"id": 6503, "prediction": "Replies if the text is a PASSTRO identified by T ."}
{"id": 6504, "prediction": "Returns the infinite timeout or - 2 if the timeout is unknown ."}
{"id": 6505, "prediction": "Add a key - value mapping . If the key is null or empty the value is ignored ."}
{"id": 6506, "prediction": "Change the timeout value ."}
{"id": 6507, "prediction": "Opens the DL file ."}
{"id": 6508, "prediction": "Parses a JSON file and adds it to the map ."}
{"id": 6509, "prediction": "GetObjMetadata Method ."}
{"id": 6510, "prediction": "Strip object metadata from text ."}
{"id": 6511, "prediction": "Adds a list of tokens to a node ."}
{"id": 6512, "prediction": "Returns the children of the current node that contain the given text ."}
{"id": 6513, "prediction": "Returns the children of the specified object with the specified text ."}
{"id": 6514, "prediction": "Add a prefix to a list of strings ."}
{"id": 6515, "prediction": "Prints the contents of the tree ."}
{"id": 6516, "prediction": "Prints the contents of a node ."}
{"id": 6517, "prediction": "Prints a number of tabs to stdout ."}
{"id": 6518, "prediction": "Reads a JsonValue from a String ."}
{"id": 6519, "prediction": "Retrieve an image descriptor from the default image registry ."}
{"id": 6520, "prediction": "Invokes the method and returns the response ."}
{"id": 6521, "prediction": "Adds a field to the request header ."}
{"id": 6522, "prediction": "Create the appropriate Java files for the Drools test launcher ."}
{"id": 6523, "prediction": "Create the sample rule folder ."}
{"id": 6524, "prediction": "Create the rule flow for the given project ."}
{"id": 6525, "prediction": "Create the rule flow launcher template file for the given project ."}
{"id": 6526, "prediction": "Returns the currently selected iUs ."}
{"id": 6527, "prediction": "This method will paint the image ."}
{"id": 6528, "prediction": "Returns the field name of this node s constraint ."}
{"id": 6529, "prediction": "Returns the evaluator of this node s constraint ."}
{"id": 6530, "prediction": "Returns the value of this node s constraint as a string ."}
{"id": 6531, "prediction": "Adds the given properties to the given Guvor resource ."}
{"id": 6532, "prediction": "Creates the baseline control element and sends it to the DAV server ."}
{"id": 6533, "prediction": "Bind the specified member to the specified source object ."}
{"id": 6534, "prediction": "Returns the locator for the specified member ."}
{"id": 6535, "prediction": "Optimizes the algorithm so that only one vertex can be optimized at a time ."}
{"id": 6536, "prediction": "Initialize the resource group"}
{"id": 6537, "prediction": "Validate the page ."}
{"id": 6538, "prediction": "Generates an entity tag for the current thread ."}
{"id": 6539, "prediction": "Returns the vertex with the same name as this connection but is not part of this connection ."}
{"id": 6540, "prediction": "Perform OTP validation on the list of OTPs"}
{"id": 6541, "prediction": "Check if the YubiKey belongs to the given user ."}
{"id": 6542, "prediction": "get the username from a yk file"}
{"id": 6543, "prediction": "Add a yubikey entry to a file ."}
{"id": 6544, "prediction": "Verifies that the OTP user name and OTP are correct ."}
{"id": 6545, "prediction": "Clear the password list ."}
{"id": 6546, "prediction": "Returns the public ID of the given OTP string ."}
{"id": 6547, "prediction": "Returns true if the given OTP string is a valid OTP format ."}
{"id": 6548, "prediction": "Creates a new Evaluation from the given SimpleNode with the given source object ."}
{"id": 6549, "prediction": "Creates a new Evaluation instance ."}
{"id": 6550, "prediction": "Clears the cache of all methods ."}
{"id": 6551, "prediction": "Checks if is JDK 15 ."}
{"id": 6552, "prediction": "Returns the package name of the specified object ."}
{"id": 6553, "prediction": "Returns the name of the class without the package ."}
{"id": 6554, "prediction": "Returns a unique descriptor for the given object and fully qualified ."}
{"id": 6555, "prediction": "get the type of the argument"}
{"id": 6556, "prediction": "Returns true if the first class is more specific than the second ."}
{"id": 6557, "prediction": "Finds an appropriate method for the given parameters ."}
{"id": 6558, "prediction": "Returns the value of the method at the given property on the given target object ."}
{"id": 6559, "prediction": "Returns a map of property descriptors for the specified class ."}
{"id": 6560, "prediction": "Gets a property descriptor from an array of properties of the specified class ."}
{"id": 6561, "prediction": "Returns the read method of the given name on the given class ."}
{"id": 6562, "prediction": "Read a single character from the input stream ."}
{"id": 6563, "prediction": "add a projection to the current node"}
{"id": 6564, "prediction": "Used to select a set of nodes ."}
{"id": 6565, "prediction": "Returns the long value of the specified value ."}
{"id": 6566, "prediction": "Returns the double value of the given value or 0 if the value is null ."}
{"id": 6567, "prediction": "Converts an Object to a BigInteger ."}
{"id": 6568, "prediction": "Returns the big decimal value of the specified value ."}
{"id": 6569, "prediction": "Returns a string representation of the given value . If the value is null the default string representation is returned . If the value is null the default string representation is returned ."}
{"id": 6570, "prediction": "Returns the numeric type of the given value ."}
{"id": 6571, "prediction": "Converts the given value to the given type . If the value cannot be converted to the given type false is returned ."}
{"id": 6572, "prediction": "Converts an object to an integer ."}
{"id": 6573, "prediction": "Returns the numeric type for the two specified types ."}
{"id": 6574, "prediction": "Returns the numeric type of the two specified values ."}
{"id": 6575, "prediction": "Create a Number of the given type from the given long value ."}
{"id": 6576, "prediction": "Removes the current evaluation from the stack ."}
{"id": 6577, "prediction": "Generate the Ognl getter body ."}
{"id": 6578, "prediction": "Generates the Ognl setter body ."}
{"id": 6579, "prediction": "Flattens the entire tree ."}
{"id": 6580, "prediction": "Initializes this OperationResult ."}
{"id": 6581, "prediction": "Escapes a single character ."}
{"id": 6582, "prediction": "Set a root object in the context ."}
{"id": 6583, "prediction": "Returns the value of the given expression in the given context ."}
{"id": 6584, "prediction": "Set a value on an expression ."}
{"id": 6585, "prediction": "Set a value in a tree using a default context ."}
{"id": 6586, "prediction": "Returns true if the expression is a constant"}
{"id": 6587, "prediction": "Returns the default watch service id for the current operating system ."}
{"id": 6588, "prediction": "Waits until the server is started ."}
{"id": 6589, "prediction": "Read the content of the file and return it as a String ."}
{"id": 6590, "prediction": "Reload the resource class loader ."}
{"id": 6591, "prediction": "Get an archiver by name ."}
{"id": 6592, "prediction": "Check the given archiver for problems ."}
{"id": 6593, "prediction": "Reads the content of the File and returns it as a String ."}
{"id": 6594, "prediction": "Create an ant project ."}
{"id": 6595, "prediction": "Add a system property to the Java process ."}
{"id": 6596, "prediction": "Adds a system property to the Java process ."}
{"id": 6597, "prediction": "Opens a new folder dialog with the specified text ."}
{"id": 6598, "prediction": "Method used to change the selected directory"}
{"id": 6599, "prediction": "Refresh the button state ."}
{"id": 6600, "prediction": "Creates and returns a FileObserver which gets notified when a file is added or removed ."}
{"id": 6601, "prediction": "Return the selected directory ."}
{"id": 6602, "prediction": "Creates the folder ."}
{"id": 6603, "prediction": "Returns true if the given file is a valid file ."}
{"id": 6604, "prediction": "Start a background job . This will show a progress dialog and run a job ."}
{"id": 6605, "prediction": "Starts a new list with given attributes ."}
{"id": 6606, "prediction": "Ends a list of styles ."}
{"id": 6607, "prediction": "Moves the image by a given amount ."}
{"id": 6608, "prediction": "Returns the rectangle that will be placed at the top - left corner of this rectangle ."}
{"id": 6609, "prediction": "Computes and returns the layout rectangle that will be used to calculate the layout for the view ."}
{"id": 6610, "prediction": "Registers the listener with the specified media factory ."}
{"id": 6611, "prediction": "Add a spanWatcher to the current span ."}
{"id": 6612, "prediction": "Returns a View that shows the title of the spinner ."}
{"id": 6613, "prediction": "Get the item at the specified position and bind it to the view cache ."}
{"id": 6614, "prediction": "Converts RTHtml into HTML ."}
{"id": 6615, "prediction": "Processes text within a paragraph ."}
{"id": 6616, "prediction": "Creates a new unique file with the same name and type as the original file ."}
{"id": 6617, "prediction": "Determine the original file to use based on the Uri ."}
{"id": 6618, "prediction": "Returns the namespace URI for the given name ."}
{"id": 6619, "prediction": "Returns the local name of the given name ."}
{"id": 6620, "prediction": "Adds an attribute to an element ."}
{"id": 6621, "prediction": "Sets the value of an attribute ."}
{"id": 6622, "prediction": "Gets the font name from a TTF file ."}
{"id": 6623, "prediction": "Gets the font name from a TTFAsset file ."}
{"id": 6624, "prediction": "need to create a new buffer and add it to the list of buffers"}
{"id": 6625, "prediction": "Writes an array of bytes to the output stream ."}
{"id": 6626, "prediction": "Writes a byte to the output stream ."}
{"id": 6627, "prediction": "Reads from the stream and returns the number of bytes actually written ."}
{"id": 6628, "prediction": "Writes the entire contents of this buffer to the given OutputStream ."}
{"id": 6629, "prediction": "Returns a copy of this buffer as a byte array ."}
{"id": 6630, "prediction": "Set the font size"}
{"id": 6631, "prediction": "Converts path separators to Unix separators ."}
{"id": 6632, "prediction": "Recompute the focus of the highlight views ."}
{"id": 6633, "prediction": "Ensure that the highlight view is visible ."}
{"id": 6634, "prediction": "center the highlight view based on the current zoom level ."}
{"id": 6635, "prediction": "Set the publicid and systemid for the document locator to the same values ."}
{"id": 6636, "prediction": "Validate the given string against the regular expressions defined in the configuration ."}
{"id": 6637, "prediction": "Adds a new element type ."}
{"id": 6638, "prediction": "Set the specified attribute for the specified element ."}
{"id": 6639, "prediction": "Set the element s parent with the given name ."}
{"id": 6640, "prediction": "Look up a specific element type by name ."}
{"id": 6641, "prediction": "Returns the integer value of the specified entity ."}
{"id": 6642, "prediction": "Removes all theParagraphs that have not been completed yet ."}
{"id": 6643, "prediction": "Applies the given value to the current selection ."}
{"id": 6644, "prediction": "Returns true if the given domain is a valid IP address ."}
{"id": 6645, "prediction": "Execute an operation within the specified editor ."}
{"id": 6646, "prediction": "Redos an editor ."}
{"id": 6647, "prediction": "Replaces all occurrences of the search string with the replace string ."}
{"id": 6648, "prediction": "Returns the current status for the specified thread creating a new status if necessary ."}
{"id": 6649, "prediction": "Sets the decoding options for the specified thread ."}
{"id": 6650, "prediction": "Returns whether the specified Thread can be decoded ."}
{"id": 6651, "prediction": "Decodes a bitmap from a file descriptor ."}
{"id": 6652, "prediction": "Returns a list of all the registered font types ."}
{"id": 6653, "prediction": "Method that will return a map of all TTF font names to their respective font names ."}
{"id": 6654, "prediction": "Gets the system fonts ."}
{"id": 6655, "prediction": "Internal setup method ."}
{"id": 6656, "prediction": "Get a reader for the specified input source ."}
{"id": 6657, "prediction": "Returns an input stream to a file ."}
{"id": 6658, "prediction": "Add the attribute to the new element ."}
{"id": 6659, "prediction": "Expands all the entities in the specified string ."}
{"id": 6660, "prediction": "Look up an entity from a buffer ."}
{"id": 6661, "prediction": "Restart the stack with the supplied element ."}
{"id": 6662, "prediction": "Pop the stack ."}
{"id": 6663, "prediction": "Pops the top of the stack up to the last element but only if the flags &lt ;RESTART&gt ; = 0 ."}
{"id": 6664, "prediction": "Returns the prefix of the given name ."}
{"id": 6665, "prediction": "Returns true if prefix and namespace are foreign ."}
{"id": 6666, "prediction": "Trim single quotes from the end of a string ."}
{"id": 6667, "prediction": "Splits a String into an array of Strings ."}
{"id": 6668, "prediction": "Checks to see if the current element can contain the supplied element . If so the element is added to the stack . If not the new element is added to the stack ."}
{"id": 6669, "prediction": "Returns a new name based on the contents of the given buffer ."}
{"id": 6670, "prediction": "This method is used to restore the visibility of the activity s toolbar ."}
{"id": 6671, "prediction": "Clears the bus and removes all listeners ."}
{"id": 6672, "prediction": "Subscribe to a media element on the main thread ."}
{"id": 6673, "prediction": "Remove the current link fragment and replace it with the link text ."}
{"id": 6674, "prediction": "Calculate the matrix that will be used to draw the bitmapProperBase"}
{"id": 6675, "prediction": "Gets the max zoom of the image ."}
{"id": 6676, "prediction": "Returns true if there are no spans in the selection ."}
{"id": 6677, "prediction": "Remove spans from the list of spans for the given paragraph ."}
{"id": 6678, "prediction": "Encode a url ."}
{"id": 6679, "prediction": "URL - decode a query string ."}
{"id": 6680, "prediction": "Handles the PICK_DIRECTORY_INTENTS intents to pick a directory ."}
{"id": 6681, "prediction": "Rotate a bitmap"}
{"id": 6682, "prediction": "Set the output stream ."}
{"id": 6683, "prediction": "Writes a single character to the output ."}
{"id": 6684, "prediction": "Writes a string to the output ."}
{"id": 6685, "prediction": "Does the element have an attribute with the same name and value?"}
{"id": 6686, "prediction": "Escapes a string so that it is valid for an XML attribute ."}
{"id": 6687, "prediction": "Write namespace declarations"}
{"id": 6688, "prediction": "Write an element or attribute name ."}
{"id": 6689, "prediction": "Creates a stream if it does not already exist ."}
{"id": 6690, "prediction": "Wait for a stream to become active ."}
{"id": 6691, "prediction": "Complete store snapshot with missing instance snapshots ."}
{"id": 6692, "prediction": "Wait the minimal duration between the last get request and the next request to execute ."}
{"id": 6693, "prediction": "Attempts to get the records ."}
{"id": 6694, "prediction": "Perform an action with an optional retry limit ."}
{"id": 6695, "prediction": "Attempts to perform an action based on the duration between get shard iterator requests and the minimal duration between get shard iterator requests ."}
{"id": 6696, "prediction": "Checks if a bucket is accessible ."}
{"id": 6697, "prediction": "Attempts to load the stores from the snapshot store ."}
{"id": 6698, "prediction": "Triggers the given wildcard expander with the given context ."}
{"id": 6699, "prediction": "Replaces a pattern in a string with a new string ."}
{"id": 6700, "prediction": "Utility method to delete any of the given strings ."}
{"id": 6701, "prediction": "Add a resourceLint report to the report ."}
{"id": 6702, "prediction": "Update properties with configuration ."}
{"id": 6703, "prediction": "Gets the configuration properties ."}
{"id": 6704, "prediction": "Returns an input stream that contains the auto detected wro file . If the wroFile doesn t exist it will be loaded ."}
{"id": 6705, "prediction": "Converts a map of pre processors to a map of post processors ."}
{"id": 6706, "prediction": "Compiles the given content string with the specified optional argument ."}
{"id": 6707, "prediction": "Reloads the cache with the specified new value ."}
{"id": 6708, "prediction": "Reloads the model with the specified new value ."}
{"id": 6709, "prediction": "Get the wrapped servlet request ."}
{"id": 6710, "prediction": "Returns a transformer that returns the base name of the input with the specified suffix ."}
{"id": 6711, "prediction": "Called when an error occurs while sending a message to the client ."}
{"id": 6712, "prediction": "Sends a redirect to the specified location ."}
{"id": 6713, "prediction": "Process a resource and trigger the appropriate handler ."}
{"id": 6714, "prediction": "Create a handler that expands a given resource ."}
{"id": 6715, "prediction": "Locates the given URI and returns an input stream that contains the URI ."}
{"id": 6716, "prediction": "Creates the configuration if not already configured ."}
{"id": 6717, "prediction": "Register the change listeners ."}
{"id": 6718, "prediction": "Process the request by getting the uri using the wro manager ."}
{"id": 6719, "prediction": "Set a configuration object ."}
{"id": 6720, "prediction": "Identify duplicate group names ."}
{"id": 6721, "prediction": "Merges the given model with this one ."}
{"id": 6722, "prediction": "Locates the resource at the given URI ."}
{"id": 6723, "prediction": "Applies the specified post processors to the cache ."}
{"id": 6724, "prediction": "Decorates a processor ."}
{"id": 6725, "prediction": "This method does the actual processing of a resource ."}
{"id": 6726, "prediction": "Splits a option into an array of strings ."}
{"id": 6727, "prediction": "Loads properties from an input stream ."}
{"id": 6728, "prediction": "Parses the properties from the given string ."}
{"id": 6729, "prediction": "Create a custom WroManagerFactory ."}
{"id": 6730, "prediction": "Persist a list of resources to the database ."}
{"id": 6731, "prediction": "Returns true if the given group is a target group ."}
{"id": 6732, "prediction": "Extend the plugin classpath ."}
{"id": 6733, "prediction": "Returns the contents of the default model file as an InputStream ."}
{"id": 6734, "prediction": "Initializes a WroManagerFactory using the given properties ."}
{"id": 6735, "prediction": "Set model transformers ."}
{"id": 6736, "prediction": "Compiles a string content into a string with a precompiled function ."}
{"id": 6737, "prediction": "Processes a list of resources and merges them together ."}
{"id": 6738, "prediction": "Executes all the resources in parallel and merges them together ."}
{"id": 6739, "prediction": "Run a list of resources in parallel"}
{"id": 6740, "prediction": "Applies the specified processors for the specified resource and returns the result ."}
{"id": 6741, "prediction": "Decorates a pre processor ."}
{"id": 6742, "prediction": "Writes the generated data to the fallback storage file ."}
{"id": 6743, "prediction": "Gets all fields of an object including its super classes ."}
{"id": 6744, "prediction": "Rewrite a CSS URL to an image URL ."}
{"id": 6745, "prediction": "Compute new image location for given cssUri and imageUrl ."}
{"id": 6746, "prediction": "Add a model transformer ."}
{"id": 6747, "prediction": "Forwards the result bundle to the wro server ."}
{"id": 6748, "prediction": "Initialize aggregated folder path ."}
{"id": 6749, "prediction": "Extracts the variables body and returns it as a map ."}
{"id": 6750, "prediction": "Extracts all variables definition from the given CSS string and replaces them with their values ."}
{"id": 6751, "prediction": "Replace all the variables found in the given CSS string with the given values ."}
{"id": 6752, "prediction": "Convert a post processor to a pre - processor ."}
{"id": 6753, "prediction": "Check if the searched type matches the minimum and the searched type ."}
{"id": 6754, "prediction": "Apply gzip on the resource ."}
{"id": 6755, "prediction": "Creates a decorator that only accepts files with a given pattern ."}
{"id": 6756, "prediction": "Create a decorator to exclude files with a given pattern ."}
{"id": 6757, "prediction": "Creates a new resource change handler using the given manager factory and the given log ."}
{"id": 6758, "prediction": "Determine the fingerprint of the resource and store it in the rememberedSet ."}
{"id": 6759, "prediction": "Apply CSS imports on the given resource ."}
{"id": 6760, "prediction": "Returns a new List with only non - null items from the given Collection ."}
{"id": 6761, "prediction": "Returns whether the given request should beMinimized or not ."}
{"id": 6762, "prediction": "Finds all imported resources and adds them to the collection ."}
{"id": 6763, "prediction": "Computes the absolute url for the given resource ."}
{"id": 6764, "prediction": "Creates a string representation of the items ."}
{"id": 6765, "prediction": "Returns a list of aliases from the given alias CSV ."}
{"id": 6766, "prediction": "Initialize the context and evaluate a commons script ."}
{"id": 6767, "prediction": "Evaluates the reader as a string and returns the result as an object . The reader is closed after the call returns ."}
{"id": 6768, "prediction": "Evaluate a JavaScript in the context associated with the current thread ."}
{"id": 6769, "prediction": "Starts the processing of the resource bundles ."}
{"id": 6770, "prediction": "Returns true if the request is a handler request"}
{"id": 6771, "prediction": "Create the handler request path for the cache key ."}
{"id": 6772, "prediction": "Rename an input stream ."}
{"id": 6773, "prediction": "Compute the destination folder for the given resource type ."}
{"id": 6774, "prediction": "Process a group ."}
{"id": 6775, "prediction": "Check change for group ."}
{"id": 6776, "prediction": "Locates the resource at the given URI using the given context folder . If the context folder does not exist an exception is thrown ."}
{"id": 6777, "prediction": "Creates a new object pool and returns it ."}
{"id": 6778, "prediction": "Tries to locate the stream of the given URI within the given folder . If the folder is a jar file the underlying class loader is used to find the stream . Otherwise the underlying class loader is used to find the stream ."}
{"id": 6779, "prediction": "Opens a JAR file ."}
{"id": 6780, "prediction": "Extracts the query path from a URI ."}
{"id": 6781, "prediction": "Returns true if the request isMinimized false otherwise ."}
{"id": 6782, "prediction": "Add locators ."}
{"id": 6783, "prediction": "Decorates a given model factory with a list of transformers ."}
{"id": 6784, "prediction": "Add a require entry ."}
{"id": 6785, "prediction": "Executes the provided content as a JavaScript script ."}
{"id": 6786, "prediction": "Logs a summary of the errors found and the errors in the files ."}
{"id": 6787, "prediction": "Called when a resource is being processed ."}
{"id": 6788, "prediction": "Returns a read - write lock for the given key creating a new one if necessary ."}
{"id": 6789, "prediction": "Creates a process from the given source file ."}
{"id": 6790, "prediction": "Parses a string into a list of properties ."}
{"id": 6791, "prediction": "Gets the current task info ."}
{"id": 6792, "prediction": "Returns theCompilerWrapper . compile command for the specified input ."}
{"id": 6793, "prediction": "Parses a single header ."}
{"id": 6794, "prediction": "Add the no - cache headers to the map ."}
{"id": 6795, "prediction": "Gets the path info from a location string ."}
{"id": 6796, "prediction": "Gets servlet path from location ."}
{"id": 6797, "prediction": "Returns true if the path matches the request URI ."}
{"id": 6798, "prediction": "Loads a regular expression pattern from properties ."}
{"id": 6799, "prediction": "Copies the content from the given reader to the given writer . Closes the reader when done ."}
{"id": 6800, "prediction": "Creates a new temporary file with the given extension ."}
{"id": 6801, "prediction": "Removes leading and trailing spaces and new line characters from imageUrl ."}
{"id": 6802, "prediction": "Sets the value of the given attribute to the given object ."}
{"id": 6803, "prediction": "Generates a data URI from an input stream ."}
{"id": 6804, "prediction": "Generate the data uri for the given bytes and write it to the given writer ."}
{"id": 6805, "prediction": "Sets the given context with the given configuration ."}
{"id": 6806, "prediction": "Declarative Services method for removing the CorrelationId ."}
{"id": 6807, "prediction": "Check whether the given cache key has changed ."}
{"id": 6808, "prediction": "Called when an exception occurs ."}
{"id": 6809, "prediction": "Check if the resource has changed and call the callback if needed ."}
{"id": 6810, "prediction": "Updates the hash of the group and removes all persisted groups ."}
{"id": 6811, "prediction": "Checks if the container has a resource of the given type ."}
{"id": 6812, "prediction": "Creates a process for the given source file and destination file ."}
{"id": 6813, "prediction": "Encode a serializable object as a String using no - options ."}
{"id": 6814, "prediction": "Process groups from XML ."}
{"id": 6815, "prediction": "Parse a group definition ."}
{"id": 6816, "prediction": "Create a group from an XML element ."}
{"id": 6817, "prediction": "Parse a resource element and add it to the collection of resources ."}
{"id": 6818, "prediction": "Get all resources for a given group ."}
{"id": 6819, "prediction": "Logs the running time of this timer ."}
{"id": 6820, "prediction": "Stops a named timer ."}
{"id": 6821, "prediction": "Retrieves a timer of the given string name for the current thread . If no such timer exists yet then it will be newly created ."}
{"id": 6822, "prediction": "Returns a timer for the given string name and todoFlags . If no such timer exists it will be newly created ."}
{"id": 6823, "prediction": "Prints the statistics for this job ."}
{"id": 6824, "prediction": "Wake up the worker threads that are currently running ."}
{"id": 6825, "prediction": "Creates a snapshot of the number of running jobs submitted or the number of running contexts ."}
{"id": 6826, "prediction": "Updates the counter with the finished jobs ."}
{"id": 6827, "prediction": "Updates the counter only if the provided value is smaller than the provided value ."}
{"id": 6828, "prediction": "Override if you want to override the default visit behavior ."}
{"id": 6829, "prediction": "The main purpose of this method is to instert all properties of the given property into the taxonomy ."}
{"id": 6830, "prediction": "Ensures that the input loading has been completed ."}
{"id": 6831, "prediction": "Restore saturation ."}
{"id": 6832, "prediction": "Returns whether or not the current context is consistent ."}
{"id": 6833, "prediction": "Restore the taxonomy ."}
{"id": 6834, "prediction": "Restore the current instance taxonomy ."}
{"id": 6835, "prediction": "Gets a Proof for entailment inference ."}
{"id": 6836, "prediction": "The preExecute method must be called before the worker instance is initialized ."}
{"id": 6837, "prediction": "Recursively invalidate all reasoner stages ."}
{"id": 6838, "prediction": "Returns a collection of individuals to add to the queue ."}
{"id": 6839, "prediction": "Returns a collection of individuals to remove ."}
{"id": 6840, "prediction": "Returns an UnsupportedOperationException with a message indicating that the specified method is not implemented ."}
{"id": 6841, "prediction": "Remove the element at the specified position ."}
{"id": 6842, "prediction": "Remove the element at the specified position ."}
{"id": 6843, "prediction": "Returns the index of the first element in the array del that is not in the array d . Returns the index of the first element which is in the array del ."}
{"id": 6844, "prediction": "Returns true if the given array contains the given object false otherwise ."}
{"id": 6845, "prediction": "Adds the given element if it is not already there . Returns true if the element is already there ."}
{"id": 6846, "prediction": "This method checks the number of occurrences of the element ."}
{"id": 6847, "prediction": "Add the specified ClassConclusionTimer to this time pool ."}
{"id": 6848, "prediction": "Add a timer to the application ."}
{"id": 6849, "prediction": "Puts the specified key value pair into the specified array and returns the old value ."}
{"id": 6850, "prediction": "Remove the entry with the given key from the map ."}
{"id": 6851, "prediction": "Enlarges the map by adding a key value pair to the end of the map ."}
{"id": 6852, "prediction": "Reduces the size of the keys and values arrays ."}
{"id": 6853, "prediction": "Saves a configuration to a file ."}
{"id": 6854, "prediction": "Prints out the declaration of all ElkClasses in the class taxonomy ."}
{"id": 6855, "prediction": "Returns all the instances of the given node ."}
{"id": 6856, "prediction": "Removes all of the elements from this set ."}
{"id": 6857, "prediction": "Concatenate multiple hashes . If finalize is true adds the hash to the end of the list . If finalize is false add the hash to the end of the list ."}
{"id": 6858, "prediction": "Concatenates a list of hashes into a single hash ."}
{"id": 6859, "prediction": "Copies all data from an InputStream to an OutputStream ."}
{"id": 6860, "prediction": "Returns aMonitor that will be Delegated to the specified list ofMonitors ."}
{"id": 6861, "prediction": "Processes the taxomy ."}
{"id": 6862, "prediction": "Submits an input to the queue ."}
{"id": 6863, "prediction": "Appends the content of the given ElkObject to the given appendable ."}
{"id": 6864, "prediction": "Marks the given query class as not computed ."}
{"id": 6865, "prediction": "Adds a new direct type node ."}
{"id": 6866, "prediction": "Checks that the start position of the given sub - object is present in the full chain . If not an IllegalArgumentException is thrown ."}
{"id": 6867, "prediction": "Returns a new set that contains all elements of the input set that don t match the given condition ."}
{"id": 6868, "prediction": "Returns a set consisting of the elements of the given set ."}
{"id": 6869, "prediction": "Adds a single element to the matrix ."}
{"id": 6870, "prediction": "Removes the specified object from the set ."}
{"id": 6871, "prediction": "Add the given ClassConclusionCounter to this Counter ."}
{"id": 6872, "prediction": "Logs the memory usage of the JVM ."}
{"id": 6873, "prediction": "Set the configuration options to be used by this reasoner ."}
{"id": 6874, "prediction": "Shuts down the reasoner ."}
{"id": 6875, "prediction": "Prints the header of the file ."}
{"id": 6876, "prediction": "Print a list of values ."}
{"id": 6877, "prediction": "Returns the specified number of characters as a String ."}
{"id": 6878, "prediction": "Adds the given counter to the rule counter ."}
{"id": 6879, "prediction": "Writes the given resource to the given writer ."}
{"id": 6880, "prediction": "Gets the action input parameter with the specified name ."}
{"id": 6881, "prediction": "Returns the property descriptor for the given property path and type ."}
{"id": 6882, "prediction": "Gets all required parameters ."}
{"id": 6883, "prediction": "Returns true if the class is a single value type false otherwise ."}
{"id": 6884, "prediction": "Adds the specified rel parameter ."}
{"id": 6885, "prediction": "Sets the type of the link ."}
{"id": 6886, "prediction": "Adds the specified href lang to the link ."}
{"id": 6887, "prediction": "Adds a rev parameter to the link ."}
{"id": 6888, "prediction": "Adds a parameter to the link ."}
{"id": 6889, "prediction": "Expand the partial URI with the specified arguments ."}
{"id": 6890, "prediction": "Returns a list of rels ."}
{"id": 6891, "prediction": "Gets the revs parameter from the link parameters ."}
{"id": 6892, "prediction": "Returns true if all required parameters have values false otherwise ."}
{"id": 6893, "prediction": "Returns the formatted version of the given value ."}
{"id": 6894, "prediction": "Returns whether the property is hidden or not ."}
{"id": 6895, "prediction": "Returns true if property contains value else false ."}
{"id": 6896, "prediction": "Returns true if this field has explicit or implicit property include value false otherwise ."}
{"id": 6897, "prediction": "Returns true if the value is required for the request ."}
{"id": 6898, "prediction": "Returns the default value for the request parameter or null if the parameter is not defined ."}
{"id": 6899, "prediction": "Returns the name of the parameter ."}
{"id": 6900, "prediction": "Returns the property or parameter name from the Expose annotation or the parameter name ."}
{"id": 6901, "prediction": "Determine the Vocab for the given bean and mix in class"}
{"id": 6902, "prediction": "Gets the query ."}
{"id": 6903, "prediction": "Append a form element ."}
{"id": 6904, "prediction": "Generates an input button with the specified type and value ."}
{"id": 6905, "prediction": "Appends an input element or a select with possible values ."}
{"id": 6906, "prediction": "Adds an additional affordance builder action descriptor ."}
{"id": 6907, "prediction": "Returns this as a partial URI template components ."}
{"id": 6908, "prediction": "Returns a partial URI template components with optional variables removed ."}
{"id": 6909, "prediction": "Returns the first node with the given name ."}
{"id": 6910, "prediction": "Returns the first node with the specified rel ."}
{"id": 6911, "prediction": "Returns an iterator over the nodes contained in this UberNode ."}
{"id": 6912, "prediction": "Returns a PersistentHashMap containing all of the mappings of the given collection ."}
{"id": 6913, "prediction": "Returns a new tree map based on the contents of the supplied collection ."}
{"id": 6914, "prediction": "Returns an empty map based on the specified Comparator ."}
{"id": 6915, "prediction": "Returns a sorted set view of the keys in this map ."}
{"id": 6916, "prediction": "Returns the last key in this map ."}
{"id": 6917, "prediction": "Returns a Xform for the given list of items ."}
{"id": 6918, "prediction": "This is the main entry point for the Fn2 algorithm ."}
{"id": 6919, "prediction": "Drops elements while the predicate is true ."}
{"id": 6920, "prediction": "Folds the elements of the matrix using the specified reducer ."}
{"id": 6921, "prediction": "Returns a tuple with the same key and value as the given map entry ."}
{"id": 6922, "prediction": "Applies the match function between two Fn1 objects"}
{"id": 6923, "prediction": "Registers a type array with the server ."}
{"id": 6924, "prediction": "Gets the element at the specified index ."}
{"id": 6925, "prediction": "Appends the specified element to the end of the tree ."}
{"id": 6926, "prediction": "Returns a PersistentVector composed of the given items ."}
{"id": 6927, "prediction": "Returns an mutable set containing the given items ."}
{"id": 6928, "prediction": "Creates a new MutableList based on the contents of the passed in array ."}
{"id": 6929, "prediction": "Returns a set containing the given items ."}
{"id": 6930, "prediction": "Creates an immutable view of a vector ."}
{"id": 6931, "prediction": "Returns an unmodifiable collection view of the given array ."}
{"id": 6932, "prediction": "indents a given number of times ."}
{"id": 6933, "prediction": "Returns a String representation of an array of objects ."}
{"id": 6934, "prediction": "Returns a LazyRef instance for the specified producer function ."}
{"id": 6935, "prediction": "Apply the operation and return the lazily computed value ."}
{"id": 6936, "prediction": "Inserts an item into an array at the specified index ."}
{"id": 6937, "prediction": "Returns a copy of an array ."}
{"id": 6938, "prediction": "Suspend the current thread if the current thread has a tx associated with this thread ."}
{"id": 6939, "prediction": "This method is called before the asynchronous operation is completed . It sets the asyncOperationInitiated flag to true and SuspendIfAssoaciated is true ."}
{"id": 6940, "prediction": "Builds a list of service components from a . jar file ."}
{"id": 6941, "prediction": "Checks if aDirectory is a directory and throws an exception if not ."}
{"id": 6942, "prediction": "Creates the inheritance link for the given class and superClass ."}
{"id": 6943, "prediction": "Copies all methods from the given source class to the given destination class ."}
{"id": 6944, "prediction": "Copies all methods to the given destination class with the given exceptions ."}
{"id": 6945, "prediction": "Given a FQDNNode return a tree item representing the tree ."}
{"id": 6946, "prediction": "Removes the specified entity from the current context ."}
{"id": 6947, "prediction": "Returns true if notifications is enabled false otherwise ."}
{"id": 6948, "prediction": "Gets the names of the ra links that are not defined in the given component repository ."}
{"id": 6949, "prediction": "Install the given service component"}
{"id": 6950, "prediction": "Uninstall a service ."}
{"id": 6951, "prediction": "Returns true if the specified ra link name is referenced by this resource adapter ."}
{"id": 6952, "prediction": "Returns the usage parameter sets for the specified sbb ."}
{"id": 6953, "prediction": "Resets all usage parameters ."}
{"id": 6954, "prediction": "Returns all profiles for the specified profile table ."}
{"id": 6955, "prediction": "Returns the Activity of the specified profile table ."}
{"id": 6956, "prediction": "Retrieve the profile with the specified attribute value ."}
{"id": 6957, "prediction": "Displays the result as text ."}
{"id": 6958, "prediction": "Converts an array into a string representation using the given property editor ."}
{"id": 6959, "prediction": "Fire an event to an other activity ."}
{"id": 6960, "prediction": "Binds a name to this node ."}
{"id": 6961, "prediction": "Unbinds a name ."}
{"id": 6962, "prediction": "Look up an object by its name ."}
{"id": 6963, "prediction": "Return the name bindings for this node ."}
{"id": 6964, "prediction": "Return the next SbbEntity from the sbb entities that handled the current SbbEvent"}
{"id": 6965, "prediction": "Returns true if this level is higher than the given level ."}
{"id": 6966, "prediction": "Extracts the contents of a jar file to a directory ."}
{"id": 6967, "prediction": "Reads the data from the input stream and writes it to the output stream ."}
{"id": 6968, "prediction": "Associates the specified value with the specified key ."}
{"id": 6969, "prediction": "Attaches the specified SbbEntityID to the current node ."}
{"id": 6970, "prediction": "Detaches the specified entity from the current thread ."}
{"id": 6971, "prediction": "Returns true if the entity has no children ."}
{"id": 6972, "prediction": "Gets the names of the SBB entities that have been attached to the channel ."}
{"id": 6973, "prediction": "Attach a timer to the node ."}
{"id": 6974, "prediction": "Removes the given timer from the list of attached timers ."}
{"id": 6975, "prediction": "Returns true if there are no timers attached to the node ."}
{"id": 6976, "prediction": "Returns the names of all attached timers ."}
{"id": 6977, "prediction": "Add a name bound to the element ."}
{"id": 6978, "prediction": "Removes the bound name if it exists ."}
{"id": 6979, "prediction": "Returns true if no names are bound ."}
{"id": 6980, "prediction": "Returns a copy of the names bound nodes ."}
{"id": 6981, "prediction": "Sets the value of the specified attribute on the specified node ."}
{"id": 6982, "prediction": "Returns the value of the specified attribute ."}
{"id": 6983, "prediction": "Returns a copy of the attributes of this node ."}
{"id": 6984, "prediction": "Creates the MBeanNotificationInfo for the usage notification ."}
{"id": 6985, "prediction": "Send a usage notification ."}
{"id": 6986, "prediction": "Downloads a remoteDU ."}
{"id": 6987, "prediction": "Update the names of the components that have been deployed"}
{"id": 6988, "prediction": "Installs the given DU ."}
{"id": 6989, "prediction": "Uninstalls a deployable unit ."}
{"id": 6990, "prediction": "Method to process the internal uninstallation of the DU ."}
{"id": 6991, "prediction": "Shows the status of the currently deployed components ."}
{"id": 6992, "prediction": "Returns true if the log record has been logged false otherwise ."}
{"id": 6993, "prediction": "Returns a Logger instance for the given LogRecord ."}
{"id": 6994, "prediction": "Get the referring components of the specified component ."}
{"id": 6995, "prediction": "Returns all the SbbEntities in this Node ."}
{"id": 6996, "prediction": "Gets the permissions from the current policy ."}
{"id": 6997, "prediction": "Gets the policy source names ."}
{"id": 6998, "prediction": "Checks if a profile with the given name exists on the profile table ."}
{"id": 6999, "prediction": "Remove the profile ."}
{"id": 7000, "prediction": "Updates the configuration properties ."}
{"id": 7001, "prediction": "Called by the SLEE entity when it is stopped ."}
{"id": 7002, "prediction": "If the object is not currently running this method will do nothing . If the object is not currently running this will do nothing ."}
{"id": 7003, "prediction": "Activates this entity . If the entity is active then the object is deactivated . If the entity is not active then an exception is thrown ."}
{"id": 7004, "prediction": "Deactivate this entity and all its activities ."}
{"id": 7005, "prediction": "Schedules the end of all activities ."}
{"id": 7006, "prediction": "Remove this entity from the pool ."}
{"id": 7007, "prediction": "Returns the adaptable interface of the given resource type ."}
{"id": 7008, "prediction": "Informs the object that the specified service is now active ."}
{"id": 7009, "prediction": "Derive the ActivityHandle from the given handle ."}
{"id": 7010, "prediction": "This method is called when an activity is ended ."}
{"id": 7011, "prediction": "This method is used to update configuration properties ."}
{"id": 7012, "prediction": "Verifies that the new properties are valid"}
{"id": 7013, "prediction": "raStopping the object ."}
{"id": 7014, "prediction": "This method is called when the resource adapter is inactive ."}
{"id": 7015, "prediction": "This method will throw an InvalidStateException if the resource adapter is in state UNCONFIGURED ."}
{"id": 7016, "prediction": "Declarative Services method for unsetting the resource adapter context"}
{"id": 7017, "prediction": "Declarative Services method for unsetting the faultTolerant resource adapter context"}
{"id": 7018, "prediction": "Builds the profile attribute map ."}
{"id": 7019, "prediction": "Resume the event context by routing the event related with this context ."}
{"id": 7020, "prediction": "Returns the set of activity context handles ."}
{"id": 7021, "prediction": "Remove the object and its usage parameters ."}
{"id": 7022, "prediction": "Gets the MBean representing the usage of a parameter set ."}
{"id": 7023, "prediction": "Decorates an abstract class ."}
{"id": 7024, "prediction": "Fires the event with the specified event object and address for the specified SbbEntity ."}
{"id": 7025, "prediction": "Fire an event on the specified SBB object ."}
{"id": 7026, "prediction": "Returns the profile CMP method associated with the specified profile ID ."}
{"id": 7027, "prediction": "Gets the SbbUsageParameterSet ."}
{"id": 7028, "prediction": "Gets the abstract methods from the given class ."}
{"id": 7029, "prediction": "Returns a map with the methods from the interface and all super abstract methods from the interface ."}
{"id": 7030, "prediction": "Create a new sbb object pool"}
{"id": 7031, "prediction": "Remove the Pool for the profile table and add the action to the set of commit actions ."}
{"id": 7032, "prediction": "Is the given notification source the given alarm?"}
{"id": 7033, "prediction": "Create a Alarm with the given parameters ."}
{"id": 7034, "prediction": "Gets the usage parameter set of the specified profile object ."}
{"id": 7035, "prediction": "Gets the EventTypeDescriptor ."}
{"id": 7036, "prediction": "Returns true if the method accepts the given URL ."}
{"id": 7037, "prediction": "Method init ."}
{"id": 7038, "prediction": "Start a new instance of the DeployableUnitWrapper class"}
{"id": 7039, "prediction": "Stops a given deployable unit ."}
{"id": 7040, "prediction": "Shows the status of the deployment manager ."}
{"id": 7041, "prediction": "Execute actions after commit actions ."}
{"id": 7042, "prediction": "Execute actions after commit priority actions ."}
{"id": 7043, "prediction": "Execute actions after rollback actions ."}
{"id": 7044, "prediction": "Executes the before commit actions ."}
{"id": 7045, "prediction": "Execute before commit priority actions ."}
{"id": 7046, "prediction": "Returns the names of the defined tracers ."}
{"id": 7047, "prediction": "Creates a new Tracer with the given name ."}
{"id": 7048, "prediction": "Remove replicated data ."}
{"id": 7049, "prediction": "Registers all available PropertyEditor instances ."}
{"id": 7050, "prediction": "Generate the concrete usage parameter class for the given component ."}
{"id": 7051, "prediction": "Get an object pool by serviceID and sbbID ."}
{"id": 7052, "prediction": "Create a new object pool"}
{"id": 7053, "prediction": "Executes an activity ."}
{"id": 7054, "prediction": "Starts an activity if needed ."}
{"id": 7055, "prediction": "End an activity"}
{"id": 7056, "prediction": "Checks the preconditions for the FireableEventType implementation ."}
{"id": 7057, "prediction": "Fires the specified event on the specified entity ."}
{"id": 7058, "prediction": "Generates the SbbLocalObjectConcrete Class ."}
{"id": 7059, "prediction": "Make the property getter ."}
{"id": 7060, "prediction": "Converts the given argument to an object ."}
{"id": 7061, "prediction": "Sets the profile table name and the profile name ."}
{"id": 7062, "prediction": "Extracts the message from the given result ."}
{"id": 7063, "prediction": "Returns true if the object is a SbbLocalObject"}
{"id": 7064, "prediction": "Returns true if this relation contains all elements of the given collection false otherwise ."}
{"id": 7065, "prediction": "Removes all elements from the specified collection ."}
{"id": 7066, "prediction": "Returns true if this level is higher than the given level ."}
{"id": 7067, "prediction": "Resolves the state of the stream according to the current level ."}
{"id": 7068, "prediction": "Detach all classes from the class pool ."}
{"id": 7069, "prediction": "Adds a profile call to the current SLEE Transaction ."}
{"id": 7070, "prediction": "Returns the profile with the specified name or null if the profile does not exist ."}
{"id": 7071, "prediction": "Factory method to passivate a profile object back to the transaction end ."}
{"id": 7072, "prediction": "Set the component ID from the specified text . If the specified text is null or empty the component ID is used instead ."}
{"id": 7073, "prediction": "Generates the concrete class for the activity context interface ."}
{"id": 7074, "prediction": "Generate the concrete methods for the given interface ."}
{"id": 7075, "prediction": "Set the cmp attribute value to the specified value ."}
{"id": 7076, "prediction": "Adds a name binding ."}
{"id": 7077, "prediction": "Removes all binding names from the current activity context ."}
{"id": 7078, "prediction": "Remove a name binding from the cache ."}
{"id": 7079, "prediction": "Attach a timer to the cache ."}
{"id": 7080, "prediction": "Remove all attached timers from the cache ."}
{"id": 7081, "prediction": "Attaches the specified SbbEntityID to the current activity context ."}
{"id": 7082, "prediction": "Detaches the specified sbb entity from the cache ."}
{"id": 7083, "prediction": "Get the sorted list of SbbEntity IDs that are not in the excludeSet ."}
{"id": 7084, "prediction": "This method is used to end an activity ."}
{"id": 7085, "prediction": "Adds a component to the DU ."}
{"id": 7086, "prediction": "Returns a collection of all external dependencies which are contained in this DU ."}
{"id": 7087, "prediction": "Returns true if the dependencies satisfied ."}
{"id": 7088, "prediction": "Returns true if there are no duplicate components ."}
{"id": 7089, "prediction": "Returns all actions related with components already installed ."}
{"id": 7090, "prediction": "Gets the actions related with the DU ."}
{"id": 7091, "prediction": "Checks to see if this is a referringDU ."}
{"id": 7092, "prediction": "Close the specified profile ."}
{"id": 7093, "prediction": "Returns the JMX ObjectName of the profile table name and name ."}
{"id": 7094, "prediction": "Method to change the read - write state of the profile mbean"}
{"id": 7095, "prediction": "Internal method to before setting the field of a profile ."}
{"id": 7096, "prediction": "This method is called after a field is set on a profile ."}
{"id": 7097, "prediction": "Returns true if the field has already been set for a profile ."}
{"id": 7098, "prediction": "This method is called after a get Method is called to get the value of the field of the current profile ."}
{"id": 7099, "prediction": "Call beforeManagementMethodInvocation on a profile ."}
{"id": 7100, "prediction": "after management method invocation"}
{"id": 7101, "prediction": "Recursively deletes a directory and all its contents ."}
{"id": 7102, "prediction": "Creates a default constructor and adds it to the sbbConcreteClass ."}
{"id": 7103, "prediction": "Creates the default usage parameter getter ."}
{"id": 7104, "prediction": "Create the method to get the SbbEntity getter and setter ."}
{"id": 7105, "prediction": "Creates the fire event methods for the specified event entries ."}
{"id": 7106, "prediction": "Creates the method to call asSbbActivityContextInterface ."}
{"id": 7107, "prediction": "Adds an expression to the list for cycles ."}
{"id": 7108, "prediction": "Associates the specified target object with the specified key ."}
{"id": 7109, "prediction": "Attempts to rebind the specified object to the specified target object . If the object cannot be rebinded an exception is thrown ."}
{"id": 7110, "prediction": "Decorates the Abstract Sbb Class ."}
{"id": 7111, "prediction": "Invokes the method and returns void ."}
{"id": 7112, "prediction": "Get the real field name"}
{"id": 7113, "prediction": "Sets the value of the field with the given name ."}
{"id": 7114, "prediction": "Returns the value of the field with the given name of the given return type ."}
{"id": 7115, "prediction": "Set the profile context ."}
{"id": 7116, "prediction": "Called when the profile entity has been initialized . If the profile entity has not been initialized yet a new instance is created ."}
{"id": 7117, "prediction": "Declarative Services method for unsetting the profile context"}
{"id": 7118, "prediction": "Gets the profile local object ."}
{"id": 7119, "prediction": "Fires a profile added or updated event if the profile is dirty ."}
{"id": 7120, "prediction": "Returns the wrapped profile SLE object or null if the wrapped object is null ."}
{"id": 7121, "prediction": "Create a class from its fully qualified class name and interfaces ."}
{"id": 7122, "prediction": "Creates the inheritance link for the given class ."}
{"id": 7123, "prediction": "Adds an annotation to a class or a method ."}
{"id": 7124, "prediction": "Adds the member values to the annotation ."}
{"id": 7125, "prediction": "Returns the ActivityContextInterface for the given activity ."}
{"id": 7126, "prediction": "Gets the class pool ."}
{"id": 7127, "prediction": "Set the deployable unit ."}
{"id": 7128, "prediction": "Called when the classloader and permissions are undeployed ."}
{"id": 7129, "prediction": "Executes the specified slee activity ."}
{"id": 7130, "prediction": "Returns the Class object of the class or any of the interfaces implemented by the class or any of the super interfaces ."}
{"id": 7131, "prediction": "Returns all abstract methods from the given interface including those that are not implemented by any of the given interfaces ."}
{"id": 7132, "prediction": "Resolve the specified entity ."}
{"id": 7133, "prediction": "Check the tracer name to see if it is valid"}
{"id": 7134, "prediction": "Returns a collection of ProfileLocalObjects from the specified profile table that match the specified query name ."}
{"id": 7135, "prediction": "Checks the dependencies of the specified component ."}
{"id": 7136, "prediction": "Create a temporary directory for a given DU ."}
{"id": 7137, "prediction": "Returns the entity manager for the current transaction"}
{"id": 7138, "prediction": "Start the element"}
{"id": 7139, "prediction": "Switch the class loader of the given ProfileObject to the specified class loader ."}
{"id": 7140, "prediction": "returns null if methodToCallname is not found"}
{"id": 7141, "prediction": "Checks if the current transaction is the same as this one ."}
{"id": 7142, "prediction": "Convert last access time to TTL time ."}
{"id": 7143, "prediction": "Returns true if the profile after action class is visible ."}
{"id": 7144, "prediction": "Returns the ProfileObjectImpl object for the given profile entity in the current transaction . If the object does not exist in the current transaction a new one is created ."}
{"id": 7145, "prediction": "Get the list of logger names that match a given regex ."}
{"id": 7146, "prediction": "Resets the logger levels to the default level ."}
{"id": 7147, "prediction": "Clears all registered loggers ."}
{"id": 7148, "prediction": "Add a logger to the MBean ."}
{"id": 7149, "prediction": "Add a socket handler"}
{"id": 7150, "prediction": "Remove this handler ."}
{"id": 7151, "prediction": "Convert tracer name to log4j logger name ."}
{"id": 7152, "prediction": "Synchronize the level with the underlying log4j logger ."}
{"id": 7153, "prediction": "Assign the current trace level to the given log4j level ."}
{"id": 7154, "prediction": "Resets the child flags of the cache ."}
{"id": 7155, "prediction": "Send a notification for the current time ."}
{"id": 7156, "prediction": "Check the tracer name to see if it is valid"}
{"id": 7157, "prediction": "Writes the given object to the given output stream ."}
{"id": 7158, "prediction": "Read an object from an ObjectInputStream ."}
{"id": 7159, "prediction": "Add a domain to the direct dependencies of this class loader"}
{"id": 7160, "prediction": "Returns all the dependencies of this class loader ."}
{"id": 7161, "prediction": "Tries to find the class with the given name and returns it ."}
{"id": 7162, "prediction": "Tries to find a resource that has the given name but is not on the classpath ."}
{"id": 7163, "prediction": "Tries to find all resources with the given name but does not throw an exception ."}
{"id": 7164, "prediction": "Creates the profile MBean and registers it with the current transaction context ."}
{"id": 7165, "prediction": "Resume the specified transaction ."}
{"id": 7166, "prediction": "Returns a set of all the Sbb IDs in the given component repository ."}
{"id": 7167, "prediction": "Returns all link to all the ResourceAdaptorEntityBindings defined in the given component repository ."}
{"id": 7168, "prediction": "Initializes the slee container ."}
{"id": 7169, "prediction": "Shut down the current slee ."}
{"id": 7170, "prediction": "Validates the state transition ."}
{"id": 7171, "prediction": "Generates the method body for the usage parameter getter for the profileConcreteClass"}
{"id": 7172, "prediction": "Update the specified field with the specified value ."}
{"id": 7173, "prediction": "Builds the PolyJDBC instance ."}
{"id": 7174, "prediction": "Set the value of the specified field ."}
{"id": 7175, "prediction": "Perform the specified operation within the context of the current transaction ."}
{"id": 7176, "prediction": "Creates a new region request from a string representation ."}
{"id": 7177, "prediction": "Gets the relative box ."}
{"id": 7178, "prediction": "Resolves the absolute and relative box to the image dimensions ."}
{"id": 7179, "prediction": "Gets the onType string from the JSON stream context ."}
{"id": 7180, "prediction": "Set the rendering hints for this resource ."}
{"id": 7181, "prediction": "Adds a viewing hint to the resource ."}
{"id": 7182, "prediction": "Set a list of renderings ."}
{"id": 7183, "prediction": "Add a rendering to the resource ."}
{"id": 7184, "prediction": "Merge a list of profiles into a single profile ."}
{"id": 7185, "prediction": "Merges this profile with the specified profile and returns the merged profile ."}
{"id": 7186, "prediction": "Convert a string to a RotationRequest ."}
{"id": 7187, "prediction": "Create a SizeRequest from a string representation ."}
{"id": 7188, "prediction": "Initialize the AndroidDebugBridge and create and restart the ADB connection ."}
{"id": 7189, "prediction": "Get the current XML dump of this process ."}
{"id": 7190, "prediction": "Tell the device to handle a Pop box"}
{"id": 7191, "prediction": "Push the handlePopBox . jar to the device s temp directory ."}
{"id": 7192, "prediction": "command line tool to clean temporary files"}
{"id": 7193, "prediction": "pull dump from device to pc"}
{"id": 7194, "prediction": "Returns the full path to the crash log file in the external storage ."}
{"id": 7195, "prediction": "Replaces all non - tab characters with space characters with tab width ."}
{"id": 7196, "prediction": "indents the specified number of spaces ."}
{"id": 7197, "prediction": "Returns a collection of tokens based on the text ."}
{"id": 7198, "prediction": "Converts text into plain text ."}
{"id": 7199, "prediction": "Escapes special characters in tag attributes ."}
{"id": 7200, "prediction": "Adds an exception to the pool . If the exception is an SQLTimeoutException and the transaction is rollback the exception will be stored in the initial list ."}
{"id": 7201, "prediction": "Closes the statement and removes it from the statement cache ."}
{"id": 7202, "prediction": "Finds the fully qualified class name of the parent type ."}
{"id": 7203, "prediction": "Write the current state of the filer to a file ."}
{"id": 7204, "prediction": "Write a single divider to the output stream"}
{"id": 7205, "prediction": "Appends one or more bit strings to an array of strings ."}
{"id": 7206, "prediction": "Reads this header from an input stream ."}
{"id": 7207, "prediction": "Get a list of objects ."}
{"id": 7208, "prediction": "Gets a list of objects from the given path ."}
{"id": 7209, "prediction": "Creates and sets the klov report object ."}
{"id": 7210, "prediction": "Adds a screen capture to the current step ."}
{"id": 7211, "prediction": "Set the system info on the extent report ."}
{"id": 7212, "prediction": "Returns a Selector that allows the specified property to be selected from the result set ."}
{"id": 7213, "prediction": "Selects a property by its name and alias as a value ."}
{"id": 7214, "prediction": "Extract validation annotation data ."}
{"id": 7215, "prediction": "Extract all annotations for a property of a class ."}
{"id": 7216, "prediction": "Finds annotations on a property ."}
{"id": 7217, "prediction": "Returns the property descriptor for the specified class and its super classes ."}
{"id": 7218, "prediction": "Do a lookup with the given object expression and default value ."}
{"id": 7219, "prediction": "Convert a map to an object ."}
{"id": 7220, "prediction": "Create a new object from a map ."}
{"id": 7221, "prediction": "Create a new complex object from a Map of field values ."}
{"id": 7222, "prediction": "Returns a map where the key is the property name and the value is the property value"}
{"id": 7223, "prediction": "Convert an object to a map ."}
{"id": 7224, "prediction": "Gets the values from an annotation ."}
{"id": 7225, "prediction": "Create a new validator associated with this field ."}
{"id": 7226, "prediction": "Looks up the validators and initialize the them with the properties ."}
{"id": 7227, "prediction": "Lookup a validator in the registry ."}
{"id": 7228, "prediction": "Apply validation meta data properties to a validator ."}
{"id": 7229, "prediction": "If the property is not in the map remove it from the map"}
{"id": 7230, "prediction": "Sets the current time of the thread ."}
{"id": 7231, "prediction": "Returns the total number of cache regions ."}
{"id": 7232, "prediction": "Returns the hash of the given object ."}
{"id": 7233, "prediction": "Creates the default options ."}
{"id": 7234, "prediction": "Opens a database ."}
{"id": 7235, "prediction": "Puts all the given values into the database ."}
{"id": 7236, "prediction": "Removes all of the given keys from the cache ."}
{"id": 7237, "prediction": "Returns a key - value iterable where the key is contained in the start key ."}
{"id": 7238, "prediction": "Load all entries with the given keys ."}
{"id": 7239, "prediction": "Closes the underlying database ."}
{"id": 7240, "prediction": "Perform a reduction on an array of doubles ."}
{"id": 7241, "prediction": "Perform a reduceBy on an array of doubles ."}
{"id": 7242, "prediction": "Returns the variance of the specified array of doubles ."}
{"id": 7243, "prediction": "Returns the mean of the values in the array as a double ."}
{"id": 7244, "prediction": "Invokes a method from an object with no arguments ."}
{"id": 7245, "prediction": "Performs a reduction on the elements of an array ."}
{"id": 7246, "prediction": "Create a string representation of a timestamp in UTC ."}
{"id": 7247, "prediction": "Returns true if the given object matches the criteria ."}
{"id": 7248, "prediction": "Creates a not in criterion ."}
{"id": 7249, "prediction": "Create a criteria from a list of objects ."}
{"id": 7250, "prediction": "Create a criteria from its JSON representation ."}
{"id": 7251, "prediction": "Adds an array to the end of the list ."}
{"id": 7252, "prediction": "Returns the maximum element in the array or null if the array is empty ."}
{"id": 7253, "prediction": "Returns the first N items of the given list ."}
{"id": 7254, "prediction": "Returns the last element of the given list ."}
{"id": 7255, "prediction": "Returns the last N items of the given list ."}
{"id": 7256, "prediction": "Returns a list containing the least of the specified number of elements from the specified list ."}
{"id": 7257, "prediction": "Returns the minimum element of a list or null if the list is empty ."}
{"id": 7258, "prediction": "Returns the minimum element of the array or null if the array is empty ."}
{"id": 7259, "prediction": "Processes the array of maps and adds them to the array of maps ."}
{"id": 7260, "prediction": "Handles a collection of maps and adds them to a new collection ."}
{"id": 7261, "prediction": "Create an object from a map of properties ."}
{"id": 7262, "prediction": "Returns the value associated with the given key ."}
{"id": 7263, "prediction": "Utility method to create a toolTip in a particular namespace and field name - space ."}
{"id": 7264, "prediction": "Generates a label value for the given field ."}
{"id": 7265, "prediction": "Add a hex string to the buffer ."}
{"id": 7266, "prediction": "Process all messages from the read queue ."}
{"id": 7267, "prediction": "Processes all the messages in the write queue and updates the batch size accordingly ."}
{"id": 7268, "prediction": "Start the queue process"}
{"id": 7269, "prediction": "Returns the character at the specified index of the specified string ."}
{"id": 7270, "prediction": "Returns a slice of the specified string starting from the specified index ."}
{"id": 7271, "prediction": "Determines if the specified string contains any of the specified characters ."}
{"id": 7272, "prediction": "Add the specified character to the end of the specified string ."}
{"id": 7273, "prediction": "Adds objects to a string ."}
{"id": 7274, "prediction": "Construct a compacted version of the given string ."}
{"id": 7275, "prediction": "Splits the specified string into an array of strings ."}
{"id": 7276, "prediction": "Split a string by space"}
{"id": 7277, "prediction": "Split the given string byPipe and return an array of strings ."}
{"id": 7278, "prediction": "Convert an array of char arrays to a string array ."}
{"id": 7279, "prediction": "Converts a string to camelCase"}
{"id": 7280, "prediction": "Return true if the specified string is inside of the specified string ."}
{"id": 7281, "prediction": "underBarCase the specified string ."}
{"id": 7282, "prediction": "Convert a Number into a String"}
{"id": 7283, "prediction": "Sorts the given sorts ."}
{"id": 7284, "prediction": "Sorts the given list according to the comparator based on the fields provided ."}
{"id": 7285, "prediction": "Returns a comparator for the given fields ."}
{"id": 7286, "prediction": "Get a list of child comparators ."}
{"id": 7287, "prediction": "Returns true if the given value is present in the given map false otherwise ."}
{"id": 7288, "prediction": "Returns true if the expected value equals the got value . If the expected value is not the same as the got value the die is logged ."}
{"id": 7289, "prediction": "Checks to see if two arrays are equal or throw an exception if they do not ."}
{"id": 7290, "prediction": "Returns the sum of an array of integers ."}
{"id": 7291, "prediction": "Returns the rounded value of a number rounded up to the nearest power of 2 ."}
{"id": 7292, "prediction": "Sorts a list by the field name using the field access ."}
{"id": 7293, "prediction": "Attempts to sort a list of objects using the given sort method ."}
{"id": 7294, "prediction": "Set the value of a field from a map ."}
{"id": 7295, "prediction": "Converts an object to a list ."}
{"id": 7296, "prediction": "Load all version data for a table ."}
{"id": 7297, "prediction": "Returns a deep copy of the given list . If the list is a LinkedList or a CopyOnWriteArrayList the original list is returned . Otherwise the original list is returned ."}
{"id": 7298, "prediction": "Returns true if the object has a String field with the specified name ."}
{"id": 7299, "prediction": "Checks if the class has a string field with the given name ."}
{"id": 7300, "prediction": "Checks if a class has a field with the given name ."}
{"id": 7301, "prediction": "Gets the first key of a class or a primitive ."}
{"id": 7302, "prediction": "Extracts a sortable field from the given value . If the value is a Map it will use that map otherwise it will use the class ."}
{"id": 7303, "prediction": "Compares this cache entry to another ."}
{"id": 7304, "prediction": "Compare the time stamp of this cache entry to the time stamp of the given cache entry ."}
{"id": 7305, "prediction": "Sorts a list of given sorts ."}
{"id": 7306, "prediction": "Sort a List according to the given sort criteria ."}
{"id": 7307, "prediction": "Sorts all entries of the specified type in the specified map according to the specified sort order ."}
{"id": 7308, "prediction": "Returns a collection of entries of the specified type sorted by the value in ascending order ."}
{"id": 7309, "prediction": "Returns a collection of entries of the specified type sorted by key ."}
{"id": 7310, "prediction": "Sorts the given array according to the given sort criteria ."}
{"id": 7311, "prediction": "Returns a comparator that compares two values based on a given field ascending or nullsFirst ."}
{"id": 7312, "prediction": "Returns a comparator that compares two values using the same sort order ."}
{"id": 7313, "prediction": "Retrieves an entry from the cache ."}
{"id": 7314, "prediction": "Looks up the value associated with the given key ."}
{"id": 7315, "prediction": "Returns the order of the counter . If the counter exceeds Integer . MAX_VALUE_VALUE - 100 it will return 0 ."}
{"id": 7316, "prediction": "Evict all entries from the cache ."}
{"id": 7317, "prediction": "Check to see if this class was already initialized and if not initialize it based on the type of the given value ."}
{"id": 7318, "prediction": "Returns a buffer of the given size ."}
{"id": 7319, "prediction": "Determines if we should exit the processing loop ."}
{"id": 7320, "prediction": "Reads the data from the queue and writes it back to the writer ."}
{"id": 7321, "prediction": "If there are no items to flush then try not to flush more than once ."}
{"id": 7322, "prediction": "Start the monitor ."}
{"id": 7323, "prediction": "Start the CollectionManagerImpl and start the monitor ."}
{"id": 7324, "prediction": "Gets a value from this map under the specified key ."}
{"id": 7325, "prediction": "Given an array of criteria and an array of expressions return a ResultSet representing the results of the main query that includes the expressions ."}
{"id": 7326, "prediction": "Filter a Group"}
{"id": 7327, "prediction": "Adjust the start time of the file and record the duration ."}
{"id": 7328, "prediction": "Flushes the stream to disk if it is dirty ."}
{"id": 7329, "prediction": "Close the output stream ."}
{"id": 7330, "prediction": "Write a buffer out to the output stream and close the stream ."}
{"id": 7331, "prediction": "Writes a buffer to the disk ."}
{"id": 7332, "prediction": "Initializes the output stream ."}
{"id": 7333, "prediction": "Copies all the values from the specified map into this store ."}
{"id": 7334, "prediction": "Converts the given key to a byte array ."}
{"id": 7335, "prediction": "Reads the validation data for the given property and returns a list of ValidationMetaData objects ."}
{"id": 7336, "prediction": "Extract the validator meta data from a string ."}
{"id": 7337, "prediction": "Reads the validation meta data for the specified class and property ."}
{"id": 7338, "prediction": "Extract the validator meta - data from the class based on the property name ."}
{"id": 7339, "prediction": "Extracts validator meta data from annotations ."}
{"id": 7340, "prediction": "Convert annotation data to validator meta data ."}
{"id": 7341, "prediction": "Split the given string with the given character and return an array of strings ."}
{"id": 7342, "prediction": "Splits the given string by whitespace ."}
{"id": 7343, "prediction": "Splits the specified string by the specified delimiters ."}
{"id": 7344, "prediction": "Remove the specified characters from the specified string ."}
{"id": 7345, "prediction": "Splits the specified string by the specified delimiters ignoring empty strings ."}
{"id": 7346, "prediction": "Parses a double from a string ."}
{"id": 7347, "prediction": "Parse an int from a string ."}
{"id": 7348, "prediction": "Parses a long from a string ."}
{"id": 7349, "prediction": "Gets the value of a property by path"}
{"id": 7350, "prediction": "Gets all the fields from the given object as a Map . If the object is a Map then all the fields are retrieved from the object s class . If the object is a Map then all the fields are retrieved from the object s class . If the object is a Map then all the fields are retrieved from the class ."}
{"id": 7351, "prediction": "Returns the type of a property of an object ."}
{"id": 7352, "prediction": "Inject a value into a property of an object ."}
{"id": 7353, "prediction": "Set a idx property of a class ."}
{"id": 7354, "prediction": "Get a field from a collection"}
{"id": 7355, "prediction": "Get a property value from an object ."}
{"id": 7356, "prediction": "Returns the int value of a property from an object ."}
{"id": 7357, "prediction": "Initialize the detail message ."}
{"id": 7358, "prediction": "Creates a message using the supplied key and the supplied arguments ."}
{"id": 7359, "prediction": "Creates a message ."}
{"id": 7360, "prediction": "Transforms a list of key - value pairs into an array of values ."}
{"id": 7361, "prediction": "Gets the subject ."}
{"id": 7362, "prediction": "Parses a JSON string into a Java object ."}
{"id": 7363, "prediction": "Handles a HTTP request and sends the response to the client ."}
{"id": 7364, "prediction": "Deletes a database ."}
{"id": 7365, "prediction": "Create a new database ."}
{"id": 7366, "prediction": "Returns a list of UUIDs for the given count ."}
{"id": 7367, "prediction": "Returns a list of all resources in the given path ."}
{"id": 7368, "prediction": "Triggers a replication request ."}
{"id": 7369, "prediction": "Queries for a single value ."}
{"id": 7370, "prediction": "Set view descending flag ."}
{"id": 7371, "prediction": "Synchronize all design documents with the db ."}
{"id": 7372, "prediction": "Gets a design document from the database ."}
{"id": 7373, "prediction": "Returns all design documents fromDesk ."}
{"id": 7374, "prediction": "Gets a design document from theDesk ."}
{"id": 7375, "prediction": "Saves a replicator document to the database ."}
{"id": 7376, "prediction": "Finds a ReplicatorDocument from the database ."}
{"id": 7377, "prediction": "Find all docs that should be included in the database ."}
{"id": 7378, "prediction": "Removes a replicator document ."}
{"id": 7379, "prediction": "Finds an object by its id ."}
{"id": 7380, "prediction": "Get a list of objects matching the given jsonQuery ."}
{"id": 7381, "prediction": "Returns true if the document contains the specified id ."}
{"id": 7382, "prediction": "Performs a bulk update on the given objects ."}
{"id": 7383, "prediction": "Performs an HTTP PUT on the specified URI for the specified object ."}
{"id": 7384, "prediction": "Performs a HTTP PUT on the given URI with an InputStream as content type ."}
{"id": 7385, "prediction": "Execute a POST request on the given URI ."}
{"id": 7386, "prediction": "Execute a DELETE request ."}
{"id": 7387, "prediction": "Validates the response ."}
{"id": 7388, "prediction": "Sets the entity for the HTTP request ."}
{"id": 7389, "prediction": "Adds a new attachment ."}
{"id": 7390, "prediction": "Get all changes for the system ."}
{"id": 7391, "prediction": "Reads the next row ."}
{"id": 7392, "prediction": "Converts a currency value to a currency value ."}
{"id": 7393, "prediction": "Shuts down the lock manager and releases all held locks ."}
{"id": 7394, "prediction": "Writes an observable of bytes to a ServletOutputStream ."}
{"id": 7395, "prediction": "Add tags to a metric ."}
{"id": 7396, "prediction": "Validates and creates the temp tables ."}
{"id": 7397, "prediction": "Returns the namespace ID for the given namespace ."}
{"id": 7398, "prediction": "Return true if the request is a GET or a POST request ."}
{"id": 7399, "prediction": "Sends the authentication request to the client ."}
{"id": 7400, "prediction": "Gets the verb for the current request ."}
{"id": 7401, "prediction": "Generate subject access RDF for the given namespace and resource ."}
{"id": 7402, "prediction": "Called when a response is received from the client"}
{"id": 7403, "prediction": "Called when a client request failure ."}
{"id": 7404, "prediction": "Initializes this instance with the given session ."}
{"id": 7405, "prediction": "Find all scheduled jobs at the given time ."}
{"id": 7406, "prediction": "Converts a list of bucket points into a list of bucket points ."}
{"id": 7407, "prediction": "Ends the exchange by setting the status code and the reasonPhrase ."}
{"id": 7408, "prediction": "Find all data from the given bucket with the given timestamp and page size ."}
{"id": 7409, "prediction": "Returns a bucket from the given range with the specified step added ."}
{"id": 7410, "prediction": "Send a message to the producer ."}
{"id": 7411, "prediction": "Send one way msg ."}
{"id": 7412, "prediction": "Send a message after a delay ."}
{"id": 7413, "prediction": "Scans the given cursor for matches of the given scan parameters ."}
{"id": 7414, "prediction": "Set the value of a specific property ."}
{"id": 7415, "prediction": "Adds a file to the zip ."}
{"id": 7416, "prediction": "Replaces the text in the given file with the given text ."}
{"id": 7417, "prediction": "Creates the zip file ."}
{"id": 7418, "prediction": "Generates a new Metrics instance with a single component and data buffer ."}
{"id": 7419, "prediction": "Fetch content by content id ."}
{"id": 7420, "prediction": "Fetches the content of an order item ."}
{"id": 7421, "prediction": "Add the given transformation to the link ."}
{"id": 7422, "prediction": "Generates metrics for the given set of components ."}
{"id": 7423, "prediction": "Creates a new directory under the specified parent directory ."}
{"id": 7424, "prediction": "Adds the object to the end of the tree ."}
{"id": 7425, "prediction": "Registers the given type as an adaptor in the given group ."}
{"id": 7426, "prediction": "Registers the attributeRenderer in the given group ."}
{"id": 7427, "prediction": "Creates a new template based on the prototype and the content - info map ."}
{"id": 7428, "prediction": "Adds a new Simon ."}
{"id": 7429, "prediction": "Set a property ."}
{"id": 7430, "prediction": "Adds a child object to the configuration object for the given collection ."}
{"id": 7431, "prediction": "Returns a supplier that ensures that all files in the given directory have the specified suffix ."}
{"id": 7432, "prediction": "Copy an input stream to an output stream ."}
{"id": 7433, "prediction": "Attempts to parse the given file into a Document ."}
{"id": 7434, "prediction": "Reads and parses an XML document from the specified reader ."}
{"id": 7435, "prediction": "Gets all elements in the given element ."}
{"id": 7436, "prediction": "Gets all nodes within a parent element ."}
{"id": 7437, "prediction": "Gets the first child element with the specified names ."}
{"id": 7438, "prediction": "Returns a stream of elements that have the same name as the given element ."}
{"id": 7439, "prediction": "Validates an XML input stream against a XML schema ."}
{"id": 7440, "prediction": "The entry point when the program starts ."}
{"id": 7441, "prediction": "Converts an InputStream to a ContentBuilder ."}
{"id": 7442, "prediction": "Load a content builder from a resource ."}
{"id": 7443, "prediction": "Processes the given entry and executes the given processor on the entry ."}
{"id": 7444, "prediction": "Returns the encoded string of the given QS string ."}
{"id": 7445, "prediction": "Sets the signature of an access key ."}
{"id": 7446, "prediction": "Removes whitespace from an array of characters ."}
{"id": 7447, "prediction": "Signs the request"}
{"id": 7448, "prediction": "Set the data for the object with the specified key in the Recorder object ."}
{"id": 7449, "prediction": "Completes the multi - part upload of an object ."}
{"id": 7450, "prediction": "Called when a notification is clicked ."}
{"id": 7451, "prediction": "Adds the specified notification state to the specified entry ."}
{"id": 7452, "prediction": "Returns true if the entry has expired ."}
{"id": 7453, "prediction": "Gets a notification ."}
{"id": 7454, "prediction": "Gets the list of addressees ."}
{"id": 7455, "prediction": "Gets the notification with the given id ."}
{"id": 7456, "prediction": "Gets the events by notification ."}
{"id": 7457, "prediction": "Gets the event ."}
{"id": 7458, "prediction": "Returns a complete REST URL for a single notification ."}
{"id": 7459, "prediction": "Returns the entry with the given id ."}
{"id": 7460, "prediction": "Get the authentication token ."}
{"id": 7461, "prediction": "Returns the total number of notification categories ."}
{"id": 7462, "prediction": "Add new categories to the notification ."}
{"id": 7463, "prediction": "Fetches a notification for the current user ."}
{"id": 7464, "prediction": "Creates a notification error object ."}
{"id": 7465, "prediction": "Maps a ResponseEntity to a NotificationResponse ."}
{"id": 7466, "prediction": "Create a notification entry from a read context ."}
{"id": 7467, "prediction": "Attaches MarkCompleted actions to a notification entry ."}
{"id": 7468, "prediction": "Normalize a link so that it can be used in an absolute URL ."}
{"id": 7469, "prediction": "Returns a NotificationCategory based on the value stored in the portlet preferences ."}
{"id": 7470, "prediction": "Returns the source of the notification for the user ."}
{"id": 7471, "prediction": "Called when a notification is invoked ."}
{"id": 7472, "prediction": "Read a notification response from a file ."}
{"id": 7473, "prediction": "Get the user info id from the PortletPreferences . If not found fall back to username ."}
{"id": 7474, "prediction": "Extracts the user id from the response ."}
{"id": 7475, "prediction": "The hideAction works like a toggle to hide the NotificationEntry ."}
{"id": 7476, "prediction": "Returns a copy of the attributes map ."}
{"id": 7477, "prediction": "Normalizes the elements of the given tuple to their normalized value ."}
{"id": 7478, "prediction": "Returns true if boxA is contained in boxB ."}
{"id": 7479, "prediction": "Computes the closest point inside the image"}
{"id": 7480, "prediction": "Computes the sign of the point P ."}
{"id": 7481, "prediction": "Set the values of this object to the same values as the specified object ."}
{"id": 7482, "prediction": "Sets the value of this quaternion to the given values ."}
{"id": 7483, "prediction": "Converts a rectangular 2D rectangle into a rectangular 2D rectangle and places the result in the output image ."}
{"id": 7484, "prediction": "Converts a polygon into a quadrilateral"}
{"id": 7485, "prediction": "bounding box a quadrilateral rectangle"}
{"id": 7486, "prediction": "bounding box a polygon"}
{"id": 7487, "prediction": "Moves the quadrilateral s center to the specified point ."}
{"id": 7488, "prediction": "Computes the average point of all vertices in a polygon"}
{"id": 7489, "prediction": "Computes the convex hull for a list of points ."}
{"id": 7490, "prediction": "Removes all vertices in the polygon which are parallel to the provided tolerance"}
{"id": 7491, "prediction": "Computes the average point on target to the point on target which is closest to point on target which has an error"}
{"id": 7492, "prediction": "Computes the area of the line between a and b ."}
{"id": 7493, "prediction": "Returns true if the quadrilateral contains the specified point false otherwise ."}
{"id": 7494, "prediction": "Does a triangle contain a point?"}
{"id": 7495, "prediction": "Computes the intersection between the line parameters ."}
{"id": 7496, "prediction": "Returns the intersection of the line segment l_0 and l_1 with the line segment ret ."}
{"id": 7497, "prediction": "Computes the intersection of the line defined by lineA0 and lineB0 with the provided output point ."}
{"id": 7498, "prediction": "Computes the intersection of the line segments along the second line segment with the line segments along the first ."}
{"id": 7499, "prediction": "Computes the intersection between the two points ."}
{"id": 7500, "prediction": "Returns true if the specified rectangle contains the specified rectangle false otherwise ."}
{"id": 7501, "prediction": "Computes the intersection between the two regions ."}
{"id": 7502, "prediction": "Returns the value of the matrix at the specified index ."}
{"id": 7503, "prediction": "Converts a matrix into a Quaternion ."}
{"id": 7504, "prediction": "Returns a new DMatrixRMaj which is set to a rotation of Xangent ."}
{"id": 7505, "prediction": "Sets the components of the R matrix to make a rotation around the X axis ."}
{"id": 7506, "prediction": "Returns a new 3x3 matrix where each element is assumed to be a 3x3 matrix and each element is assumed to be a 3x3 matrix ."}
{"id": 7507, "prediction": "Returns a new 3x3 matrix where each element is assumed to be a 3x3 rotation ."}
{"id": 7508, "prediction": "Sets the rotation matrix to a rotation matrix . The rotation matrix will be set to be a rotation matrix where the angle of the rotation matrix is from 0 to 1 ."}
{"id": 7509, "prediction": "Converts a rotation matrix into a 3x3 matrix ."}
{"id": 7510, "prediction": "Returns a rotation matrix given an axis and an angle ."}
{"id": 7511, "prediction": "Set the angle of the line ."}
{"id": 7512, "prediction": "Computes the twist coordinate of the given motion object ."}
{"id": 7513, "prediction": "Used to set the rotation and magnitude of the transform from the initial to the end ."}
{"id": 7514, "prediction": "Computes the rotation and translation parameters for a given where where . The rotation and translation parameters must be in the same order ."}
{"id": 7515, "prediction": "Given a list of points find a point which is the centroid of the points"}
{"id": 7516, "prediction": "Solves a point on the planar system"}
{"id": 7517, "prediction": "Returns theide length of the point at the specified index ."}
{"id": 7518, "prediction": "Returns true if this point is inside the convex or not ."}
{"id": 7519, "prediction": "Converts ConicGeneral_F64 into a DMatrixRMaj"}
{"id": 7520, "prediction": "Converts a ConicGeneral_F64 to a 3x3 matrix ."}
{"id": 7521, "prediction": "Converts one ConicGeneral_F64 to another ."}
{"id": 7522, "prediction": "Converts one ConicGeneral_F64 into another"}
{"id": 7523, "prediction": "Divides p by v"}
{"id": 7524, "prediction": "Converts a GeoTupleD_F64 into a matrix ."}
{"id": 7525, "prediction": "Converts a matrixRMaj into a GeoTuple3D ."}
{"id": 7526, "prediction": "Set the parameter vector of the rotation matrix ."}
{"id": 7527, "prediction": "Returns the distance between 0 and 1"}
{"id": 7528, "prediction": "Returns true if the line s slope is better than the line s slope ."}
{"id": 7529, "prediction": "Checks to see if a plane is contained in the image"}
{"id": 7530, "prediction": "Computes whether or not a line along a sphere would intersect with a quadratic equation ."}
{"id": 7531, "prediction": "Computes and sets the rotation to one angle between 0 and 1 ."}
{"id": 7532, "prediction": "Extracts the quaternion from a rotation matrix ."}
{"id": 7533, "prediction": "Computes the hull on the specified input points ."}
{"id": 7534, "prediction": "Sets the identity of the specified object to no motion ."}
{"id": 7535, "prediction": "Converts a Se3_F64 object into a Homogeneous matrix ."}
{"id": 7536, "prediction": "Converts a Se2_F64 object into a Homogeneous matrix ."}
{"id": 7537, "prediction": "along the x - axis of Se3D object ."}
{"id": 7538, "prediction": "Returns true if the two Se3 objects are identical within a given tolerance ."}
{"id": 7539, "prediction": "Converts a lat lon coordinate to a unit vector ."}
{"id": 7540, "prediction": "Returns true if the circle defined by the two points on the line a and b ."}
{"id": 7541, "prediction": "Returns the square of the circle radius squared between the two points ."}
{"id": 7542, "prediction": "Returns the point on the line from the given point l0 to the closest point l1 ."}
{"id": 7543, "prediction": "Returns the closest point on the line to the given point ."}
{"id": 7544, "prediction": "Returns the point on the plane s origin ."}
{"id": 7545, "prediction": "Finds the point on the line that is closest to the point on the line ."}
{"id": 7546, "prediction": "Returns the point on the triangle that is closest to the given point ."}
{"id": 7547, "prediction": "Transforms an image into another image . The original image is not modified ."}
{"id": 7548, "prediction": "Transforms an image to a set of points ."}
{"id": 7549, "prediction": "Returns true if the quadrilateral is within the specified tolerance ."}
{"id": 7550, "prediction": "Computes the acute angle between two lines ."}
{"id": 7551, "prediction": "Converts a LinePolar to a LineParametric2D_F64 ."}
{"id": 7552, "prediction": "Converts LineGeneral2D_F64 into linePolar2D_F64"}
{"id": 7553, "prediction": "Converts a line segment from one image to another ."}
{"id": 7554, "prediction": "Converts a LineSegment2D_F64 into a LineGeneral2D_F64"}
{"id": 7555, "prediction": "Converts LineGeneral2D_F64 into LineGeneral2D_F64 ."}
{"id": 7556, "prediction": "Converts the line parameters to line parameters ."}
{"id": 7557, "prediction": "Converts a LinePolar2D object into a LinePolar2D object ."}
{"id": 7558, "prediction": "Converts the LineParametric2D_F64 to LineGeneral2D_F64"}
{"id": 7559, "prediction": "Converts aGeneral2D_F64 into a LineParametric2D_F64 ."}
{"id": 7560, "prediction": "Converts a PlaneNormal3D_F64 into a PlaneGeneral3D_F64 ."}
{"id": 7561, "prediction": "Converts a point on the plane to a point on the plane ."}
{"id": 7562, "prediction": "Converts a point on the plane to a point on the plane ."}
{"id": 7563, "prediction": "Converts a point in 3D space into a point in 4D space ."}
{"id": 7564, "prediction": "Converts a general plane object into a world object ."}
{"id": 7565, "prediction": "Returns true if t is identical within the tolerance ."}
{"id": 7566, "prediction": "Returns a copy of this matrix ."}
{"id": 7567, "prediction": "Returns the Euclidean norm squared of this vector ."}
{"id": 7568, "prediction": "Computes the t - value of the line from a point on a line ."}
{"id": 7569, "prediction": "Returns true if the geometry is uncountable ."}
{"id": 7570, "prediction": "Checks to see if the general parameters are equivalent with the given tolerance ."}
{"id": 7571, "prediction": "Moves the image into the center of the specified point ."}
{"id": 7572, "prediction": "Computes the acute angle between two lines ."}
{"id": 7573, "prediction": "Returns true if p . w isInfinite H ."}
{"id": 7574, "prediction": "Returns a list of random points with a standard deviation of w"}
{"id": 7575, "prediction": "Converts a point h to e ."}
{"id": 7576, "prediction": "Computes the components of the second vector minus the components of the first ."}
{"id": 7577, "prediction": "Returns true if the two points are identical within the specified tolerance ."}
{"id": 7578, "prediction": "Sets the x y - coordinate of this box to the specified rectangle ."}
{"id": 7579, "prediction": "Converts a rectangle in quadratic to a Ellipse quadratic ."}
{"id": 7580, "prediction": "Computes the point at which the edge of the ellipse is located in"}
{"id": 7581, "prediction": "Computes the angle of the specified rectangle along the axis of the grid ."}
{"id": 7582, "prediction": "Computes the tangent of the ellipse and places the result in the output Vector2D object ."}
{"id": 7583, "prediction": "Returns true if the line was crossed . If it was crossed false is returned ."}
{"id": 7584, "prediction": "Returns the corner at the specified index ."}
{"id": 7585, "prediction": "Computes the distance between the LineParametric3D and the LineParametric3D ."}
{"id": 7586, "prediction": "Computes the distance between a point and a line ."}
{"id": 7587, "prediction": "Returns the distance between the line segment l and the point p ."}
{"id": 7588, "prediction": "Computes the distance between point and plane point ."}
{"id": 7589, "prediction": "Computes the distance between the line and the point ."}
{"id": 7590, "prediction": "Returns the Euclidean distance between the two segments ."}
{"id": 7591, "prediction": "Returns the Euclidean distance squared between the two lines ."}
{"id": 7592, "prediction": "Computes the Euclidean distance between a quadrilateral and a point ."}
{"id": 7593, "prediction": "Returns the squared Euclidean distance squared of the specified line segment to the specified point ."}
{"id": 7594, "prediction": "Computes the Euclidean distance between a polygon and point ."}
{"id": 7595, "prediction": "Returns the squared Euclidean distance squared of a polygon to a line segment ."}
{"id": 7596, "prediction": "Computes the distance from the line to the origin ."}
{"id": 7597, "prediction": "Computes the Euclidean distance between an ellipses and a point ."}
{"id": 7598, "prediction": "Returns the distance between the specified ellipse and the specified point ."}
{"id": 7599, "prediction": "Add a transform to the path ."}
{"id": 7600, "prediction": "Returns the point on the line that is closest to the point on the line ."}
{"id": 7601, "prediction": "Computes the closest point on the grid"}
{"id": 7602, "prediction": "Computes the polynomial approximation of the given data ."}
{"id": 7603, "prediction": "Convenient factory method to create a random vector ."}
{"id": 7604, "prediction": "Converts a perpendicular vector into a canonical one ."}
{"id": 7605, "prediction": "Returns true if the two vectors are identical within a tolerance ."}
{"id": 7606, "prediction": "Normalizes the vector v to the normalized value ."}
{"id": 7607, "prediction": "Creates a new 3x4 matrix from the given vector ."}
{"id": 7608, "prediction": "Converts a row major matrix into a column major matrix ."}
{"id": 7609, "prediction": "Returns the Euclidean distance between the given two points ."}
{"id": 7610, "prediction": "Set the ellipses of the grid ."}
{"id": 7611, "prediction": "Normalize the values ."}
{"id": 7612, "prediction": "Computes the distance between the three points ."}
{"id": 7613, "prediction": "Returns the quadrilateral of the specified quadrilateral ."}
{"id": 7614, "prediction": "Computes the distance between a polygon and a simple point ."}
{"id": 7615, "prediction": "Computes the mean of the points in an array ."}
{"id": 7616, "prediction": "Sorts a list of points in clockwise order to get a sorted list of points in counter clockwise order"}
{"id": 7617, "prediction": "Computes the Normal version of a 2x2 matrix ."}
{"id": 7618, "prediction": "Returns true if the polygon is convex ."}
{"id": 7619, "prediction": "Multiply this vector by a scalar ."}
{"id": 7620, "prediction": "Gets the maximum absolute value ."}
{"id": 7621, "prediction": "Returns the distance between the specified two points ."}
{"id": 7622, "prediction": "Returns the Euclidean distance squared between the specified two points ."}
{"id": 7623, "prediction": "Returns random points from the specified plane ."}
{"id": 7624, "prediction": "Returns a list of random points ."}
{"id": 7625, "prediction": "Returns a list of random points with mean and standard deviation ."}
{"id": 7626, "prediction": "Calculates the mean of a list of points"}
{"id": 7627, "prediction": "Computes the mean of a list of points"}
{"id": 7628, "prediction": "Invalidates the given credentials from the cache ."}
{"id": 7629, "prediction": "Invalidates all entries of the cache that satisfy the given predicate ."}
{"id": 7630, "prediction": "Concatenates a collection of Strings to a Set of Strings . Each String is converted to lower case and each String is converted to lower case ."}
{"id": 7631, "prediction": "Returns the feature set for the specified server directory ."}
{"id": 7632, "prediction": "Retrieves all config dropins features from the specified directory ."}
{"id": 7633, "prediction": "Gets the features of a server file and a list of parsed xmls ."}
{"id": 7634, "prediction": "Parse an include node ."}
{"id": 7635, "prediction": "Parse the feature manager node ."}
{"id": 7636, "prediction": "Download JSONs for a given product version ."}
{"id": 7637, "prediction": "Returns the map of liberty features from the given set of JSON files ."}
{"id": 7638, "prediction": "Returns true if only Open Liberty features are installed ."}
{"id": 7639, "prediction": "Returns true if reference contains target ignoring case ; false otherwise ."}
{"id": 7640, "prediction": "Get the next product version"}
{"id": 7641, "prediction": "Extracts the bundle s symbolic name from a jar file ."}
{"id": 7642, "prediction": "Gets the replacement jar of the map based install kernel jar ."}
{"id": 7643, "prediction": "Checks if is replacement jar ."}
{"id": 7644, "prediction": "Extracts the version from a file name ."}
{"id": 7645, "prediction": "Compare two version strings ."}
{"id": 7646, "prediction": "Get productInfo from the install directory and action ."}
{"id": 7647, "prediction": "Checks to see if the given artifact contains a spring - boot - version . stamp . jar file ."}
{"id": 7648, "prediction": "Get a property . If the property does not exist throws an exception . If the property is not found throws an exception ."}
{"id": 7649, "prediction": "Determines whether or not the specified file should be reported in the current environment ."}
{"id": 7650, "prediction": "Moves the cursor to the center of the specified number of pixels ."}
{"id": 7651, "prediction": "Compares two strings for equality ."}
{"id": 7652, "prediction": "Loads an int from a String with a given default value . If the i is not a numeric value the defaultValue is returned . If the i is a non - numeric value the defaultValue is returned ."}
{"id": 7653, "prediction": "Throws an exception of type Tortoise ."}
{"id": 7654, "prediction": "Verifies that the current TURTLE is valid ."}
{"id": 7655, "prediction": "Returns a new Puzzle that has the same number of blank cells but the specified target index ."}
{"id": 7656, "prediction": "Gets the distance to a goal ."}
{"id": 7657, "prediction": "Prints a formatted string to the standard output ."}
{"id": 7658, "prediction": "Prints a formatted string to the standard output ."}
{"id": 7659, "prediction": "Make anAFishy decision ."}
{"id": 7660, "prediction": "Set a variable to a given value ."}
{"id": 7661, "prediction": "Returns a uniform random int between a and b ."}
{"id": 7662, "prediction": "Returns a uniform random number between a and b ."}
{"id": 7663, "prediction": "Returns the number of occurrences of a given random number in the range [ 0 1 ) ."}
{"id": 7664, "prediction": "Returns the index of the first discrete entry in the array ."}
{"id": 7665, "prediction": "The entry point for this example ."}
{"id": 7666, "prediction": "Takes the first character of a word and capitalizes it ."}
{"id": 7667, "prediction": "Converts the first character of a word to lower case ."}
{"id": 7668, "prediction": "Adds a trailing slash if it does not exist ."}
{"id": 7669, "prediction": "Converts a criteria join to its string representation ."}
{"id": 7670, "prediction": "Gets the token sentence ."}
{"id": 7671, "prediction": "Extracts the token from the cookie list and stores it in the responseContext"}
{"id": 7672, "prediction": "Extract the auth token from cookie list ."}
{"id": 7673, "prediction": "Register a Guice binding ."}
{"id": 7674, "prediction": "Get all permission entries for a role ."}
{"id": 7675, "prediction": "Adds a projection to this list by its alias ."}
{"id": 7676, "prediction": "Converts a JobInfo to a JobDetail ."}
{"id": 7677, "prediction": "Convert trigger info to trigger ."}
{"id": 7678, "prediction": "This method is used to set the repeat count and repeat interval values ."}
{"id": 7679, "prediction": "Sets the start time and the end time on the given builder ."}
{"id": 7680, "prediction": "Adds an item to the queue and starts a new thread ."}
{"id": 7681, "prediction": "Writes the entire contents of this buffer to the given output stream ."}
{"id": 7682, "prediction": "Initialize the scheduler ."}
{"id": 7683, "prediction": "Returns all fields of the given class sorted from newest to oldest ."}
{"id": 7684, "prediction": "Gets the field map ."}
{"id": 7685, "prediction": "Converts an Exception to a Robe Response ."}
{"id": 7686, "prediction": "Configure the encryptor based on the provided configuration ."}
{"id": 7687, "prediction": "Generate the attributes hash using the user agent and remote IP ."}
{"id": 7688, "prediction": "Generate a new token string ."}
{"id": 7689, "prediction": "Sends a mail item ."}
{"id": 7690, "prediction": "Generates a new password by checking if the old password matches the new password ."}
{"id": 7691, "prediction": "Change the Password of the User ."}
{"id": 7692, "prediction": "Gets the user with the specified name ."}
{"id": 7693, "prediction": "Hashes a password ."}
{"id": 7694, "prediction": "Verifies that the specified user name is a valid email ."}
{"id": 7695, "prediction": "Verifies the strength of a given user ."}
{"id": 7696, "prediction": "Provide a search model with the data returned from the server ."}
{"id": 7697, "prediction": "Commit the transaction if the status is ACTIVE ."}
{"id": 7698, "prediction": "Rolls back the current transaction if it is active ."}
{"id": 7699, "prediction": "Starts the transaction ."}
{"id": 7700, "prediction": "Configure field by name ."}
{"id": 7701, "prediction": "Checks to see if the service is permitted ."}
{"id": 7702, "prediction": "Parse a value to a Date"}
{"id": 7703, "prediction": "Gets the error response ."}
{"id": 7704, "prediction": "A Restriction that is equal to the given value ."}
{"id": 7705, "prediction": "A Restriction that is not equal to the given value"}
{"id": 7706, "prediction": "Creates a Restriction that is less than the specified value ."}
{"id": 7707, "prediction": "A Restriction that is less than or equal to the given value ."}
{"id": 7708, "prediction": "A Restriction that is greater than the given value ."}
{"id": 7709, "prediction": "A Restriction that is greater than or equals to the given value"}
{"id": 7710, "prediction": "A Restriction that contains the given value"}
{"id": 7711, "prediction": "A Restriction that matches any node with the specified name and value ."}
{"id": 7712, "prediction": "Returns a namespace manager with the given namespace and href ."}
{"id": 7713, "prediction": "Returns aRepresentation with the given content ."}
{"id": 7714, "prediction": "Adds a new rel to theRepresentation ."}
{"id": 7715, "prediction": "Returns a representation of this resource with the specified value ."}
{"id": 7716, "prediction": "Returns a representation of this resource with the given namespace and href ."}
{"id": 7717, "prediction": "Checks if the given byte array can be decoded ."}
{"id": 7718, "prediction": "Encode a String to a byte array ."}
{"id": 7719, "prediction": "Returns true if both Reader have the same data ."}
{"id": 7720, "prediction": "Moves a file or directory ."}
{"id": 7721, "prediction": "Creates a file and throws an IOException if the file already exists ."}
{"id": 7722, "prediction": "Gets the base name of a file ."}
{"id": 7723, "prediction": "Add the padding to the block ."}
{"id": 7724, "prediction": "Returns the short name of a class ."}
{"id": 7725, "prediction": "Gets all super types of the given class ."}
{"id": 7726, "prediction": "Verifies that the given password matches the given byte array ."}
{"id": 7727, "prediction": "Reads a string from System . in ."}
{"id": 7728, "prediction": "Appends a byte to the buffer ."}
{"id": 7729, "prediction": "Appends len bytes to the end of the buffer ."}
{"id": 7730, "prediction": "Returns a copy of the given array ."}
{"id": 7731, "prediction": "Returns a reduced fraction ."}
{"id": 7732, "prediction": "Returns a reduced fraction ."}
{"id": 7733, "prediction": "Returns a copy of this with the result of f mapped to n ."}
{"id": 7734, "prediction": "Returns this number divided by the specified fraction ."}
{"id": 7735, "prediction": "Returns the maximum of the specified long values ."}
{"id": 7736, "prediction": "Returns the smallest of the set of long values ."}
{"id": 7737, "prediction": "Throws IllegalArgumentException with the given message if the given condition is not met ."}
{"id": 7738, "prediction": "Fetches content from the Meteo server ."}
{"id": 7739, "prediction": "Fetch content at a given location ."}
{"id": 7740, "prediction": "Fetch content ."}
{"id": 7741, "prediction": "Find hourly pointForecasts from now ."}
{"id": 7742, "prediction": "Finds the nearestForecast for the given date ."}
{"id": 7743, "prediction": "Fetch content by name and language from Meteo ."}
{"id": 7744, "prediction": "Create a simple long termForecast ."}
{"id": 7745, "prediction": "Create a new long termForecast ."}
{"id": 7746, "prediction": "Convert a string containing a list of coordinates into a Location ."}
{"id": 7747, "prediction": "Fetches content from Meteo ."}
{"id": 7748, "prediction": "Returns the Wind symbol name for the given PointForecast ."}
{"id": 7749, "prediction": "Return the bestBeaufortLevel for the given PointForecast ."}
{"id": 7750, "prediction": "Create a URI from a String ."}
{"id": 7751, "prediction": "Returns true if the current date is the never set ."}
{"id": 7752, "prediction": "Retrieves the corresponding PointForecast for the given dateTime ."}
{"id": 7753, "prediction": "Return the best forecast for the specified day ."}
{"id": 7754, "prediction": "Fetches content from Meteo by longitude and latitude ."}
{"id": 7755, "prediction": "Fetch content ."}
{"id": 7756, "prediction": "Attempts to update the database ."}
{"id": 7757, "prediction": "Invokes a string method on the given object ."}
{"id": 7758, "prediction": "Acquires an object from the given data source ."}
{"id": 7759, "prediction": "Returns a referenced object ."}
{"id": 7760, "prediction": "Gets the wrapped object ."}
{"id": 7761, "prediction": "Gets the configuration for the given class ."}
{"id": 7762, "prediction": "Determines if the feature is enabled for the given bootstrap configuration ."}
{"id": 7763, "prediction": "Create an iterator over all classes of the given service ."}
{"id": 7764, "prediction": "Retrieve the specified decoder using the provided bootstrap configuration . If none has been configured the provided default decoder is returned ."}
{"id": 7765, "prediction": "Returns a list of service implementations that implement the supplied interface ."}
{"id": 7766, "prediction": "Returns the module instance for the given interface implemented by the given module type ."}
{"id": 7767, "prediction": "Acquires an InputStream from the given DataSource ."}
{"id": 7768, "prediction": "Returns the size of the data from the given data source ."}
{"id": 7769, "prediction": "Wraps the supplied byte array as referenced data ."}
{"id": 7770, "prediction": "Returns the component at the specified index ."}
{"id": 7771, "prediction": "Returns the prefix of the component at the specified index ."}
{"id": 7772, "prediction": "Returns whether this is a top - level compiler ."}
{"id": 7773, "prediction": "Executes the specified HsrePattern ."}
{"id": 7774, "prediction": "Calls the NFA to see if the search is possible ."}
{"id": 7775, "prediction": "Adds a subset to the match set ."}
{"id": 7776, "prediction": "Computes the tentative midpoint of the given RuntimeSubexpression"}
{"id": 7777, "prediction": "Checks whether the subexpression matches the regular expression ."}
{"id": 7778, "prediction": "Clones all states of a given type from one state to the other ."}
{"id": 7779, "prediction": "Recursively find the optimal subre of a subtree ."}
{"id": 7780, "prediction": "Moves the subre t into the subre tree ."}
{"id": 7781, "prediction": "Return the number of successive nodes of the given subre ."}
{"id": 7782, "prediction": "Parses the given stopper with the given initial state ."}
{"id": 7783, "prediction": "Computes the deltraverse with the given nfa and the given leftend state ."}
{"id": 7784, "prediction": "Adds a nonword transition ."}
{"id": 7785, "prediction": "Clones the AHEAD and BEHIND state ."}
{"id": 7786, "prediction": "Reads a valid reference number from the stream ."}
{"id": 7787, "prediction": "Checks a bracket at the current state ."}
{"id": 7788, "prediction": "Checks to see if this is a plain text ."}
{"id": 7789, "prediction": "Creates a new lacon and adds it to the array of lacons ."}
{"id": 7790, "prediction": "Computes whether the given character has a valid sub - color or not ."}
{"id": 7791, "prediction": "Attempts to perform the appropriate operation on the UnicodeSet ."}
{"id": 7792, "prediction": "Returns the codepoint for the given color ."}
{"id": 7793, "prediction": "Returns the pseudo color of this element ."}
{"id": 7794, "prediction": "Subrange from [ from end ) to [ lp ) ."}
{"id": 7795, "prediction": "the sub - color of the current sub - color with no further action ."}
{"id": 7796, "prediction": "Set the colorchain of an arc ."}
{"id": 7797, "prediction": "Un colorchain a given arc ."}
{"id": 7798, "prediction": "Dumps the names of all the colors ."}
{"id": 7799, "prediction": "Starts the parsing of a regex ."}
{"id": 7800, "prediction": "Method that gets all of the prefixes from the current state of the regex ."}
{"id": 7801, "prediction": "Sets the current state of this pattern to the same state of the specified pattern ."}
{"id": 7802, "prediction": "Returns the color mapping for the specified codepoint ."}
{"id": 7803, "prediction": "Returns a new state set based on the state at the given index ."}
{"id": 7804, "prediction": "Returns the last seen state set ."}
{"id": 7805, "prediction": "Returns a set containing all cases the given character or an empty set if none ."}
{"id": 7806, "prediction": "Returns the set of Unicode classes for a given class ."}
{"id": 7807, "prediction": "Computes the carcsort between first and last elements ."}
{"id": 7808, "prediction": "Returns a string representation of the options ."}
{"id": 7809, "prediction": "Returns a new state with the given flag ."}
{"id": 7810, "prediction": "Moves newState to old ."}
{"id": 7811, "prediction": "Move ins from old state to newState ."}
{"id": 7812, "prediction": "Copyins from old to newState ."}
{"id": 7813, "prediction": "Copies newState to old ."}
{"id": 7814, "prediction": "Remove all the states of the given state ."}
{"id": 7815, "prediction": "Remove a single state from the list ."}
{"id": 7816, "prediction": "Creates a new cparc with the given start and end states ."}
{"id": 7817, "prediction": "Copies the current state of s into stmp ."}
{"id": 7818, "prediction": "false colors for BOS BOL EOS EOL and EOL"}
{"id": 7819, "prediction": "Dumps the status of the nfa ."}
{"id": 7820, "prediction": "Dumps the state of an arc ."}
{"id": 7821, "prediction": "Appends the reverse order of the given state to the given string builder ."}
{"id": 7822, "prediction": "Appends a newline character to a string builder ."}
{"id": 7823, "prediction": "Appends a code chunk to a string builder ."}
{"id": 7824, "prediction": "Analyze the current state of the system ."}
{"id": 7825, "prediction": "Analyze the arc chain . Returns the flags for each arc in the chain ."}
{"id": 7826, "prediction": "Returns the combine of the given arc with the current one ."}
{"id": 7827, "prediction": "Removes all reachable states and the canreach - post states ."}
{"id": 7828, "prediction": "Marks the reachable components of the given state . If the state is not reachable it will be passed through the output chain ."}
{"id": 7829, "prediction": "Adds a canreach to the chain with the given okay state ."}
{"id": 7830, "prediction": "Eliminate empties ."}
{"id": 7831, "prediction": "Return whether or not the given arc is empty ."}
{"id": 7832, "prediction": "Returns the properties for the specified rule ."}
{"id": 7833, "prediction": "Get the list of Rule interpreter plugins ."}
{"id": 7834, "prediction": "Returns a map of all report plugins ."}
{"id": 7835, "prediction": "Gets the selection for the given rule set ."}
{"id": 7836, "prediction": "Executes the specified task factory from the command line ."}
{"id": 7837, "prediction": "Get the error message from a CliExecutionException"}
{"id": 7838, "prediction": "Gathers standard options ."}
{"id": 7839, "prediction": "Gathers all task options for the given task factory ."}
{"id": 7840, "prediction": "Gathers task names from a task factory ."}
{"id": 7841, "prediction": "Executes the specified command line ."}
{"id": 7842, "prediction": "Gets the command line ."}
{"id": 7843, "prediction": "Executes a task ."}
{"id": 7844, "prediction": "Reads properties from the command line ."}
{"id": 7845, "prediction": "Prints usage for the given options and error message ."}
{"id": 7846, "prediction": "Gets the home directory ."}
{"id": 7847, "prediction": "Returns a class loader that can be used to load plugin classes ."}
{"id": 7848, "prediction": "Get the ids of all the users that have been assigned to the given latitude and longitude ."}
{"id": 7849, "prediction": "Gets the intersecting ids ."}
{"id": 7850, "prediction": "Attempts to find the uri that corresponds to the given method for the given target ."}
{"id": 7851, "prediction": "Add a path pattern to the router ."}
{"id": 7852, "prediction": "Returns the total number of routes across this node ."}
{"id": 7853, "prediction": "Add an additional route to the routing table first ."}
{"id": 7854, "prediction": "Add an additional route to the router ."}
{"id": 7855, "prediction": "Add an additional route at the end of the router ."}
{"id": 7856, "prediction": "Return true if any of the specified request path tokens match ."}
{"id": 7857, "prediction": "The property value must be equal to the given value ."}
{"id": 7858, "prediction": "Returns the file name of the BMS file ."}
{"id": 7859, "prediction": "Compares if two entries have the same folders ."}
{"id": 7860, "prediction": "Compares two entries ."}
{"id": 7861, "prediction": "Compares two entries according to their new window ."}
{"id": 7862, "prediction": "Set the servlet class last modified time ."}
{"id": 7863, "prediction": "Gets the list of dependents ."}
{"id": 7864, "prediction": "Finds and returns the class object for the specified class ."}
{"id": 7865, "prediction": "Parse Authorization header into an array of strings ."}
{"id": 7866, "prediction": "Get an instance of the ProtectedFunctionMapper ."}
{"id": 7867, "prediction": "Maps a function to its corresponding method ."}
{"id": 7868, "prediction": "Get the ProtectedFunctionMapper for a given function ."}
{"id": 7869, "prediction": "Resolves a function name by prefix and local name ."}
{"id": 7870, "prediction": "Set the values ."}
{"id": 7871, "prediction": "Returns the value of the variable with the given name ."}
{"id": 7872, "prediction": "Parses the specified file and returns the Nodes ."}
{"id": 7873, "prediction": "Parses a single JAR file ."}
{"id": 7874, "prediction": "Do the actual parsing of a tag file ."}
{"id": 7875, "prediction": "Do the parsing for the given file ."}
{"id": 7876, "prediction": "Creates a Compiler object ."}
{"id": 7877, "prediction": "Returns a java . io . InputStream for the given resource ."}
{"id": 7878, "prediction": "Calculates the last modification timestamp of all channels ."}
{"id": 7879, "prediction": "Find all the class loaders ."}
{"id": 7880, "prediction": "Checks to see if the provided classloader is a parent of this classloader ."}
{"id": 7881, "prediction": "Starts loading ."}
{"id": 7882, "prediction": "Read the stream header ."}
{"id": 7883, "prediction": "Generates a PaginationResult for a given list of data ."}
{"id": 7884, "prediction": "Creates a new MetaKey from a string representation ."}
{"id": 7885, "prediction": "Adds dependencies to the requirements list ."}
{"id": 7886, "prediction": "return the TagInfo for a given tag file or null if not found"}
{"id": 7887, "prediction": "Parse an implicit . tld file ."}
{"id": 7888, "prediction": "Gets the checksum of a file ."}
{"id": 7889, "prediction": "Gets the size of a stream ."}
{"id": 7890, "prediction": "Validate the channel name ."}
{"id": 7891, "prediction": "Seeks to the specified Block ."}
{"id": 7892, "prediction": "Locates the block from the given stream that contains the given position ."}
{"id": 7893, "prediction": "Retrieves a list of Maven artifacts from the given Maven channel ."}
{"id": 7894, "prediction": "Update the state of the corresponding opt and rep tables ."}
{"id": 7895, "prediction": "Computes the price of a literal or a short rep ."}
{"id": 7896, "prediction": "Calculates the longRepPrices for a given state and available options ."}
{"id": 7897, "prediction": "Calculates the price of the normal match prices ."}
{"id": 7898, "prediction": "Throws an exception for expected byte ."}
{"id": 7899, "prediction": "Throws an exception for invalid byte ."}
{"id": 7900, "prediction": "Scans the classpath for TLDs ."}
{"id": 7901, "prediction": "Scans the specified resource path for TLDs ."}
{"id": 7902, "prediction": "Add a JspServletWrapper to the context ."}
{"id": 7903, "prediction": "Returns the parent class loader ."}
{"id": 7904, "prediction": "Set a bytecode attribute ."}
{"id": 7905, "prediction": "Returns the bytecode time associated with the specified name ."}
{"id": 7906, "prediction": "Saves the bytecode for a class ."}
{"id": 7907, "prediction": "Check whether the tag files have already been compiled ."}
{"id": 7908, "prediction": "Initializes the classpath for the compilation ."}
{"id": 7909, "prediction": "Start the background thread ."}
{"id": 7910, "prediction": "Stops the current thread ."}
{"id": 7911, "prediction": "This is the entry point for the JSP compiler ."}
{"id": 7912, "prediction": "Finds a channel by its name ."}
{"id": 7913, "prediction": "Finds a channel by its name ."}
{"id": 7914, "prediction": "Updates the cache of all deploy groups for a given channel ."}
{"id": 7915, "prediction": "Returns a list of group ids ."}
{"id": 7916, "prediction": "Copy from an input stream to an output stream ."}
{"id": 7917, "prediction": "Parses the given Jsp file and returns a Node . Nodes ."}
{"id": 7918, "prediction": "Parses the attributes from the specified reader ."}
{"id": 7919, "prediction": "Parse quoted string ."}
{"id": 7920, "prediction": "Adds an include directive to the document ."}
{"id": 7921, "prediction": "Parse an attribute and a body element ."}
{"id": 7922, "prediction": "Adds an attribute to the context ."}
{"id": 7923, "prediction": "Adds a child node to this node ."}
{"id": 7924, "prediction": "Returns an iterator of attribute names ."}
{"id": 7925, "prediction": "Finds all the children of this node ."}
{"id": 7926, "prediction": "Finds all children with the given name ."}
{"id": 7927, "prediction": "Returns this MavenCoordinates as a MavenCoordinates object ."}
{"id": 7928, "prediction": "Returns the input variable s alias ."}
{"id": 7929, "prediction": "Set up a thread that will print some data to a PrintStream ."}
{"id": 7930, "prediction": "Unset the current thread ."}
{"id": 7931, "prediction": "Finds a PrintStream for this thread ."}
{"id": 7932, "prediction": "Write optional field value to the writer ."}
{"id": 7933, "prediction": "Writes a field name and value to a writer ."}
{"id": 7934, "prediction": "Add an element to a parent element ."}
{"id": 7935, "prediction": "Adds an element to the parent element with the specified name first ."}
{"id": 7936, "prediction": "Writes the contents of this BodyContent to the given Writer ."}
{"id": 7937, "prediction": "Set the writer that will be used to write output ."}
{"id": 7938, "prediction": "Allocates the buffer ."}
{"id": 7939, "prediction": "Converts an EL function page into a static initializer ."}
{"id": 7940, "prediction": "Gets the same parent state with the specified key ."}
{"id": 7941, "prediction": "Registers a model with the storage provider ."}
{"id": 7942, "prediction": "Reads a stream of data from the MetaKey passed in ."}
{"id": 7943, "prediction": "Monitor a job"}
{"id": 7944, "prediction": "Returns true if the request is authenticated false otherwise ."}
{"id": 7945, "prediction": "Finishes the parsing and closes the underlying output stream ."}
{"id": 7946, "prediction": "Create a Gson object ."}
{"id": 7947, "prediction": "Encodes for LZMA2 ."}
{"id": 7948, "prediction": "Returns the union of provided and extracted meta keys ."}
{"id": 7949, "prediction": "Get the exception associated with the JSP ."}
{"id": 7950, "prediction": "Returns the check sum of the specified Coordinates ."}
{"id": 7951, "prediction": "Finishes writing the uncompressed data to the stream ."}
{"id": 7952, "prediction": "Gets the exception associated with this request ."}
{"id": 7953, "prediction": "Evaluates an EL expression and returns the result of the expression ."}
{"id": 7954, "prediction": "Create a key to use for the OSGi service prefix ."}
{"id": 7955, "prediction": "Returns true if the path is an XML file ."}
{"id": 7956, "prediction": "Return the TagInfo for a given tag file name and path ."}
{"id": 7957, "prediction": "Loads the tag file from the tag file system ."}
{"id": 7958, "prediction": "Remove all proto type files ."}
{"id": 7959, "prediction": "The main entry point for this example ."}
{"id": 7960, "prediction": "Set the URI root ."}
{"id": 7961, "prediction": "Scans a directory for files ."}
{"id": 7962, "prediction": "Locates the URI root of a file ."}
{"id": 7963, "prediction": "Initialize the system class loader ."}
{"id": 7964, "prediction": "Moves the cursor position ."}
{"id": 7965, "prediction": "Returns true if this matches the specified string ."}
{"id": 7966, "prediction": "Returns true if the given string matches any of the regular expressions following this pattern ."}
{"id": 7967, "prediction": "Skips characters until the specified limit ."}
{"id": 7968, "prediction": "Skip characters from the current position until the given escape character ."}
{"id": 7969, "prediction": "Skips elements until the end of an ETag ."}
{"id": 7970, "prediction": "Parses a single token ."}
{"id": 7971, "prediction": "Pop the current file ."}
{"id": 7972, "prediction": "Returns this coordinates as an unclassified Coordinates ."}
{"id": 7973, "prediction": "Return a list of aspect information that match a given predicate ."}
{"id": 7974, "prediction": "Gets the missing ids for the given aspects ."}
{"id": 7975, "prediction": "Set the schema resource prefix ."}
{"id": 7976, "prediction": "Set the DTD resource prefix ."}
{"id": 7977, "prediction": "URL - encode a path with % encoding ."}
{"id": 7978, "prediction": "Convert a TreeNode to a TreeNode"}
{"id": 7979, "prediction": "Recursively adds the errors from a BindingResult to a BindingResult ."}
{"id": 7980, "prediction": "Initializes the given binder ."}
{"id": 7981, "prediction": "Scans all the aspectformations for a given bundle ."}
{"id": 7982, "prediction": "Returns the unqualified version of the path ."}
{"id": 7983, "prediction": "Called by a tag plugin ."}
{"id": 7984, "prediction": "Returns a byte array with the specified size filled with zeros if necessary ."}
{"id": 7985, "prediction": "Returns an int array with the specified size filled with zeros if necessary ."}
{"id": 7986, "prediction": "Converts a collection of artifacts into a result ."}
{"id": 7987, "prediction": "Get a resource as a stream ."}
{"id": 7988, "prediction": "Perform validation on the specified page ."}
{"id": 7989, "prediction": "Push a stream to the include stack ."}
{"id": 7990, "prediction": "Gets the encoding of a given file ."}
{"id": 7991, "prediction": "Scans an XML declaration ."}
{"id": 7992, "prediction": "Report a fatal error ."}
{"id": 7993, "prediction": "Get the real path of a file ."}
{"id": 7994, "prediction": "Returns the resource at the given path as a URL ."}
{"id": 7995, "prediction": "Returns the contents of a resource as an InputStream ."}
{"id": 7996, "prediction": "Return a list of all files and directories under a given path"}
{"id": 7997, "prediction": "Log a message and an exception ."}
{"id": 7998, "prediction": "Add a filter ."}
{"id": 7999, "prediction": "Calculates the size of the Buf for a given dictSize ."}
{"id": 8000, "prediction": "Returns the memory usage of the specified dictionary ."}
{"id": 8001, "prediction": "Set the preset dictionary to the given dictSize ."}
{"id": 8002, "prediction": "Moves the read window to a multiple of 16 bytes ."}
{"id": 8003, "prediction": "Copies len bytes into the dictionary buffer starting at the given offset ."}
{"id": 8004, "prediction": "Processes pending data that hasn t been running through the match finder yet ."}
{"id": 8005, "prediction": "Returns the length of the next match ."}
{"id": 8006, "prediction": "Returns the length of the next match ."}
{"id": 8007, "prediction": "Verifies that each element in the matches array has the same length as the input ."}
{"id": 8008, "prediction": "Move the current writePos to the requiredForFinishing index . If the writePos is larger than requiredForFlushing then the pendingSize is updated ."}
{"id": 8009, "prediction": "Recycle the response ."}
{"id": 8010, "prediction": "Flushes the buffer to the underlying stream ."}
{"id": 8011, "prediction": "Clears this buffer ."}
{"id": 8012, "prediction": "Flushes the output stream ."}
{"id": 8013, "prediction": "Closes the response stream ."}
{"id": 8014, "prediction": "Write a string to the stream ."}
{"id": 8015, "prediction": "Allocates a char buffer ."}
{"id": 8016, "prediction": "Throws an exception with an error report ."}
{"id": 8017, "prediction": "Make a key from the given meta data ."}
{"id": 8018, "prediction": "Generates a Java class ."}
{"id": 8019, "prediction": "Compile all . java files to a . java file ."}
{"id": 8020, "prediction": "Attempts to remove all generated files ."}
{"id": 8021, "prediction": "Initialize the Java compiler ."}
{"id": 8022, "prediction": "Returns true if the system jar is in web . xml false otherwise ."}
{"id": 8023, "prediction": "Returns a quoted version of the given character ."}
{"id": 8024, "prediction": "Generates a declaration that returns the information of the corresponding page directive ."}
{"id": 8025, "prediction": "Generate a list of tag handlers for the given custom tag type ."}
{"id": 8026, "prediction": "Generate the XMLProlog for the given node ."}
{"id": 8027, "prediction": "Generate the common postamble ."}
{"id": 8028, "prediction": "Generate postamble for a specific node ."}
{"id": 8029, "prediction": "Generate an XML fragment ."}
{"id": 8030, "prediction": "Generate the tag handler attributes ."}
{"id": 8031, "prediction": "Reads a set of properties from the given stream ."}
{"id": 8032, "prediction": "Export a channel ."}
{"id": 8033, "prediction": "Validate xml view ."}
{"id": 8034, "prediction": "Returns the corresponding tag handler ."}
{"id": 8035, "prediction": "Parse an EL expression from a string ."}
{"id": 8036, "prediction": "Returns the specified group of properties matching the specified properties ."}
{"id": 8037, "prediction": "Return whether or not the given URI is a Jsp page ."}
{"id": 8038, "prediction": "Prints a comment ."}
{"id": 8039, "prediction": "Prints a string ."}
{"id": 8040, "prediction": "Prints a string as ail ."}
{"id": 8041, "prediction": "Prints a string to the underlying writer ."}
{"id": 8042, "prediction": "Get expression in xml"}
{"id": 8043, "prediction": "Checks that the scope is not null and throws an error if it is ."}
{"id": 8044, "prediction": "Escapes a string so that it can be used in an XML document ."}
{"id": 8045, "prediction": "This method validates an EL expression ."}
{"id": 8046, "prediction": "Return the tag handler class name for this tag file ."}
{"id": 8047, "prediction": "Converts a path to a valid Java package name ."}
{"id": 8048, "prediction": "Splits a string into an array of Strings ."}
{"id": 8049, "prediction": "Converts a Java identifier into a valid Java identifier ."}
{"id": 8050, "prediction": "Converts the specified character into an MAngle string ."}
{"id": 8051, "prediction": "Returns true if key is a java keyword ."}
{"id": 8052, "prediction": "Adds a property to a map ."}
{"id": 8053, "prediction": "Add a modifier to a string ."}
{"id": 8054, "prediction": "Gets all metadata with the given namespace and key ."}
{"id": 8055, "prediction": "Modify the storage manager to add a new user ."}
{"id": 8056, "prediction": "Gets the qualified name of a file ."}
{"id": 8057, "prediction": "Puts the specified value into the cache ."}
{"id": 8058, "prediction": "Load a single column from the database ."}
{"id": 8059, "prediction": "Build a Collection of IMetric objects from a AggregatedPayload ."}
{"id": 8060, "prediction": "Attempts to resolve the given number as a Number . If the number is already resolved the result is returned ."}
{"id": 8061, "prediction": "Write to output stream ."}
{"id": 8062, "prediction": "Gets the TTL for a given locator and granularity ."}
{"id": 8063, "prediction": "Creates the prepared statements ."}
{"id": 8064, "prediction": "Track delayed metrics for a given tenant ."}
{"id": 8065, "prediction": "Track delayed metrics for a given tenant"}
{"id": 8066, "prediction": "Gets unversioned double or long ."}
{"id": 8067, "prediction": "Write unversioned double or long ."}
{"id": 8068, "prediction": "Get an immutable map of all properties ."}
{"id": 8069, "prediction": "Creates the container ."}
{"id": 8070, "prediction": "Schedules all the slots to be eligible for rollup ."}
{"id": 8071, "prediction": "Clears all the slots from running ."}
{"id": 8072, "prediction": "Registers a listener for the given event ."}
{"id": 8073, "prediction": "Register a single listener function to be called only once ."}
{"id": 8074, "prediction": "Remove event from the Emitter and remove any callbacks associated with it ."}
{"id": 8075, "prediction": "Emit an event to all listeners ."}
{"id": 8076, "prediction": "Returns a list of listeners attached to the given event ."}
{"id": 8077, "prediction": "Returns the remote name for this Cloudfiles instance ."}
{"id": 8078, "prediction": "Append an event to the rollup ."}
{"id": 8079, "prediction": "Extracts a timestamp from a file name ."}
{"id": 8080, "prediction": "Starts the HTTP server ."}
{"id": 8081, "prediction": "Computes the right hand side to convert a RollupType into a Rollup ."}
{"id": 8082, "prediction": "Get the IOContainer from the configuration ."}
{"id": 8083, "prediction": "Adds a TTL value to the TTLMapBuilder ."}
{"id": 8084, "prediction": "Compute the maximums for the given headers and outputs ."}
{"id": 8085, "prediction": "Converts an array of maximums into a string of headers ."}
{"id": 8086, "prediction": "Formats the results of the given outputs ."}
{"id": 8087, "prediction": "Register the required metrics ."}
{"id": 8088, "prediction": "Adds a thread name to the pool ."}
{"id": 8089, "prediction": "Adds the given metric index to the set of metric names ."}
{"id": 8090, "prediction": "if total doc count is greater than its children docs its a complete metric name"}
{"id": 8091, "prediction": "Gets all tokens for a given locator ."}
{"id": 8092, "prediction": "This method is for asynchronous put operations ."}
{"id": 8093, "prediction": "Extracts a given granularity from a set of points in an interval ."}
{"id": 8094, "prediction": "Calculate the granularity from the list of points that are less than or equal to the requested duration ."}
{"id": 8095, "prediction": "Sets the server time ."}
{"id": 8096, "prediction": "Returns a list of all CASSANDRA hosts ."}
{"id": 8097, "prediction": "Calculates the maximum number of connections per host ."}
{"id": 8098, "prediction": "Returns an iterable of metric column families ."}
{"id": 8099, "prediction": "Inserts a collection of metrics ."}
{"id": 8100, "prediction": "Inserts a set of metrics ."}
{"id": 8101, "prediction": "If the delayed metric tracking is enabled get the locators corresponding to the given execution context . Otherwise get the locators corresponding to the given delayed metric tracking granularity ."}
{"id": 8102, "prediction": "Fetches metric names from Elasticsearch ."}
{"id": 8103, "prediction": "Return regex to use for current and next level ."}
{"id": 8104, "prediction": "Starts the storage manager ."}
{"id": 8105, "prediction": "Stops this upload thread ."}
{"id": 8106, "prediction": "Determines if the specified locator is currently in a batch layer ."}
{"id": 8107, "prediction": "Determines if the specified locator is currently in the discovery layer ."}
{"id": 8108, "prediction": "Checks if the locator is current in the token discovery layer ."}
{"id": 8109, "prediction": "Determines whether the specified locator has been inserted before the specified slot and is a delayedLocator for the specified slot ."}
{"id": 8110, "prediction": "Set a new locator for a slot that has been marked as delayed for the current time ."}
{"id": 8111, "prediction": "Takes a query and a set of ranges and a set of ranges and returns a map of those ranges to those ranges ."}
{"id": 8112, "prediction": "Returns an Iterable of Range objects for the given interval ."}
{"id": 8113, "prediction": "Insert a collection of IMetric objects at the tail of the cache ."}
{"id": 8114, "prediction": "Insert the given metrics into the column family ."}
{"id": 8115, "prediction": "Returns true if the given metric is delayed by a delay ."}
{"id": 8116, "prediction": "Get the BoundStatement for a metric only if the metric is a delayed metric"}
{"id": 8117, "prediction": "Gets the metadata values for a given locator ."}
{"id": 8118, "prediction": "Returns an AbstractSerializer for the given type ."}
{"id": 8119, "prediction": "Checks if the given headers contain a valid content - type ."}
{"id": 8120, "prediction": "Returns true if the request s accept header is valid"}
{"id": 8121, "prediction": "Insert a list of metrics into Elasticsearch ."}
{"id": 8122, "prediction": "Verifies that at least one of the aggregated metrics is present ."}
{"id": 8123, "prediction": "Does the actual check of the downloaded files ."}
{"id": 8124, "prediction": "Returns a new extractor based on the current configuration ."}
{"id": 8125, "prediction": "Checks if the current operating system matches the provided OS name and version prefix ."}
{"id": 8126, "prediction": "Starts the Erlang application ."}
{"id": 8127, "prediction": "Stops the running process ."}
{"id": 8128, "prediction": "Creates a new instance of PnSignalingParams with the default parameters set ."}
{"id": 8129, "prediction": "Adds the specified ICE servers to the specified list ."}
{"id": 8130, "prediction": "Adds an ICE server to the list . If the list does not exist it s created ."}
{"id": 8131, "prediction": "Send a message to the server"}
{"id": 8132, "prediction": "Sends a message to all peers"}
{"id": 8133, "prediction": "Gets the value of the weitereAdresse property ."}
{"id": 8134, "prediction": "Gets the value of the userDefinedSimplefield property ."}
{"id": 8135, "prediction": "Gets the value of the userDefinedAnyfield property ."}
{"id": 8136, "prediction": "Sets the value of the api specfelder property ."}
{"id": 8137, "prediction": "Gets the value of the multimediaAnhang property ."}
{"id": 8138, "prediction": "Gets the status of the driver ."}
{"id": 8139, "prediction": "Gets the status of the driver ."}
{"id": 8140, "prediction": "Gets the status type ."}
{"id": 8141, "prediction": "Gets the type of importmodus ."}
{"id": 8142, "prediction": "Gets the value of the adressdruck property ."}
{"id": 8143, "prediction": "Returns the Waehrung type ."}
{"id": 8144, "prediction": "Gets the value of the boden).ag property ."}
{"id": 8145, "prediction": "Sets the region value ."}
{"id": 8146, "prediction": "Sets the area value ."}
{"id": 8147, "prediction": "Sets the value of the address property ."}
{"id": 8148, "prediction": "Sets the value of the description property ."}
{"id": 8149, "prediction": "Sets the value of the rentCollectionPeriod property ."}
{"id": 8150, "prediction": "Sets the value of the furnished property ."}
{"id": 8151, "prediction": "Sets the phone1 value ."}
{"id": 8152, "prediction": "Sets the phone2 value ."}
{"id": 8153, "prediction": "Sets the value of the contactName property ."}
{"id": 8154, "prediction": "Sets the phoneInfo value ."}
{"id": 8155, "prediction": "Sets the main email address ."}
{"id": 8156, "prediction": "Sets the value of the ccEmail property ."}
{"id": 8157, "prediction": "Sets the value of the externalId property ."}
{"id": 8158, "prediction": "Sets the value of the agentId property ."}
{"id": 8159, "prediction": "Sets the Epart value for this Driver ."}
{"id": 8160, "prediction": "Sets the value of the jah uidang property ."}
{"id": 8161, "prediction": "Sets the value of the gebceudeart property ."}
{"id": 8162, "prediction": "Sets the value of the tag property ."}
{"id": 8163, "prediction": "Returns true if the given string is a number according to the given locale ."}
{"id": 8164, "prediction": "Sets the value of the gebiete property ."}
{"id": 8165, "prediction": "Sets the value of the gruppe property ."}
{"id": 8166, "prediction": "Sets the value of the agent property ."}
{"id": 8167, "prediction": "Gets the value of the property property ."}
{"id": 8168, "prediction": "Set the stand point ."}
{"id": 8169, "prediction": "Gets the value of the userDefinedExtend property ."}
{"id": 8170, "prediction": "Sets the value of the className property ."}
{"id": 8171, "prediction": "Gets the value of the zimmer property ."}
{"id": 8172, "prediction": "Gets the value of thehaus property ."}
{"id": 8173, "prediction": "Gets the value of the userNameP type property ."}
{"id": 8174, "prediction": "Gets the value of the gastgewerbe property ."}
{"id": 8175, "prediction": "Gets the value of the LandUndForstwirts time series property ."}
{"id": 8176, "prediction": "Gets the value of thesonstige property ."}
{"id": 8177, "prediction": "Gets the value of the zin active objekt property ."}
{"id": 8178, "prediction": "Gets the value of the typeName property ."}
{"id": 8179, "prediction": "Sets the value of the umfang property ."}
{"id": 8180, "prediction": "Sets the value of the w ungtyp property ."}
{"id": 8181, "prediction": "Get the iso2 code of the given country ."}
{"id": 8182, "prediction": "Utility method to extract the country name from an ISO 3 country ."}
{"id": 8183, "prediction": "Returns the iso3 code of the given country or null if the country is not valid ."}
{"id": 8184, "prediction": "Utility method to get the country from yyyyMMddThhmmssZ"}
{"id": 8185, "prediction": "Gets the name of the given country from the given language ."}
{"id": 8186, "prediction": "Get the name of the given country from the given language ."}
{"id": 8187, "prediction": "Gets the value of the anbieter property ."}
{"id": 8188, "prediction": "Sets the value of the category property ."}
{"id": 8189, "prediction": "Gets the value of the pdf property ."}
{"id": 8190, "prediction": "Sets the value of the aktionart property ."}
{"id": 8191, "prediction": "Sets the value of the real items property ."}
{"id": 8192, "prediction": "Sets the value of the pacht property ."}
{"id": 8193, "prediction": "Downgrades from version 1 . 6 to the previous version"}
{"id": 8194, "prediction": "Upgrade from previous version of OpenImmo ."}
{"id": 8195, "prediction": "Gets the value of the content property ."}
{"id": 8196, "prediction": "Gets the field names ."}
{"id": 8197, "prediction": "Set the value of the blick property ."}
{"id": 8198, "prediction": "Sets the value of the pauschalmiete property ."}
{"id": 8199, "prediction": "Sets the value of the monatsmiete property ."}
{"id": 8200, "prediction": "Gets the value of the park distortionz property ."}
{"id": 8201, "prediction": "Sets the value of the lastVisitedufzug property ."}
{"id": 8202, "prediction": "Sets the Zustand . ZustandArt value ."}
{"id": 8203, "prediction": "Gets the value of the feld property ."}
{"id": 8204, "prediction": "This method is called when a validation event occurs ."}
{"id": 8205, "prediction": "Dumps the current record list to the specified writer using the specified line separator ."}
{"id": 8206, "prediction": "Returns the value at the given position . If the value is null the defaultValue is returned ."}
{"id": 8207, "prediction": "Print the records ."}
{"id": 8208, "prediction": "Set the value of a specific field ."}
{"id": 8209, "prediction": "Sets the value of the type property ."}
{"id": 8210, "prediction": "Sets the value of thehaustyp property ."}
{"id": 8211, "prediction": "Gets the value of the energiepass property ."}
{"id": 8212, "prediction": "Sets the value of the k &lt ; date&gt ; tag&gt ; ."}
{"id": 8213, "prediction": "Sets the value of the grundstTyp property ."}
{"id": 8214, "prediction": "Sets the value of the geschl attribute ."}
{"id": 8215, "prediction": "Sets the value of the hCtxTyp property ."}
{"id": 8216, "prediction": "Gets the wiederholungstermin value ."}
{"id": 8217, "prediction": "Gets the value of the teilungsverste paragraphung property ."}
{"id": 8218, "prediction": "Downgrades from the previous version to the new version ."}
{"id": 8219, "prediction": "Gets the value of the Bevorzugt property ."}
{"id": 8220, "prediction": "Gets the value of the wun distortion date property ."}
{"id": 8221, "prediction": "Sets the art value for this Uebertragung ."}
{"id": 8222, "prediction": "Sets the value of the modus property ."}
{"id": 8223, "prediction": "Gets the value of the emailSonstige property ."}
{"id": 8224, "prediction": "Gets the value of thetelSonstige property ."}
{"id": 8225, "prediction": "Sets the value of the handelTyp property ."}
{"id": 8226, "prediction": "Downgrades from version 1 . 5 to the previous version"}
{"id": 8227, "prediction": "Sets the value of the apiLSfeld1 property ."}
{"id": 8228, "prediction": "Sets the value of the apiLSfeld2 property ."}
{"id": 8229, "prediction": "Sets the value of the apiLSfeld3 property ."}
{"id": 8230, "prediction": "Gets the value of the row property ."}
{"id": 8231, "prediction": "Sets the value of the distanzZuSport property ."}
{"id": 8232, "prediction": "Gets the value of the anhang property ."}
{"id": 8233, "prediction": "Gets the type of objectekt ."}
{"id": 8234, "prediction": "Gets theObjektZustandTyp instance ."}
{"id": 8235, "prediction": "Gets the HausK data type ."}
{"id": 8236, "prediction": "Gets the value of the ausstattungsqualitaet property ."}
{"id": 8237, "prediction": "Gets the value of the vermarktungsart property ."}
{"id": 8238, "prediction": "Gets the value of the interessent property ."}
{"id": 8239, "prediction": "Sets the value of the wert property ."}
{"id": 8240, "prediction": "Sets the value of this DiscoverInfo ."}
{"id": 8241, "prediction": "Sets the value of the bauerwartungsland property ."}
{"id": 8242, "prediction": "Sets the value of the bootsstaende property ."}
{"id": 8243, "prediction": "Sets the value of this JAXBElement ."}
{"id": 8244, "prediction": "Sets the value of this JAXBElement ."}
{"id": 8245, "prediction": "Sets the value of the doppelPackage property ."}
{"id": 8246, "prediction": "Sets the value of the e Infam Writesion ."}
{"id": 8247, "prediction": "Sets the value of the einzel handelGross property ."}
{"id": 8248, "prediction": "Sets the value of the einzel handelKlein property ."}
{"id": 8249, "prediction": "Sets the value of the gar type property ."}
{"id": 8250, "prediction": "Sets the value of the garten property ."}
{"id": 8251, "prediction": "Sets the value of the gastronomie property ."}
{"id": 8252, "prediction": "Sets the value of the gewerbe property ."}
{"id": 8253, "prediction": "Sets the value of the hotel property ."}
{"id": 8254, "prediction": "Sets the value of the industrie property ."}
{"id": 8255, "prediction": "Sets the value of the keineBebauung property ."}
{"id": 8256, "prediction": "Sets the value of the kleingewerbe property ."}
{"id": 8257, "prediction": "Sets the value of the lager property ."}
{"id": 8258, "prediction": "Sets the value of the meh {}, the date and comments property ."}
{"id": 8259, "prediction": "Sets the value of the locations property ."}
{"id": 8260, "prediction": "Sets the value of the park type property ."}
{"id": 8261, "prediction": "Sets the value of the produktion property ."}
{"id": 8262, "prediction": "Sets the value of the reihen Value property ."}
{"id": 8263, "prediction": "Sets the value of the stellplaetze property ."}
{"id": 8264, "prediction": "Sets the value of this JAXBElement ."}
{"id": 8265, "prediction": "Sets the value of this JAXBElement ."}
{"id": 8266, "prediction": "Sets the value of the anbieter property ."}
{"id": 8267, "prediction": "Gets the value of the wELEMENTung property ."}
{"id": 8268, "prediction": "Gets the value of the grundstueck property ."}
{"id": 8269, "prediction": "Gets the value of the einzel handel property ."}
{"id": 8270, "prediction": "Gets the value of the hElemLagerProb property ."}
{"id": 8271, "prediction": "Gets the value of the parken property ."}
{"id": 8272, "prediction": "Gets the value of the freizeitim type property ."}
{"id": 8273, "prediction": "Gets the value of the objektartZusatz property ."}
{"id": 8274, "prediction": "Gets the value of the stellRestrictionzart property ."}
{"id": 8275, "prediction": "Sets the value of the maxDauer property ."}
{"id": 8276, "prediction": "Gets the value of the feature property ."}
{"id": 8277, "prediction": "Sets the value of the zimertyp property ."}
{"id": 8278, "prediction": "Upgrade an existing OpenImmo document to a previous version ."}
{"id": 8279, "prediction": "Sets the value of the keineAng Value property ."}
{"id": 8280, "prediction": "Sets the value of the erdwaerme property ."}
{"id": 8281, "prediction": "Sets the value of the solarheizung property ."}
{"id": 8282, "prediction": "Sets the value of the pelletheizung property ."}
{"id": 8283, "prediction": "Sets the value of this JAXBElement ."}
{"id": 8284, "prediction": "Sets the value of the oel property ."}
{"id": 8285, "prediction": "Sets the value of the fernwaerme property ."}
{"id": 8286, "prediction": "Sets the value of the strom property ."}
{"id": 8287, "prediction": "Sets the value of the k work item ."}
{"id": 8288, "prediction": "Returns a random string of the specified length ."}
{"id": 8289, "prediction": "Returns a random string of the specified length ."}
{"id": 8290, "prediction": "Returns a random numeric string of the specified length ."}
{"id": 8291, "prediction": "Gets the value of the wELEMENTungK operation ."}
{"id": 8292, "prediction": "Sets the WIS . BENUTZER value ."}
{"id": 8293, "prediction": "Sets the value of the objekte property ."}
{"id": 8294, "prediction": "Gets the value of the feed property ."}
{"id": 8295, "prediction": "Sets the value of the moebliert ."}
{"id": 8296, "prediction": "Gets the value of the tageleistungen property ."}
{"id": 8297, "prediction": "Sets the subAdministrativeArea value ."}
{"id": 8298, "prediction": "Sets the value of this LocationStructure ."}
{"id": 8299, "prediction": "Sets the value of the locality property ."}
{"id": 8300, "prediction": "Downgrades a document to a previous version ."}
{"id": 8301, "prediction": "Upgrade an OpenImmoDocument from the previous version ."}
{"id": 8302, "prediction": "Sets the Land und forstwirts type ."}
{"id": 8303, "prediction": "Gets the value of the field property ."}
{"id": 8304, "prediction": "upgrade from previous version to the new version"}
{"id": 8305, "prediction": "Gets the value of the ad property ."}
{"id": 8306, "prediction": "Sets the value of the gastgewTyp property ."}
{"id": 8307, "prediction": "Sets the value of the P latzart property ."}
{"id": 8308, "prediction": "Gets the value of the datenVerk target date and comments property ."}
{"id": 8309, "prediction": "Gets the JVereinbarungTyp value ."}
{"id": 8310, "prediction": "Gets the value of the image property ."}
{"id": 8311, "prediction": "Sets the value of the priceType property ."}
{"id": 8312, "prediction": "Sets the value of the new development availability property ."}
{"id": 8313, "prediction": "Sets the directions value ."}
{"id": 8314, "prediction": "Sets the value of the co2Price property ."}
{"id": 8315, "prediction": "Sets the value of theComments property ."}
{"id": 8316, "prediction": "Sets the reporting details ."}
{"id": 8317, "prediction": "Sets the value of the propertyStatus property ."}
{"id": 8318, "prediction": "Sets the value of the setLengths property ."}
{"id": 8319, "prediction": "Sets the Beba workgroup attribute value ."}
{"id": 8320, "prediction": "Upgrade from previous version ."}
{"id": 8321, "prediction": "Sets the value of the parkenTyp property ."}
{"id": 8322, "prediction": "Sets the alter attribute of the driver ."}
{"id": 8323, "prediction": "Sets the value of the freizeitTyp property ."}
{"id": 8324, "prediction": "Sets the value of thetelefonart property ."}
{"id": 8325, "prediction": "Sets the value of the emailart property ."}
{"id": 8326, "prediction": "Sets the value of the overseas data source property ."}
{"id": 8327, "prediction": "Sets the value of the overseasRental property ."}
{"id": 8328, "prediction": "Generates a node representing a user defined simple field ."}
{"id": 8329, "prediction": "Gets the value of the fehler property ."}
{"id": 8330, "prediction": "Sets the value of this VermarktungGrundstueckGewerbeTyp ."}
{"id": 8331, "prediction": "Gets the value of the stpSonstige property ."}
{"id": 8332, "prediction": "Gets the valueLIST property ."}
{"id": 8333, "prediction": "Sets the value of the minDauer property ."}
{"id": 8334, "prediction": "Sets the value of the zinsTyp property ."}
{"id": 8335, "prediction": "Gets the value of the photo property ."}
{"id": 8336, "prediction": "Sets the Metadata for this feed ."}
{"id": 8337, "prediction": "Sets the value of the projects property ."}
{"id": 8338, "prediction": "Sets the properties for this feed ."}
{"id": 8339, "prediction": "Downgrades from the previous version to the latest version ."}
{"id": 8340, "prediction": "Upgrade from the previous version ."}
{"id": 8341, "prediction": "Gets the value of the im type property ."}
{"id": 8342, "prediction": "Gets the value of the objekt property ."}
{"id": 8343, "prediction": "Gets the value of the fehlerliste property ."}
{"id": 8344, "prediction": "Gets the value of the status property ."}
{"id": 8345, "prediction": "Sets the SonstigeTyp value ."}
{"id": 8346, "prediction": "Sets the distanzZu value ."}
{"id": 8347, "prediction": "Gets the value of the distan set ."}
{"id": 8348, "prediction": "Gets the value of the distan Value property ."}
{"id": 8349, "prediction": "Checks if the given exception is compatible with the throws clause ."}
{"id": 8350, "prediction": "Set the namespace bindings ."}
{"id": 8351, "prediction": "Binds a prefix to a namespace uri ."}
{"id": 8352, "prediction": "Remove a binding ."}
{"id": 8353, "prediction": "Returns true if the given string contains an open tag ."}
{"id": 8354, "prediction": "Utility method to consume tokens that are comments ."}
{"id": 8355, "prediction": "Returns the next comment or null if the line is a comment ."}
{"id": 8356, "prediction": "Replies the index of the specified comment token ."}
{"id": 8357, "prediction": "Initialize logging ."}
{"id": 8358, "prediction": "Binds a namespace prefix to the namespace context ."}
{"id": 8359, "prediction": "Add an iterator to the end of the list ."}
{"id": 8360, "prediction": "Adds an option ."}
{"id": 8361, "prediction": "Adds a string option ."}
{"id": 8362, "prediction": "Adds an integer option ."}
{"id": 8363, "prediction": "Adds a long option ."}
{"id": 8364, "prediction": "Adds a double option ."}
{"id": 8365, "prediction": "Adds a boolean option ."}
{"id": 8366, "prediction": "Parses the command line arguments ."}
{"id": 8367, "prediction": "Create a new instance of a class ."}
{"id": 8368, "prediction": "This method is called after access is completed ."}
{"id": 8369, "prediction": "Set the target object ."}
{"id": 8370, "prediction": "Prepares the object for invocation ."}
{"id": 8371, "prediction": "Finds a matching method for the argument types ."}
{"id": 8372, "prediction": "Converts an integer to an unsigned string ."}
{"id": 8373, "prediction": "Serializes an object to a byte array ."}
{"id": 8374, "prediction": "Deserializes an object from a byte array ."}
{"id": 8375, "prediction": "Return the first child element with the specified tag name ."}
{"id": 8376, "prediction": "Get the text value of the child element with the specified tag name ."}
{"id": 8377, "prediction": "Return a list of all child elements of the given element ."}
{"id": 8378, "prediction": "Returns true if the node has the desired name ."}
{"id": 8379, "prediction": "Returns true if the node has the same name as the desiredNames ."}
{"id": 8380, "prediction": "Sets the length of a string ."}
{"id": 8381, "prediction": "Add a weak reference to the handle and notify the listener of that entry ."}
{"id": 8382, "prediction": "Adds an entry to the tracked list ."}
{"id": 8383, "prediction": "Returns true if the monitoring thread should be stopped false otherwise ."}
{"id": 8384, "prediction": "Calculates the mobile accuracy for a given mobile number ."}
{"id": 8385, "prediction": "Starts a prefix mapping with the given namespace ."}
{"id": 8386, "prediction": "Filter an end Namespace prefix mapping event ."}
{"id": 8387, "prediction": "Adds a FutureCallback to the current mutex and calls the given callback on the result ."}
{"id": 8388, "prediction": "This method parses the jar and creates and returns the root node ."}
{"id": 8389, "prediction": "Returns the color of the text which corresponds to the given item ."}
{"id": 8390, "prediction": "Set the values for this item ."}
{"id": 8391, "prediction": "Returns the color of the item which corresponds to a specific position ."}
{"id": 8392, "prediction": "Sets the text size ."}
{"id": 8393, "prediction": "Gets the x - axis bounds ."}
{"id": 8394, "prediction": "Gets the intro text ."}
{"id": 8395, "prediction": "Gets the names of the keywords used for the remote server ."}
{"id": 8396, "prediction": "Get the command line arguments for the remote server ."}
{"id": 8397, "prediction": "Get the documentation for a specific keyword ."}
{"id": 8398, "prediction": "The main entry point for this application ."}
{"id": 8399, "prediction": "Stop the remote server and wait for it to shut down ."}
{"id": 8400, "prediction": "Starts the remote server ."}
{"id": 8401, "prediction": "Converts properties from a file to a JSON string ."}
{"id": 8402, "prediction": "Converts properties from a file to a JSON string ."}
{"id": 8403, "prediction": "Converts JSON input stream to JSON ."}
{"id": 8404, "prediction": "Converts properties to a JSON string ."}
{"id": 8405, "prediction": "Converts properties to a JSON string ."}
{"id": 8406, "prediction": "Converts a map of properties to a JSON string ."}
{"id": 8407, "prediction": "This method takes a map of properties and converts it into a string which can be passed to the API ."}
{"id": 8408, "prediction": "Converts properties to a JSON string ."}
{"id": 8409, "prediction": "Returns the radius of the specified shadow and circle ."}
{"id": 8410, "prediction": "Returns a builder that can be used to build an Apache OCSPFetcher ."}
{"id": 8411, "prediction": "Finds the issuer X500Principal in the given certificate ."}
{"id": 8412, "prediction": "Executes the Maven plugin ."}
{"id": 8413, "prediction": "Reads all Markdown files from the specified input directory ."}
{"id": 8414, "prediction": "Substitute variables in template string with values from variables map ."}
{"id": 8415, "prediction": "Gets the title from a list of Strings . If the raw list is null the default title is returned ."}
{"id": 8416, "prediction": "Adds the title to an HTML file ."}
{"id": 8417, "prediction": "Substitute the variables in the initial content with the values in the variables map ."}
{"id": 8418, "prediction": "Updates the relative paths in the given HTML string ."}
{"id": 8419, "prediction": "Copies all files from a directory to another directory ."}
{"id": 8420, "prediction": "Check the host path to make sure it is valid ."}
{"id": 8421, "prediction": "Returns the child view that contains the item at the specified index ."}
{"id": 8422, "prediction": "Fade up the container with the specified duration ."}
{"id": 8423, "prediction": "Fade the container down for the specified duration ."}
{"id": 8424, "prediction": "Calculates the percentage of the specified width ."}
{"id": 8425, "prediction": "overlap the views with the specified width"}
{"id": 8426, "prediction": "Returns an Intent that can be used to launch the specified activity ."}
{"id": 8427, "prediction": "Launches an activity ."}
{"id": 8428, "prediction": "Get information about a specific fact sheet . Get information about a specific fact sheet ."}
{"id": 8429, "prediction": "Get a list of all workspaces for a given type and relation types"}
{"id": 8430, "prediction": "Download file from response ."}
{"id": 8431, "prediction": "Build a new HTTP client ."}
{"id": 8432, "prediction": "Create new access control entity"}
{"id": 8433, "prediction": "Update DataModel Update response . Update DataModel"}
{"id": 8434, "prediction": "Create a full export job"}
{"id": 8435, "prediction": "Get Export List for a user"}
{"id": 8436, "prediction": "Set the host to use for the OAuth2 token provider ."}
{"id": 8437, "prediction": "Set the client credentials ."}
{"id": 8438, "prediction": "Perform GraphQL upload operation on a multi - part graphQLRequest and file"}
{"id": 8439, "prediction": "Get all BOOKMARKs for a given group key and sharing type"}
{"id": 8440, "prediction": "Adds permissions to a named graph ."}
{"id": 8441, "prediction": "Writes permissions for a named graph ."}
{"id": 8442, "prediction": "Set the rulesets of the dataset ."}
{"id": 8443, "prediction": "Closes the client ."}
{"id": 8444, "prediction": "Executes a select statement ."}
{"id": 8445, "prediction": "Constructs a dataset graph from the given parameters ."}
{"id": 8446, "prediction": "Limit the number of threads in the process ."}
{"id": 8447, "prediction": "Resize the geometry ."}
{"id": 8448, "prediction": "Rotates the specified degrees with the specified RotationAnnotation ."}
{"id": 8449, "prediction": "Set the gravity for this operation ."}
{"id": 8450, "prediction": "Remove any profiles from the current GM instance ."}
{"id": 8451, "prediction": "Set the text font with the specified style size and color ."}
{"id": 8452, "prediction": "Adds an image to the list ."}
{"id": 8453, "prediction": "Adds an image ."}
{"id": 8454, "prediction": "Returns a list of arguments from the given target object and its superclasses ."}
{"id": 8455, "prediction": "Prints usage for an object ."}
{"id": 8456, "prediction": "Extract time unit from string representation ."}
{"id": 8457, "prediction": "Parses the given target object and checks for declared fields and properties ."}
{"id": 8458, "prediction": "Execute the given URL with the current screen region ."}
{"id": 8459, "prediction": "Execute the given file ."}
{"id": 8460, "prediction": "Interprets the content of the given file using the default interpreter ."}
{"id": 8461, "prediction": "Sorts a list of rectangle by size ."}
{"id": 8462, "prediction": "Render the given template text with any parameters ."}
{"id": 8463, "prediction": "Get the XML relationship for a given slide number ."}
{"id": 8464, "prediction": "Returns true if the specified key is in the screen range ."}
{"id": 8465, "prediction": "Determines whether an element has more than the supplied min overlap ratio ."}
{"id": 8466, "prediction": "Execute the outbound operation and return its payload ."}
{"id": 8467, "prediction": "Executes outbound operation and returns message payload ."}
{"id": 8468, "prediction": "Returns the file with the specified name or throws an exception if the file does not exist ."}
{"id": 8469, "prediction": "Returns the single instance of the temporary directory creating it if necessary ."}
{"id": 8470, "prediction": "Returns a new LogValueMap ."}
{"id": 8471, "prediction": "Logs a message at the TRACE level ."}
{"id": 8472, "prediction": "Logs a message at the TRACE level ."}
{"id": 8473, "prediction": "Logs a message with a level of DEBUG ."}
{"id": 8474, "prediction": "Logs a message and stack trace if DEBUG logging is enabled ."}
{"id": 8475, "prediction": "Logs a message at the INFO level ."}
{"id": 8476, "prediction": "Logs a message at the INFO level ."}
{"id": 8477, "prediction": "Record an info event with a message and a data key ."}
{"id": 8478, "prediction": "Logs a message with a level of WARN ."}
{"id": 8479, "prediction": "Logs a message with a level of WARN ."}
{"id": 8480, "prediction": "Logs a message with a level of ERROR ."}
{"id": 8481, "prediction": "Logs a message with a level of ERROR ."}
{"id": 8482, "prediction": "Add to the context line and method ."}
{"id": 8483, "prediction": "Writes a StenoWrapper instance to a JSON stream ."}
{"id": 8484, "prediction": "Write key value pairs with the given json generator and the given object mapper ."}
{"id": 8485, "prediction": "Serializes a Throwable to a JSONGenerator using the provided ObjectMapper ."}
{"id": 8486, "prediction": "Returns a LogValue representation of this duration ."}
{"id": 8487, "prediction": "Replies the caller data for the given logging event ."}
{"id": 8488, "prediction": "Append a value to a StringBuilder safe to be used by the compiler ."}
{"id": 8489, "prediction": "Create a database in Hive"}
{"id": 8490, "prediction": "Checks to see if there is a mapping for the given array position . If so removes it from the array position list ."}
{"id": 8491, "prediction": "Parse the save attribute for the given cell and return it as a comma separated string ."}
{"id": 8492, "prediction": "Save the data for an object in the context ."}
{"id": 8493, "prediction": "Refresh a sheet row from a context ."}
{"id": 8494, "prediction": "Gets the save attribute string from the value ."}
{"id": 8495, "prediction": "Gets the save attribute list from a row ."}
{"id": 8496, "prediction": "Gets the save attribute from the list ."}
{"id": 8497, "prediction": "Saves the objects in a hidden column ."}
{"id": 8498, "prediction": "Set the comments map for each row in the sheet ."}
{"id": 8499, "prediction": "Set the save attributes for a row ."}
{"id": 8500, "prediction": "Make a full name and attributes for a cell and return the attribute value ."}
{"id": 8501, "prediction": "Formats a number as a string ."}
{"id": 8502, "prediction": "Put shift attributes ."}
{"id": 8503, "prediction": "Set the Workbook pWb ."}
{"id": 8504, "prediction": "Gets theSerializerWrapper . If the wrapper has not been created yet it will be created ."}
{"id": 8505, "prediction": "Returns a formula evaluator ."}
{"id": 8506, "prediction": "Revalidate the max col counts for this sheet ."}
{"id": 8507, "prediction": "Loads a web sheet from an input stream ."}
{"id": 8508, "prediction": "Loads a web sheet ."}
{"id": 8509, "prediction": "Returns the index of the tab with the given name or - 1 if the tab does not exist ."}
{"id": 8510, "prediction": "Export the file ."}
{"id": 8511, "prediction": "Notifies the user that the form data should be saved ."}
{"id": 8512, "prediction": "Called when the form is submitted ."}
{"id": 8513, "prediction": "Populate the component ."}
{"id": 8514, "prediction": "Returns the SheetConfiguration for the current sheet ."}
{"id": 8515, "prediction": "Recovers the document from a stream ."}
{"id": 8516, "prediction": "Returns the locale of the given component ."}
{"id": 8517, "prediction": "Returns a StreamedContent based on the result of the browser request . If the request contains no image returns an empty byte . If the request contains no image returns an empty byte ."}
{"id": 8518, "prediction": "Gets the cell helper ."}
{"id": 8519, "prediction": "This method is used to get a reference to the ConversionHelper ."}
{"id": 8520, "prediction": "Returns the validation handler ."}
{"id": 8521, "prediction": "Gets the chart helper ."}
{"id": 8522, "prediction": "Convert a set of ptgs to a set of shared formulas ."}
{"id": 8523, "prediction": "Convert a ptg object to a new ptg ."}
{"id": 8524, "prediction": "Convert a ptg for a watch list ."}
{"id": 8525, "prediction": "a single ptg ."}
{"id": 8526, "prediction": "Get a list of SerialRows from the rows mapping at the current row ."}
{"id": 8527, "prediction": "Utility method to assemble the list of rows from the row mapping ."}
{"id": 8528, "prediction": "Fixup a relative Row reference to a Ref3DPXG object ."}
{"id": 8529, "prediction": "Create a new dynamic row for a Ref3DPxg base ."}
{"id": 8530, "prediction": "Creates a new dynamic row for the areaPtg base ."}
{"id": 8531, "prediction": "Returns a XColor based on the fill properties in the theme table . If no fill property could be found null is returned ."}
{"id": 8532, "prediction": "Takes a CTShapeProperties and returns a XColor with an automatic fill for it ."}
{"id": 8533, "prediction": "Find the automatic fill color in the given theme table ."}
{"id": 8534, "prediction": "Extracts XColor from scheme clr ."}
{"id": 8535, "prediction": "Converts CTSRgbColor to XColor ."}
{"id": 8536, "prediction": "Creates an XColor with the autoCOLOR of the specified index using the supplied theme table ."}
{"id": 8537, "prediction": "Converts XSSF clr color toClr color ."}
{"id": 8538, "prediction": "Convert a XSSF color to a Triplet array ."}
{"id": 8539, "prediction": "Gets the bg color from cell ."}
{"id": 8540, "prediction": "Finds component name from class ."}
{"id": 8541, "prediction": "Populate the properties of the given FacesCell with the default values ."}
{"id": 8542, "prediction": "Returns the AttributesType of the first instance of the object with the specified method name ."}
{"id": 8543, "prediction": "Set the value of a property of an object ."}
{"id": 8544, "prediction": "Returns the value of a property of an object ."}
{"id": 8545, "prediction": "Setup the control attributes for the given FacesCell and cell attributes map ."}
{"id": 8546, "prediction": "Returns a list of CellFormAttributes for a given cell ."}
{"id": 8547, "prediction": "Adds a photo from the parent sheet to the specified cell and cell s id ."}
{"id": 8548, "prediction": "Setup the FacesCell Charts for the given cell and fId ."}
{"id": 8549, "prediction": "Utility method to setup a FacesCell and a particular cell with the given ID ."}
{"id": 8550, "prediction": "This method initialises the data map from the supplied workbook ."}
{"id": 8551, "prediction": "Getie title from chart data"}
{"id": 8552, "prediction": "Sets the style of a series of a chart ."}
{"id": 8553, "prediction": "Creates a chart using a data set ."}
{"id": 8554, "prediction": "Setup the bar style ."}
{"id": 8555, "prediction": "This method initialises the X set up with the current X set up . It then creates a new X set with the current X set up ."}
{"id": 8556, "prediction": "Gets the ID of a chart from its parent ."}
{"id": 8557, "prediction": "This method is used to initialize the annotations map for the current Workbook"}
{"id": 8558, "prediction": "Generates a chart for the specified chartId using the specified chart data ."}
{"id": 8559, "prediction": "Evaluate the expression and return the result as a Collection ."}
{"id": 8560, "prediction": "Gets the full name from the given row ."}
{"id": 8561, "prediction": "Recompute the upper - level formula for a build ."}
{"id": 8562, "prediction": "Sets up the formula and rows mapping for the given upper level cell ."}
{"id": 8563, "prediction": "Build a cell formula for the shift rows ."}
{"id": 8564, "prediction": "Get rows mapping for a given full name ."}
{"id": 8565, "prediction": "Change index number in shift map ."}
{"id": 8566, "prediction": "Change the final length of the upper level ."}
{"id": 8567, "prediction": "Change index number in hidden column ."}
{"id": 8568, "prediction": "Sets the full name in a hidden column ."}
{"id": 8569, "prediction": "Gets the original row number in the hidden column ."}
{"id": 8570, "prediction": "Sets the original row number in a hidden column ."}
{"id": 8571, "prediction": "Find the rows mapping for a given shift map ."}
{"id": 8572, "prediction": "Get a list of row mapping from a shift map ."}
{"id": 8573, "prediction": "Finds an item in a collection ."}
{"id": 8574, "prediction": "Creates the current config range based on the source config range and the insert position ."}
{"id": 8575, "prediction": "Return true if the row at the given row is inside the given config range ."}
{"id": 8576, "prediction": "Return true if the given row is a static row reference ; false otherwise ."}
{"id": 8577, "prediction": "Replace the expression with the cell value ."}
{"id": 8578, "prediction": "Index the merged region into the cell range map ."}
{"id": 8579, "prediction": "Returns a list of cell names for the specified regions ."}
{"id": 8580, "prediction": "Add skip cell list in the region ."}
{"id": 8581, "prediction": "Builds the comment from the tie command alias"}
{"id": 8582, "prediction": "Adds a comment to a cell based on the given tie command alias ."}
{"id": 8583, "prediction": "Builds the configuration of the sheet ."}
{"id": 8584, "prediction": "Returns the sheet configuration for the given sheet ."}
{"id": 8585, "prediction": "Builds a FormCommand object from a sheet configuration ."}
{"id": 8586, "prediction": "Verify last cell ."}
{"id": 8587, "prediction": "Build the sheet ."}
{"id": 8588, "prediction": "Remove the last row if it s not null and repair it ."}
{"id": 8589, "prediction": "Build the command list from the comments in the sheet ."}
{"id": 8590, "prediction": "Sets the parent for the given child command ."}
{"id": 8591, "prediction": "Returns true if there is one command in the list false otherwise ."}
{"id": 8592, "prediction": "Match command to sheet config form ."}
{"id": 8593, "prediction": "Copy the template for Tie commands ."}
{"id": 8594, "prediction": "Build the command list ."}
{"id": 8595, "prediction": "Process a line that represents a method ."}
{"id": 8596, "prediction": "Processes a command line and adds it to a list of ConfigCommand objects ."}
{"id": 8597, "prediction": "Moves the comment from the comment map to the normal comment map ."}
{"id": 8598, "prediction": "Creates a new command instance and returns it ."}
{"id": 8599, "prediction": "Builds the attribute map from the command line ."}
{"id": 8600, "prediction": "Returns the sheet configuration from the given sheet and the given FormCommand ."}
{"id": 8601, "prediction": "Sets the footer of the sheet ."}
{"id": 8602, "prediction": "Sets the body of the sheet ."}
{"id": 8603, "prediction": "Sets the header range of the given sheet command ."}
{"id": 8604, "prediction": "Delete a row from the sheet ."}
{"id": 8605, "prediction": "Remove all ranges from the shift map ."}
{"id": 8606, "prediction": "Finds and returns the removed full name list ."}
{"id": 8607, "prediction": "Gets the each command from the command index map and the full command name ."}
{"id": 8608, "prediction": "Insert empty object in context ."}
{"id": 8609, "prediction": "Deletes an object from the context"}
{"id": 8610, "prediction": "This method is used to prepare the data for a specific collection ."}
{"id": 8611, "prediction": "Index a command range ."}
{"id": 8612, "prediction": "Is the given row allow add?"}
{"id": 8613, "prediction": "Insert each template row in the source config range at the specified index ."}
{"id": 8614, "prediction": "Evaluates the given string as a normal cell and creates the TieCell ."}
{"id": 8615, "prediction": "Evaluate the user formula ."}
{"id": 8616, "prediction": "Returns true if the specified string is a user formula ."}
{"id": 8617, "prediction": "Adds a comment to a cell ."}
{"id": 8618, "prediction": "Evaluate boolean expression"}
{"id": 8619, "prediction": "Removes all rows with the specified row index ."}
{"id": 8620, "prediction": "Removes a single row from the sheet ."}
{"id": 8621, "prediction": "Removes a cell from the row specified by rowIndexStart ."}
{"id": 8622, "prediction": "Removes the specified number of rows from the body rows ."}
{"id": 8623, "prediction": "Load the picture for the given row and col index ."}
{"id": 8624, "prediction": "Load the chart for the specified row and col index ."}
{"id": 8625, "prediction": "Assembles a new value for the specified value ."}
{"id": 8626, "prediction": "Get cell value with format ."}
{"id": 8627, "prediction": "Get cell value without format ."}
{"id": 8628, "prediction": "Get cell string value with type ."}
{"id": 8629, "prediction": "Gets cell string with number type ."}
{"id": 8630, "prediction": "Sets the value of a cell to a given value ."}
{"id": 8631, "prediction": "Sets the cell value as a String ."}
{"id": 8632, "prediction": "Sets the cell value to the specified boolean value ."}
{"id": 8633, "prediction": "Sets the cell value as a date ."}
{"id": 8634, "prediction": "Sets the cell value as a number ."}
{"id": 8635, "prediction": "Copy a range of rows from a source sheet to a destination sheet ."}
{"id": 8636, "prediction": "Copy a single row from source sheet to destination sheet"}
{"id": 8637, "prediction": "Copy a cell from one row to another ."}
{"id": 8638, "prediction": "Copy a cell set value to a new cell ."}
{"id": 8639, "prediction": "Copy the style of the source cell to the new cell ."}
{"id": 8640, "prediction": "Clone the comment box of a cell to a new cell"}
{"id": 8641, "prediction": "Creates an anchor for a comment ."}
{"id": 8642, "prediction": "Creates a comment in the specified cell and inserts it into the specified cell ."}
{"id": 8643, "prediction": "Match comment settings between two cells"}
{"id": 8644, "prediction": "Gets VML drawing from cell ."}
{"id": 8645, "prediction": "Gets the CT shape from VML ."}
{"id": 8646, "prediction": "Get a cell style from the source cell"}
{"id": 8647, "prediction": "Convert a FacesCell to a FacesCell ."}
{"id": 8648, "prediction": "Gets the row and column index from the component attributes ."}
{"id": 8649, "prediction": "Extract the initial rows from the sheet configuration ."}
{"id": 8650, "prediction": "Gets a FacesRow from a body row"}
{"id": 8651, "prediction": "Get a FacesCell from a body row ."}
{"id": 8652, "prediction": "Gets a cell from the sheet with the specified index ."}
{"id": 8653, "prediction": "Gets the sheet key from cell ."}
{"id": 8654, "prediction": "Gets or adds the TieCell in map ."}
{"id": 8655, "prediction": "Returns the name of the current data context ."}
{"id": 8656, "prediction": "Evaluate a Jexl expression ."}
{"id": 8657, "prediction": "Evaluates the expression and returns the result ."}
{"id": 8658, "prediction": "Custom serialization method ."}
{"id": 8659, "prediction": "Remove a SerialRow from the row list ."}
{"id": 8660, "prediction": "Merge the map ."}
{"id": 8661, "prediction": "Recovers the values of this sheet ."}
{"id": 8662, "prediction": "Returns the chart type for the provided chart ."}
{"id": 8663, "prediction": "Create a stroke from a string representation ."}
{"id": 8664, "prediction": "This method initialises the chart data from an X level chart ."}
{"id": 8665, "prediction": "Sets up the chart data based on a CTChart ."}
{"id": 8666, "prediction": "This method initialises the map with the current sheet index and the current position ."}
{"id": 8667, "prediction": "This method initialises the XSamplesAnchorsMap for a given Sheet ."}
{"id": 8668, "prediction": "Returns the chart id associated to the given CTTwoCellAnchor ."}
{"id": 8669, "prediction": "Gets theChartId from child node attributes ."}
{"id": 8670, "prediction": "Iterate through the collection of objects ."}
{"id": 8671, "prediction": "Save this data in the current context ."}
{"id": 8672, "prediction": "Recalculate the formula ."}
{"id": 8673, "prediction": "Gets a Cell with the row and col from the given tab ."}
{"id": 8674, "prediction": "Gets a FacesCell with the specified row and column index from the current page ."}
{"id": 8675, "prediction": "Restore data context ."}
{"id": 8676, "prediction": "Gets the last collection object from its full name ."}
{"id": 8677, "prediction": "Returns true if full name matches full name and parts list false otherwise ."}
{"id": 8678, "prediction": "Method to start restore data context ."}
{"id": 8679, "prediction": "Shift the row ref of the first row and the last row ."}
{"id": 8680, "prediction": "Sets the address of the first row ref ."}
{"id": 8681, "prediction": "Set the last row + ref of this sheet ."}
{"id": 8682, "prediction": "Build cells for a given row and set full name in hidden column ."}
{"id": 8683, "prediction": "Build single cell and add it to cache ."}
{"id": 8684, "prediction": "Reads the document from a stream ."}
{"id": 8685, "prediction": "Builds the category list ."}
{"id": 8686, "prediction": "Build a series list from a list of series"}
{"id": 8687, "prediction": "Builds a chart series for the specified theme table from a ChartObject"}
{"id": 8688, "prediction": "Get a list of XColor from a list of CTDPt and a list of ParsedCell objects ."}
{"id": 8689, "prediction": "Returns a dpt from a list with the specified index ."}
{"id": 8690, "prediction": "Sets the command index map ."}
{"id": 8691, "prediction": "Returns a map containing allictrues from the specified workbook with the specified map ."}
{"id": 8692, "prediction": "Returns the data from the given data structure as a map . The key of the map is the full sheet name and the value is the full sheet data ."}
{"id": 8693, "prediction": "Index a given picture in the map ."}
{"id": 8694, "prediction": "Generate a link style for a given sheet and cell ."}
{"id": 8695, "prediction": "Generates the style for a given chart ."}
{"id": 8696, "prediction": "Calculate the size of an anchor"}
{"id": 8697, "prediction": "Gets the regex ."}
{"id": 8698, "prediction": "Returns a StreamedContent with the URL of the chart view ."}
{"id": 8699, "prediction": "Recovers the cell from a sheet ."}
{"id": 8700, "prediction": "Get the row style as a string ."}
{"id": 8701, "prediction": "Get the cell font style as a web style string ."}
{"id": 8702, "prediction": "Gets the cell font color ."}
{"id": 8703, "prediction": "Get the cell font decoration for the given font ."}
{"id": 8704, "prediction": "Get the cell style from the Workbook and the input type"}
{"id": 8705, "prediction": "Get a simple column style for the given faces cell and row height ."}
{"id": 8706, "prediction": "Gets the alignment from cell ."}
{"id": 8707, "prediction": "Gets the vertical alignment from the cell style ."}
{"id": 8708, "prediction": "Calculate the total height of a sheet ."}
{"id": 8709, "prediction": "Sets the cell style based on the input type and the row style ."}
{"id": 8710, "prediction": "Gets the input type from the cell ."}
{"id": 8711, "prediction": "Returns the resource paths for the given path ."}
{"id": 8712, "prediction": "Gets a resource as an InputStream ."}
{"id": 8713, "prediction": "Removes the prefix path from a resource path ."}
{"id": 8714, "prediction": "Returns true if the input type matches the specified type ."}
{"id": 8715, "prediction": "This method returns the bean with the specified name ."}
{"id": 8716, "prediction": "Returns a string representation of the given short array separated by the given separator string ."}
{"id": 8717, "prediction": "Rounds a double to the specified number of places ."}
{"id": 8718, "prediction": "Gets the tab type ."}
{"id": 8719, "prediction": "Gets the style of the active tab ."}
{"id": 8720, "prediction": "Returns the default date pattern ."}
{"id": 8721, "prediction": "Returns the decimal separator for this locale . The default locale is used ."}
{"id": 8722, "prediction": "Gets the thousand separator for the default locale ."}
{"id": 8723, "prediction": "Set the tie command alias list ."}
{"id": 8724, "prediction": "Builds the form watch list for a given sheet ."}
{"id": 8725, "prediction": "Add a new watch list for a given cell ."}
{"id": 8726, "prediction": "Add the row to the watch list if it is not already present ."}
{"id": 8727, "prediction": "Does the given string start with TieConstants . COMMAND_PREFIX?"}
{"id": 8728, "prediction": "Parses the widget attributes and adds them to the cellAttributesMap"}
{"id": 8729, "prediction": "Gets attribute key in map by cell ."}
{"id": 8730, "prediction": "Method to parse validate attributes for given cell ."}
{"id": 8731, "prediction": "Returns the index of a pair of characters starting at startPos . Returns - 1 if startPos is not a pair of characters ."}
{"id": 8732, "prediction": "Parses a string representation of a command attribute ."}
{"id": 8733, "prediction": "Parses the input attributes into a list of CellFormAttributes ."}
{"id": 8734, "prediction": "Parses a list of validation attributes into a list of CellFormAttributes ."}
{"id": 8735, "prediction": "Split attribute name and value into a list of attribute values ."}
{"id": 8736, "prediction": "Parses a list of special attributes for a given type ."}
{"id": 8737, "prediction": "Adds a special attribute to the cell attributes map ."}
{"id": 8738, "prediction": "Process the select item attributes ."}
{"id": 8739, "prediction": "Gathers the special attributes for a form ."}
{"id": 8740, "prediction": "Parses a comment and adds it to a map ."}
{"id": 8741, "prediction": "Returns the index of the first nonCellName position in the input string or - 1 if not found ."}
{"id": 8742, "prediction": "Remove the characters from the given string and return the resulting string ."}
{"id": 8743, "prediction": "Gets the getExcel column name for the specified number ."}
{"id": 8744, "prediction": "Converts a column name to an integer ."}
{"id": 8745, "prediction": "Gets a cell by reference ."}
{"id": 8746, "prediction": "Converts a height unit to a pixel ."}
{"id": 8747, "prediction": "Returns true if the specified string is a date ."}
{"id": 8748, "prediction": "Parses a date entry ."}
{"id": 8749, "prediction": "Checks if the specified string is numeric ."}
{"id": 8750, "prediction": "Should continue parameter given a char?"}
{"id": 8751, "prediction": "Set the value of a property on an object ."}
{"id": 8752, "prediction": "Compares two Cells ."}
{"id": 8753, "prediction": "Returns true if the child range is inside the parent range false otherwise ."}
{"id": 8754, "prediction": "Clears all hidden columns in the sheet ."}
{"id": 8755, "prediction": "Delete all hidden columns in the given row ."}
{"id": 8756, "prediction": "Deletes the cell with the given number from the row ."}
{"id": 8757, "prediction": "This method is called when a TieFaces build event is received ."}
{"id": 8758, "prediction": "Refresh the cell after the status has changed ."}
{"id": 8759, "prediction": "Validate the given row and col in the current page ."}
{"id": 8760, "prediction": "Performs a web sheet s validation by calling the validation bean ."}
{"id": 8761, "prediction": "Checks if the error message from object in cell s context is non - empty and if so sets the error message accordingly ."}
{"id": 8762, "prediction": "Validate the input value for a single cell"}
{"id": 8763, "prediction": "This method does the validation ."}
{"id": 8764, "prediction": "Validates the specified cell in the current page ."}
{"id": 8765, "prediction": "Checks to see if all rows in the current page are valid ."}
{"id": 8766, "prediction": "Validate the row specified by the row index of the current page ."}
{"id": 8767, "prediction": "Validate a row for use in the current page ."}
{"id": 8768, "prediction": "Refresh the cells in the current page"}
{"id": 8769, "prediction": "Refresh all cells in the row with the appropriate index ."}
{"id": 8770, "prediction": "Set the SUBMITMODE flag in the view ."}
{"id": 8771, "prediction": "Called before validation of the current page ."}
{"id": 8772, "prediction": "Clears all cached information about this cell ."}
{"id": 8773, "prediction": "Load the rows in the header of the sheet ."}
{"id": 8774, "prediction": "Load the header row without the configuration tab ."}
{"id": 8775, "prediction": "Fill to the maximum columns if the row count is greater than the current max count ."}
{"id": 8776, "prediction": "Get the column style for the header row ."}
{"id": 8777, "prediction": "Gets the width style ."}
{"id": 8778, "prediction": "Load the row with the configuration tab ."}
{"id": 8779, "prediction": "Gets the column width style ."}
{"id": 8780, "prediction": "Clears the Records of the XLSX file ."}
{"id": 8781, "prediction": "Initialize the tabs ."}
{"id": 8782, "prediction": "Load the data from the sheet configuration ."}
{"id": 8783, "prediction": "Refresh the data on the current sheet ."}
{"id": 8784, "prediction": "Refresh the data for a specific row ."}
{"id": 8785, "prediction": "Refresh the data for a cell using the fullAaveAttr"}
{"id": 8786, "prediction": "Returns the index of the tab with the given name ."}
{"id": 8787, "prediction": "Loads a websheet tab ."}
{"id": 8788, "prediction": "Prepare theWorkShee for the given tab ."}
{"id": 8789, "prediction": "Set the first data table page ."}
{"id": 8790, "prediction": "Saves the currentTabName and SubmitMode in viewMap"}
{"id": 8791, "prediction": "Setup the row info ."}
{"id": 8792, "prediction": "Load the body rows from the sheet ."}
{"id": 8793, "prediction": "Assembles a FacesRow for the body row ."}
{"id": 8794, "prediction": "Used to refresh a cell in the cache ."}
{"id": 8795, "prediction": "Process refresh cell ."}
{"id": 8796, "prediction": "Create dynamic columns for a tab ."}
{"id": 8797, "prediction": "Add a row to the repeat list ."}
{"id": 8798, "prediction": "Refresh the rows in the body rows in the specified range ."}
{"id": 8799, "prediction": "set the un saved status of the client ."}
{"id": 8800, "prediction": "Returns the un saved status ."}
{"id": 8801, "prediction": "Returns the most specific constructor for the given type ."}
{"id": 8802, "prediction": "Write input stream to output stream ."}
{"id": 8803, "prediction": "Write a long value to a writer ."}
{"id": 8804, "prediction": "Write a string to a writer ."}
{"id": 8805, "prediction": "Set the traffic stats tag ."}
{"id": 8806, "prediction": "Adds a bitmap to the result ."}
{"id": 8807, "prediction": "Adds a binary data descriptor to the result ."}
{"id": 8808, "prediction": "Remove the parameter with the given name ."}
{"id": 8809, "prediction": "Add a header to the request ."}
{"id": 8810, "prediction": "Clear the content of this request ."}
{"id": 8811, "prediction": "Called when the streaming service is about to play ."}
{"id": 8812, "prediction": "Called when the animation is stopped ."}
{"id": 8813, "prediction": "Bind to the streaming service ."}
{"id": 8814, "prediction": "Unbinds the media service ."}
{"id": 8815, "prediction": "This method is used to remove a listener that will no longer be used by the media player ."}
{"id": 8816, "prediction": "Stores the image to disk ."}
{"id": 8817, "prediction": "Transfers data from an InputStream to a String ."}
{"id": 8818, "prediction": "Returns a string representation of the given InputStream using the given BuffersPool ."}
{"id": 8819, "prediction": "Sends the data to the OutputStream ."}
{"id": 8820, "prediction": "Returns the number of bytes that could be read from this stream ."}
{"id": 8821, "prediction": "Closes the underlying input stream ."}
{"id": 8822, "prediction": "Reads a byte from the stream ."}
{"id": 8823, "prediction": "Reset the mark position ."}
{"id": 8824, "prediction": "Sends the start part of the request to the given OutputStream ."}
{"id": 8825, "prediction": "Write the attachment header to the output stream ."}
{"id": 8826, "prediction": "Sends the Content - Type header to the given OutputStream ."}
{"id": 8827, "prediction": "Send the Content - Transfer - Encoding header to the given OutputStream ."}
{"id": 8828, "prediction": "Sends the end of header ."}
{"id": 8829, "prediction": "Sends the end of the output stream ."}
{"id": 8830, "prediction": "Sends multiple parts using the specified part boundary ."}
{"id": 8831, "prediction": "Calculates the length of the specified parts according to the specified part boundary ."}
{"id": 8832, "prediction": "Returns true if the given URI is a redirect ."}
{"id": 8833, "prediction": "Sends a NOT_MODIFIED response ."}
{"id": 8834, "prediction": "Set the Date header to the response"}
{"id": 8835, "prediction": "Set date and cache headers to the response ."}
{"id": 8836, "prediction": "Sets the content - type header to the response ."}
{"id": 8837, "prediction": "Closes the given channel on flush ."}
{"id": 8838, "prediction": "If filename is not null write it as attachment bytes . Otherwise write it as attachment bytes ."}
{"id": 8839, "prediction": "Sends the contents of this file to the given OutputStream ."}
{"id": 8840, "prediction": "Installs the buffers ."}
{"id": 8841, "prediction": "Ensures that the working directory exists and exists ."}
{"id": 8842, "prediction": "Get a cache entry from disk ."}
{"id": 8843, "prediction": "Returns an input stream that reads body data from the cache snapshot ."}
{"id": 8844, "prediction": "Resets the bitmap so it can be used to create a new bitmap ."}
{"id": 8845, "prediction": "Get or create a new SSL context for the given keystore and password ."}
{"id": 8846, "prediction": "Validates a given keystore with the given password and keyPassword ."}
{"id": 8847, "prediction": "Replaces the current scale type with a new one ."}
{"id": 8848, "prediction": "Stop listening for location updates ."}
{"id": 8849, "prediction": "Get a pending intent ."}
{"id": 8850, "prediction": "Disconnects from a URLConnection ."}
{"id": 8851, "prediction": "Bind the GoroService to the context ."}
{"id": 8852, "prediction": "Attempts to unbind the service from the device ."}
{"id": 8853, "prediction": "Notify about view changes ."}
{"id": 8854, "prediction": "Make the proxy connection and close the client connection ."}
{"id": 8855, "prediction": "On accept data ."}
{"id": 8856, "prediction": "This method is called when the view is reset . It is called when the view is reset ."}
{"id": 8857, "prediction": "Waits for the loader to complete ."}
{"id": 8858, "prediction": "Set the text of a TextView or hide it ."}
{"id": 8859, "prediction": "Hides the soft input from the screen ."}
{"id": 8860, "prediction": "Shows soft input for a given View ."}
{"id": 8861, "prediction": "Toggles the soft input from the view ."}
{"id": 8862, "prediction": "Computes the width of a pixel using the density scale ."}
{"id": 8863, "prediction": "This method is called when an exception occurs ."}
{"id": 8864, "prediction": "Clear the cache for the specified url ."}
{"id": 8865, "prediction": "Populate an image with the data from the view ."}
{"id": 8866, "prediction": "Cancel image loading ."}
{"id": 8867, "prediction": "Creates image consumer for given view ."}
{"id": 8868, "prediction": "Decorates an image result ."}
{"id": 8869, "prediction": "Set the image consumer to use for loading"}
{"id": 8870, "prediction": "Start an image loader task ."}
{"id": 8871, "prediction": "Add a bitmap to mem cache"}
{"id": 8872, "prediction": "Releases a buffer to the pool ."}
{"id": 8873, "prediction": "This method is called when a URL connection is prepared ."}
{"id": 8874, "prediction": "Adds a parameter to the request ."}
{"id": 8875, "prediction": "Connects to the server with the work around ."}
{"id": 8876, "prediction": "Returns the MD5 hash of the given string ."}
{"id": 8877, "prediction": "Returns the String identifying the given CUBLAS feature"}
{"id": 8878, "prediction": "Returns the String identifying the given CUBLAS status"}
{"id": 8879, "prediction": "If the given result is not cublasStatus . CUBLAS_STATUS_SUCCESS and exceptions have been enabled this method will throw a CudaException with an error message that corresponds to the given result code . Otherwise the given result is simply returned ."}
{"id": 8880, "prediction": "If the last result is not CUBLAS_STATUS_SUCCESS and exceptions have been enabled this method will throw a CudaException with an error message that corresponds to the last result . Otherwise the method returns normally ."}
{"id": 8881, "prediction": "Adds a given lex reaction id to the current one ."}
{"id": 8882, "prediction": "Add a ending to the ending list ."}
{"id": 8883, "prediction": "Gets the estimate of the weight of a given wordform ."}
{"id": 8884, "prediction": "Prints a human - readable description of the token and all attributes ."}
{"id": 8885, "prediction": "VerifyAndSet kamols attribute ."}
{"id": 8886, "prediction": "Converts an attribute value to a Kamols markup ."}
{"id": 8887, "prediction": "Verify and set attribute ."}
{"id": 8888, "prediction": "Removes kamols markup formating ."}
{"id": 8889, "prediction": "Used to get all data for a given application ."}
{"id": 8890, "prediction": "Returns a query string representing the time range ."}
{"id": 8891, "prediction": "Create a list of metric data from a JSON node ."}
{"id": 8892, "prediction": "Parse the json string to a list of AppInfo objects ."}
{"id": 8893, "prediction": "Gets the connection configuration ."}
{"id": 8894, "prediction": "Process all metrics for all apps using the provided time params ."}
{"id": 8895, "prediction": "Creates a new CodeListReader ."}
{"id": 8896, "prediction": "Creates a new reader instance for GC04 code list set documents ."}
{"id": 8897, "prediction": "Creates a new column set reader ."}
{"id": 8898, "prediction": "Creates a new CodeListReader ."}
{"id": 8899, "prediction": "Creates a new CodeListSetReader ."}
{"id": 8900, "prediction": "Creates a new column - set reader ."}
{"id": 8901, "prediction": "Get the column element ID ."}
{"id": 8902, "prediction": "Get the value of the specified column from the passed row ."}
{"id": 8903, "prediction": "Get the column with the specified ID from the passed ColumnSet"}
{"id": 8904, "prediction": "Get all key IDs"}
{"id": 8905, "prediction": "Get the key of the passed ID"}
{"id": 8906, "prediction": "Check if the passed key column is part of the column set"}
{"id": 8907, "prediction": "Create a column with the passed values ."}
{"id": 8908, "prediction": "Create a key for the specified column ."}
{"id": 8909, "prediction": "Set the line number to skip ."}
{"id": 8910, "prediction": "Add a column to the read table ."}
{"id": 8911, "prediction": "Creates a writer builder for GC04 code list ."}
{"id": 8912, "prediction": "Creates a writer builder for a CodeListSetDocument ."}
{"id": 8913, "prediction": "Returns a new column - set writer ."}
{"id": 8914, "prediction": "Creates a writer builder for GC 1 . 0 code list ."}
{"id": 8915, "prediction": "Creates a writer builder for GC10 CodeListSet documents ."}
{"id": 8916, "prediction": "Returns a new column - set writer ."}
{"id": 8917, "prediction": "Factory method for creating a new GC04Validator ."}
{"id": 8918, "prediction": "Creates a validator for a CodeListSet document ."}
{"id": 8919, "prediction": "Creates a new column - set validator ."}
{"id": 8920, "prediction": "Creates a validator for GC10 code list document ."}
{"id": 8921, "prediction": "Creates a validator for a GC10 CodeListSet document ."}
{"id": 8922, "prediction": "Creates a new column - set validator ."}
{"id": 8923, "prediction": "Send the logs from the AppFeedBack summary to the server ."}
{"id": 8924, "prediction": "Sets the Context ."}
{"id": 8925, "prediction": "Get the current log level"}
{"id": 8926, "prediction": "Get the current status of the server ."}
{"id": 8927, "prediction": "Sets the maximum file size in bytes used to store the log message ."}
{"id": 8928, "prediction": "Prepends the class method file and line to the supplied message ."}
{"id": 8929, "prediction": "Append the stack metadata to the supplied JSONObject ."}
{"id": 8930, "prediction": "Helper method to create a JSONObject from the given values ."}
{"id": 8931, "prediction": "Log the current location ."}
{"id": 8932, "prediction": "Set the user identity ."}
{"id": 8933, "prediction": "Get a byte array from a file ."}
{"id": 8934, "prediction": "Request Location updates"}
{"id": 8935, "prediction": "This method is only public for testing purposes ."}
{"id": 8936, "prediction": "Dumps the total size of the specified region and the average size of all entries in that region ."}
{"id": 8937, "prediction": "Dumps the entries in the given region for the given number of entries ."}
{"id": 8938, "prediction": "Reads a snapshot record from the data stream ."}
{"id": 8939, "prediction": "Dumps the current time stamps to a PrintWriter ."}
{"id": 8940, "prediction": "Get the time values for a given index as an array ."}
{"id": 8941, "prediction": "Converts a file to a chart ."}
{"id": 8942, "prediction": "Get a Pool for a given server"}
{"id": 8943, "prediction": "Get the pool for locator for the specified host and port ."}
{"id": 8944, "prediction": "Returns true if there is an existing region on the server ."}
{"id": 8945, "prediction": "Gets the member JMX object ."}
{"id": 8946, "prediction": "Return a list of all the hosts in the system ."}
{"id": 8947, "prediction": "Attempts to lookup a local host name from a properties file ."}
{"id": 8948, "prediction": "Sends an exception to the result sender ."}
{"id": 8949, "prediction": "Execute the given function and return a collection of the results ."}
{"id": 8950, "prediction": "Flatten a collection of objects into a list of objects ."}
{"id": 8951, "prediction": "Execute the Query on the given RegionFunctionContext with the given parameters ."}
{"id": 8952, "prediction": "Creates a new CacheListenerBridge that executes the specified consumer for each entry after the specified entry has been processed by the specified consumer ."}
{"id": 8953, "prediction": "Creates a new CacheListenerBridge that removes all entries from the cache and invokes the consumer for each entry ."}
{"id": 8954, "prediction": "Handles an exception ."}
{"id": 8955, "prediction": "Returns an array of onRegionFilterKeyFacts ."}
{"id": 8956, "prediction": "Execute the function"}
{"id": 8957, "prediction": "Return a list of all the hosts in the system ."}
{"id": 8958, "prediction": "This method is only executed on a region not on a sub region ."}
{"id": 8959, "prediction": "Returns the AppName of the given list of resources"}
{"id": 8960, "prediction": "This method sets up the current security properties ."}
{"id": 8961, "prediction": "Returns the region with the specified name or null if no region with the specified name exists ."}
{"id": 8962, "prediction": "Returns the region for the given client cache and client cache name . If the cache name does not exist a new one is created ."}
{"id": 8963, "prediction": "Constructs the comparison of the sourceChecksumMap and the targetMap ."}
{"id": 8964, "prediction": "Returns true if the valueTimeStamps must be inserted at the specified tsAtInsertPoint ."}
{"id": 8965, "prediction": "Close the resource ."}
{"id": 8966, "prediction": "Converts the GfStats files in the given directory to a CSV file ."}
{"id": 8967, "prediction": "The main entry point for this class ."}
{"id": 8968, "prediction": "Tries to reconnect to the server ."}
{"id": 8969, "prediction": "Stop all the members on a given host"}
{"id": 8970, "prediction": "Shut down a member"}
{"id": 8971, "prediction": "Shut down all system members ."}
{"id": 8972, "prediction": "Shut down the givenRedundancyZone ."}
{"id": 8973, "prediction": "Stores a list of results into a list of keys for the given page size ."}
{"id": 8974, "prediction": "Reads results by page ."}
{"id": 8975, "prediction": "Imports a region ."}
{"id": 8976, "prediction": "Checks if the remote locators match the local locators ."}
{"id": 8977, "prediction": "This is the entry point when the function is executed ."}
{"id": 8978, "prediction": "Build the check sum map for the given region ."}
{"id": 8979, "prediction": "Returns the value of the column with the given value ."}
{"id": 8980, "prediction": "Returns true if the given type is one of integer types ."}
{"id": 8981, "prediction": "Serializes an object to a byte array ."}
{"id": 8982, "prediction": "Deserializes the given byte array ."}
{"id": 8983, "prediction": "Instantiates an object of the given type ."}
{"id": 8984, "prediction": "Checks to see if the element has an id attribute and if so adds it to the table object ."}
{"id": 8985, "prediction": "Check for the fields ."}
{"id": 8986, "prediction": "Check if the given element is a super type of the given type ."}
{"id": 8987, "prediction": "Get the schema for this table ."}
{"id": 8988, "prediction": "Returns a Java representation of this class ."}
{"id": 8989, "prediction": "Emit the get id method ."}
{"id": 8990, "prediction": "Returns an Observable view of this table object that contains the results of the query ."}
{"id": 8991, "prediction": "Checks if the given column name is a field in the table object ."}
{"id": 8992, "prediction": "Returns the value of the given string if the given string is null or empty otherwise returns the given default string ."}
{"id": 8993, "prediction": "Returns a copy of the given string with the first letter converted to upper case ."}
{"id": 8994, "prediction": "Returns true if the given type is one of the real types ."}
{"id": 8995, "prediction": "Returns a new descending version of this table object with the results from the specified descending order ."}
{"id": 8996, "prediction": "Read the temperature from the device file ."}
{"id": 8997, "prediction": "Get the method for a given type ."}
{"id": 8998, "prediction": "Print a message as a single line ."}
{"id": 8999, "prediction": "Logs an error message ."}
{"id": 9000, "prediction": "Gets all the icons ."}
{"id": 9001, "prediction": "Gets all the icons ."}
{"id": 9002, "prediction": "Create the SldEditorLayout ."}
{"id": 9003, "prediction": "Get the background decoration for the tab ."}
{"id": 9004, "prediction": "Calculate x with the specified exponent ."}
{"id": 9005, "prediction": "Set this column vector to an array of values ."}
{"id": 9006, "prediction": "Return the integer power of the input number ."}
{"id": 9007, "prediction": "Finds the root of the specified number of points ."}
{"id": 9008, "prediction": "Waits until the sums converge is equal after rounding ."}
{"id": 9009, "prediction": "Computes the square root of the specified number of digits of a decimal point ."}
{"id": 9010, "prediction": "Waits until the Newton root is reached ."}
{"id": 9011, "prediction": "arctan - taylor x ."}
{"id": 9012, "prediction": "The main loop of the Taylor algorithm ."}
{"id": 9013, "prediction": "Return the square root of a BigDecimal with a given scale ."}
{"id": 9014, "prediction": "Print the specified pi string ."}
{"id": 9015, "prediction": "Generate a timestamp string ."}
{"id": 9016, "prediction": "Set the limits of the image ."}
{"id": 9017, "prediction": "Add a value to the histogram ."}
{"id": 9018, "prediction": "Prints the current state of the bar ."}
{"id": 9019, "prediction": "Add another complex to this complex number ."}
{"id": 9020, "prediction": "Subtracts a complex value from this value ."}
{"id": 9021, "prediction": "Multiply this value by a complex value ."}
{"id": 9022, "prediction": "Divide this complex value by the specified complex value ."}
{"id": 9023, "prediction": "Sets the values of this matrix to 1 ."}
{"id": 9024, "prediction": "Get a row of this matrix ."}
{"id": 9025, "prediction": "Get a column of this matrix ."}
{"id": 9026, "prediction": "Set this matrix from a 2D array of values ."}
{"id": 9027, "prediction": "Returns the transpose of this matrix ."}
{"id": 9028, "prediction": "Add another matrix to this matrix ."}
{"id": 9029, "prediction": "Subtract another matrix from this matrix ."}
{"id": 9030, "prediction": "Multiply this matrix by a constant ."}
{"id": 9031, "prediction": "Multiply this matrix by another matrix ."}
{"id": 9032, "prediction": "Print the matrix to a PrintStream ."}
{"id": 9033, "prediction": "Set the image resource ."}
{"id": 9034, "prediction": "Ensures that theCoefficients are valid ."}
{"id": 9035, "prediction": "Compute the next position ."}
{"id": 9036, "prediction": "Clears all cached data ."}
{"id": 9037, "prediction": "Convert a SVG layer descriptor to an XML document ."}
{"id": 9038, "prediction": "Convert a RawSld object to a INodeLayerDescriptorInfo object ."}
{"id": 9039, "prediction": "Validate the given layer descriptor ."}
{"id": 9040, "prediction": "Returns true if the XML for the given entity is valid ."}
{"id": 9041, "prediction": "Calculate the area of the region"}
{"id": 9042, "prediction": "Sets this matrix to a new matrix ."}
{"id": 9043, "prediction": "Set this matrix from a 2D array of values ."}
{"id": 9044, "prediction": "Compute the inverse of this matrix ."}
{"id": 9045, "prediction": "Returns the determinant of this matrix ."}
{"id": 9046, "prediction": "Returns the Euclidean norm of this matrix ."}
{"id": 9047, "prediction": "Solve linear equation b for x ."}
{"id": 9048, "prediction": "Get the decomposed matrix and print it to the given PrintStream ."}
{"id": 9049, "prediction": "For each pivot row compute the largest scaled element and its row index ."}
{"id": 9050, "prediction": "Do forward substitution on the provided column vector ."}
{"id": 9051, "prediction": "back substitution ."}
{"id": 9052, "prediction": "Iterates through the Iterability matrix and improve x to a new column vector ."}
{"id": 9053, "prediction": "Converts a square matrix into a square matrix ."}
{"id": 9054, "prediction": "Get the next random value using the uniformly - distributed generator ."}
{"id": 9055, "prediction": "This method does the iteration of the procedure ."}
{"id": 9056, "prediction": "Compute the next position ."}
{"id": 9057, "prediction": "Checks if the position of the root is not changed ."}
{"id": 9058, "prediction": "Compute the next position ."}
{"id": 9059, "prediction": "Throws an exception if the given x1 and x2 are invalid ."}
{"id": 9060, "prediction": "Add the specified addend to the running sum ."}
{"id": 9061, "prediction": "Compute the product of two numbers ."}
{"id": 9062, "prediction": "Returns the first power of the given number of bits ."}
{"id": 9063, "prediction": "Applies the iteration procedure to the set of points ."}
{"id": 9064, "prediction": "Returns a singleton instance of SldManager ."}
{"id": 9065, "prediction": "Convert a long value to a char array ."}
{"id": 9066, "prediction": "Decompose the individual parts ."}
{"id": 9067, "prediction": "Print this number as a representation of the number ."}
{"id": 9068, "prediction": "Validates the biased exponent value ."}
{"id": 9069, "prediction": "Throws an exception if the input floating point exponent is out of range ."}
{"id": 9070, "prediction": "Validates the biased exponent value ."}
{"id": 9071, "prediction": "Throws an exception if the specified double exponent is greater than or equal to the input ."}
{"id": 9072, "prediction": "Create a new SldGwtServiceAsync ."}
{"id": 9073, "prediction": "Compute the next random value ."}
{"id": 9074, "prediction": "Compute the next randomPolar value ."}
{"id": 9075, "prediction": "Compute the next random value using the ratio of two uniformly - distributed random values ."}
{"id": 9076, "prediction": "Returns a boolean array containing all of the elements with the prime > = n ."}
{"id": 9077, "prediction": "Returns an array of the distinct factors of the given element ."}
{"id": 9078, "prediction": "Performs iteration procedure on the root node of the node ."}
{"id": 9079, "prediction": "Compute the next position ."}
{"id": 9080, "prediction": "check if the current node position equals the previous node position"}
{"id": 9081, "prediction": "Sets the Java Application ."}
{"id": 9082, "prediction": "Set the Saxon configuration ."}
{"id": 9083, "prediction": "Set the default configuration ."}
{"id": 9084, "prediction": "Initialize EJB loader with the given parameters ."}
{"id": 9085, "prediction": "Adds the latitude and longitude to the reverse geographic coordinates ."}
{"id": 9086, "prediction": "Extracts the host and port pair from a service ."}
{"id": 9087, "prediction": "Attempts to find an attribute definition based on its uuid ."}
{"id": 9088, "prediction": "Evaluate the given attribute filter expression for the given attribute definition ."}
{"id": 9089, "prediction": "Sanitize tag characters ."}
{"id": 9090, "prediction": "Adds the given address as a string ."}
{"id": 9091, "prediction": "Adds a list of components to the request ."}
{"id": 9092, "prediction": "Return a collection of names that have been added to the service tracker ."}
{"id": 9093, "prediction": "Return the set of instances for the given name ."}
{"id": 9094, "prediction": "Get all to by logged in ."}
{"id": 9095, "prediction": "GetMetaDataForDecimalAs Method ."}
{"id": 9096, "prediction": "Change the password of a logged in user ."}
{"id": 9097, "prediction": "Get all users"}
{"id": 9098, "prediction": "Get the Gravatar data for the given email address parameter"}
{"id": 9099, "prediction": "Get the gravatar for a user"}
{"id": 9100, "prediction": "Populate from ElasticsearchSearch JSON ."}
{"id": 9101, "prediction": "Replies the type of getElasticSearch field ."}
{"id": 9102, "prediction": "Create flow step ."}
{"id": 9103, "prediction": "Update flow step ."}
{"id": 9104, "prediction": "Get a flow step by id ."}
{"id": 9105, "prediction": "Get flow step by flow step ."}
{"id": 9106, "prediction": "Gets all step by flow ."}
{"id": 9107, "prediction": "Delete flow step ."}
{"id": 9108, "prediction": "Force delete flow step ."}
{"id": 9109, "prediction": "Populate table fields ."}
{"id": 9110, "prediction": "Close ABaseES Connection ."}
{"id": 9111, "prediction": "Handles the process message . If there is an error it will throw an exception . Otherwise it will uncompress the JSON response ."}
{"id": 9112, "prediction": "Called when the connection is closed ."}
{"id": 9113, "prediction": "Gets a list of Echo messages from a return value ."}
{"id": 9114, "prediction": "Get a list of PersonalInventory items in the PersonalInventory ."}
{"id": 9115, "prediction": "Create a new TableRecord . If tableRecordParam is not null and serviceTicket is not null this method will set the serviceTicket ."}
{"id": 9116, "prediction": "Delete a form container ."}
{"id": 9117, "prediction": "Gets the data for this form ."}
{"id": 9118, "prediction": "Gets the form and field data ."}
{"id": 9119, "prediction": "Get the most recent form and field data ."}
{"id": 9120, "prediction": "Obtain the lock container for the given formParam and jobViewParam"}
{"id": 9121, "prediction": "UnLock the given Form with the given parameters ."}
{"id": 9122, "prediction": "Unlock the form container by removing the passed in formParam from the passed user ."}
{"id": 9123, "prediction": "Creates a new Form object and adds it to the map ."}
{"id": 9124, "prediction": "Convert a role listing parameter to a list of roles ."}
{"id": 9125, "prediction": "Create a new form definition ."}
{"id": 9126, "prediction": "Update a form definition ."}
{"id": 9127, "prediction": "Get a form definition based on its id"}
{"id": 9128, "prediction": "Get a form definition by name"}
{"id": 9129, "prediction": "Get all by logged in user list ."}
{"id": 9130, "prediction": "Delete a form definition ."}
{"id": 9131, "prediction": "Get the storage key from the formDefIdParam and formFieldIdParam values ."}
{"id": 9132, "prediction": "Initialize the XMemcachedClient ."}
{"id": 9133, "prediction": "Shutdown the memcached client ."}
{"id": 9134, "prediction": "Converts a parameter to a long value . If the parameter toParseParam is null or empty or invalid it returns - 1 ."}
{"id": 9135, "prediction": "Convert a document to a PDF file ."}
{"id": 9136, "prediction": "Gets the field values for a given form from the cache ."}
{"id": 9137, "prediction": "Create flow step rule ."}
{"id": 9138, "prediction": "Create flow step exit rule ."}
{"id": 9139, "prediction": "Create flow step view rule ."}
{"id": 9140, "prediction": "Update flow step rule ."}
{"id": 9141, "prediction": "Update flow step exit rule ."}
{"id": 9142, "prediction": "Update flow step view rule ."}
{"id": 9143, "prediction": "Move FlowStepRule up ."}
{"id": 9144, "prediction": "Move flow step entry rule down ."}
{"id": 9145, "prediction": "Delete flow step rule ."}
{"id": 9146, "prediction": "Delete flow step exit rule ."}
{"id": 9147, "prediction": "Delete flow step view rule ."}
{"id": 9148, "prediction": "Initializes the session based on the given auth response ."}
{"id": 9149, "prediction": "Get all user queries including disabled queries ."}
{"id": 9150, "prediction": "Get all roles"}
{"id": 9151, "prediction": "Get the service ticket as hex upper case ."}
{"id": 9152, "prediction": "Create a field with a text mask ."}
{"id": 9153, "prediction": "Create a new TextBarcode field with the given parameters ."}
{"id": 9154, "prediction": "Create field decimalSpinner ."}
{"id": 9155, "prediction": "Create the field with a decimal value ."}
{"id": 9156, "prediction": "Create field table ."}
{"id": 9157, "prediction": "Update a text field with aMasked value"}
{"id": 9158, "prediction": "Updates the textBarcode in the form field with the specified value ."}
{"id": 9159, "prediction": "Update fieldDecimalSpinner ."}
{"id": 9160, "prediction": "Update the field decimal slider ."}
{"id": 9161, "prediction": "Update field table ."}
{"id": 9162, "prediction": "Gets field by name ."}
{"id": 9163, "prediction": "Gets the fields by form name and logged in user ."}
{"id": 9164, "prediction": "Gets the fields for a given form definition and logged in user ."}
{"id": 9165, "prediction": "Delete field ."}
{"id": 9166, "prediction": "Force delete field ."}
{"id": 9167, "prediction": "Gets the meta data for a table field ."}
{"id": 9168, "prediction": "Update field value ."}
{"id": 9169, "prediction": "Get or create an index with the given parameter ."}
{"id": 9170, "prediction": "Create a Flow ."}
{"id": 9171, "prediction": "Update a flow ."}
{"id": 9172, "prediction": "Get a flow by id"}
{"id": 9173, "prediction": "Get a flow by name"}
{"id": 9174, "prediction": "Delete flow ."}
{"id": 9175, "prediction": "Force delete flow ."}
{"id": 9176, "prediction": "Update the field value of a field ."}
{"id": 9177, "prediction": "Gets all global field values ."}
{"id": 9178, "prediction": "Get the ids of the form containers and the title ."}
{"id": 9179, "prediction": "Decrypt an init packet ."}
{"id": 9180, "prediction": "Close the ABaseClientWebSocket Connection and clean it up ."}
{"id": 9181, "prediction": "Initializes a new request"}
{"id": 9182, "prediction": "Get the verbose message for the exception ."}
{"id": 9183, "prediction": "Create a new admin user ."}
{"id": 9184, "prediction": "Create a new access token using code and redirect URL parameters ."}
{"id": 9185, "prediction": "Get the user profile information associated with the provided access token ."}
{"id": 9186, "prediction": "Execute a JSON request ."}
{"id": 9187, "prediction": "Execute a Form Method ."}
{"id": 9188, "prediction": "Returns the JSON response handler based on the response from the server ."}
{"id": 9189, "prediction": "Checks if the connection is valid ."}
{"id": 9190, "prediction": "Returns a closeable HTTP client based on the provided configuration ."}
{"id": 9191, "prediction": "Returns the path of the trust store to a file from the system property or null if the property is not set ."}
{"id": 9192, "prediction": "Closes the current connection ."}
{"id": 9193, "prediction": "Get all items for a given view ."}
{"id": 9194, "prediction": "Send form to a flow ."}
{"id": 9195, "prediction": "On close ."}
{"id": 9196, "prediction": "Callback method that gets called when a message is received ."}
{"id": 9197, "prediction": "Send a JSON Object to the server ."}
{"id": 9198, "prediction": "Sends a message to the remote endpoint ."}
{"id": 9199, "prediction": "Closes the current user session ."}
{"id": 9200, "prediction": "Execute a native SQL query with the given parameters ."}
{"id": 9201, "prediction": "Request a license ."}
{"id": 9202, "prediction": "Apply a license to a service ticket"}
{"id": 9203, "prediction": "Create field text plain ."}
{"id": 9204, "prediction": "Create field paragraph text plain ."}
{"id": 9205, "prediction": "Create the paragraph text in HTML format ."}
{"id": 9206, "prediction": "Create a Field object for a multiple - choice selectMany route ."}
{"id": 9207, "prediction": "Create field date date for route ."}
{"id": 9208, "prediction": "Update field text plain ."}
{"id": 9209, "prediction": "Update the paragraph text to HTML in routeFieldParam ."}
{"id": 9210, "prediction": "Update the field date and time on the route ."}
{"id": 9211, "prediction": "Update field decimal plain ."}
{"id": 9212, "prediction": "Update the field value for the route field ."}
{"id": 9213, "prediction": "Method to create the field value for the route ."}
{"id": 9214, "prediction": "Get configuration by key ."}
{"id": 9215, "prediction": "Get all configurations"}
{"id": 9216, "prediction": "Create an attachment ."}
{"id": 9217, "prediction": "Gets an attachment by id ."}
{"id": 9218, "prediction": "Delete an attachment ."}
{"id": 9219, "prediction": "Force delete an attachment"}
{"id": 9220, "prediction": "Reads the jar file and tries to parse it into an XsdSchema object ."}
{"id": 9221, "prediction": "Set the class loader for the given jar file ."}
{"id": 9222, "prediction": "Throws an exception if the element is not a schema element ."}
{"id": 9223, "prediction": "Throws an exception if the element is not a required element ."}
{"id": 9224, "prediction": "Enforces that both simpleType and type elements are present at the same time ."}
{"id": 9225, "prediction": "Get the schema node for the file ."}
{"id": 9226, "prediction": "Throws a ParsingException if the element is not a XsdSchema ."}
{"id": 9227, "prediction": "Obtains an error message if the element is not a XsdSchema ."}
{"id": 9228, "prediction": "Converts an object value to its appropriate type ."}
{"id": 9229, "prediction": "Returns a CliInterface implementation for the specified class ."}
{"id": 9230, "prediction": "Returns a CLI instance with the specified options using an instance of the specified class ."}
{"id": 9231, "prediction": "Parses the given arguments for the given class ."}
{"id": 9232, "prediction": "Parses the given arguments using the instance created by this class ."}
{"id": 9233, "prediction": "Returns a builder for the URL portion of the URL ."}
{"id": 9234, "prediction": "Removes a previously - added footer view ."}
{"id": 9235, "prediction": "Returns the value of the point p ."}
{"id": 9236, "prediction": "Generates a single gradient vector given the coordinates of the input point and a seed ."}
{"id": 9237, "prediction": "Calculates the 3D noise of an integer using the specified seed ."}
{"id": 9238, "prediction": "Computes 3D Perlin noise ."}
{"id": 9239, "prediction": "Returns the cubicInterp value between n0 and n1 ."}
{"id": 9240, "prediction": "Computes the sCurve5 of the specified value ."}
{"id": 9241, "prediction": "Sets the bounds of the current variable to the specified value ."}
{"id": 9242, "prediction": "Process a CloudTrailEvent ."}
{"id": 9243, "prediction": "Process the event ."}
{"id": 9244, "prediction": "Extracts the account id from an event ."}
{"id": 9245, "prediction": "Determines whether or not a given ViolationEntity is contained in the whitelist rules ."}
{"id": 9246, "prediction": "Gets the event serializer ."}
{"id": 9247, "prediction": "Creates a file with the given name in the root folder ."}
{"id": 9248, "prediction": "Creates a directory with the given name ."}
{"id": 9249, "prediction": "Restore all system properties to the original value ."}
{"id": 9250, "prediction": "Creates the implementation of this map ."}
{"id": 9251, "prediction": "Add an object to the queue ."}
{"id": 9252, "prediction": "Set a property ."}
{"id": 9253, "prediction": "Get a String array property"}
{"id": 9254, "prediction": "Get the next state of the given action ."}
{"id": 9255, "prediction": "Remove soft references from the map ."}
{"id": 9256, "prediction": "Returns the casted version of the given type ."}
{"id": 9257, "prediction": "Gets a parameterized type ."}
{"id": 9258, "prediction": "Returns the type variable for the given type ."}
{"id": 9259, "prediction": "Print the stack trace of this exception to the given PrintStream ."}
{"id": 9260, "prediction": "Print the stack trace of this exception to the specified PrintWriter ."}
{"id": 9261, "prediction": "Replaces an object with a stub ."}
{"id": 9262, "prediction": "Executes the task ."}
{"id": 9263, "prediction": "Set a Task instance ."}
{"id": 9264, "prediction": "Returns true if the task was accepted false otherwise ."}
{"id": 9265, "prediction": "Returns true if the task was rejected false otherwise ."}
{"id": 9266, "prediction": "Returns true if the task was started false otherwise ."}
{"id": 9267, "prediction": "Returns true if the task completed false if the task failed ."}
{"id": 9268, "prediction": "Stops a running task ."}
{"id": 9269, "prediction": "Waits for a job from the queue and returns it ."}
{"id": 9270, "prediction": "Adds a job to the queue ."}
{"id": 9271, "prediction": "Returns the BlockingMode object corresponding to the given name ."}
{"id": 9272, "prediction": "Replace the marshalled instance type with the local instance ."}
{"id": 9273, "prediction": "Sets up the catalog reader ."}
{"id": 9274, "prediction": "Adds a new reader to this catalog ."}
{"id": 9275, "prediction": "Copy the list of readers into a new catalog"}
{"id": 9276, "prediction": "Creates a new catalog instance ."}
{"id": 9277, "prediction": "Loads the system catalog information ."}
{"id": 9278, "prediction": "Parses a catalog from an URL ."}
{"id": 9279, "prediction": "Processes all the catalog files that have been queued for parsing ."}
{"id": 9280, "prediction": "Attempts to parse the catalog file to a base URI ."}
{"id": 9281, "prediction": "unknown entry in the catalog ."}
{"id": 9282, "prediction": "Parses all the catalog entries ."}
{"id": 9283, "prediction": "Resolve a system entry for an entity ."}
{"id": 9284, "prediction": "Attempts to resolve the document entry from the catalog ."}
{"id": 9285, "prediction": "Resolve a system entry in this catalog ."}
{"id": 9286, "prediction": "Resolves a local URI ."}
{"id": 9287, "prediction": "Resolves a subordinate catalog for the given entity type and entity name ."}
{"id": 9288, "prediction": "Make the given system identifier absolute ."}
{"id": 9289, "prediction": "Normalize the URI ."}
{"id": 9290, "prediction": "Returns a hex representation of the given byte ."}
{"id": 9291, "prediction": "Adds a delegate entry to this catalog ."}
{"id": 9292, "prediction": "Creates a new SoftValueRef instance ."}
{"id": 9293, "prediction": "Fires a throwable to all listeners ."}
{"id": 9294, "prediction": "Add a Throwable to the list"}
{"id": 9295, "prediction": "Creates the implementation ."}
{"id": 9296, "prediction": "Compares two timer entries according to their execution time ."}
{"id": 9297, "prediction": "Returns the value of this property as a java . net . InetAddress ."}
{"id": 9298, "prediction": "Gets the object at the given index ."}
{"id": 9299, "prediction": "Set an object at the specified index ."}
{"id": 9300, "prediction": "Remove objects from the queue ."}
{"id": 9301, "prediction": "Adds a type to the list of entries and returns the index of the entry ."}
{"id": 9302, "prediction": "Returns the type of the entry with the given name ."}
{"id": 9303, "prediction": "Returns the number of entries of a given type ."}
{"id": 9304, "prediction": "Returns the entry argument with the given number ."}
{"id": 9305, "prediction": "Set the class loader of the specified Thread"}
{"id": 9306, "prediction": "Swaps elements a and b with a and b ."}
{"id": 9307, "prediction": "Remove a node from the tree ."}
{"id": 9308, "prediction": "Cleans up the target of the given timeout ."}
{"id": 9309, "prediction": "Loads the class with the given name ."}
{"id": 9310, "prediction": "Preload the protocol list ."}
{"id": 9311, "prediction": "Attempts to create a new URL stream handler for the given protocol ."}
{"id": 9312, "prediction": "Checks if the handlerPkgs are valid and if so adds them to the set of lastHandlerPkgs ."}
{"id": 9313, "prediction": "Gets the value of the property ."}
{"id": 9314, "prediction": "Creates the implementation ."}
{"id": 9315, "prediction": "Make a synchronized version of the given counter ."}
{"id": 9316, "prediction": "Make a counterDirectional ."}
{"id": 9317, "prediction": "Returns true if this namespace is in the extension namespace stack ."}
{"id": 9318, "prediction": "Checks if a notification is required and if so adds it to the current chunk ."}
{"id": 9319, "prediction": "Binds the specified name to the specified target object ."}
{"id": 9320, "prediction": "Gets the object instance by name and context ."}
{"id": 9321, "prediction": "Replaces the given string with the replaced string from the given map ."}
{"id": 9322, "prediction": "Splits a string into an array of delimiters ."}
{"id": 9323, "prediction": "Joins a byte array into a String ."}
{"id": 9324, "prediction": "Default string representation for given object ."}
{"id": 9325, "prediction": "Gets the response as an Object"}
{"id": 9326, "prediction": "Creates the cache ."}
{"id": 9327, "prediction": "Returns the value associated with the specified key or null if there is no such key ."}
{"id": 9328, "prediction": "Returns the value associated with the given key ."}
{"id": 9329, "prediction": "Remove the entry with the specified key from this map ."}
{"id": 9330, "prediction": "Flushes and removes all cached entries ."}
{"id": 9331, "prediction": "Returns a list of the keys that have been marked as current ."}
{"id": 9332, "prediction": "Set the resolution of the device ."}
{"id": 9333, "prediction": "Looks up the entry with the specified key ."}
{"id": 9334, "prediction": "Gets the children with the specified tag name ."}
{"id": 9335, "prediction": "Get a unique child element by tag name ."}
{"id": 9336, "prediction": "Gets an optional child element by tag name ."}
{"id": 9337, "prediction": "Return the content of the given element ."}
{"id": 9338, "prediction": "Get the unique child content of the element with the specified tag name ."}
{"id": 9339, "prediction": "Get the content of an optional child element ."}
{"id": 9340, "prediction": "Set the maximum size of the pool ."}
{"id": 9341, "prediction": "Sets the blocking mode ."}
{"id": 9342, "prediction": "Sets the blocking mode . If the blocking mode is not set it will be set to ABORT ."}
{"id": 9343, "prediction": "Executes the given task wrapper within the thread pool ."}
{"id": 9344, "prediction": "Resolve the system name ."}
{"id": 9345, "prediction": "Resolves a public catalog entry ."}
{"id": 9346, "prediction": "Resolves the system name using the specified resolver ."}
{"id": 9347, "prediction": "Resolves an external public key using the supplied resolver ."}
{"id": 9348, "prediction": "Query a resolver for a command ."}
{"id": 9349, "prediction": "Appends a vector to another vector ."}
{"id": 9350, "prediction": "Resolve all system entry in this catalog reverse ."}
{"id": 9351, "prediction": "Resolves system name reverse ."}
{"id": 9352, "prediction": "Resolves all system resolutions in this catalog ."}
{"id": 9353, "prediction": "Resolves all system entries from the system catalog ."}
{"id": 9354, "prediction": "Resolves all occurences of the specified catalog ."}
{"id": 9355, "prediction": "Reads a catalog from a file URL ."}
{"id": 9356, "prediction": "Reads a catalog from an input stream ."}
{"id": 9357, "prediction": "Connects to the file system ."}
{"id": 9358, "prediction": "Returns an OutputStream for writing to the file ."}
{"id": 9359, "prediction": "compareAndSet next ."}
{"id": 9360, "prediction": "Deletes a node f from the tree . If f is null then f is marked as a marker . If b is null then f is marked as a marker ."}
{"id": 9361, "prediction": "Returns the valid value for this header or null if this is not a valid value ."}
{"id": 9362, "prediction": "Creates a snapshot of the key - value pairs ."}
{"id": 9363, "prediction": "CAS the right operation ."}
{"id": 9364, "prediction": "Creates the logger ."}
{"id": 9365, "prediction": "Append a list of objects to a string buffer ."}
{"id": 9366, "prediction": "Returns the class name without the package ."}
{"id": 9367, "prediction": "Returns a string representation of this object implementation ."}
{"id": 9368, "prediction": "Returns an iterator of property names ."}
{"id": 9369, "prediction": "Returns the property group for the given basename ."}
{"id": 9370, "prediction": "Gets a compatible constructor with a compatible argument type ."}
{"id": 9371, "prediction": "Returns a deep - copy of the given object ."}
{"id": 9372, "prediction": "Derefer a value into an expected value ."}
{"id": 9373, "prediction": "Initialize the jndi factory and state factory ."}
{"id": 9374, "prediction": "Update jndi cache ."}
{"id": 9375, "prediction": "Returns a set view of the keys in this map optionally including the defaults ."}
{"id": 9376, "prediction": "Returns a set view of the keys in this map optionally including the defaults ."}
{"id": 9377, "prediction": "Removes a property listener ."}
{"id": 9378, "prediction": "Notifies all registered listeners that a property was added ."}
{"id": 9379, "prediction": "Fires a property removed event to all listeners ."}
{"id": 9380, "prediction": "Fires a property changed event to all listeners ."}
{"id": 9381, "prediction": "Notify all bound listeners that a property has changed"}
{"id": 9382, "prediction": "Returns a property name using the prefix as the base name and the property name as the prefix ."}
{"id": 9383, "prediction": "Loads properties from the specified reader ."}
{"id": 9384, "prediction": "Loads the properties from the specified class ."}
{"id": 9385, "prediction": "Returns the property group for the given basename and index ."}
{"id": 9386, "prediction": "Returns true if the entity has been resolved ."}
{"id": 9387, "prediction": "Resolve the system ID ."}
{"id": 9388, "prediction": "Attempts to resolve the system ID as an URL ."}
{"id": 9389, "prediction": "Resolve the system ID to a classpath resource ."}
{"id": 9390, "prediction": "Converts the specified text into a Document and sets it as the value ."}
{"id": 9391, "prediction": "Normalizes an entity name ."}
{"id": 9392, "prediction": "Converts the user name into a public id ."}
{"id": 9393, "prediction": "Decodes a public id from its string representation ."}
{"id": 9394, "prediction": "Replaces all occurrences of a String with a new String"}
{"id": 9395, "prediction": "Start the timer ."}
{"id": 9396, "prediction": "Stop the timer ."}
{"id": 9397, "prediction": "Make a StopWatch synchronized ."}
{"id": 9398, "prediction": "Compares this object to the specified object for order ."}
{"id": 9399, "prediction": "Returns a hashcode of the specified array of bytes ."}
{"id": 9400, "prediction": "Generate a hashcode for an array ."}
{"id": 9401, "prediction": "Creates a new empty map and sets its min and max capacity ."}
{"id": 9402, "prediction": "Sets the value of the field ."}
{"id": 9403, "prediction": "Reads the next token from the file ."}
{"id": 9404, "prediction": "Initialize the date formats ."}
{"id": 9405, "prediction": "Adds a vertex to this graph if it does not already exist ."}
{"id": 9406, "prediction": "Sets the root vertex of this verticies ."}
{"id": 9407, "prediction": "Remove a vertex from the graph ."}
{"id": 9408, "prediction": "Starts a depth - first search starting at the given vertex using the given visitor ."}
{"id": 9409, "prediction": "Recursively dfs the spanning tree starting from the given vertex using the given visitor ."}
{"id": 9410, "prediction": "Finds a vertex by data using the supplied comparator ."}
{"id": 9411, "prediction": "Returns an array of all cycles in the graph ."}
{"id": 9412, "prediction": "Normalize a string for entities ."}
{"id": 9413, "prediction": "Parse a string representation of an XML document ."}
{"id": 9414, "prediction": "Parse the given XML stream and return the root Element ."}
{"id": 9415, "prediction": "Parse the given InputSource and return the root Element ."}
{"id": 9416, "prediction": "Create an Element for a given name ."}
{"id": 9417, "prediction": "Returns the qualified name of the given element with the given qualified name ."}
{"id": 9418, "prediction": "Copy attributes from an element to another element ."}
{"id": 9419, "prediction": "Does the given node have any child elements?"}
{"id": 9420, "prediction": "Return an Iterator of all the child elements of the given node ."}
{"id": 9421, "prediction": "Returns the text content of the given node ."}
{"id": 9422, "prediction": "Return an iterator of child elements of the given node having the given name ."}
{"id": 9423, "prediction": "Gets the parent element of the given node ."}
{"id": 9424, "prediction": "Adds a resource to the waiting list ."}
{"id": 9425, "prediction": "Read a catalog from an input stream ."}
{"id": 9426, "prediction": "Read a catalog from an URL ."}
{"id": 9427, "prediction": "Get the host name as a byte array"}
{"id": 9428, "prediction": "Resolves an entity ."}
{"id": 9429, "prediction": "Sets a system property class value ."}
{"id": 9430, "prediction": "Display the class information ."}
{"id": 9431, "prediction": "Provide a human - readable string representation of the given class ."}
{"id": 9432, "prediction": "Strip the package name from a classname ."}
{"id": 9433, "prediction": "Gets the package name from a classname ."}
{"id": 9434, "prediction": "Attempts to force class to load ."}
{"id": 9435, "prediction": "Returns the corresponding primitive wrapper for the given class ."}
{"id": 9436, "prediction": "Returns all interfaces of a class including interfaces of superclasses ."}
{"id": 9437, "prediction": "Returns all the unique interfaces of this class and any of its super classes ."}
{"id": 9438, "prediction": "Returns true if the given class is a primitive wrapper type ."}
{"id": 9439, "prediction": "Attempts to instantiate an object of the specified expected class . If the property is present the defaultClassName is returned . If the property is not present the defaultClassName is returned ."}
{"id": 9440, "prediction": "Returns the getter method for an attribute ."}
{"id": 9441, "prediction": "Returns the setter method for an attribute on a class ."}
{"id": 9442, "prediction": "Tries to load the class with the given class loader ."}
{"id": 9443, "prediction": "Get the value of a system property"}
{"id": 9444, "prediction": "Returns an array of filename names for a given property ."}
{"id": 9445, "prediction": "Remove weak objects from the queue ."}
{"id": 9446, "prediction": "Returns an iterator over the elements in this set ."}
{"id": 9447, "prediction": "Create a lister for the given protocol ."}
{"id": 9448, "prediction": "Returns a set view of this map s entries ."}
{"id": 9449, "prediction": "Adds a bound listener for this property . If the listener is not in the list then add it ."}
{"id": 9450, "prediction": "Removes a property listener from the bound properties ."}
{"id": 9451, "prediction": "Checks if a string is null or not ."}
{"id": 9452, "prediction": "Returns the PropertyEditor for the given type name ."}
{"id": 9453, "prediction": "Registers an editor with the given type name ."}
{"id": 9454, "prediction": "Attempts to convert the given text to the specified type using the PropertyEditor associated with the type ."}
{"id": 9455, "prediction": "Get the context class loader of the specified thread ."}
{"id": 9456, "prediction": "Returns the ApplicationDeadlockException if the exception is an ApplicationDeadlockException . Otherwise returns null ."}
{"id": 9457, "prediction": "Schedules a timeout for execution ."}
{"id": 9458, "prediction": "Waits until the timeout is cancelled or the thread is interrupted ."}
{"id": 9459, "prediction": "Create a subcontext with the specified name ."}
{"id": 9460, "prediction": "Lookup an object from the JNDI context ."}
{"id": 9461, "prediction": "Checks if the given object is an instance of the given class and throws an exception if it is ."}
{"id": 9462, "prediction": "Append information about a class and its interfaces to a string buffer ."}
{"id": 9463, "prediction": "Returns the transition with the specified name ."}
{"id": 9464, "prediction": "Read the properties from a file on the class path ."}
{"id": 9465, "prediction": "Query the verb mode from the system properties if not specified read from the System properties and try to parse the verb mode from the properties file if not read from the System properties ."}
{"id": 9466, "prediction": "Queries the relative - tags property from the properties file ."}
{"id": 9467, "prediction": "Retrieves the catalog files from the system properties or from a properties file . If the catalog files are not found the default catalog is returned ."}
{"id": 9468, "prediction": "Gets the catalog files ."}
{"id": 9469, "prediction": "Returns true if the preferred type is public false otherwise ."}
{"id": 9470, "prediction": "Checks to see if a static catalog should be used ."}
{"id": 9471, "prediction": "Resolves an entity for the given system identifier and public identifier ."}
{"id": 9472, "prediction": "Resolve a href value to a base URL ."}
{"id": 9473, "prediction": "Make an URI absolute ."}
{"id": 9474, "prediction": "Returns the class object for the specified stream class ."}
{"id": 9475, "prediction": "Invokes the setter method for the given value ."}
{"id": 9476, "prediction": "Gets the local name of the element ."}
{"id": 9477, "prediction": "Returns the namespace URI of the given node or null if the node is not a DOM node ."}
{"id": 9478, "prediction": "Returns the namespace URI for the given element ."}
{"id": 9479, "prediction": "Returns the contents of an enumeration as a list ."}
{"id": 9480, "prediction": "Returns an InputStream for the given filename ."}
{"id": 9481, "prediction": "Loads properties from a file ."}
{"id": 9482, "prediction": "Reads properties from the specified property file ."}
{"id": 9483, "prediction": "Adds an edge to this graph ."}
{"id": 9484, "prediction": "Adds an edge to the graph with the given cost ."}
{"id": 9485, "prediction": "Adds an incoming edge to the graph with the given cost"}
{"id": 9486, "prediction": "Returns true if the given edge is part of this node false otherwise ."}
{"id": 9487, "prediction": "Removes the given edge from the graph ."}
{"id": 9488, "prediction": "Returns the edge with the given dest vertex or null ."}
{"id": 9489, "prediction": "Finds an edge in the graph ."}
{"id": 9490, "prediction": "Returns the number of edges between this vertex and dest ."}
{"id": 9491, "prediction": "Compresses the given directory and all sub - directories ."}
{"id": 9492, "prediction": "Returns true if this iterator contains no more elements ."}
{"id": 9493, "prediction": "This method is called by the application to fire an event ."}
{"id": 9494, "prediction": "Install the jvm type provider ."}
{"id": 9495, "prediction": "Delete a folder and all its contents matching a FileFilter ."}
{"id": 9496, "prediction": "Dispatches the given action to the Platform thread ."}
{"id": 9497, "prediction": "Gets a stream of events of the given type ."}
{"id": 9498, "prediction": "Creates the full FXML path for the given type ."}
{"id": 9499, "prediction": "Convert a collection of rights to a stream of records ."}
{"id": 9500, "prediction": "Gets a stream that contains a many - to - one item ."}
{"id": 9501, "prediction": "Returns a stream that contains the same elements but with the specified rights removed ."}
{"id": 9502, "prediction": "Returns a stream that contains the same elements but with the specified rights removed ."}
{"id": 9503, "prediction": "Returns whether or not the specified page is allowed ."}
{"id": 9504, "prediction": "Checks if the instruction generated should be a generated instruction ."}
{"id": 9505, "prediction": "An example of how to run a analyzer ."}
{"id": 9506, "prediction": "An example of how to use this class ."}
{"id": 9507, "prediction": "Returns the sum degree of all words ."}
{"id": 9508, "prediction": "Returns the command line arguments for the superclass ."}
{"id": 9509, "prediction": "Notifies the resource loader ."}
{"id": 9510, "prediction": "Checks if data source is correctly connected ."}
{"id": 9511, "prediction": "Creates an iterable of the specified type ."}
{"id": 9512, "prediction": "Returns an array of the given class ."}
{"id": 9513, "prediction": "Creates a list of objects from a given class ."}
{"id": 9514, "prediction": "Obtains a collection of objects of the given type token ."}
{"id": 9515, "prediction": "Creates a list with all values of the specified class ."}
{"id": 9516, "prediction": "Create an Either with a left type"}
{"id": 9517, "prediction": "Create an Either with the right type as the parameter"}
{"id": 9518, "prediction": "Creates a new validation instance for the specified type ."}
{"id": 9519, "prediction": "Creates a new validation instance for the specified type that has a success value ."}
{"id": 9520, "prediction": "Create a Try with a success type"}
{"id": 9521, "prediction": "Connect jdbc on with url and driver and username and password ."}
{"id": 9522, "prediction": "Runs the sql in the given database ."}
{"id": 9523, "prediction": "Query in with sql ."}
{"id": 9524, "prediction": "Returns this object as a boolean array ."}
{"id": 9525, "prediction": "Filter by example ."}
{"id": 9526, "prediction": "On upgrade ."}
{"id": 9527, "prediction": "Backup this table to a new CSV file ."}
{"id": 9528, "prediction": "Restore a table from a csv file ."}
{"id": 9529, "prediction": "Set the empty text of a TextView ."}
{"id": 9530, "prediction": "Dump the database row to a csv file ."}
{"id": 9531, "prediction": "Unescapes a string so that it can be used as a CSV line ."}
{"id": 9532, "prediction": "Return a list of values from a csv - string ."}
{"id": 9533, "prediction": "Convert csvPairs to a map ."}
{"id": 9534, "prediction": "Convert a map to a comma separated list ."}
{"id": 9535, "prediction": "Joins a list of Strings to a single String ."}
{"id": 9536, "prediction": "Joins an array of Strings to a single String ."}
{"id": 9537, "prediction": "Reads a database from an index"}
{"id": 9538, "prediction": "Write to an index"}
{"id": 9539, "prediction": "Inspect the id field of the entity model and add it to the entity model ."}
{"id": 9540, "prediction": "Returns the base dao model for the given entity ."}
{"id": 9541, "prediction": "Gets bind type ."}
{"id": 9542, "prediction": "Imports data from a CSV file ."}
{"id": 9543, "prediction": "Backup all tables to CSV ."}
{"id": 9544, "prediction": "Restores all tables from a csv file ."}
{"id": 9545, "prediction": "This method writes all converters to an index file ."}
{"id": 9546, "prediction": "Creates a query from the current context ."}
{"id": 9547, "prediction": "Creates a typed query ."}
{"id": 9548, "prediction": "Render the options ."}
{"id": 9549, "prediction": "Delete the record with the given id"}
{"id": 9550, "prediction": "Saves the specified object ."}
{"id": 9551, "prediction": "Update the specified object ."}
{"id": 9552, "prediction": "Adds a IN clause so the result will not match the supplied array ."}
{"id": 9553, "prediction": "Add a WHERESubquery to the query ."}
{"id": 9554, "prediction": "Get the next active stack ."}
{"id": 9555, "prediction": "Get an empty stack and add it to the list and return it ."}
{"id": 9556, "prediction": "Adds a plan and its bindings ."}
{"id": 9557, "prediction": "Selects a plan given a policy ."}
{"id": 9558, "prediction": "Selects a random plan at a random position ."}
{"id": 9559, "prediction": "This method sets the plan variables for an agent ."}
{"id": 9560, "prediction": "Returns the specified result at the specified index ."}
{"id": 9561, "prediction": "Returns a copy of the parents array ."}
{"id": 9562, "prediction": "Returns a copy of the children array ."}
{"id": 9563, "prediction": "Grows the specified array by the specified increment ."}
{"id": 9564, "prediction": "Create a new logger with specified name and level ."}
{"id": 9565, "prediction": "step body ."}
{"id": 9566, "prediction": "Set the Goals of the given array ."}
{"id": 9567, "prediction": "Pause user input ."}
{"id": 9568, "prediction": "Inits the selection pools ."}
{"id": 9569, "prediction": "Initialize intention selection threads ."}
{"id": 9570, "prediction": "Start and wait at the entry barrier ."}
{"id": 9571, "prediction": "Shutdown intention selection threads ."}
{"id": 9572, "prediction": "Registers a new Jill extension ."}
{"id": 9573, "prediction": "Resets all the fields to their default values ."}
{"id": 9574, "prediction": "Loads the specified agent and creates the specified number of instances of it ."}
{"id": 9575, "prediction": "Processes the plan tree for a given goal ."}
{"id": 9576, "prediction": "Create a number of agents in the catalog ."}
{"id": 9577, "prediction": "Tries to load the class with the given name of the given type ."}
{"id": 9578, "prediction": "Loads an extension from its fully qualified class name ."}
{"id": 9579, "prediction": "Compares if two objects have the same names ."}
{"id": 9580, "prediction": "Prints the usage message for this application ."}
{"id": 9581, "prediction": "Parse the command line arguments ."}
{"id": 9582, "prediction": "Parses an argument which is one of the command line options ."}
{"id": 9583, "prediction": "Evaluates a query for an agent"}
{"id": 9584, "prediction": "Returns the object at the specified index ."}
{"id": 9585, "prediction": "Returns the object with the given name ."}
{"id": 9586, "prediction": "Adds an object to the object list ."}
{"id": 9587, "prediction": "Returns the object at the specified index ."}
{"id": 9588, "prediction": "Adds an object to the end of the queue ."}
{"id": 9589, "prediction": "Removes an object from the queue ."}
{"id": 9590, "prediction": "Gets the type ."}
{"id": 9591, "prediction": "Returns true if the given belief matches the given query ."}
{"id": 9592, "prediction": "The main entry point to the BeliefBase tool ."}
{"id": 9593, "prediction": "Convert a String to a byte array ."}
{"id": 9594, "prediction": "Post a goal to the agent ."}
{"id": 9595, "prediction": "Send a message to all registered agents ."}
{"id": 9596, "prediction": "Send a message to all registered agents ."}
{"id": 9597, "prediction": "Returns an array of bytes representing the Message digests ."}
{"id": 9598, "prediction": "Creates a beliefSet with the specified name and fields ."}
{"id": 9599, "prediction": "Adds the specified belief to this object ."}
{"id": 9600, "prediction": "Evaluates a query for the given id ."}
{"id": 9601, "prediction": "Suspend the agent ."}
{"id": 9602, "prediction": "Returns the field with the given name ."}
{"id": 9603, "prediction": "Register a number ofNeighbours with the BeliefBase ."}
{"id": 9604, "prediction": "Builds a random name ."}
{"id": 9605, "prediction": "The primary run loop of the agent manager ."}
{"id": 9606, "prediction": "Checks if the current agent s execution stack is valid ."}
{"id": 9607, "prediction": "Removes the finished agents from the active set ."}
{"id": 9608, "prediction": "Determine if an agent can manage a goal from the current plan ."}
{"id": 9609, "prediction": "Gracefully shutdown the pool ."}
{"id": 9610, "prediction": "Set the idle state of an agent ."}
{"id": 9611, "prediction": "Moves the disc from the specified pin to the specified pin ."}
{"id": 9612, "prediction": "Initializes the object catalog ."}
{"id": 9613, "prediction": "Wait for all pools to be idle"}
{"id": 9614, "prediction": "Terminate all registered event handlers and close the writer ."}
{"id": 9615, "prediction": "Returns true if any of the pools are idle ."}
{"id": 9616, "prediction": "Returns the poolid of the specified agent"}
{"id": 9617, "prediction": "Picks a new Expression from the current expression ."}
{"id": 9618, "prediction": "Sets the expression that will be used to evaluate the expression ."}
{"id": 9619, "prediction": "Returns the join expression for the given attribute from the given from expression ."}
{"id": 9620, "prediction": "Joins the properties of the given join recursively starting from the specified index ."}
{"id": 9621, "prediction": "Find or create a join for the given property ."}
{"id": 9622, "prediction": "Returns whether or not the response contains a end of the range ."}
{"id": 9623, "prediction": "Extracts the uploaded stream from the request ."}
{"id": 9624, "prediction": "Override handleRequest in order to perform processing for this component ."}
{"id": 9625, "prediction": "Check if a parameter is present or not ."}
{"id": 9626, "prediction": "Get parameter by name ."}
{"id": 9627, "prediction": "Parse the parameters of an expression"}
{"id": 9628, "prediction": "Configures the transaction manager with the given configuration ."}
{"id": 9629, "prediction": "Gets the target file for the given artifact ."}
{"id": 9630, "prediction": "Writes an artifact to the local file system ."}
{"id": 9631, "prediction": "This method is called when an instance is received from server ."}
{"id": 9632, "prediction": "Finds the constructor for the given implementation class ."}
{"id": 9633, "prediction": "Builds a string representation of the configuration ."}
{"id": 9634, "prediction": "Gets a method from an interface ."}
{"id": 9635, "prediction": "Returns the type of the given field ."}
{"id": 9636, "prediction": "Get the dependency value for a class ."}
{"id": 9637, "prediction": "Attempts to persist the content of the temporary file to the file system ."}
{"id": 9638, "prediction": "Sets the default link for the given rel ."}
{"id": 9639, "prediction": "Set the default link template for the given rel and href ."}
{"id": 9640, "prediction": "Handles the links in the HTTP response ."}
{"id": 9641, "prediction": "Handles header links ."}
{"id": 9642, "prediction": "Handles the body links ."}
{"id": 9643, "prediction": "Parse a link object into the linksForRel and linkTemplates map ."}
{"id": 9644, "prediction": "Get or add ."}
{"id": 9645, "prediction": "Handles capabilities requests ."}
{"id": 9646, "prediction": "Returns whether or not the given method is allowed ."}
{"id": 9647, "prediction": "Registers all instance processors ."}
{"id": 9648, "prediction": "Register instance factory for given instance type ."}
{"id": 9649, "prediction": "Register instance processor ."}
{"id": 9650, "prediction": "Register a class processor ."}
{"id": 9651, "prediction": "Get an instance of a class associated with a given interface ."}
{"id": 9652, "prediction": "Adds an argument to the list ."}
{"id": 9653, "prediction": "Creates the target file list ."}
{"id": 9654, "prediction": "Returns an XML - formatted string representation of this context ."}
{"id": 9655, "prediction": "Initialize the producer ."}
{"id": 9656, "prediction": "Checks if a file has a reference to another file ."}
{"id": 9657, "prediction": "Creates a ParameterizedTemplateModel from a Reader ."}
{"id": 9658, "prediction": "Creates a ParameterizedTemplateModel from a file ."}
{"id": 9659, "prediction": "Sets the request path ."}
{"id": 9660, "prediction": "Get an observable starting from a given startIndex ."}
{"id": 9661, "prediction": "Creates a new instance scope for the given string ."}
{"id": 9662, "prediction": "Set a field on an object instance ."}
{"id": 9663, "prediction": "Add a capture appender to the logger ."}
{"id": 9664, "prediction": "Remove the specified appender from the capture logger ."}
{"id": 9665, "prediction": "Clear the appenders of the specified logger ."}
{"id": 9666, "prediction": "Reads the arguments from the request ."}
{"id": 9667, "prediction": "Parse the EMF model ."}
{"id": 9668, "prediction": "Resolve all the proxies ."}
{"id": 9669, "prediction": "Returns an array of all files in the given directory ."}
{"id": 9670, "prediction": "Parse a directory and its contents ."}
{"id": 9671, "prediction": "Replies if the model is fully resolved ."}
{"id": 9672, "prediction": "Find all EObject from a ResourceSet ."}
{"id": 9673, "prediction": "Set the directories to use for the model files ."}
{"id": 9674, "prediction": "Sets the file extensions ."}
{"id": 9675, "prediction": "Set model resources ."}
{"id": 9676, "prediction": "Reads the next record ."}
{"id": 9677, "prediction": "Set the value of an array of strings ."}
{"id": 9678, "prediction": "Set the designated parameter to the specified boolean value ."}
{"id": 9679, "prediction": "Execute an INSERT UPDATE or DELETE statement and returns the number of rows affected ."}
{"id": 9680, "prediction": "Converts the given string to an instance of the given type ."}
{"id": 9681, "prediction": "Merge a Velocity template into an existing file ."}
{"id": 9682, "prediction": "Returns the path to the model directory ."}
{"id": 9683, "prediction": "Returns the full path to the template directory ."}
{"id": 9684, "prediction": "Serializes the given document to an output stream ."}
{"id": 9685, "prediction": "Start the web ui ."}
{"id": 9686, "prediction": "Configure the given web window ."}
{"id": 9687, "prediction": "Print the contents of the view to the console ."}
{"id": 9688, "prediction": "Write the contents of an InputStream to an OutputStream ."}
{"id": 9689, "prediction": "Invokes the proxy method ."}
{"id": 9690, "prediction": "Attaches the HTTP request and HTTP response to this context ."}
{"id": 9691, "prediction": "Detaches this request from its context ."}
{"id": 9692, "prediction": "Returns the cookies associated with this response ."}
{"id": 9693, "prediction": "Dump the contents of the HTTP request to a logger ."}
{"id": 9694, "prediction": "This method returns all InvocationMeter for all managed methods ."}
{"id": 9695, "prediction": "Configures the EventStream based on the provided configuration ."}
{"id": 9696, "prediction": "Set the remote host ."}
{"id": 9697, "prediction": "Get event stream parameter converted to requested type ."}
{"id": 9698, "prediction": "Remove the prefix from a path ."}
{"id": 9699, "prediction": "Returns the common directory between the two specified directories ."}
{"id": 9700, "prediction": "Returns a relative path relative to the given base path ."}
{"id": 9701, "prediction": "Converts a relative path to a absolute path ."}
{"id": 9702, "prediction": "Gets the directory depth ."}
{"id": 9703, "prediction": "Dumps error information for the current request ."}
{"id": 9704, "prediction": "Sends a JSON object to the client with the given status code ."}
{"id": 9705, "prediction": "Adds a parameter template to the list ."}
{"id": 9706, "prediction": "Adds a list of ParameterizedTemplateModel objects to this model ."}
{"id": 9707, "prediction": "Initializes the template model ."}
{"id": 9708, "prediction": "Finds references to ."}
{"id": 9709, "prediction": "Sets whether the save button should be shown or not ."}
{"id": 9710, "prediction": "Attempts to delete the currently selected item and close the dialog ."}
{"id": 9711, "prediction": "This method is called when a file is deleted ."}
{"id": 9712, "prediction": "Create a new instance of a class using a no - arg constructor ."}
{"id": 9713, "prediction": "Get the list of files ."}
{"id": 9714, "prediction": "Gets the summary of the results ."}
{"id": 9715, "prediction": "Gets the summary row ."}
{"id": 9716, "prediction": "Get the row for the sub - summary file ."}
{"id": 9717, "prediction": "Create a new instance of a class ."}
{"id": 9718, "prediction": "Returns the setup class ."}
{"id": 9719, "prediction": "Returns a list of all model directories ."}
{"id": 9720, "prediction": "Get the path of the model resources to be parsed ."}
{"id": 9721, "prediction": "Set the data source for the given collection of items ."}
{"id": 9722, "prediction": "Loads an XML document from an InputStream ."}
{"id": 9723, "prediction": "Called when an error occurs ."}
{"id": 9724, "prediction": "Return true if this is an object ."}
{"id": 9725, "prediction": "Parses the given HTTP request and returns the formal parameters as an array of objects ."}
{"id": 9726, "prediction": "Reads a JSON document from an input stream ."}
{"id": 9727, "prediction": "Extracts the parameter of a cell ."}
{"id": 9728, "prediction": "Gets the value of the q ."}
{"id": 9729, "prediction": "Checks to see if the given request is a XML - based request ."}
{"id": 9730, "prediction": "Checks to see if the given request contains an Android user agent ."}
{"id": 9731, "prediction": "If the entity type is the same as the endpoint type then refresh the message ."}
{"id": 9732, "prediction": "Returns a list of properties with the specified annotation ."}
{"id": 9733, "prediction": "Gets annotation ."}
{"id": 9734, "prediction": "Logs a message with a level of SEVERE ."}
{"id": 9735, "prediction": "Looks up a record for a given domain ."}
{"id": 9736, "prediction": "Returns true if a parser is available for a given whois host ."}
{"id": 9737, "prediction": "Get the managed class for the given interface and request URI ."}
{"id": 9738, "prediction": "Get a managed method ."}
{"id": 9739, "prediction": "If the event does not contain the exception message this will do nothing"}
{"id": 9740, "prediction": "If the cell does not contain a message this will do nothing"}
{"id": 9741, "prediction": "Utility method to get a Boolean value from the result set ."}
{"id": 9742, "prediction": "Is the argument a wrapper for this ResultSet object?"}
{"id": 9743, "prediction": "Serializes HttpServletResponse to String"}
{"id": 9744, "prediction": "Get cookie value by name ."}
{"id": 9745, "prediction": "Add cookie ."}
{"id": 9746, "prediction": "Remove cookie by name ."}
{"id": 9747, "prediction": "Returns an iterator over the cookies in this response ."}
{"id": 9748, "prediction": "Get the Target list producer ."}
{"id": 9749, "prediction": "Adds a field with the specified name and type to the class ."}
{"id": 9750, "prediction": "Compiles the generated class ."}
{"id": 9751, "prediction": "Verifies whether the token is equal to the tokened image files ."}
{"id": 9752, "prediction": "Returns the value of the given file ."}
{"id": 9753, "prediction": "Ensure trailing slash ."}
{"id": 9754, "prediction": "Logs in with the given username and password ."}
{"id": 9755, "prediction": "Get the current HTTP request ."}
{"id": 9756, "prediction": "Invokes a method within transactional boundaries ."}
{"id": 9757, "prediction": "Executes the given transactional method on the current thread ."}
{"id": 9758, "prediction": "Execute an immutable transaction ."}
{"id": 9759, "prediction": "Gets all files matching the filter ."}
{"id": 9760, "prediction": "Gets the last file from the directory ."}
{"id": 9761, "prediction": "Gets the concrete configuration ."}
{"id": 9762, "prediction": "Does the request path start with the pathComponent?"}
{"id": 9763, "prediction": "Returns a list of ArtifactFactories of a given model type ."}
{"id": 9764, "prediction": "Gets the session for this request ."}
{"id": 9765, "prediction": "Serialize HttpServletResponse ."}
{"id": 9766, "prediction": "Reads metadata ."}
{"id": 9767, "prediction": "Override handleRequest in order to perform processing specific to this servlet ."}
{"id": 9768, "prediction": "Tears down the statement ."}
{"id": 9769, "prediction": "Close all streams and remove them from the list ."}
{"id": 9770, "prediction": "Handle allowed HTTP methods ."}
{"id": 9771, "prediction": "Start the upload process ."}
{"id": 9772, "prediction": "Shows a confirm dialog and deletes the data from the server ."}
{"id": 9773, "prediction": "Extracts column parameters from a fit row ."}
{"id": 9774, "prediction": "Gets the argument names ."}
{"id": 9775, "prediction": "Schedules a period of time ."}
{"id": 9776, "prediction": "Add a timeout task ."}
{"id": 9777, "prediction": "Loads view manager configuration from configuration ."}
{"id": 9778, "prediction": "Return the next file in the list ."}
{"id": 9779, "prediction": "Loads the application configuration from a properties file ."}
{"id": 9780, "prediction": "Prints the banner of ChameRIA to stdout ."}
{"id": 9781, "prediction": "Prints the names of the variables that have been stopped ."}
{"id": 9782, "prediction": "Creates a new ChameRIA instance based on the command line arguments ."}
{"id": 9783, "prediction": "Register a shutdown hook for the current thread"}
{"id": 9784, "prediction": "Triggers the notification ."}
{"id": 9785, "prediction": "Triggers the configured endpoint ."}
{"id": 9786, "prediction": "Insert and replace ."}
{"id": 9787, "prediction": "Get the counts of all results and tally them ."}
{"id": 9788, "prediction": "setter for score - sets"}
{"id": 9789, "prediction": "getter for variants - gets"}
{"id": 9790, "prediction": "setter for variants - sets"}
{"id": 9791, "prediction": "getter for questionType - gets"}
{"id": 9792, "prediction": "setter for questionType - sets"}
{"id": 9793, "prediction": "getter for token - gets"}
{"id": 9794, "prediction": "getter for depLabel - gets"}
{"id": 9795, "prediction": "setter for depLabel - sets"}
{"id": 9796, "prediction": "getter for semanticType - gets"}
{"id": 9797, "prediction": "setter for semanticType - sets"}
{"id": 9798, "prediction": "getter for sections - gets"}
{"id": 9799, "prediction": "setter for sections - sets"}
{"id": 9800, "prediction": "indexed getter for sections - gets an indexed value -"}
{"id": 9801, "prediction": "indexed setter for sections - sets an indexed value -"}
{"id": 9802, "prediction": "getter for setLength - gets"}
{"id": 9803, "prediction": "setter forUris - sets"}
{"id": 9804, "prediction": "getter for types - gets"}
{"id": 9805, "prediction": "setter for types - sets"}
{"id": 9806, "prediction": "getter for targetType - gets"}
{"id": 9807, "prediction": "setter for targetType - sets"}
{"id": 9808, "prediction": "getter for rank - gets"}
{"id": 9809, "prediction": "setter for rank - sets"}
{"id": 9810, "prediction": "getter for queryString - gets"}
{"id": 9811, "prediction": "setter for queryString - sets"}
{"id": 9812, "prediction": "getter for ComputeAnswers - gets"}
{"id": 9813, "prediction": "setter for conversation answers - sets"}
{"id": 9814, "prediction": "indexed getter for candidate answers - gets an indexed value -"}
{"id": 9815, "prediction": "indexed setter for candidate answers - sets an indexed value -"}
{"id": 9816, "prediction": "getter for query - gets"}
{"id": 9817, "prediction": "setter for query - sets"}
{"id": 9818, "prediction": "getter for valueTypeList - gets"}
{"id": 9819, "prediction": "setter for hitList - sets"}
{"id": 9820, "prediction": "indexed getter for snippetList - gets an indexed value -"}
{"id": 9821, "prediction": "indexed setter for hitList - sets an indexed value -"}
{"id": 9822, "prediction": "getter for abstractQuery - gets"}
{"id": 9823, "prediction": "setter for abstractQuery - sets"}
{"id": 9824, "prediction": "getter for searchId - gets"}
{"id": 9825, "prediction": "setter for searchId - sets"}
{"id": 9826, "prediction": "setter for docId - sets"}
{"id": 9827, "prediction": "getter for offsetInBeginSection - gets"}
{"id": 9828, "prediction": "setter for offsetInBeginSection - sets"}
{"id": 9829, "prediction": "getter for offsetInEndSection - gets"}
{"id": 9830, "prediction": "setter for offsetInEndSection - sets"}
{"id": 9831, "prediction": "getter for beginSection - gets"}
{"id": 9832, "prediction": "setter for beginSection - sets"}
{"id": 9833, "prediction": "getter for endSection - gets"}
{"id": 9834, "prediction": "setter for endSection - sets"}
{"id": 9835, "prediction": "getter for aspects - gets"}
{"id": 9836, "prediction": "setter forspects - sets"}
{"id": 9837, "prediction": "getter for triple - gets"}
{"id": 9838, "prediction": "setter for triple - sets"}
{"id": 9839, "prediction": "getter for sourceRelation - gets"}
{"id": 9840, "prediction": "setter for sourceRelation - sets"}
{"id": 9841, "prediction": "getter for subject - gets"}
{"id": 9842, "prediction": "setter for subject - sets"}
{"id": 9843, "prediction": "getter for predicate - gets"}
{"id": 9844, "prediction": "setter for predicate - sets"}
{"id": 9845, "prediction": "getter for isObjUri - gets"}
{"id": 9846, "prediction": "setter for isObjUri - sets"}
{"id": 9847, "prediction": "getter for operator - gets"}
{"id": 9848, "prediction": "setter for operator - sets"}
{"id": 9849, "prediction": "getter for operatorArgs - gets"}
{"id": 9850, "prediction": "setter forOperatorArgs - sets"}
{"id": 9851, "prediction": "getter for snippet - gets"}
{"id": 9852, "prediction": "getter for score - gets"}
{"id": 9853, "prediction": "getter for text - gets"}
{"id": 9854, "prediction": "setter for text - sets"}
{"id": 9855, "prediction": "getter for id - gets"}
{"id": 9856, "prediction": "setter for id - sets"}
{"id": 9857, "prediction": "getter for name - gets"}
{"id": 9858, "prediction": "getter for abbreviation - gets"}
{"id": 9859, "prediction": "setter for abbreviation - sets"}
{"id": 9860, "prediction": "setter for concept - sets"}
{"id": 9861, "prediction": "getter for variants - gets"}
{"id": 9862, "prediction": "setter for variants - sets"}
{"id": 9863, "prediction": "getter for namedEntityTypes - gets"}
{"id": 9864, "prediction": "setter for namedEntityTypes - sets"}
{"id": 9865, "prediction": "getter for pwType - gets"}
{"id": 9866, "prediction": "setter for conceptType - sets"}
{"id": 9867, "prediction": "getter for occurrences - gets"}
{"id": 9868, "prediction": "setter for occurrences - sets"}
{"id": 9869, "prediction": "getter for snippet - gets"}
{"id": 9870, "prediction": "setter for concepts - sets"}
{"id": 9871, "prediction": "getter for originalText - gets"}
{"id": 9872, "prediction": "setter for originalText - sets"}
{"id": 9873, "prediction": "getter for args - gets"}
{"id": 9874, "prediction": "setter for args - sets"}
{"id": 9875, "prediction": "getter for label - gets"}
{"id": 9876, "prediction": "setter for label - sets"}
{"id": 9877, "prediction": "Returns the index of the next clear bit ."}
{"id": 9878, "prediction": "Sets the bit at the specified index ."}
{"id": 9879, "prediction": "Return a buffer back to the pool ."}
{"id": 9880, "prediction": "Returns a new CacheValue instance with the cache size of the specified file in the specified directory and name ."}
{"id": 9881, "prediction": "Helper method to rehash an array of objects ."}
{"id": 9882, "prediction": "Generates a HELM2 HELM1 HELM2 HELM2 HELM2"}
{"id": 9883, "prediction": "Checks of brackets in the annotation section ."}
{"id": 9884, "prediction": "method to add more details to theDetails list"}
{"id": 9885, "prediction": "Returns to HELM2 string ."}
{"id": 9886, "prediction": "add a new MonomerNotation in the group"}
{"id": 9887, "prediction": "Main entry point for the HELM2 program ."}
{"id": 9888, "prediction": "Checks if the given polymerId is a valid polymerId"}
{"id": 9889, "prediction": "Checks if the given polymerID is valid"}
{"id": 9890, "prediction": "Checks if the connection s details are valid"}
{"id": 9891, "prediction": "Check if groupID is valid"}
{"id": 9892, "prediction": "Checks if the given string matches a regular expression ."}
{"id": 9893, "prediction": "Returns true if the polymer section contains either Peptide or Rna ."}
{"id": 9894, "prediction": "Return the JSON representation of the notation container"}
{"id": 9895, "prediction": "method to find a PolymerNotation by it s id"}
{"id": 9896, "prediction": "Returns the current GroupingNotation"}
{"id": 9897, "prediction": "Returns the HELM2 header as a String ."}
{"id": 9898, "prediction": "Returns the HELM2 polymer string ."}
{"id": 9899, "prediction": "Returns the HELM2 connection string ."}
{"id": 9900, "prediction": "Returns the HELM for this groupings"}
{"id": 9901, "prediction": "Returns the HELM string for the annotation section"}
{"id": 9902, "prediction": "method to get all id of all PolymerNotation and all groupings"}
{"id": 9903, "prediction": "method to get a PolymerNotation by it s id"}
{"id": 9904, "prediction": "Sets the polymer elements ."}
{"id": 9905, "prediction": "Converts a String to a HELM2 string"}
{"id": 9906, "prediction": "Set the annotation ."}
{"id": 9907, "prediction": "Set the count ."}
{"id": 9908, "prediction": "method to decide the MonomerNotation"}
{"id": 9909, "prediction": "method to decide the MonomerNotationGroupElement"}
{"id": 9910, "prediction": "method to decide which entity to use"}
{"id": 9911, "prediction": "Gets the value of the step ."}
{"id": 9912, "prediction": "Reads the HELM2 standard and executes the action on it ."}
{"id": 9913, "prediction": "method to set the rna contents of a nucleotide"}
{"id": 9914, "prediction": "method to define the relationship between the mixture and the other ."}
{"id": 9915, "prediction": "Returns a snapshot of the statistics on this worker thread ."}
{"id": 9916, "prediction": "Creates a new ADiGraph from a collection of edges ."}
{"id": 9917, "prediction": "Creates a graph from a collection of nodes and a collection of edges ."}
{"id": 9918, "prediction": "Initializes the internal list of paths ."}
{"id": 9919, "prediction": "Returns a list of nodes sorted byachability"}
{"id": 9920, "prediction": "Subscribes to a method of the given class and method name ."}
{"id": 9921, "prediction": "Count the number of atoms that match a pattern ."}
{"id": 9922, "prediction": "Unsubscribe the Erlang atoms ."}
{"id": 9923, "prediction": "Send a request to a remote process ."}
{"id": 9924, "prediction": "Send a request to return_sync on a remote process ."}
{"id": 9925, "prediction": "Polls over the message for a period of time . Returns true if the poll was successful ."}
{"id": 9926, "prediction": "Send a shutdown atom ."}
{"id": 9927, "prediction": "Returns the given exception for local handling ."}
{"id": 9928, "prediction": "Releases a run state ."}
{"id": 9929, "prediction": "Tries to create and start a worker ."}
{"id": 9930, "prediction": "Tries to add a worker if necessary ."}
{"id": 9931, "prediction": "Tries to register and configure a worker ."}
{"id": 9932, "prediction": "Tries to deregister a worker from the pool . If the worker is already deregistered the exception is thrown by the pool s deregister method . Otherwise the exception is thrown by the pool s deregister method ."}
{"id": 9933, "prediction": "Tries to create or activate a worker if too few are active ."}
{"id": 9934, "prediction": "Runs a worker and waits for it to become available ."}
{"id": 9935, "prediction": "Waits for work on the given queue ."}
{"id": 9936, "prediction": "Returns the estimate of the number of queued tasks for the current thread or 0 if there is no current thread ."}
{"id": 9937, "prediction": "Returns the common submitter queue or null if there is no common submitter queue ."}
{"id": 9938, "prediction": "Performs helpComplete for an external thread ."}
{"id": 9939, "prediction": "Submits a ForkJoinTask for execution ."}
{"id": 9940, "prediction": "Returns a new ForkJoinPool instance ."}
{"id": 9941, "prediction": "Waits for this task to complete before waiting for its completion or exception to be thrown ."}
{"id": 9942, "prediction": "Builds a String representation of the given code"}
{"id": 9943, "prediction": "Get the statistics for this thread pool ."}
{"id": 9944, "prediction": "Creates a list with the given elements ."}
{"id": 9945, "prediction": "Reverses this list ."}
{"id": 9946, "prediction": "Applies the supplied predicate to all elements of the supplied collection and returns true if the predicate is true or false ."}
{"id": 9947, "prediction": "Applies the supplied function to each element of the supplied collection starting from the specified start value ."}
{"id": 9948, "prediction": "Applies the supplied function to the right side of the supplied list ."}
{"id": 9949, "prediction": "Pushes a task to the top of the stack ."}
{"id": 9950, "prediction": "Converts nullable value into a AOption"}
{"id": 9951, "prediction": "Create a hash map from the given keys and values ."}
{"id": 9952, "prediction": "Creates an empty map with the given equality ."}
{"id": 9953, "prediction": "Creates a list map where the key is the key and the value is the value ."}
{"id": 9954, "prediction": "Creates a list map from the given keys and values ."}
{"id": 9955, "prediction": "Returns an unmodifiable set view of the keys contained in this map ."}
{"id": 9956, "prediction": "Normalize a resource name ."}
{"id": 9957, "prediction": "Marshals the field value as a String ."}
{"id": 9958, "prediction": "Returns a sub sequence of this sequence ."}
{"id": 9959, "prediction": "Searches for elements in the list using binary search ."}
{"id": 9960, "prediction": "Returns a new binary search instance for the elements in the given list using the given comparator ."}
{"id": 9961, "prediction": "Sends an email"}
{"id": 9962, "prediction": "Sends the specified email asynchronously"}
{"id": 9963, "prediction": "Adds the binding to the map ."}
{"id": 9964, "prediction": "Add a filter binding ."}
{"id": 9965, "prediction": "Checks to see if a tag has a role ."}
{"id": 9966, "prediction": "Returns an int value of the given Long or 0 if l is null ."}
{"id": 9967, "prediction": "Remove duplicate Strings from String array"}
{"id": 9968, "prediction": "Creates a percentage of the given string ."}
{"id": 9969, "prediction": "Perform the actual task execution ."}
{"id": 9970, "prediction": "Login by password"}
{"id": 9971, "prediction": "Gets login with db ."}
{"id": 9972, "prediction": "Gets the login user from the session ."}
{"id": 9973, "prediction": "Check password ."}
{"id": 9974, "prediction": "Saves the member in a cookie ."}
{"id": 9975, "prediction": "Returns the login key for the given user ip and user_agent ."}
{"id": 9976, "prediction": "Create a CookieUser for the specified cookie ."}
{"id": 9977, "prediction": "Send the request to the specified path ."}
{"id": 9978, "prediction": "Appends file separator to a path ."}
{"id": 9979, "prediction": "Returns the value of a parameter from a request as a long ."}
{"id": 9980, "prediction": "Log a debug message ."}
{"id": 9981, "prediction": "Gets the call information for the caller at the specified level ."}
{"id": 9982, "prediction": "Converts an array of characters to an array of bytes ."}
{"id": 9983, "prediction": "Converts a CharSequence to a byte array ."}
{"id": 9984, "prediction": "Converts byte array to simple char array ."}
{"id": 9985, "prediction": "Converts a CharSequence to a byte array ."}
{"id": 9986, "prediction": "Looks up the Locale data for the given locale code ."}
{"id": 9987, "prediction": "Wait for the job to run in the specified time ."}
{"id": 9988, "prediction": "Crop the given image to the specified location"}
{"id": 9989, "prediction": "Schedules an invocation for the specified number of milliseconds ."}
{"id": 9990, "prediction": "This method runs an invocation in a background thread"}
{"id": 9991, "prediction": "Get the rest operations ."}
{"id": 9992, "prediction": "This method is used to render an error message ."}
{"id": 9993, "prediction": "Render the forbidden message ."}
{"id": 9994, "prediction": "Processes the given view string ."}
{"id": 9995, "prediction": "Parses a path from a url ."}
{"id": 9996, "prediction": "Render all data tables of the specified type ."}
{"id": 9997, "prediction": "Render empty data tables ."}
{"id": 9998, "prediction": "Sets the items of the combo box ."}
{"id": 9999, "prediction": "Sends redirect to the specified URL ."}
{"id": 10000, "prediction": "Returns a list of the values contained in the given injector ."}
{"id": 10001, "prediction": "Gets the current method ."}
{"id": 10002, "prediction": "Compact memory ."}
{"id": 10003, "prediction": "Propagates the metrics to the local MetricsCollection ."}
{"id": 10004, "prediction": "Encode a string for use in URL encoding ."}
{"id": 10005, "prediction": "Reads a charset from a file ."}
{"id": 10006, "prediction": "Copy from an InputStream to an OutputStream ."}
{"id": 10007, "prediction": "Copy the contents of the given InputStream to the given OutputStream ."}
{"id": 10008, "prediction": "Copies the content from an InputStream to an OutputStream using the default encoding ."}
{"id": 10009, "prediction": "Copy the contents of the given Reader to the given Writer ."}
{"id": 10010, "prediction": "Copy the contents of a Reader to a Writer ."}
{"id": 10011, "prediction": "Copies the content of the given Reader to the given OutputStream using the default encoding ."}
{"id": 10012, "prediction": "Copy the content of the given Reader to the given OutputStream using the specified encoding ."}
{"id": 10013, "prediction": "Compares two input streams for equality ."}
{"id": 10014, "prediction": "Compares two Reader instances ."}
{"id": 10015, "prediction": "Apply the pipeline began and return the result ."}
{"id": 10016, "prediction": "Return the SQL for a given node name and sql id ."}
{"id": 10017, "prediction": "Converts the contents of the string to an object of the given class ."}
{"id": 10018, "prediction": "Unzip a zip file to a destination directory with a list of patterns ."}
{"id": 10019, "prediction": "Gets the instance of the Permission dialog fragment ."}
{"id": 10020, "prediction": "Called when the user click the back button on the dialog ."}
{"id": 10021, "prediction": "Register the core value type for the given class and converter ."}
{"id": 10022, "prediction": "Returns true if the given value matches the given regular expression ."}
{"id": 10023, "prediction": "Returns true if the given value is a mobile device ."}
{"id": 10024, "prediction": "Checks if is phone ."}
{"id": 10025, "prediction": "Returns true if the value is a valid day ."}
{"id": 10026, "prediction": "Returns true if the given value is an URL ."}
{"id": 10027, "prediction": "Checks if is date time ."}
{"id": 10028, "prediction": "Processes the request and applies the pipeline ."}
{"id": 10029, "prediction": "Encode a string to base64 ."}
{"id": 10030, "prediction": "Decode a base64 string to an array of bytes ."}
{"id": 10031, "prediction": "Converts a hex string into a byte array ."}
{"id": 10032, "prediction": "Reads properties from a UTF - 8 stream ."}
{"id": 10033, "prediction": "Read the content of an InputStream and return it as a String . The stream is closed after calling this method ."}
{"id": 10034, "prediction": "Reads the content of a file into a string ."}
{"id": 10035, "prediction": "Write a byte array to a file ."}
{"id": 10036, "prediction": "Copies all files from the source directory to the target directory . If the target directory does not exist it is created ."}
{"id": 10037, "prediction": "Serializes an XML document to a String ."}
{"id": 10038, "prediction": "Returns the DOM Document object from the given XML file ."}
{"id": 10039, "prediction": "Get a DOM Document object from an XML string ."}
{"id": 10040, "prediction": "Gets a Document object from an input stream ."}
{"id": 10041, "prediction": "Validates an XML signature ."}
{"id": 10042, "prediction": "Sign a document using an RSA public key ."}
{"id": 10043, "prediction": "Returns whether the given class is cache - safe ."}
{"id": 10044, "prediction": "Returns true if the given class represents an array of primitive types false otherwise ."}
{"id": 10045, "prediction": "Returns whether the given class represents an array of primitive wrapper types ."}
{"id": 10046, "prediction": "Resolves the given class if it is a primitive class or a void class ."}
{"id": 10047, "prediction": "Return true if the given left - hand side type is assignable from the given right - hand side type ."}
{"id": 10048, "prediction": "Returns true if the given value is assignable to the given type false otherwise ."}
{"id": 10049, "prediction": "Returns all interfaces implemented by the given instance including ones implemented by superclasses ."}
{"id": 10050, "prediction": "Returns all interfaces that the given instance implements as Set including ones implemented by superclasses ."}
{"id": 10051, "prediction": "Writes the configuration to a temporary file ."}
{"id": 10052, "prediction": "Returns a map of variables based on a URI pattern ."}
{"id": 10053, "prediction": "Adds a permission message ."}
{"id": 10054, "prediction": "Create a new DruidPlugin instance ."}
{"id": 10055, "prediction": "Register the specified implementation as a loader module ."}
{"id": 10056, "prediction": "Returns this object if the given type is not a WebContext or a HttpSession ."}
{"id": 10057, "prediction": "Returns the value of the given primitive type ."}
{"id": 10058, "prediction": "Attempts to convert the given object to the given type ."}
{"id": 10059, "prediction": "Convert user defined value to value type ."}
{"id": 10060, "prediction": "Returns the value of a parameter with the given name from the request ."}
{"id": 10061, "prediction": "Returns the value of a cookie with the given name ."}
{"id": 10062, "prediction": "Retrieve session value ."}
{"id": 10063, "prediction": "Initialize the data source ."}
{"id": 10064, "prediction": "Defines a directive that will be used as the shared variables ."}
{"id": 10065, "prediction": "Adds a parameter to the query ."}
{"id": 10066, "prediction": "Sets a parameter value for a specific field ."}
{"id": 10067, "prediction": "Shows a permission dialog ."}
{"id": 10068, "prediction": "Checks if all values are granted ."}
{"id": 10069, "prediction": "Check if any of the values are denied"}
{"id": 10070, "prediction": "Finds all records that match the given SQL SELECT statement ."}
{"id": 10071, "prediction": "Return the first record matching the given query ."}
{"id": 10072, "prediction": "Check if the model is new ."}
{"id": 10073, "prediction": "Returns whether the given method declared an exception of the given type ."}
{"id": 10074, "prediction": "Process the queue ."}
{"id": 10075, "prediction": "Associates the specified value with the specified key ."}
{"id": 10076, "prediction": "Returns true if the given string matches the given pattern false otherwise ."}
{"id": 10077, "prediction": "Read the command line arguments for the given interface ."}
{"id": 10078, "prediction": "Gets the JAXB entity from its class ."}
{"id": 10079, "prediction": "Returns true if the specified class is a proto - encoded entity ."}
{"id": 10080, "prediction": "Returns a map of all field - > charset - > charset - > charset - > charset ."}
{"id": 10081, "prediction": "Gets the protobuf getter for a field ."}
{"id": 10082, "prediction": "Returns the corresponding pojo setter for the given field ."}
{"id": 10083, "prediction": "Returns the object mapper for this thread ."}
{"id": 10084, "prediction": "Returns the JsonFactory ."}
{"id": 10085, "prediction": "Converts an object to a JSON string ."}
{"id": 10086, "prediction": "Set the border positions ."}
{"id": 10087, "prediction": "Returns a UserRecord for the given domain name and user name ."}
{"id": 10088, "prediction": "Copy out attributes to target object"}
{"id": 10089, "prediction": "Copy out attributes to the target object ."}
{"id": 10090, "prediction": "Get a property by key ."}
{"id": 10091, "prediction": "Set a property ."}
{"id": 10092, "prediction": "Add this application to a frame ."}
{"id": 10093, "prediction": "Saves the current access token and secret key to the token store ."}
{"id": 10094, "prediction": "Returns the current token or null if there is no current token ."}
{"id": 10095, "prediction": "Returns the default class loader ."}
{"id": 10096, "prediction": "Returns the URL of the resource with the given name in the given class loader or the system class loader ."}
{"id": 10097, "prediction": "Returns the resource with the given name as an InputStream ."}
{"id": 10098, "prediction": "Gets the class as stream ."}
{"id": 10099, "prediction": "Initializes m_host m_port m_path m_ queryString and fragment fields from another URI ."}
{"id": 10100, "prediction": "Set the scheme from a URI spec ."}
{"id": 10101, "prediction": "Initialize the path from the spec ."}
{"id": 10102, "prediction": "Set the scheme ."}
{"id": 10103, "prediction": "Set the userinfo property of this URI object ."}
{"id": 10104, "prediction": "Set the host field of the URI ."}
{"id": 10105, "prediction": "Set the port number ."}
{"id": 10106, "prediction": "Appends the given path to the current one ."}
{"id": 10107, "prediction": "Set the query string for this URI ."}
{"id": 10108, "prediction": "Set the fragment ."}
{"id": 10109, "prediction": "Returns a string representation of this URI ."}
{"id": 10110, "prediction": "Creates a PreparedStatement based on an iterator ."}
{"id": 10111, "prediction": "Initialize this class ."}
{"id": 10112, "prediction": "Get the value of this parameter from the URL ."}
{"id": 10113, "prediction": "Set the value of the Muffin parameter ."}
{"id": 10114, "prediction": "Get the contents of the system clipboard and print them ."}
{"id": 10115, "prediction": "Set the system clipboard contents to a string selection"}
{"id": 10116, "prediction": "Open a file and return an input stream ."}
{"id": 10117, "prediction": "Load the services of the given type ."}
{"id": 10118, "prediction": "Sets the service parameters in the given map to the given value ."}
{"id": 10119, "prediction": "Returns the service parameters as a map ."}
{"id": 10120, "prediction": "Find a parmetrized service by id ."}
{"id": 10121, "prediction": "Returns an object that is an instance of the specified class from a collection of services ."}
{"id": 10122, "prediction": "Attempts to parse the given query response into the given response class ."}
{"id": 10123, "prediction": "Returns an iterator over the elements in this buffer ."}
{"id": 10124, "prediction": "Get encoding from xml string ."}
{"id": 10125, "prediction": "Gets the logger s parent ."}
{"id": 10126, "prediction": "Returns a Connection proxy for the specified connection ."}
{"id": 10127, "prediction": "Retrieves the authorization code for the specified URL ."}
{"id": 10128, "prediction": "Visits a package declaration ."}
{"id": 10129, "prediction": "Visits a ClassDeclaration ."}
{"id": 10130, "prediction": "Visits a executable declaration ."}
{"id": 10131, "prediction": "Returns a configuration option from a map ."}
{"id": 10132, "prediction": "Returns a DeclarationFilter that matches a collection of modifiers ."}
{"id": 10133, "prediction": "Returns a filter that matches Declaration instances of the specified type ."}
{"id": 10134, "prediction": "Creates a DeclarationFilter that matches only if this DeclarationFilter matches and the specified DeclarationFilter matches ."}
{"id": 10135, "prediction": "Returns a DeclarationFilter that matches only iff this filter matches and the specified filter matches ."}
{"id": 10136, "prediction": "Get the result as a Map ."}
{"id": 10137, "prediction": "Make the given constructor public or protected ."}
{"id": 10138, "prediction": "Prepare an object query ."}
{"id": 10139, "prediction": "Replace forward and backward slashes with forward slashes ."}
{"id": 10140, "prediction": "Convert a byte array to a hex string ."}
{"id": 10141, "prediction": "Gets the indexes for a parameter ."}
{"id": 10142, "prediction": "Parse the SQL for a named query ."}
{"id": 10143, "prediction": "Convert collection of objects to protobuf objects ."}
{"id": 10144, "prediction": "Set the protobuf field value ."}
{"id": 10145, "prediction": "Set the field value using the protobuf attribute ."}
{"id": 10146, "prediction": "Check to see if this file should be accepted ."}
{"id": 10147, "prediction": "Returns a ResultSet proxy based on the given ResultSet object ."}
{"id": 10148, "prediction": "Creates a map from the ExpectedLabels to the index of the corresponding state ."}
{"id": 10149, "prediction": "Extracts the actual state from the list of values ."}
{"id": 10150, "prediction": "Returns the generic supertype of the given type ."}
{"id": 10151, "prediction": "Retrieves and polls a single connection from the poll processor ."}
{"id": 10152, "prediction": "Polls through all the polled objects and waits until the process is complete ."}
{"id": 10153, "prediction": "Returns the declared field of the given class or any of its parents ."}
{"id": 10154, "prediction": "Get the declared methods of the given class recursively ."}
{"id": 10155, "prediction": "Returns the declared method for the specified class recursively and recursively with the specified method name and parameter types ."}
{"id": 10156, "prediction": "Returns all methods annotated with given annotationClass from the given class recursively ."}
{"id": 10157, "prediction": "Returns all public constructors of the given class that are annotated with the given annotation ."}
{"id": 10158, "prediction": "Dumps a single byte to the console ."}
{"id": 10159, "prediction": "Returns the index within the specified string of the first occurrence of the specified substring ignoring case ."}
{"id": 10160, "prediction": "Removes all chars from the specified string ."}
{"id": 10161, "prediction": "Clean the state of the username and committed subject objects ."}
{"id": 10162, "prediction": "Initialize the audit ."}
{"id": 10163, "prediction": "Initialize the message queue ."}
{"id": 10164, "prediction": "Initialize the pw validator ."}
{"id": 10165, "prediction": "Initialize the pwAuthenticator from a properties object ."}
{"id": 10166, "prediction": "Resolves the locale code ."}
{"id": 10167, "prediction": "Looks up the LocaleInfo for the given locale code ."}
{"id": 10168, "prediction": "Returns a Statement proxy for the given statement ."}
{"id": 10169, "prediction": "Clears all the elements of this queue ."}
{"id": 10170, "prediction": "Adds an element to the end of the queue ."}
{"id": 10171, "prediction": "Removes an element from the stack ."}
{"id": 10172, "prediction": "Returns an InputStream to read the contents of this file ."}
{"id": 10173, "prediction": "Parse the arguments and return a Properties object ."}
{"id": 10174, "prediction": "Check if one or more tokens match one of the patterns ."}
{"id": 10175, "prediction": "Moves the cursor to the specified positions ."}
{"id": 10176, "prediction": "Returns true if the specified rectangle encloses this rectangle ."}
{"id": 10177, "prediction": "Returns true if the given rectangle contains the given point ."}
{"id": 10178, "prediction": "Calculates the intersection between this rectangle and another rectangle ."}
{"id": 10179, "prediction": "Returns a new rectangle that is the union of this rectangle with the specified rectangle ."}
{"id": 10180, "prediction": "Replaces the x values of this Rectangular with the x values of the other Rectangular ."}
{"id": 10181, "prediction": "Replaces the y values of this Rectangular with the y values of the other Rectangular ."}
{"id": 10182, "prediction": "Returns the sum of all values of the specified column"}
{"id": 10183, "prediction": "Returns the total number of rows in the table ."}
{"id": 10184, "prediction": "Returns a Rectangular that is relative to the specified cell ."}
{"id": 10185, "prediction": "Calculates the number of columns based on the list of points ."}
{"id": 10186, "prediction": "Calculates the number of rows based on the points in the area ."}
{"id": 10187, "prediction": "Unwraps and returns the underlying throwable ."}
{"id": 10188, "prediction": "Main entry point ."}
{"id": 10189, "prediction": "Called by the generated code when the code has changed ."}
{"id": 10190, "prediction": "Copy and resize the codeBuffer ."}
{"id": 10191, "prediction": "Renders the given instructions into the labeled table ."}
{"id": 10192, "prediction": "This method will be called by the framework once it has been initialized ."}
{"id": 10193, "prediction": "Create a copy of this parameter but with the specified elements excluded ."}
{"id": 10194, "prediction": "Adds a new child node to this tree ."}
{"id": 10195, "prediction": "Clears out the children of this node ."}
{"id": 10196, "prediction": "Returns the next solution in the iterator or null if the iterator is exhausted ."}
{"id": 10197, "prediction": "Adds instructions to this node ."}
{"id": 10198, "prediction": "Add instructions to the parent ."}
{"id": 10199, "prediction": "Called when a property change has occurred on the WorkPanel ."}
{"id": 10200, "prediction": "Registers a work panel with this panel ."}
{"id": 10201, "prediction": "Update the flags that are present in the component map ."}
{"id": 10202, "prediction": "Creates a new BigDecimalType definition ."}
{"id": 10203, "prediction": "Returns true if the given term is a variable and not a bound variable ."}
{"id": 10204, "prediction": "Optimize instructions based on the set of instructions ."}
{"id": 10205, "prediction": "Compares two collections ."}
{"id": 10206, "prediction": "Implements HttpServletRequest . service and writes the contents of the file to the response ."}
{"id": 10207, "prediction": "Renders the first page and the back page button ."}
{"id": 10208, "prediction": "Renders a button ."}
{"id": 10209, "prediction": "Resets the variables to their default values ."}
{"id": 10210, "prediction": "Initializes the state machine ."}
{"id": 10211, "prediction": "Gets the value associated with the given key ."}
{"id": 10212, "prediction": "Gets the index of the given key ."}
{"id": 10213, "prediction": "Replaces the value at the specified index with the specified value ."}
{"id": 10214, "prediction": "Removes an object from the map"}
{"id": 10215, "prediction": "Removes the value at the specified index ."}
{"id": 10216, "prediction": "Returns true if this object has a property with the given name ."}
{"id": 10217, "prediction": "Sets the given property to the given value ."}
{"id": 10218, "prediction": "Returns the value of a property on this meta bean ."}
{"id": 10219, "prediction": "Checks if the given primitive type is assignable from the given wrapper type ."}
{"id": 10220, "prediction": "Initialize all the setters on this class ."}
{"id": 10221, "prediction": "Returns the decision tree corresponding to the given state ."}
{"id": 10222, "prediction": "Insert the matching attribute value into the lookup table for the given node ."}
{"id": 10223, "prediction": "Unify the given query and statement ."}
{"id": 10224, "prediction": "Given two terms unify with the left and right trail return true if the left trail is equivalent to the right trail . Otherwise return false ."}
{"id": 10225, "prediction": "Converts a left term into a right term ."}
{"id": 10226, "prediction": "Compiles a WAM query ."}
{"id": 10227, "prediction": "Returns the maximum number of arguments in the given clause ."}
{"id": 10228, "prediction": "Allocates local variable slots for all variables in a query ."}
{"id": 10229, "prediction": "Gathers the position and occurrences of the given clause ."}
{"id": 10230, "prediction": "Displays a compiled predicate ."}
{"id": 10231, "prediction": "Display a compiled query ."}
{"id": 10232, "prediction": "Puts the specified number into the specified buffer with the specified number and length . If the value is less than or equal to or equal to the specified length the result will be placed in the buffer ."}
{"id": 10233, "prediction": "Convert a buffer to a string ."}
{"id": 10234, "prediction": "Returns the string value of the attribute ."}
{"id": 10235, "prediction": "Set the value of this attribute as the given string value ."}
{"id": 10236, "prediction": "Reads a single term from the content handler ."}
{"id": 10237, "prediction": "Checks if class exists and is loadable ."}
{"id": 10238, "prediction": "Checks if is sub type of ."}
{"id": 10239, "prediction": "Returns true if the specified parent class is an instance of the specified child class ."}
{"id": 10240, "prediction": "Returns true if the given parent class is a sub - type of the given child class ."}
{"id": 10241, "prediction": "Attempts to load the class with the given name ."}
{"id": 10242, "prediction": "Create a new instance of a class ."}
{"id": 10243, "prediction": "Creates a new instance of a class by calling a constructor ."}
{"id": 10244, "prediction": "Attempts to call a method that overrides an illegal access on an object ."}
{"id": 10245, "prediction": "Invoke a method with parameters on an object ."}
{"id": 10246, "prediction": "Call a static method ."}
{"id": 10247, "prediction": "Gets a constructor ."}
{"id": 10248, "prediction": "Returns a set of classes that match the specified property name ."}
{"id": 10249, "prediction": "Gets the transactional queue ."}
{"id": 10250, "prediction": "Returns the transactional requeue of the given queue ."}
{"id": 10251, "prediction": "Get the type of an object ."}
{"id": 10252, "prediction": "Resets the state machine so it can be used again ."}
{"id": 10253, "prediction": "Returns the goal s state ."}
{"id": 10254, "prediction": "Creates a new IntRangeType and returns it ."}
{"id": 10255, "prediction": "Add a supported tz name for this endpoint ."}
{"id": 10256, "prediction": "Add an alternate dimension to the list of alternate dimensions . If an alternate dimension is already in the list of alternate dimensions it will be replaced ."}
{"id": 10257, "prediction": "Adds a new dimension to this schema ."}
{"id": 10258, "prediction": "Returns a set of free variables matching the given query ."}
{"id": 10259, "prediction": "Returns a set of free non - anonymous variables matching the given query ."}
{"id": 10260, "prediction": "Compares the two specified search nodes ."}
{"id": 10261, "prediction": "Writes an object to an output file ."}
{"id": 10262, "prediction": "Reads the contents of a BufferedInputStream into a String ."}
{"id": 10263, "prediction": "Creates a new search node ."}
{"id": 10264, "prediction": "Generate a string representation of the current indent ."}
{"id": 10265, "prediction": "Allocates all argument registers for the given Functor ."}
{"id": 10266, "prediction": "Returns true if the body term contains only the last argument ."}
{"id": 10267, "prediction": "Given a property and a list of examples produce a OrdinalAttribute that contains the number of occurences of that property ."}
{"id": 10268, "prediction": "Returns true if all the given examples have the same classification ."}
{"id": 10269, "prediction": "Chooses the best property to decide on based on the given examples and input properties ."}
{"id": 10270, "prediction": "Returns a new Functor that has the given name and arguments ."}
{"id": 10271, "prediction": "Returns a new variable instance for the given name ."}
{"id": 10272, "prediction": "This method will be called when an error occurs on the request . It will redirect to the specified location ."}
{"id": 10273, "prediction": "Returns a sub - list of this list with the specified index ."}
{"id": 10274, "prediction": "Set the texture to use"}
{"id": 10275, "prediction": "Override this method to paint the image immediately"}
{"id": 10276, "prediction": "Creates a buffered image of the specified type of image ."}
{"id": 10277, "prediction": "Creates a graphics context for the specified image ."}
{"id": 10278, "prediction": "Create a binary image of the given number of bits"}
{"id": 10279, "prediction": "Create a DirectColorModel based on the passed in pixelBits ."}
{"id": 10280, "prediction": "Set the queue search algorithm ."}
{"id": 10281, "prediction": "Perform a depth bounded search starting from the specified initial search state ."}
{"id": 10282, "prediction": "Executes the specified search using the specified parameters ."}
{"id": 10283, "prediction": "Main entry point for the Prolog parser ."}
{"id": 10284, "prediction": "Returns the clause of this sentence ."}
{"id": 10285, "prediction": "Generate code for a list of terms ."}
{"id": 10286, "prediction": "Returns a Functor term ."}
{"id": 10287, "prediction": "Returns the terminal element of the given listFunctor ."}
{"id": 10288, "prediction": "Returns all terms nested by this term ."}
{"id": 10289, "prediction": "Reads a variable declaration ."}
{"id": 10290, "prediction": "Parses an int literal ."}
{"id": 10291, "prediction": "Parses a floating - point literal ."}
{"id": 10292, "prediction": "Reads a string literal ."}
{"id": 10293, "prediction": "Returns the next directive on the stack or null if there is no such directive ."}
{"id": 10294, "prediction": "interns an operator into the symbol table ."}
{"id": 10295, "prediction": "This method initializes the built - in operator table ."}
{"id": 10296, "prediction": "Return the next token of a given type"}
{"id": 10297, "prediction": "Returns true if the next token of the given kind can be consumed otherwise returns false ."}
{"id": 10298, "prediction": "Binds the transaction session to the current thread ."}
{"id": 10299, "prediction": "Rolls back all active enlists ."}
{"id": 10300, "prediction": "Adds all elements from the iterator to the target collection ."}
{"id": 10301, "prediction": "Reserves a call point for the given length and name ."}
{"id": 10302, "prediction": "Convert hour minute second and millisecond to milliseconds ."}
{"id": 10303, "prediction": "Returns the number of years in the specified year ."}
{"id": 10304, "prediction": "Converts a ticks value to a number of hours ."}
{"id": 10305, "prediction": "Converts a number of ticks to a number of minutes ."}
{"id": 10306, "prediction": "Sets the ticks to the specified number of seconds ."}
{"id": 10307, "prediction": "Returns the number of times in the specified year set to the specified value ."}
{"id": 10308, "prediction": "Returns the number of times that a given month should be set to ."}
{"id": 10309, "prediction": "Returns the ticks with the specified date set to the specified value ."}
{"id": 10310, "prediction": "Calculate how many leap years prior to the year start ."}
{"id": 10311, "prediction": "Returns the month of the specified year ."}
{"id": 10312, "prediction": "Reads the given byte array into a ByteBlock ."}
{"id": 10313, "prediction": "Attempts to apply the given entry to the given key and return the sequence number associated with the entry ."}
{"id": 10314, "prediction": "Returns the entry associated with the given key ."}
{"id": 10315, "prediction": "Returns the displaced entry for the given cuckoo entry ."}
{"id": 10316, "prediction": "Run the hash function over the maximum size ."}
{"id": 10317, "prediction": "Called when an action button is pressed ."}
{"id": 10318, "prediction": "Set the next available state ."}
{"id": 10319, "prediction": "Sets whether or not the prev available state has changed ."}
{"id": 10320, "prediction": "Sets whether or not the state is finished ."}
{"id": 10321, "prediction": "Returns a WAMResolvingNativeMachine instance ."}
{"id": 10322, "prediction": "Returns an iterator over the variables in the sequence ."}
{"id": 10323, "prediction": "Returns the expected value of the element of the given probabilities ."}
{"id": 10324, "prediction": "Given an array of counts provide a probability estimates the probability of each item by adding up the total number to provide a probability estimate ."}
{"id": 10325, "prediction": "Set the year month day and year to the same values"}
{"id": 10326, "prediction": "This method is used to perform the sort ."}
{"id": 10327, "prediction": "Creates a URL from a string representation ."}
{"id": 10328, "prediction": "Return the current request info as a String ."}
{"id": 10329, "prediction": "Get the headers as an HTML table ."}
{"id": 10330, "prediction": "Returns an HTML table with all the cookies for the current request ."}
{"id": 10331, "prediction": "Get the request parameters as a HTML table ."}
{"id": 10332, "prediction": "Return the current request scope as an HTML table ."}
{"id": 10333, "prediction": "Returns the page scope as an HTML table ."}
{"id": 10334, "prediction": "Return the current session scope as an HTML table ."}
{"id": 10335, "prediction": "Returns the application scope as an HTML table ."}
{"id": 10336, "prediction": "Returns the user principal as an HTML table ."}
{"id": 10337, "prediction": "Render the beginning of the debug table"}
{"id": 10338, "prediction": "Generates an HTML table for the given property name and value ."}
{"id": 10339, "prediction": "Executes the specified search using the specified parameters ."}
{"id": 10340, "prediction": "Set the current screen state ."}
{"id": 10341, "prediction": "Walk over a given term ."}
{"id": 10342, "prediction": "Compares two objects to determine their relative ordering ."}
{"id": 10343, "prediction": "Updates the registry with the given internal registers ."}
{"id": 10344, "prediction": "Notifies all registered listeners that a property change event has occurred ."}
{"id": 10345, "prediction": "Removes the non - argument clause from the argument table ."}
{"id": 10346, "prediction": "Returns true if the given context is a top - level context ."}
{"id": 10347, "prediction": "Returns an array of the same size as this array or null if this array is out of bounds ."}
{"id": 10348, "prediction": "Sets the argument list ."}
{"id": 10349, "prediction": "Returns the Fixity associated with this node ."}
{"id": 10350, "prediction": "Returns true if this node is an infix node ."}
{"id": 10351, "prediction": "Compares two OpSymbol types according to their priority ."}
{"id": 10352, "prediction": "Called when a bound property is changed ."}
{"id": 10353, "prediction": "Register a work flow controller ."}
{"id": 10354, "prediction": "Returns an enum attribute factory for the specified class ."}
{"id": 10355, "prediction": "Create a factory from its fully qualified class name ."}
{"id": 10356, "prediction": "Returns the storage cell for the given variable ."}
{"id": 10357, "prediction": "Returns true if this variable is a bound variable ."}
{"id": 10358, "prediction": "Set the column attribute at the given index ."}
{"id": 10359, "prediction": "Set the row attribute for a specific row ."}
{"id": 10360, "prediction": "Returns the AttributeSet for the given column index or null if the column index is out of bounds ."}
{"id": 10361, "prediction": "Returns the row attribute for the specified row index or null ."}
{"id": 10362, "prediction": "Internal insert method ."}
{"id": 10363, "prediction": "Create a new time range type ."}
{"id": 10364, "prediction": "Creates a new StringPatternType ."}
{"id": 10365, "prediction": "Returns true if the given value is an instance of a pattern that matches this pattern ."}
{"id": 10366, "prediction": "Creates the initial context ."}
{"id": 10367, "prediction": "Updates the values of the given WAMMemoryLayout ."}
{"id": 10368, "prediction": "Returns the value of this variable ."}
{"id": 10369, "prediction": "Attempts to find the path to the goal from the forward queue ."}
{"id": 10370, "prediction": "Joins all paths up to the specified node along the specified reverse path ."}
{"id": 10371, "prediction": "Get a list of the specified block and cache it ."}
{"id": 10372, "prediction": "Get a list of properties for a named resource ."}
{"id": 10373, "prediction": "Set the batch rate ."}
{"id": 10374, "prediction": "Reads the contents of the given byte array ."}
{"id": 10375, "prediction": "Skips the specified number of bytes from the source ."}
{"id": 10376, "prediction": "gather disjunctions ."}
{"id": 10377, "prediction": "Read an int from the given byte array at the given offset ."}
{"id": 10378, "prediction": "Write an int to a byte array ."}
{"id": 10379, "prediction": "Write 24 - bit integer to a byte array ."}
{"id": 10380, "prediction": "Extracts a 24 - bit integer from a byte array ."}
{"id": 10381, "prediction": "Read a short from the byte array at the given offset ."}
{"id": 10382, "prediction": "Write a short to a byte array ."}
{"id": 10383, "prediction": "Return a new search state for the given operator ."}
{"id": 10384, "prediction": "Returns an iterator over the operators in the tree ."}
{"id": 10385, "prediction": "Returns the id of this attribute ."}
{"id": 10386, "prediction": "Returns the value of this object ."}
{"id": 10387, "prediction": "Set the value of this attribute to the given value ."}
{"id": 10388, "prediction": "Convert a string list to an array ."}
{"id": 10389, "prediction": "Convert a string array to string list"}
{"id": 10390, "prediction": "Converts a Java class name to camel case ."}
{"id": 10391, "prediction": "Converts case to lower and upper case ."}
{"id": 10392, "prediction": "get the current configuration"}
{"id": 10393, "prediction": "This method lists all handlers ."}
{"id": 10394, "prediction": "Attempts to resolve a call point from the symbol table ."}
{"id": 10395, "prediction": "Creates a new call point and adds it to the symbol table ."}
{"id": 10396, "prediction": "Returns true if the given attribute is a sub - category of this attribute ."}
{"id": 10397, "prediction": "Returns the id of the current attribute in the category tree ."}
{"id": 10398, "prediction": "Returns the value at the specified level ."}
{"id": 10399, "prediction": "Gets the last value ."}
{"id": 10400, "prediction": "Overrides the default serialization ."}
{"id": 10401, "prediction": "Deserialize an attribute value from the specified input stream ."}
{"id": 10402, "prediction": "Returns the distance between the current heuristic search node and the current heuristic search node ."}
{"id": 10403, "prediction": "Returns the mod of c by bucketSize"}
{"id": 10404, "prediction": "Add an error message ."}
{"id": 10405, "prediction": "Add an error message for the given exception ."}
{"id": 10406, "prediction": "Writes a portion of a string to the output stream ."}
{"id": 10407, "prediction": "Classifies a state ."}
{"id": 10408, "prediction": "Compares two objects according to the partial ordering function ."}
{"id": 10409, "prediction": "Returns an iterator over the ClientIterator ."}
{"id": 10410, "prediction": "Gets the log base 2 of an integer ."}
{"id": 10411, "prediction": "Converts an integer to a base 2 value ."}
{"id": 10412, "prediction": "Returns the base 10v2 logarithm of the given value ."}
{"id": 10413, "prediction": "Returns the log base10 value of a 3 byte integer ."}
{"id": 10414, "prediction": "Returns the log base10 of the given value ."}
{"id": 10415, "prediction": "Returns the log base10 value of the given long value ."}
{"id": 10416, "prediction": "Gets a count of bytes in a UTF - 32 encoded string ."}
{"id": 10417, "prediction": "Gets a row count for a long value as an unsigned integer ."}
{"id": 10418, "prediction": "Count the number of decimal digits needed for the specified integer value and scale ."}
{"id": 10419, "prediction": "Sets the head of the Functor ."}
{"id": 10420, "prediction": "Emits the given code into the given byte code machine s code area ."}
{"id": 10421, "prediction": "Set the current screen into the given panel ."}
{"id": 10422, "prediction": "Evaluates the chain of predicates and fails if one of them does not evaluate to true ."}
{"id": 10423, "prediction": "Get a property by its name and the method name ."}
{"id": 10424, "prediction": "Get a set of properties for a class name method name and a key ."}
{"id": 10425, "prediction": "Returns an iterator over the elements in the specified order ."}
{"id": 10426, "prediction": "Create the array properties if not already created ."}
{"id": 10427, "prediction": "Set the throttle rate . The throttle rate must be above 0 ."}
{"id": 10428, "prediction": "Computes the numeric value represented by the given numeric type ."}
{"id": 10429, "prediction": "Try to find the properties from the properties file referenced by the system property and the working directory ."}
{"id": 10430, "prediction": "Gets the properties using the system property ."}
{"id": 10431, "prediction": "Gets the properties from the classpath ."}
{"id": 10432, "prediction": "Gets the properties from the properties file or URL ."}
{"id": 10433, "prediction": "Removes a givenBoundedFunctor from the Traverser s parent Functor ."}
{"id": 10434, "prediction": "Returns the value of this variable ."}
{"id": 10435, "prediction": "Sets the substitution to the given term ."}
{"id": 10436, "prediction": "Creates a new priority queue that contains all the nodes in the graph ."}
{"id": 10437, "prediction": "Clean up all resources associated with this WAS server ."}
{"id": 10438, "prediction": "Append a LoggingEvent to the remote host ."}
{"id": 10439, "prediction": "Fire a connector thread ."}
{"id": 10440, "prediction": "Initializes the list of printers to their initial values ."}
{"id": 10441, "prediction": "Commits the changes made by this transaction ."}
{"id": 10442, "prediction": "Rolls back the current transaction ."}
{"id": 10443, "prediction": "Requests an operation to be applied to the transaction ."}
{"id": 10444, "prediction": "Adds a cached operation to the transaction writes cache . If the cache does not exist it will be created ."}
{"id": 10445, "prediction": "Acquires a global write lock on this transaction ."}
{"id": 10446, "prediction": "Releases the global write lock ."}
{"id": 10447, "prediction": "Attempts to enlist this resource with the current session ."}
{"id": 10448, "prediction": "Checks to see if there is more whitespaces than the selector group outer rule set with the same selector group as the provided rule set ."}
{"id": 10449, "prediction": "Inserts the specified element at the tail of this queue waiting if necessary up to the specified wait time for space to become available ."}
{"id": 10450, "prediction": "Retrieves and removes the head of this queue waiting if necessary up to the specified wait time for an element to become available ."}
{"id": 10451, "prediction": "Puts the specified element into this queue waiting if necessary for it to become available ."}
{"id": 10452, "prediction": "Inserts an element into the buffer ."}
{"id": 10453, "prediction": "Returns the next object from the source ."}
{"id": 10454, "prediction": "Get the property value as a boolean ."}
{"id": 10455, "prediction": "Get the property value as Integer ."}
{"id": 10456, "prediction": "Get the property value as a Long ."}
{"id": 10457, "prediction": "Create a new mixin that has the given name and arguments ."}
{"id": 10458, "prediction": "Set an incoming node visitor that adds the parameter set as a child of the print input and also add each defined value to the parameter map ."}
{"id": 10459, "prediction": "backtrack all successorSuccessor nodes in the tree ."}
{"id": 10460, "prediction": "Retrieve the code associated with the given call point ."}
{"id": 10461, "prediction": "Executes the given WAM compiled query and extracts the bindings from the result set ."}
{"id": 10462, "prediction": "Decodes the heap ."}
{"id": 10463, "prediction": "Capture all the fields of the specified object ."}
{"id": 10464, "prediction": "Restore an object to its original state ."}
{"id": 10465, "prediction": "Returns the value of the specified attribute for the specified class ."}
{"id": 10466, "prediction": "Store the attribute value in the field cache for the specified class ."}
{"id": 10467, "prediction": "Gets all the field names for a class"}
{"id": 10468, "prediction": "Execute the test runner commands ."}
{"id": 10469, "prediction": "Inserts the specified element into the priority queue ."}
{"id": 10470, "prediction": "Returns the next element from the queue or null if there are no more elements to poll ."}
{"id": 10471, "prediction": "Returns a new search node for the given state ."}
{"id": 10472, "prediction": "Creates a new queue of search nodes ."}
{"id": 10473, "prediction": "Walk through the terms using a depth - first traversal ."}
{"id": 10474, "prediction": "Returns a new TermWalker that provides access to the given unary predicate using the given visitor ."}
{"id": 10475, "prediction": "Returns a TermWalker that provides a depth - first search starting at the current node of the tree starting at the given visitor ."}
{"id": 10476, "prediction": "Create a positional termWalker that provides access to a unary predicate using a child term visitor ."}
{"id": 10477, "prediction": "Walk through the PositionalTermVisitor nodes starting with the named context change visitor and starting with the named positional term visitor ."}
{"id": 10478, "prediction": "Gets a set of properties from an input stream ."}
{"id": 10479, "prediction": "Loads properties from a file ."}
{"id": 10480, "prediction": "Gets the properties from a URL ."}
{"id": 10481, "prediction": "Gets the properties for a path ."}
{"id": 10482, "prediction": "Compute the grid size ."}
{"id": 10483, "prediction": "Initialize the font metrics ."}
{"id": 10484, "prediction": "Adds a PropertyChangeListener to the list of listeners ."}
{"id": 10485, "prediction": "Adds a property change listener to the list ."}
{"id": 10486, "prediction": "Remove a PropertyChangeListener ."}
{"id": 10487, "prediction": "Fires a PropertyChangeEvent to all listeners ."}
{"id": 10488, "prediction": "Create a new double range type ."}
{"id": 10489, "prediction": "Fade a color with the specified name ."}
{"id": 10490, "prediction": "Shows the vertical bar ."}
{"id": 10491, "prediction": "Shows the left vertical bar ."}
{"id": 10492, "prediction": "Shows the right vertical bar ."}
{"id": 10493, "prediction": "Sanitize radio controls so that only one of them can be selected ."}
{"id": 10494, "prediction": "Waits until the condition is satisfied or the thread is interrupted ."}
{"id": 10495, "prediction": "Waits until the condition is met ."}
{"id": 10496, "prediction": "Execute all of the test runner commands ."}
{"id": 10497, "prediction": "Append the classpath elements to the command line ."}
{"id": 10498, "prediction": "Creates a new date range type ."}
{"id": 10499, "prediction": "Prints the contents of this package to the standard out ."}
{"id": 10500, "prediction": "Initialize the command line reader ."}
{"id": 10501, "prediction": "Evaluates a sentence and adds it to the program clause table ."}
{"id": 10502, "prediction": "Reads the query from the input and evaluates the solutions ."}
{"id": 10503, "prediction": "Returns the set of data types that can be converted to boolean ."}
{"id": 10504, "prediction": "Gets the multi - type data for the given byte value ."}
{"id": 10505, "prediction": "Gets the multi - type data for a given character ."}
{"id": 10506, "prediction": "Gets the multi - type data for a given short ."}
{"id": 10507, "prediction": "Gets the multi - type data associated with an integer ."}
{"id": 10508, "prediction": "Returns a set of data that can be converted to a long ."}
{"id": 10509, "prediction": "Gets the set of data that can be converted to a float ."}
{"id": 10510, "prediction": "Gets the multi - type data for the given double value ."}
{"id": 10511, "prediction": "Converts a string to a multi - type data ."}
{"id": 10512, "prediction": "Returns the set of data that can be converted to a multi - type data object ."}
{"id": 10513, "prediction": "Get the value of a specific type from a MultiTypeData object ."}
{"id": 10514, "prediction": "Sets an attribute in the page context ."}
{"id": 10515, "prediction": "Clears the entire map up to the specified key ."}
{"id": 10516, "prediction": "Expand the size of the data array by the size of the specified key ."}
{"id": 10517, "prediction": "Inserts the specified character and row into the table ."}
{"id": 10518, "prediction": "Compares two objects based on their path cost ."}
{"id": 10519, "prediction": "Parses a set of operators into a single term ."}
{"id": 10520, "prediction": "Get the operators matching the given name ."}
{"id": 10521, "prediction": "Checks if the candidate is one of the fixities and throws a SourceCodeException if it is ."}
{"id": 10522, "prediction": "Creates a new search node from this node and the successor node ."}
{"id": 10523, "prediction": "right pad a string with a certain number of characters ."}
{"id": 10524, "prediction": "Returns an empty string if there are no errors ."}
{"id": 10525, "prediction": "Gets the options in force ."}
{"id": 10526, "prediction": "Get the usage string for the command line options ."}
{"id": 10527, "prediction": "Add trailing key value pairs to properties ."}
{"id": 10528, "prediction": "Adds options to a set of properties ."}
{"id": 10529, "prediction": "Adds an option to the command line ."}
{"id": 10530, "prediction": "Takes free arguments as system properties ."}
{"id": 10531, "prediction": "Checks if the given argument is of the desired format and throws an exception if it is ."}
{"id": 10532, "prediction": "Compares the iterators using the mapping function ."}
{"id": 10533, "prediction": "Returns an enumeration of options for this algorithm ."}
{"id": 10534, "prediction": "Returns the command line options for this parser ."}
{"id": 10535, "prediction": "Set the stemmer to the selected tag ."}
{"id": 10536, "prediction": "Get the actual stemmer ."}
{"id": 10537, "prediction": "Get the stemmer of a word"}
{"id": 10538, "prediction": "The entry point when the program starts ."}
{"id": 10539, "prediction": "Creates a new FloatRangeType ."}
{"id": 10540, "prediction": "Resets the opcode stack to its initial state ."}
{"id": 10541, "prediction": "Trace the environment frame for the trace ."}
{"id": 10542, "prediction": "Trace the frame of the choice table ."}
{"id": 10543, "prediction": "Call an internal function ."}
{"id": 10544, "prediction": "Returns the next stack frame in the frame stack ."}
{"id": 10545, "prediction": "backtrack to the top of stack"}
{"id": 10546, "prediction": "Add a data point to the trail table"}
{"id": 10547, "prediction": "Converts int a1 to int a2 ."}
{"id": 10548, "prediction": "Tidy down to the root of the trail ."}
{"id": 10549, "prediction": "Return true if the first element of the stack matches the second element ."}
{"id": 10550, "prediction": "Return whether or not the given argument is a constant of the given type ."}
{"id": 10551, "prediction": "Prints a slot in the specified mode ."}
{"id": 10552, "prediction": "Get a random start state object ."}
{"id": 10553, "prediction": "Returns true if the specified state is a valid state ."}
{"id": 10554, "prediction": "Get a copy of the current state for the given operator and return it ."}
{"id": 10555, "prediction": "Returns an iterator of valid operators ."}
{"id": 10556, "prediction": "Returns a pretty - printed representation of the board ."}
{"id": 10557, "prediction": "Swaps the tile to location counting illegal swaps ."}
{"id": 10558, "prediction": "Swaps the tiles at the specified positions ."}
{"id": 10559, "prediction": "Convert a string representation of a char to a list of characters ."}
{"id": 10560, "prediction": "Convert a list of characters to a state ."}
{"id": 10561, "prediction": "Generates a log4j message for the given log record ."}
{"id": 10562, "prediction": "Converts java . util . Level to org . apache . log4j . Level"}
{"id": 10563, "prediction": "Adds a record to the requeue and associates it with the element ."}
{"id": 10564, "prediction": "Adds a record to the reQueuedElementMap for the given element ."}
{"id": 10565, "prediction": "Increments the size and the count ."}
{"id": 10566, "prediction": "Decrements the size of a record and adds it to the queue if necessary ."}
{"id": 10567, "prediction": "Signals that the given new size is within the low and high water size threshold crosses the old size ."}
{"id": 10568, "prediction": "Returns an enumeration of this context with the given name ."}
{"id": 10569, "prediction": "Returns all bindings for the specified context ."}
{"id": 10570, "prediction": "Add a property to the current environment ."}
{"id": 10571, "prediction": "Remove a property from the environment ."}
{"id": 10572, "prediction": "Runs a single iteration until the used memory count becomes stable or 500 iterations occur ."}
{"id": 10573, "prediction": "Applies a match constraint to the current rule ."}
{"id": 10574, "prediction": "Attempts to resolve the reference to a mixin with the given name ."}
{"id": 10575, "prediction": "Push a variable reference to the current context ."}
{"id": 10576, "prediction": "Set the maximum height for a given row ."}
{"id": 10577, "prediction": "Updates the max column width ."}
{"id": 10578, "prediction": "Executes the action with error handling ."}
{"id": 10579, "prediction": "Make a new node in the tree with the heuristic value of the given successor ."}
{"id": 10580, "prediction": "Executes the action and returns the forward to the error page ."}
{"id": 10581, "prediction": "Substitute the built - in transform with the symbol table in the given clause ."}
{"id": 10582, "prediction": "Sets up the symbol table for the given clause ."}
{"id": 10583, "prediction": "Walks through the parse tree looking for top - level checks ."}
{"id": 10584, "prediction": "Returns a string representation of the arguments as a list of strings ."}
{"id": 10585, "prediction": "Computes whether the first number is greater than the second number ."}
{"id": 10586, "prediction": "The entry point into the running state ."}
{"id": 10587, "prediction": "Terminate the JVM ."}
{"id": 10588, "prediction": "Signals that the shutdown process has completed ."}
{"id": 10589, "prediction": "Inserts an element into the queue ."}
{"id": 10590, "prediction": "Ceiling log2 ."}
{"id": 10591, "prediction": "Updates the minimum node according to the comparator s comparator ."}
{"id": 10592, "prediction": "Compares two nodes according to their natural ordering ."}
{"id": 10593, "prediction": "Inserts a new node into the root list ."}
{"id": 10594, "prediction": "Restart the sweep thread ."}
{"id": 10595, "prediction": "Returns a set of objects matching the specified search method ."}
{"id": 10596, "prediction": "Returns all objects that match the specified search method ."}
{"id": 10597, "prediction": "Finds all solutions of the specified method in the specified collection and adds them to the specified result collection ."}
{"id": 10598, "prediction": "Returns the next element from the source iterator or null if the source iterator is exhausted ."}
{"id": 10599, "prediction": "This method restores all the cached values of an object to its original values ."}
{"id": 10600, "prediction": "Returns the value of the specified property on the specified class ."}
{"id": 10601, "prediction": "Stores a value for a specified property ."}
{"id": 10602, "prediction": "Stores an object value under the specified property name ."}
{"id": 10603, "prediction": "Captures the properties of the object and build a memento for it ."}
{"id": 10604, "prediction": "Removes and returns the first element from the queue ."}
{"id": 10605, "prediction": "Returns a string representation of the modifiers ."}
{"id": 10606, "prediction": "Converts a string to an integer ."}
{"id": 10607, "prediction": "Converts a string to a Date ."}
{"id": 10608, "prediction": "Returns true if the specified string is a valid date ."}
{"id": 10609, "prediction": "Returns true if the specified string is a valid time string ."}
{"id": 10610, "prediction": "Returns true if the specified string is a valid date time format ."}
{"id": 10611, "prediction": "Get a token source for a string ."}
{"id": 10612, "prediction": "Gets a token source from a file based on the model rules ."}
{"id": 10613, "prediction": "Gets the token source for an input stream ."}
{"id": 10614, "prediction": "Returns true if the given instruction is a constant Functor ."}
{"id": 10615, "prediction": "Returns true if the given WAM instruction represents a void variable ."}
{"id": 10616, "prediction": "Returns true if the given instruction is a non - argument instruction ."}
{"id": 10617, "prediction": "Returns the children of this node ."}
{"id": 10618, "prediction": "Get the argument at the given index ."}
{"id": 10619, "prediction": "Returns an iterator of child operators ."}
{"id": 10620, "prediction": "Returns a string representation of the arguments ."}
{"id": 10621, "prediction": "Retrieve a summary of a given schema definition ."}
{"id": 10622, "prediction": "Retrieve records ."}
{"id": 10623, "prediction": "Method to execute the SQL query ."}
{"id": 10624, "prediction": "Emits code to a given WAM machine ."}
{"id": 10625, "prediction": "set the basic type of a class"}
{"id": 10626, "prediction": "Convenience method to compile the given input stream ."}
{"id": 10627, "prediction": "Prints the binding of a variable ."}
{"id": 10628, "prediction": "Expand the result map by the given solutions ."}
{"id": 10629, "prediction": "Starts the stream ."}
{"id": 10630, "prediction": "Read the stream and process it ."}
{"id": 10631, "prediction": "Returns the current time in milliseconds"}
{"id": 10632, "prediction": "Returns the current timestamp plus the artificial tick counter incremented if necessary ."}
{"id": 10633, "prediction": "Update the play info with the provided information ."}
{"id": 10634, "prediction": "Update the play info of the specified playlist ."}
{"id": 10635, "prediction": "Render the final output ."}
{"id": 10636, "prediction": "Handles a resource request"}
{"id": 10637, "prediction": "Handles a request event ."}
{"id": 10638, "prediction": "Fire the start music request ."}
{"id": 10639, "prediction": "Start the reader thread ."}
{"id": 10640, "prediction": "Starts the reader thread ."}
{"id": 10641, "prediction": "Shuts down the connection manager ."}
{"id": 10642, "prediction": "Resets the parser ."}
{"id": 10643, "prediction": "Parse the XML stream ."}
{"id": 10644, "prediction": "Processes a single Packet ."}
{"id": 10645, "prediction": "Sets the cli option ."}
{"id": 10646, "prediction": "Create a new chat using the specified user ID and listener ."}
{"id": 10647, "prediction": "Internalizes the state of this object ."}
{"id": 10648, "prediction": "Resets the content of this view to the given map ."}
{"id": 10649, "prediction": "Sets the value of the property . If the property was already set for the same key it will be replaced ."}
{"id": 10650, "prediction": "Adds a new PacketFilter to the PacketFilter array ."}
{"id": 10651, "prediction": "Process the request ."}
{"id": 10652, "prediction": "Clears all stored properties ."}
{"id": 10653, "prediction": "Start the writer thread"}
{"id": 10654, "prediction": "Sends a packet to the server ."}
{"id": 10655, "prediction": "Return the next packet from the queue or null if there is no next packet ."}
{"id": 10656, "prediction": "Opens a stream with the configured properties ."}
{"id": 10657, "prediction": "Returns a list of all informations ."}
{"id": 10658, "prediction": "Returns true if the given descriptor has the same type as this descriptor ."}
{"id": 10659, "prediction": "Add an event life cycle listener ."}
{"id": 10660, "prediction": "Shuts down the executor and cancels the timer ."}
{"id": 10661, "prediction": "Checks to see if two files are equal ."}
{"id": 10662, "prediction": "Remove all references to a direct byte buffer ."}
{"id": 10663, "prediction": "Returns whether the entry is valid ."}
{"id": 10664, "prediction": "Returns the key with a null value mask ."}
{"id": 10665, "prediction": "Returns true if the two objects are equal ."}
{"id": 10666, "prediction": "Returns the entry with the given key or null if there is no such entry ."}
{"id": 10667, "prediction": "Resize the table to a given capacity ."}
{"id": 10668, "prediction": "Adds all mappings from the specified map to this map ."}
{"id": 10669, "prediction": "Removes the value associated with the given key from this map ."}
{"id": 10670, "prediction": "Removes the entry with the given key from the map ."}
{"id": 10671, "prediction": "Remove an entry from the table ."}
{"id": 10672, "prediction": "Adds an entry to the table ."}
{"id": 10673, "prediction": "Creates a delegate map from the given keys and the given augmentation function ."}
{"id": 10674, "prediction": "Encode a value for use in an XML attribute ."}
{"id": 10675, "prediction": "Encode a byte array as a hex string ."}
{"id": 10676, "prediction": "Encode a string to base64 ."}
{"id": 10677, "prediction": "Encodes a range of bytes into a base 64 string ."}
{"id": 10678, "prediction": "Iterate over the FilterableCollection ."}
{"id": 10679, "prediction": "Sets a controller that will be called when the track selector is active ."}
{"id": 10680, "prediction": "Sets a consumer to be called when a jump progress is received ."}
{"id": 10681, "prediction": "Set a controller that will trigger a playback change ."}
{"id": 10682, "prediction": "Set a controller that will be invoked when a volume is changes"}
{"id": 10683, "prediction": "Broadcast an available playlist to the driver ."}
{"id": 10684, "prediction": "Handle the commands associated with the player ."}
{"id": 10685, "prediction": "Handle the volume of the specified resource ."}
{"id": 10686, "prediction": "Called when a jump has been received ."}
{"id": 10687, "prediction": "Handle the select of a track ."}
{"id": 10688, "prediction": "Get the thread cache . If the cache doesn t exist a new one is created ."}
{"id": 10689, "prediction": "Get the request cache ."}
{"id": 10690, "prediction": "Gets the alt field ."}
{"id": 10691, "prediction": "Returns a filtered view of the given source map including the properties of the given include and exclude ."}
{"id": 10692, "prediction": "Returns the shard path for the given id ."}
{"id": 10693, "prediction": "Adapts a JCR session to a Session ."}
{"id": 10694, "prediction": "Attempts to invoke a method on the supplied target object with the specified method name and the specified number of arguments ."}
{"id": 10695, "prediction": "Delete a content node and all of its sub - directories ."}
{"id": 10696, "prediction": "Updates one or more properties of an entity ."}
{"id": 10697, "prediction": "Set the ping interval ."}
{"id": 10698, "prediction": "Schedules a task that will send a ping to the server . If the pingInterval is greater than 0 it will send a ping to all listeners ."}
{"id": 10699, "prediction": "Adds all options ."}
{"id": 10700, "prediction": "Returns true if the given option is present false otherwise ."}
{"id": 10701, "prediction": "Parses command line options and arguments ."}
{"id": 10702, "prediction": "Prints a usage message for an application ."}
{"id": 10703, "prediction": "Parse the command line arguments using the CLI parser ."}
{"id": 10704, "prediction": "Initializes the connection to the XMPP server ."}
{"id": 10705, "prediction": "Called when a start of the connection is received ."}
{"id": 10706, "prediction": "Returns the compression handler if the compression method is supported ."}
{"id": 10707, "prediction": "Sends compressed data to the client ."}
{"id": 10708, "prediction": "Starts the compression of the stream ."}
{"id": 10709, "prediction": "Notify all connection listeners of an error ."}
{"id": 10710, "prediction": "Notify all connection listeners of the reconnection successful ."}
{"id": 10711, "prediction": "Register a new SASLMechanism ."}
{"id": 10712, "prediction": "Returns the currently registered SASLMechanism ."}
{"id": 10713, "prediction": "Get the outputPluginBe context for the given collection of Identifications"}
{"id": 10714, "prediction": "Logs an info message and the exception ."}
{"id": 10715, "prediction": "Log an error message and the exception with error level ."}
{"id": 10716, "prediction": "Prints a log message with an exception ."}
{"id": 10717, "prediction": "Attempts to create a start event for the given Identification ."}
{"id": 10718, "prediction": "Creates a StartEvent from the given source Identification ."}
{"id": 10719, "prediction": "Notify listeners that a new string has been written ."}
{"id": 10720, "prediction": "Checks if the given resource provides this resource ."}
{"id": 10721, "prediction": "Returns true if this resource contains the given source ."}
{"id": 10722, "prediction": "Returns true if this resource provides the given list of resources ."}
{"id": 10723, "prediction": "Provide a resource with the given resource IDs ."}
{"id": 10724, "prediction": "Get a cached value ."}
{"id": 10725, "prediction": "Returns the cache key for the given keySpace columnFamily and key ."}
{"id": 10726, "prediction": "Remove a cache entry ."}
{"id": 10727, "prediction": "Puts an item in the cache ."}
{"id": 10728, "prediction": "Replies the location map ."}
{"id": 10729, "prediction": "Add a file to the location map ."}
{"id": 10730, "prediction": "Add the given file to the location map ."}
{"id": 10731, "prediction": "Adds a mechanism to the default . If the mechanism is already in the default list it will be overridden ."}
{"id": 10732, "prediction": "Adds a collection of strings to the file ."}
{"id": 10733, "prediction": "Create and start a thread that logs data from the main Reader and logs data to the GUI ."}
{"id": 10734, "prediction": "Activates this handler ."}
{"id": 10735, "prediction": "Registers the standard event listeners ."}
{"id": 10736, "prediction": "Registers an event listener with the server ."}
{"id": 10737, "prediction": "Registers a new event id with the event properties file ."}
{"id": 10738, "prediction": "Do with lock ."}
{"id": 10739, "prediction": "Unregisters an event from the event properties ."}
{"id": 10740, "prediction": "Returns true if this handler can run the given event ."}
{"id": 10741, "prediction": "Creates a new dse session using the given keyspace ."}
{"id": 10742, "prediction": "If error is null or empty returns empty optional . Otherwise returns error resource ."}
{"id": 10743, "prediction": "Send a start music request to the specified player"}
{"id": 10744, "prediction": "Stop playing music ."}
{"id": 10745, "prediction": "Create a player command"}
{"id": 10746, "prediction": "Convenient factory method to create a playlist resource ."}
{"id": 10747, "prediction": "Create an attempt to export a playlist as JSON ."}
{"id": 10748, "prediction": "Append a post fix to the URL ."}
{"id": 10749, "prediction": "Adds a query parameter to the URL ."}
{"id": 10750, "prediction": "Adds a query parameter to the URL ."}
{"id": 10751, "prediction": "Adds a query parameter to the URL"}
{"id": 10752, "prediction": "Adds a query parameter to the URL ."}
{"id": 10753, "prediction": "Get the list of playlist from an event model ."}
{"id": 10754, "prediction": "The user pressed the launch button launch the Nakamura"}
{"id": 10755, "prediction": "Checks to see if Nakamura is running or not"}
{"id": 10756, "prediction": "Returns true if this URL exists false otherwise ."}
{"id": 10757, "prediction": "This method is called when the browser button is pressed ."}
{"id": 10758, "prediction": "Method that can be used to create an icon from a file ."}
{"id": 10759, "prediction": "The main entry point for this application ."}
{"id": 10760, "prediction": "Returns a copy of this IntArray with the given values replaced ."}
{"id": 10761, "prediction": "Export the descriptor ."}
{"id": 10762, "prediction": "Get the value at the given index as a JSONResult ."}
{"id": 10763, "prediction": "Get a value from a JSONObject . If the value is not a JSONArray an exception is thrown ."}
{"id": 10764, "prediction": "Gets integer ."}
{"id": 10765, "prediction": "Gets double ."}
{"id": 10766, "prediction": "Gets the value as a string or null if the value is null ."}
{"id": 10767, "prediction": "Creates a new CommandResource and verifies the given command and capabilities ."}
{"id": 10768, "prediction": "Verifies that a given command is a supported command ."}
{"id": 10769, "prediction": "Verifies that the specified capabilities match the specified command ."}
{"id": 10770, "prediction": "Verifies the given command and capabilities ."}
{"id": 10771, "prediction": "Execute a batch of SQL statements asynchronously ."}
{"id": 10772, "prediction": "Get all subclasses of the specified class ."}
{"id": 10773, "prediction": "Returns a set of all subclasses for a given class ."}
{"id": 10774, "prediction": "Returns all classes found in the given location ."}
{"id": 10775, "prediction": "Search a directory and its subdirectories for the given class ."}
{"id": 10776, "prediction": "Searches the jar for classes and returns the URIs ."}
{"id": 10777, "prediction": "Returns the resource list as a list ."}
{"id": 10778, "prediction": "Returns the number of key - value mappings in this map ."}
{"id": 10779, "prediction": "Processes a packet and adds it to the result queue ."}
{"id": 10780, "prediction": "Returns the volume of the specified event model ."}
{"id": 10781, "prediction": "Sends an error response to the server based on the given IQ ."}
{"id": 10782, "prediction": "Create an error response"}
{"id": 10783, "prediction": "Return true if the EventModel is a target resource ."}
{"id": 10784, "prediction": "Sets whether or not the login should be enabled ."}
{"id": 10785, "prediction": "Decorates a given set ."}
{"id": 10786, "prediction": "Sets the user s name ."}
{"id": 10787, "prediction": "Set the name subscription and ask status ."}
{"id": 10788, "prediction": "Returns an unmodifiable collection of all the roster groups that contain this entry ."}
{"id": 10789, "prediction": "Append a RSM element to a query XML element ."}
{"id": 10790, "prediction": "Parse a RSM response"}
{"id": 10791, "prediction": "Filters out non - null RSM response objects ."}
{"id": 10792, "prediction": "Creates a LeavingEvent optional ."}
{"id": 10793, "prediction": "Reloads the roster ."}
{"id": 10794, "prediction": "Creates a new roster entry in the server ."}
{"id": 10795, "prediction": "Returns an unmodifiable collection of all entries in the roster ."}
{"id": 10796, "prediction": "Get the Presence for a given user s resource ."}
{"id": 10797, "prediction": "Set the presence to unavailable for offline presence requests ."}
{"id": 10798, "prediction": "Fire roster changed events ."}
{"id": 10799, "prediction": "Set the digest value for the given connection ID and password ."}
{"id": 10800, "prediction": "Generate a resource ."}
{"id": 10801, "prediction": "Convenience method to create a player request ."}
{"id": 10802, "prediction": "Gets the time passed ."}
{"id": 10803, "prediction": "Registers a listener for changes in properties ."}
{"id": 10804, "prediction": "Initialize the properties ."}
{"id": 10805, "prediction": "Reload the properties from the properties file ."}
{"id": 10806, "prediction": "Parse a StreamError XML element ."}
{"id": 10807, "prediction": "Extracts the content of the passed in mechanism element ."}
{"id": 10808, "prediction": "Parse compression methods ."}
{"id": 10809, "prediction": "Parse a PacketExtension ."}
{"id": 10810, "prediction": "Decodes a string to an object of the specified type ."}
{"id": 10811, "prediction": "Verifies whether or not the specified player has the specified capabilities ."}
{"id": 10812, "prediction": "Get the playback state of the given resource ."}
{"id": 10813, "prediction": "Returns the secret key to use for the given target string . If no secret key is set then the default secret key will be returned ."}
{"id": 10814, "prediction": "Returns true if the given string is a multiple - allowed flag ."}
{"id": 10815, "prediction": "Adds the specified value to the map . If the map previously contained a mapping for the key the old value is replaced ."}
{"id": 10816, "prediction": "Returns a set view of the keys contained in this map ."}
{"id": 10817, "prediction": "Returns a collection of the values contained in this map ."}
{"id": 10818, "prediction": "Removes all mappings with the given reference from this set ."}
{"id": 10819, "prediction": "Returns the entry with the specified key or null if the key is null ."}
{"id": 10820, "prediction": "Returns the entry hash code for the given key and value ."}
{"id": 10821, "prediction": "Returns a new entry in this map with the specified key and value ."}
{"id": 10822, "prediction": "Indicates whether the event should be displayed or not ."}
{"id": 10823, "prediction": "Set the presence of the element ."}
{"id": 10824, "prediction": "Updates the most recent presence ."}
{"id": 10825, "prediction": "Delivers a message to all registered listeners ."}
{"id": 10826, "prediction": "This method will generate the script for the supplied class ."}
{"id": 10827, "prediction": "This method initialises the output directory for the application ."}
{"id": 10828, "prediction": "Loads properties from a file ."}
{"id": 10829, "prediction": "Write a string to a file"}
{"id": 10830, "prediction": "Gets the progress ."}
{"id": 10831, "prediction": "Decorates a collection ."}
{"id": 10832, "prediction": "Scans a range of IPv4 addresses for resolved services ."}
{"id": 10833, "prediction": "Resolves the configuration ."}
{"id": 10834, "prediction": "Returns the thread pool ."}
{"id": 10835, "prediction": "Convenience method to create a stop music from a source and a target identifier ."}
{"id": 10836, "prediction": "Verify if the given event model comes from a player ."}
{"id": 10837, "prediction": "Returns the DSE cluster with the given username password and authorization id ."}
{"id": 10838, "prediction": "Adds a connection listener ."}
{"id": 10839, "prediction": "Add a PacketListener ."}
{"id": 10840, "prediction": "Adds a packet listener which is responsible for sending a packet to the server ."}
{"id": 10841, "prediction": "Notify the listeners of the new sent packet ."}
{"id": 10842, "prediction": "Adds a new PacketInterceptor to the PacketInterceptorManager ."}
{"id": 10843, "prediction": "Notifies all interceptors of the given packet ."}
{"id": 10844, "prediction": "Converts an array property to a value ."}
{"id": 10845, "prediction": "Attempts to reconnect to the server ."}
{"id": 10846, "prediction": "Get the current thread id ."}
{"id": 10847, "prediction": "Returns true if the node is valid for commit false otherwise ."}
{"id": 10848, "prediction": "Returns the key for the given value . If the value is null then a NullPointerException is thrown ."}
{"id": 10849, "prediction": "Returns the data associated with the specified object at the specified index ."}
{"id": 10850, "prediction": "Returns the next node for the specified index and thread_id ."}
{"id": 10851, "prediction": "Returns the node at the specified index of the tree ."}
{"id": 10852, "prediction": "Compare two objects ."}
{"id": 10853, "prediction": "Returns the least child of the specified node at the specified index ."}
{"id": 10854, "prediction": "Returns the node at the specified index or null if there is no such node ."}
{"id": 10855, "prediction": "Returns the next largest node whose left child is greater than the given node ."}
{"id": 10856, "prediction": "If the node is not valid and the thread_id is not null then return the most valid node . Otherwise return null ."}
{"id": 10857, "prediction": "Returns the least valid node in the given thread and index or null if none ."}
{"id": 10858, "prediction": "Copy the color from node to node with the specified index ."}
{"id": 10859, "prediction": "Returns true if the node at the given index is red ."}
{"id": 10860, "prediction": "Returns true if the node at the given index is black ."}
{"id": 10861, "prediction": "Gets the prev parent of the specified node starting from the specified index ."}
{"id": 10862, "prediction": "Returns the parent of the given node at the given index ."}
{"id": 10863, "prediction": "Returns the right child of the given node at the given index ."}
{"id": 10864, "prediction": "Returns the left child of the given node at the given index ."}
{"id": 10865, "prediction": "Rotates the right child of the specified node ."}
{"id": 10866, "prediction": "Rotates the right child of the specified node ."}
{"id": 10867, "prediction": "Do the Red - black insert ."}
{"id": 10868, "prediction": "Do the actual red - black delete ."}
{"id": 10869, "prediction": "Ensures that the index is non - null and that the o is a Comparable ."}
{"id": 10870, "prediction": "Insert a new value into this map ."}
{"id": 10871, "prediction": "Returns whether a key exists in the cache ."}
{"id": 10872, "prediction": "Returns whether the specified value is a valid value for the current thread ."}
{"id": 10873, "prediction": "Returns the value associated with the given key ."}
{"id": 10874, "prediction": "Removes the value associated with the given key from this map ."}
{"id": 10875, "prediction": "Removes all nodes from the cache ."}
{"id": 10876, "prediction": "Gets the set of keys contained in this node ."}
{"id": 10877, "prediction": "Get a collection of the values contained in this map ."}
{"id": 10878, "prediction": "Returns all the nodes in the map ."}
{"id": 10879, "prediction": "Copy all entries into the new map ."}
{"id": 10880, "prediction": "Deletes all old entries from the age list ."}
{"id": 10881, "prediction": "Removes all entries from the cache ."}
{"id": 10882, "prediction": "Activates this instance ."}
{"id": 10883, "prediction": "Get a player request from a playlist ."}
{"id": 10884, "prediction": "Initialize a roster store ."}
{"id": 10885, "prediction": "Opens a roster store ."}
{"id": 10886, "prediction": "Scans a range of IP addresses for a given IP address ."}
{"id": 10887, "prediction": "Converts a subnet address into a IPv4 address"}
{"id": 10888, "prediction": "Export the track as data ."}
{"id": 10889, "prediction": "Import from HashMap to an Optional ."}
{"id": 10890, "prediction": "Adds all classes from the given set to this application ."}
{"id": 10891, "prediction": "Execute an application ."}
{"id": 10892, "prediction": "Prints the contents of the list ."}
{"id": 10893, "prediction": "Prints the usage of the stg ."}
{"id": 10894, "prediction": "The entry point when the program starts ."}
{"id": 10895, "prediction": "Create a MuteEvent if target is not null and the source is not null ."}
{"id": 10896, "prediction": "Returns the MuteEvent for a given Identification ."}
{"id": 10897, "prediction": "Get a schema by its name ."}
{"id": 10898, "prediction": "Writes a list of lines to a file ."}
{"id": 10899, "prediction": "Determines if this class is in an executable JAR ."}
{"id": 10900, "prediction": "Adds an application option ."}
{"id": 10901, "prediction": "Get a sorted list of good Will schema fields ."}
{"id": 10902, "prediction": "Gets a field by its name ."}
{"id": 10903, "prediction": "Returns the name of the specified jar entry ."}
{"id": 10904, "prediction": "Returns an ImmutableMap where the key is the key and the value is the value ."}
{"id": 10905, "prediction": "Creates an event with descriptor description and ID ."}
{"id": 10906, "prediction": "Sets the state of this Iterative ."}
{"id": 10907, "prediction": "Iterate over the supplied collection ."}
{"id": 10908, "prediction": "Do an iteration of an iterator ."}
{"id": 10909, "prediction": "Retrieve the track information from an event model ."}
{"id": 10910, "prediction": "Export the file into a HashMap ."}
{"id": 10911, "prediction": "Imports a Progress from a ResourceModel ."}
{"id": 10912, "prediction": "Create an error image from the given lines ."}
{"id": 10913, "prediction": "Get image from url ."}
{"id": 10914, "prediction": "Send a GET request to the specified URL ."}
{"id": 10915, "prediction": "Reverse all the mappings in the source map to the target map ."}
{"id": 10916, "prediction": "Compute the multiplications ."}
{"id": 10917, "prediction": "Starts the background thread ."}
{"id": 10918, "prediction": "Return this object to pool ."}
{"id": 10919, "prediction": "Returns an EndedEvent for the given Identification ."}
{"id": 10920, "prediction": "Get the current trackInfo from the queue ."}
{"id": 10921, "prediction": "Update the list of playback modes in the queue ."}
{"id": 10922, "prediction": "Shuffles the track list ."}
{"id": 10923, "prediction": "Verifies that the specified playback capabilities are supported ."}
{"id": 10924, "prediction": "Export the state of the state machine ."}
{"id": 10925, "prediction": "Escapes a string so that it is valid for an XML - encoded string ."}
{"id": 10926, "prediction": "Called when a challenge is received from the server ."}
{"id": 10927, "prediction": "Convert this model to a JSON string ."}
{"id": 10928, "prediction": "Processes the event and generates the output extensions ."}
{"id": 10929, "prediction": "Handle an event"}
{"id": 10930, "prediction": "Joins all the queues ."}
{"id": 10931, "prediction": "Set a property by name and value ."}
{"id": 10932, "prediction": "Remove a property from the authorizable map ."}
{"id": 10933, "prediction": "Adds a principal to this principal group ."}
{"id": 10934, "prediction": "Remove a principal from the set of principals ."}
{"id": 10935, "prediction": "Notification that the root window is closing ."}
{"id": 10936, "prediction": "This method is called when the user isEncountered to check for a response descriptor ."}
{"id": 10937, "prediction": "Called when an event is received from the presence service ."}
{"id": 10938, "prediction": "Returns true if the given resource isPermanent ."}
{"id": 10939, "prediction": "Sets the name of the roster ."}
{"id": 10940, "prediction": "Returns true if this set contains the specified key false otherwise ."}
{"id": 10941, "prediction": "Returns true if the specified value is present in this set false otherwise ."}
{"id": 10942, "prediction": "Associates the specified value with the specified key in this map . If the map previously contained a mapping for the key the old value is replaced by the specified value ."}
{"id": 10943, "prediction": "Removes all entries from this hash map ."}
{"id": 10944, "prediction": "Returns a hash of the specified key ."}
{"id": 10945, "prediction": "Compares two keys for equality ."}
{"id": 10946, "prediction": "Compares two values for equality ."}
{"id": 10947, "prediction": "Ensures that the new capacity is at least the old capacity ."}
{"id": 10948, "prediction": "Calculates the next possible new capacity ."}
{"id": 10949, "prediction": "Creates an iterator over the entries of this map ."}
{"id": 10950, "prediction": "Loads an object from a stream ."}
{"id": 10951, "prediction": "Registers all content Generators ."}
{"id": 10952, "prediction": "Initialize the add - on ."}
{"id": 10953, "prediction": "Notifies all connection listeners that a reconnection failed ."}
{"id": 10954, "prediction": "Notifies the listeners about the attempt to reconnect in ."}
