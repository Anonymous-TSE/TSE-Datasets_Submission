{"id": 0, "prediction": "Send a path to the queue ."}
{"id": 2, "prediction": "Returns a sorted set of elements in the sorted order ."}
{"id": 4, "prediction": "Creates a new unicast processor ."}
{"id": 6, "prediction": "Try to parse a Publisher to a Publisher"}
{"id": 8, "prediction": "Resets the state ."}
{"id": 10, "prediction": "Creates a new instance from a single source ."}
{"id": 12, "prediction": "Requests that the object is not null ."}
{"id": 14, "prediction": "Converts a value to a Callable ."}
{"id": 16, "prediction": "Cast function to cast function ."}
{"id": 18, "prediction": "Creates a new UnicastSubject ."}
{"id": 20, "prediction": "Creates a new unicast subject ."}
{"id": 22, "prediction": "Throws an exception when the timeout is reached ."}
{"id": 24, "prediction": "Drains max loop ."}
{"id": 26, "prediction": "Called when the subscriber completes ."}
{"id": 28, "prediction": "Returns the value of the notification property ."}
{"id": 30, "prediction": "Validates that the given object is not null ."}
{"id": 32, "prediction": "Checks if the next Subscription is valid ."}
{"id": 34, "prediction": "Add a value to a long ."}
{"id": 36, "prediction": "Add a long to the array ."}
{"id": 38, "prediction": "Add an object to the list ."}
{"id": 40, "prediction": "Creates a new ScheduledExecutorService ."}
{"id": 42, "prediction": "Emit all elements from the queue ."}
{"id": 44, "prediction": "Convert a Throwable to a list of Throwable objects"}
{"id": 46, "prediction": "Clears all resources ."}
{"id": 48, "prediction": "Try to see if the given source is null ."}
{"id": 50, "prediction": "Accepts a notification ."}
{"id": 52, "prediction": "Start the subscription ."}
{"id": 54, "prediction": "Inserts an item into queue ."}
{"id": 56, "prediction": "Completes the supplied value ."}
{"id": 58, "prediction": "Completes the pending state ."}
{"id": 60, "prediction": "Creates a concatenated iterable over the elements of the given iterable ."}
{"id": 62, "prediction": "Waits for a PerformsConsumer ."}
{"id": 64, "prediction": "Adds a subscription to the repository ."}
{"id": 66, "prediction": "Observes a flowable on the scheduler ."}
{"id": 68, "prediction": "Sets the delay ."}
{"id": 70, "prediction": "Calculates the delay for a given time unit ."}
{"id": 72, "prediction": "Returns the HttpMethod instance of the given method ."}
{"id": 74, "prediction": "Encodes the given password ."}
{"id": 76, "prediction": "Check the version of the Spring Security Core Security Core ."}
{"id": 78, "prediction": "Gets the Spring security core version ."}
{"id": 80, "prediction": "Creates a new OAuth2 client configurer ."}
{"id": 82, "prediction": "Retrieves the ChannelMatcher for the given request ."}
{"id": 84, "prediction": "Retrieve an entry ."}
{"id": 86, "prediction": "Search for multiple attributes ."}
{"id": 88, "prediction": "Builds a new SearchControls ."}
{"id": 90, "prediction": "Build the preAuthenticationDetails ."}
{"id": 92, "prediction": "Create the servlet api filter ."}
{"id": 94, "prediction": "Creates default type resolver ."}
{"id": 96, "prediction": "Gets a token for a specific series ."}
{"id": 98, "prediction": "Creates a new Cipher object ."}
{"id": 100, "prediction": "Performs security authentication ."}
{"id": 102, "prediction": "Performs authentication ."}
{"id": 104, "prediction": "Retrieves the set of authorities ."}
{"id": 106, "prediction": "Update authentication defaults ."}
{"id": 108, "prediction": "Maps a password to a string ."}
{"id": 110, "prediction": "Encode cookie ."}
{"id": 112, "prediction": "Resolve the security context ."}
{"id": 114, "prediction": "Gets the service port ."}
{"id": 116, "prediction": "Logs out the session ."}
{"id": 118, "prediction": "Build provider url ."}
{"id": 120, "prediction": "Gets the redirect url ."}
{"id": 122, "prediction": "Initialize the UserDetails service ."}
{"id": 124, "prediction": "Add additional parameters to the map ."}
{"id": 126, "prediction": "Checks if ticket request is ticket ."}
{"id": 128, "prediction": "Returns true if the authentication token is authenticated ."}
{"id": 130, "prediction": "Create the security expression root ."}
{"id": 132, "prediction": "Encodes the given string using UTF - 8 encoding ."}
{"id": 134, "prediction": "Load user details ."}
{"id": 136, "prediction": "Concatenate array ."}
{"id": 138, "prediction": "Get a list of all the attributes of the given collection ."}
{"id": 140, "prediction": "Gets a collection of granted authority ."}
{"id": 142, "prediction": "Gets the preAuthenticated principal ."}
{"id": 144, "prediction": "Build the redirect url for the request ."}
{"id": 146, "prediction": "Checks if the role has a role"}
{"id": 148, "prediction": "Retrieves the auto login credentials for the given user ."}
{"id": 150, "prediction": "Attempt to attempt a switch to a user ."}
{"id": 152, "prediction": "Sets the exit user ."}
{"id": 154, "prediction": "Apply the Spring SecurityFilter to the Spring SecurityFilter ."}
{"id": 156, "prediction": "Opens an access expression ."}
{"id": 158, "prediction": "Converts the given JWT to JWT ."}
{"id": 160, "prediction": "Display admin page ."}
{"id": 162, "prediction": "Add a permission ."}
{"id": 164, "prediction": "Returns the role with the given prefix ."}
{"id": 166, "prediction": "Returns the values of the given attribute ."}
{"id": 168, "prediction": "Encodes a string into a byte array ."}
{"id": 170, "prediction": "Looks up the parameter names for the given parameter ."}
{"id": 172, "prediction": "Finds all attributes matching the given method ."}
{"id": 174, "prediction": "Get all config attributes ."}
{"id": 176, "prediction": "Configures the current request ."}
{"id": 178, "prediction": "Returns a random contact ."}
{"id": 180, "prediction": "Returns the field with the given name ."}
{"id": 182, "prediction": "Create redirect url ."}
{"id": 184, "prediction": "Sets the preauthenticated entry point ."}
{"id": 186, "prediction": "Returns the list of registered types ."}
{"id": 188, "prediction": "Register access manager ."}
{"id": 190, "prediction": "Checks if two bytes are equal ."}
{"id": 192, "prediction": "Resolve hidden inputs ."}
{"id": 194, "prediction": "Checks if the given URL is absolute ."}
{"id": 196, "prediction": "Convert an identifier to a serializable identifier ."}
{"id": 198, "prediction": "Creates an object identity ."}
{"id": 200, "prediction": "Save the request ."}
{"id": 202, "prediction": "Matches a server exchange ."}
{"id": 204, "prediction": "Creates a TextEncryptEncryptEncryptor ."}
{"id": 206, "prediction": "Write headers ."}
{"id": 208, "prediction": "Determine the target URL based on the request parameters ."}
{"id": 210, "prediction": "Gets the directory with the given id ."}
{"id": 212, "prediction": "Creates a map of shared objects ."}
{"id": 214, "prediction": "Get the current date ."}
{"id": 216, "prediction": "Update cache ."}
{"id": 218, "prediction": "Determines the security name for a subject ."}
{"id": 220, "prediction": "Change the password ."}
{"id": 222, "prediction": "Called when the session is exceeded ."}
{"id": 224, "prediction": "Returns the list of filters for the given request ."}
{"id": 226, "prediction": "Gets the application context ."}
{"id": 228, "prediction": "Sets the session attributes ."}
{"id": 230, "prediction": "Adds a list of filters to the list ."}
{"id": 232, "prediction": "Creates a basic authentication scheme ."}
{"id": 234, "prediction": "Creates a form using the given username and password ."}
{"id": 236, "prediction": "Prints a response ."}
{"id": 238, "prediction": "Provides a default encoding for encoding parameters ."}
{"id": 240, "prediction": "Creates a JAXBObjectMapper for the given JAXBObject ."}
{"id": 242, "prediction": "Create a mock mock config ."}
{"id": 244, "prediction": "Creates a mock configured mock config ."}
{"id": 246, "prediction": "Create a mock encoder config ."}
{"id": 248, "prediction": "Creates a mock config for the given async config ."}
{"id": 250, "prediction": "Creates a mock mock config ."}
{"id": 252, "prediction": "Create a mock mock mock configuration ."}
{"id": 254, "prediction": "Declare a namespace config ."}
{"id": 1, "prediction": "Wrap an observable ."}
{"id": 3, "prediction": "Observes a synchronous observable from the scheduler ."}
{"id": 5, "prediction": "Creates a new unicast processor ."}
{"id": 7, "prediction": "Creates an iterable over a scalar map ."}
{"id": 9, "prediction": "Creates a new instance from a CompletableSource ."}
{"id": 11, "prediction": "Performs a retry operation ."}
{"id": 13, "prediction": "Creates a function identity ."}
{"id": 15, "prediction": "Creates a new Function with the given value ."}
{"id": 17, "prediction": "Creates a new unicast subject ."}
{"id": 19, "prediction": "Creates a new unicast subject ."}
{"id": 21, "prediction": "Gets the error ."}
{"id": 23, "prediction": "Waits for the specified timeout ."}
{"id": 25, "prediction": "Requests the given subscription to the given subscription ."}
{"id": 27, "prediction": "Completes the output ."}
{"id": 29, "prediction": "Gets the error ."}
{"id": 31, "prediction": "Sets the next reference to the given atomic reference ."}
{"id": 33, "prediction": "Sets the next SubReference to the given AtomicReference ."}
{"id": 35, "prediction": "Multiply a long value by b ."}
{"id": 37, "prediction": "Converts a Throwable to a NullPointerException ."}
{"id": 39, "prediction": "Shuts down the pipeline ."}
{"id": 41, "prediction": "Sets the subscription ."}
{"id": 43, "prediction": "Wrap a RuntimeException ."}
{"id": 45, "prediction": "Throws an exception if an exception is thrown ."}
{"id": 47, "prediction": "Returns the number of resources ."}
{"id": 49, "prediction": "Creates a new scalar map for the given value ."}
{"id": 51, "prediction": "Determines whether an observer is accepted ."}
{"id": 53, "prediction": "Starts the queue ."}
{"id": 55, "prediction": "Get the resource ."}
{"id": 57, "prediction": "Called when an error occurs ."}
{"id": 59, "prediction": "Creates a ConcatMapDelayDelay error message ."}
{"id": 61, "prediction": "Sort the elements in descending order ."}
{"id": 63, "prediction": "Request a subscription ."}
{"id": 65, "prediction": "Removes the PubDisposable from the repository ."}
{"id": 67, "prediction": "Parse the annotations from the request ."}
{"id": 69, "prediction": "Creates an error response ."}
{"id": 71, "prediction": "Create sample data ."}
{"id": 73, "prediction": "Searches for a user ."}
{"id": 75, "prediction": "Checks if the given encoded password matches the given password ."}
{"id": 77, "prediction": "Determines whether the Spring SecurityVersion should be disabled or not ."}
{"id": 79, "prediction": "Add an attribute configurer for the given identifier ."}
{"id": 81, "prediction": "Configures the OAuth2 resource configurer for the given authentication ."}
{"id": 83, "prediction": "Compare two dnap attributes ."}
{"id": 85, "prediction": "Searches for multiple attributes of a single attribute ."}
{"id": 87, "prediction": "Searches for a single entry ."}
{"id": 89, "prediction": "Look up all primary keys in the database ."}
{"id": 91, "prediction": "Creates embedded server ."}
{"id": 93, "prediction": "Creates the JAAS API ."}
{"id": 95, "prediction": "Registers the spring security filter chain ."}
{"id": 97, "prediction": "Get a list of all the authorities that have been granted ."}
{"id": 99, "prediction": "Checks if the AuthenticationManager is set ."}
{"id": 101, "prediction": "Checks if the current principal is changed ."}
{"id": 103, "prediction": "Checks the content of the response ."}
{"id": 105, "prediction": "Sets the login processing url ."}
{"id": 107, "prediction": "Update the access restrictions ."}
{"id": 109, "prediction": "Extract the cookie from the request"}
{"id": 111, "prediction": "Sets the cookie ."}
{"id": 113, "prediction": "Gets the query string ."}
{"id": 115, "prediction": "Gets the principal ."}
{"id": 117, "prediction": "Authenticate the given user ."}
{"id": 119, "prediction": "Sets the environment properties ."}
{"id": 121, "prediction": "End tag ."}
{"id": 123, "prediction": "Gets the userDetails service ."}
{"id": 125, "prediction": "Checks if the request is required ."}
{"id": 127, "prediction": "Determines if the request is a proxy ticket ."}
{"id": 129, "prediction": "Checks if the request is a proxy ."}
{"id": 131, "prediction": "Gets the JWK set ."}
{"id": 133, "prediction": "Get the collection of WebSphere Groups based on the current user ."}
{"id": 135, "prediction": "Gets the preAuthenticated principal ."}
{"id": 137, "prediction": "Creates a copy of a byte array ."}
{"id": 139, "prediction": "Preprocess the given map ."}
{"id": 141, "prediction": "Adds a granted result collection ."}
{"id": 143, "prediction": "Gets the shared object ."}
{"id": 145, "prediction": "Invokes the interceptor method ."}
{"id": 147, "prediction": "Checks if the given array has any of the given roles ."}
{"id": 149, "prediction": "On login ."}
{"id": 151, "prediction": "Attempts to attempt an exit from the source ."}
{"id": 153, "prediction": "Display public index ."}
{"id": 155, "prediction": "Decodes the given token ."}
{"id": 157, "prediction": "Performs authentication check ."}
{"id": 159, "prediction": "Generate a CSRF token ."}
{"id": 161, "prediction": "Display the permission for a contact ."}
{"id": 163, "prediction": "Deletes a permission ."}
{"id": 165, "prediction": "Creates a new user details from a string ."}
{"id": 167, "prediction": "Returns the first attribute value for the given name ."}
{"id": 169, "prediction": "Decode a byte array ."}
{"id": 171, "prediction": "Add contact ."}
{"id": 173, "prediction": "Add secure method ."}
{"id": 175, "prediction": "Checks if the given method name matches the mapped method name ."}
{"id": 177, "prediction": "Handle bind exception ."}
{"id": 179, "prediction": "Clear authentication attributes ."}
{"id": 181, "prediction": "Create service url ."}
{"id": 183, "prediction": "Extracts the SHA prefix from the SHA - 1 ."}
{"id": 185, "prediction": "Checks if the filters are duplicated ."}
{"id": 187, "prediction": "Extracts the cause of the given throwable ."}
{"id": 189, "prediction": "Convert a collection of user authorities to a list ."}
{"id": 191, "prediction": "Sets the default failure URL ."}
{"id": 193, "prediction": "Build request url ."}
{"id": 195, "prediction": "Creates a list of OpenID attributes ."}
{"id": 197, "prediction": "Create entries ."}
{"id": 199, "prediction": "Update object identity ."}
{"id": 201, "prediction": "Returns a matcher that matches the given pattern ."}
{"id": 203, "prediction": "Creates a TextEncryptEncryptor ."}
{"id": 205, "prediction": "Creates a TextEncryptor from the given salt password ."}
{"id": 207, "prediction": "Determine the target URL ."}
{"id": 209, "prediction": "Sets the target URL parameter ."}
{"id": 211, "prediction": "Builds a DNnName from a username ."}
{"id": 213, "prediction": "Configure jaas ."}
{"id": 215, "prediction": "Internal method to parse a date string ."}
{"id": 217, "prediction": "Sets the details of the authentication ."}
{"id": 219, "prediction": "Returns the list of WebSphere Groups for the given security name ."}
{"id": 221, "prediction": "Build a group name from a group ."}
{"id": 223, "prediction": "Copy the details from the given source ."}
{"id": 225, "prediction": "Returns a list of filters for the specified URL ."}
{"id": 227, "prediction": "Get the full name of a Dnname ."}
{"id": 229, "prediction": "Sets the basic authentication scheme ."}
{"id": 231, "prediction": "Adds additional filters to the given filter ."}
{"id": 233, "prediction": "Creates an authentication scheme for the given user ."}
{"id": 235, "prediction": "Specifies a proxy for a given URI ."}
{"id": 237, "prediction": "Redirects the config to the redirect config"}
{"id": 239, "prediction": "Creates a default ObjectMapper type configuration ."}
{"id": 241, "prediction": "Create a mock mock config ."}
{"id": 243, "prediction": "Creates a mock mapper config ."}
{"id": 245, "prediction": "Creates a mock mock config ."}
{"id": 247, "prediction": "Create a mockMockConfig for the given header configuration ."}
{"id": 249, "prediction": "Creates a mock config for the mock configuration ."}
{"id": 251, "prediction": "Creates a mock mock config ."}
{"id": 253, "prediction": "Allow to allow all certificates to be used ."}
{"id": 255, "prediction": "Creates a new namespace config ."}
{"id": 256, "prediction": "Perform a HTTP request ."}
{"id": 258, "prediction": "Sets the proxy ."}
{"id": 260, "prediction": "Sets the header with the given name ."}
{"id": 262, "prediction": "Sets the NTCM"}
{"id": 264, "prediction": "Resets the state ."}
{"id": 266, "prediction": "Build the response ."}
{"id": 268, "prediction": "Matches a cookie matcher that matches a cookie ."}
{"id": 270, "prediction": "Matches a domain matcher that matches the domain ."}
{"id": 272, "prediction": "Applies the provided matcher to the security matcher ."}
{"id": 274, "prediction": "Matches the version matcher that matches the given version ."}
{"id": 276, "prediction": "Sets the response header ."}
{"id": 278, "prediction": "Expect a cookie with a cookie name"}
{"id": 280, "prediction": "Create a new JsonPathConfigType"}
{"id": 282, "prediction": "Creates default logging configuration for the given PrintStream"}
{"id": 284, "prediction": "Creates a HttpRequestBase for the given request ."}
{"id": 286, "prediction": "Add an attribute ."}
{"id": 288, "prediction": "Add multi part ."}
{"id": 290, "prediction": "Sets a new HTTP parameter ."}
{"id": 292, "prediction": "Configures the HttpClientFactory ."}
{"id": 294, "prediction": "Retrieves an instance of the given path ."}
{"id": 296, "prediction": "Returns the byte value for the given path ."}
{"id": 298, "prediction": "Returns the float value for the given path ."}
{"id": 300, "prediction": "Gets a long value from the given path ."}
{"id": 302, "prediction": "Returns a map containing the given path ."}
{"id": 304, "prediction": "Sets the request body ."}
{"id": 306, "prediction": "Adds a parameter to the request ."}
{"id": 308, "prediction": "Creates a form parameter update ."}
{"id": 310, "prediction": "Creates a new cookies with the specified cookies ."}
{"id": 312, "prediction": "Index all bindings ."}
{"id": 314, "prediction": "Convert a string to a constant binding ."}
{"id": 316, "prediction": "Removes the JIT binding from the given injection point ."}
{"id": 318, "prediction": "Creates a binding for the given key ."}
{"id": 320, "prediction": "Binds an injector to the supplier ."}
{"id": 322, "prediction": "Helper method to check whether the binding annotations are misplaced ."}
{"id": 324, "prediction": "Initializes the delegate ."}
{"id": 326, "prediction": "Resolves all types in the given array ."}
{"id": 328, "prediction": "Prepare the type converter ."}
{"id": 330, "prediction": "Returns true if the cglib is the same as the class loader"}
{"id": 332, "prediction": "Fix annotations ."}
{"id": 334, "prediction": "Validate all pending errors ."}
{"id": 336, "prediction": "Creates a servletRequest with the given servlet ."}
{"id": 338, "prediction": "Make an injectable to inject scopes ."}
{"id": 340, "prediction": "Generate an annotation ."}
{"id": 342, "prediction": "Finds the scope annotation ."}
{"id": 344, "prediction": "Returns the name of the given key ."}
{"id": 346, "prediction": "Adds the binding binding ."}
{"id": 348, "prediction": "Checks if the given interceptor class is scope ."}
{"id": 350, "prediction": "Gets the key for the given key ."}
{"id": 352, "prediction": "Writes the object to the stream ."}
{"id": 354, "prediction": "Returns a list of all of the supported data types ."}
{"id": 356, "prediction": "Checks if the given constructor matches the given parameters ."}
{"id": 358, "prediction": "Removes all dependent dependencies from the given set ."}
{"id": 360, "prediction": "Gets the binding from the given parameters ."}
{"id": 362, "prediction": "Finds the missing implementation for the given key ."}
{"id": 364, "prediction": "Gets the key for this item ."}
{"id": 366, "prediction": "Checks if the injector is annotated ."}
{"id": 368, "prediction": "Gets the internal dependencies ."}
{"id": 370, "prediction": "Gets the annotation for the given method ."}
{"id": 372, "prediction": "Initializes this instance ."}
{"id": 374, "prediction": "Transfer a callable to a callable ."}
{"id": 376, "prediction": "Gets the members of the given type ."}
{"id": 378, "prediction": "Returns a list of injectors for the given set of injection points ."}
{"id": 380, "prediction": "Creates an annotation strategy for the given annotation ."}
{"id": 382, "prediction": "Prune the stack trace ."}
{"id": 384, "prediction": "Formats a message to a list of errors ."}
{"id": 386, "prediction": "Creates a message ."}
{"id": 388, "prediction": "Convert an object to an object ."}
{"id": 390, "prediction": "Gets the value of the given module names ."}
{"id": 392, "prediction": "Adds a dependency to the current state ."}
{"id": 394, "prediction": "Creates an instance of the given instance ."}
{"id": 396, "prediction": "Event handler ."}
{"id": 398, "prediction": "Retrieves the task result from the given task state ."}
{"id": 400, "prediction": "Registers a command processor ."}
{"id": 402, "prediction": "Gets the processor ."}
{"id": 404, "prediction": "Decodes the protocol code ."}
{"id": 406, "prediction": "Scans the connection pool ."}
{"id": 408, "prediction": "Creates a connection if needed ."}
{"id": 410, "prediction": "A helper method to heal the heal if necessary ."}
{"id": 412, "prediction": "Closes a connection ."}
{"id": 414, "prediction": "Close the connection ."}
{"id": 416, "prediction": "Register a user processor ."}
{"id": 418, "prediction": "Dispatches an ASN ."}
{"id": 420, "prediction": "Pre - pre - processing context ."}
{"id": 422, "prediction": "Logs a debug message ."}
{"id": 424, "prediction": "Invokes the given request with the given callback ."}
{"id": 426, "prediction": "Converts a BitSet to a byte array ."}
{"id": 428, "prediction": "Adds a new task to the url ."}
{"id": 430, "prediction": "Converts a request to a remoting command"}
{"id": 432, "prediction": "Monitor connections ."}
{"id": 434, "prediction": "Gets the value of the system property ."}
{"id": 436, "prediction": "Returns true if the request is a timeout ."}
{"id": 438, "prediction": "Get a connection from a list of connections ."}
{"id": 440, "prediction": "Get the value of a property"}
{"id": 442, "prediction": "Converts a response to a response object ."}
{"id": 444, "prediction": "Prints the error message to the server ."}
{"id": 446, "prediction": "Print a trace log message ."}
{"id": 448, "prediction": "Parse a remote address ."}
{"id": 450, "prediction": "Parse a remote IP address ."}
{"id": 452, "prediction": "Parse a local IP address ."}
{"id": 454, "prediction": "Gets the local port ."}
{"id": 456, "prediction": "Adds a new connection ."}
{"id": 458, "prediction": "Gets the connection ."}
{"id": 460, "prediction": "Returns the custom serializer for the given class name ."}
{"id": 462, "prediction": "Returns the custom serializer for the given command code ."}
{"id": 464, "prediction": "Check if the remote address is connected ."}
{"id": 466, "prediction": "Get the Framata for the given opcode ."}
{"id": 468, "prediction": "Sets the code ."}
{"id": 470, "prediction": "Updates the payload ."}
{"id": 472, "prediction": "Translate a single frame ."}
{"id": 474, "prediction": "Generate the final key for the given string ."}
{"id": 476, "prediction": "Process a binary frame ."}
{"id": 478, "prediction": "Process a frame ."}
{"id": 480, "prediction": "Process a frame ."}
{"id": 482, "prediction": "Checks that the payload is exceeded ."}
{"id": 484, "prediction": "Returns the total number of bytes in the buffer ."}
{"id": 486, "prediction": "Translate a HttpClientHttpClient to a server"}
{"id": 488, "prediction": "Closes the connection ."}
{"id": 490, "prediction": "Generate http response from error code ."}
{"id": 492, "prediction": "Reset the socket ."}
{"id": 494, "prediction": "Returns the port of the web socket ."}
{"id": 496, "prediction": "Sets the connection timeout ."}
{"id": 498, "prediction": "Start the connection timer ."}
{"id": 500, "prediction": "Called when a connection is lost ."}
{"id": 502, "prediction": "Invoked when a handshake is received ."}
{"id": 504, "prediction": "Stop all connections ."}
{"id": 506, "prediction": "Reads the next read ."}
{"id": 508, "prediction": "Reads a key ."}
{"id": 510, "prediction": "Setup the server ."}
{"id": 257, "prediction": "Sets the headers ."}
{"id": 259, "prediction": "Sets the name of the control ."}
{"id": 261, "prediction": "Sets the basic auth token ."}
{"id": 263, "prediction": "Creates a new headers from the given headers ."}
{"id": 265, "prediction": "Sets a header ."}
{"id": 267, "prediction": "Returns a Matcher that matches the given value ."}
{"id": 269, "prediction": "Matches an expiry date ."}
{"id": 271, "prediction": "Matches a path matcher that matches the given path ."}
{"id": 273, "prediction": "Matches a HttpMatcher that matches the httpMatcher ."}
{"id": 275, "prediction": "Matches the maxAgeMatcher that matches the cookie ."}
{"id": 277, "prediction": "Add a header to the response ."}
{"id": 279, "prediction": "Returns a new proxy specification with the given host name ."}
{"id": 281, "prediction": "Configures the default parser type ."}
{"id": 283, "prediction": "Enables logging ."}
{"id": 285, "prediction": "Creates a default MultiPartConfig for use ."}
{"id": 287, "prediction": "Add a header ."}
{"id": 289, "prediction": "Add the result handlers ."}
{"id": 291, "prediction": "Add a new http client ."}
{"id": 293, "prediction": "Configures the http client with the given HTTP request ."}
{"id": 295, "prediction": "Get an integer value from the path ."}
{"id": 297, "prediction": "Returns the short value for the given path ."}
{"id": 299, "prediction": "Returns the double value for the given path ."}
{"id": 301, "prediction": "Gets a list from a generic path ."}
{"id": 303, "prediction": "Get object from given path"}
{"id": 305, "prediction": "Adds a cookie to the request ."}
{"id": 307, "prediction": "Adds a parameter to the request ."}
{"id": 309, "prediction": "Creates a response logging filter for the given matcher ."}
{"id": 311, "prediction": "Removes all keys from the source map ."}
{"id": 313, "prediction": "Returns the binding for the given key ."}
{"id": 315, "prediction": "Cleans up the dependencies of the given key ."}
{"id": 317, "prediction": "Gets the internal dependency ."}
{"id": 319, "prediction": "Get all parameters from the given context ."}
{"id": 321, "prediction": "Binds a logger to the logger ."}
{"id": 323, "prediction": "Checks if two methods are overridden ."}
{"id": 325, "prediction": "Replies the type of the given type ."}
{"id": 327, "prediction": "Returns the type for the given type ."}
{"id": 329, "prediction": "Convert a system bridge to a class loader ."}
{"id": 331, "prediction": "Checks if a member is public or public ."}
{"id": 333, "prediction": "Request an instance of the injectable object ."}
{"id": 335, "prediction": "Creates a new instance of the given arguments ."}
{"id": 337, "prediction": "Creates a factory for the given key ."}
{"id": 339, "prediction": "Normalize the path ."}
{"id": 341, "prediction": "Returns whether or not the given annotation is retained ."}
{"id": 343, "prediction": "Gets the key from the given type ."}
{"id": 345, "prediction": "Initializes the delegate provider ."}
{"id": 347, "prediction": "Retrieves a constructor from the given injection point ."}
{"id": 349, "prediction": "New RealMapBinderBinder ."}
{"id": 351, "prediction": "Creates a new provisioned proxy instance ."}
{"id": 353, "prediction": "Creates a new module for the given module ."}
{"id": 355, "prediction": "Checks if a type is not configured ."}
{"id": 357, "prediction": "Returns the set of dependencies for the given injection point ."}
{"id": 359, "prediction": "Checks if the provided provider is valid for the given provider ."}
{"id": 361, "prediction": "Invokes the method with the specified proxy ."}
{"id": 363, "prediction": "Creates a new real set of real arguments ."}
{"id": 365, "prediction": "Find the next filter ."}
{"id": 367, "prediction": "Gets the internal constructor ."}
{"id": 369, "prediction": "Creates a module for the given module ."}
{"id": 371, "prediction": "Gets the line number ."}
{"id": 373, "prediction": "Provides a callable for a callable ."}
{"id": 375, "prediction": "Validates that the given key is canonicalized ."}
{"id": 377, "prediction": "Creates and returns the members of the given type ."}
{"id": 379, "prediction": "Creates a Key for the given annotation ."}
{"id": 381, "prediction": "Returns the strategy for the given annotation type ."}
{"id": 383, "prediction": "Gets the binding source ."}
{"id": 385, "prediction": "Creates a new message ."}
{"id": 387, "prediction": "Creates a message ."}
{"id": 389, "prediction": "Checks if the class name is skipped ."}
{"id": 391, "prediction": "Entry point for the module ."}
{"id": 393, "prediction": "Push a state to the cache ."}
{"id": 395, "prediction": "Creates a proxy for the given provider ."}
{"id": 397, "prediction": "Adds a connection event processor ."}
{"id": 399, "prediction": "Lazily throw an exception ."}
{"id": 401, "prediction": "Register a default processor ."}
{"id": 403, "prediction": "Try to get an Url for the given URL ."}
{"id": 405, "prediction": "Retrieves a map of all connections ."}
{"id": 407, "prediction": "Gets a connection pool ."}
{"id": 409, "prediction": "Removes a task from the pool ."}
{"id": 411, "prediction": "Creates a new connection ."}
{"id": 413, "prediction": "Called when a connection is closed ."}
{"id": 415, "prediction": "Sets an attribute if it s not already present ."}
{"id": 417, "prediction": "Registers a user processor ."}
{"id": 419, "prediction": "Deserialize a request ."}
{"id": 421, "prediction": "Logs the timeout ."}
{"id": 423, "prediction": "Executes the process ."}
{"id": 425, "prediction": "On the invocation ."}
{"id": 427, "prediction": "Converts an int to a BitSet ."}
{"id": 429, "prediction": "Stop this task ."}
{"id": 431, "prediction": "Removes all connections from a list of connections ."}
{"id": 433, "prediction": "Close the fresh select connections ."}
{"id": 435, "prediction": "Logs info message ."}
{"id": 437, "prediction": "Gets the user processor ."}
{"id": 439, "prediction": "Retrieves the value associated with the given key ."}
{"id": 441, "prediction": "Resolve a response object ."}
{"id": 443, "prediction": "Converts a Throwable to a Throwable ."}
{"id": 445, "prediction": "Creates an RpcServerException ."}
{"id": 447, "prediction": "Creates a new event loop group ."}
{"id": 449, "prediction": "Parse a local address ."}
{"id": 451, "prediction": "Parse the remote host name ."}
{"id": 453, "prediction": "Returns the port of the given channel ."}
{"id": 455, "prediction": "Parse an IP address from the given socket address ."}
{"id": 457, "prediction": "Remove a connection ."}
{"id": 459, "prediction": "Register a custom serializer for the given class name ."}
{"id": 461, "prediction": "Register a custom serializer"}
{"id": 463, "prediction": "Start the monitor ."}
{"id": 465, "prediction": "Initialize write buffer water mark ."}
{"id": 467, "prediction": "Batch write ."}
{"id": 469, "prediction": "Validates the payload ."}
{"id": 471, "prediction": "Checks whether the request is a handshake ."}
{"id": 473, "prediction": "Translate single frame ."}
{"id": 475, "prediction": "This method is used to process a continuous frame for a single frame ."}
{"id": 477, "prediction": "Logs a runtime exception message ."}
{"id": 479, "prediction": "Process a frame ."}
{"id": 481, "prediction": "Close the frame ."}
{"id": 483, "prediction": "Get the payload from the buffer ."}
{"id": 485, "prediction": "Translate a request to a client ."}
{"id": 487, "prediction": "Decodes the handshake ."}
{"id": 489, "prediction": "Closes the connection ."}
{"id": 491, "prediction": "Sends a text to the server ."}
{"id": 493, "prediction": "Connect to the web socket ."}
{"id": 495, "prediction": "Sends handshake ."}
{"id": 497, "prediction": "Stops connection timer ."}
{"id": 499, "prediction": "Restarts connection timeout timer ."}
{"id": 501, "prediction": "Cancel connection timeout ."}
{"id": 503, "prediction": "Sends a ping frame ."}
{"id": 505, "prediction": "Gets the current port ."}
{"id": 507, "prediction": "Accepts a new connection ."}
{"id": 509, "prediction": "Performs write operation ."}
{"id": 511, "prediction": "Ensure that the current thread is started ."}
{"id": 512, "prediction": "Close the server ."}
{"id": 514, "prediction": "Broadcast a list of bytes to a client ."}
{"id": 516, "prediction": "Broadcast the given data to the client ."}
{"id": 518, "prediction": "Transfer a ByteBuffer to another ."}
{"id": 520, "prediction": "Returns an EntityManager with the given name ."}
{"id": 522, "prediction": "Convert the given arguments to a list of arguments ."}
{"id": 524, "prediction": "Executes the given message with the given arguments ."}
{"id": 526, "prediction": "Checks if a message is defined ."}
{"id": 528, "prediction": "Set the preferred message"}
{"id": 530, "prediction": "Returns a set of bindings for this module ."}
{"id": 532, "prediction": "Define the bindings for the bindings ."}
{"id": 534, "prediction": "Sets the overrides ."}
{"id": 536, "prediction": "Disables the given modules ."}
{"id": 538, "prediction": "Calls a CompletionStage ."}
{"id": 540, "prediction": "Returns the binding for the given scope ."}
{"id": 542, "prediction": "Creates a tuple ."}
{"id": 544, "prediction": "Factory method for creating a JPAConfig ."}
{"id": 546, "prediction": "Creates a new repository from the given map ."}
{"id": 548, "prediction": "Creates a flow from a callback ."}
{"id": 550, "prediction": "Creates a new instance of the given key ."}
{"id": 552, "prediction": "Called when a client error occurs ."}
{"id": 554, "prediction": "Renders a page ."}
{"id": 556, "prediction": "Called when an error occurs ."}
{"id": 558, "prediction": "Converts a Throwable to a Useful ExceptionHandler ."}
{"id": 560, "prediction": "Handles error page ."}
{"id": 562, "prediction": "Creates a new documentation handler ."}
{"id": 564, "prediction": "Creates a new documentation handler for the given directory ."}
{"id": 566, "prediction": "Consumes the content of the given matcher ."}
{"id": 568, "prediction": "Construct a HttpEntity from a string ."}
{"id": 570, "prediction": "Returns the status of the given JSON node ."}
{"id": 572, "prediction": "Constructs a HTTP status message from a byte array ."}
{"id": 574, "prediction": "Creates a status message ."}
{"id": 576, "prediction": "Selects the preferred lang ."}
{"id": 578, "prediction": "Create a new call with the given fragment"}
{"id": 580, "prediction": "Get the web socket URL ."}
{"id": 582, "prediction": "Returns a function that applies a connection to the given connection ."}
{"id": 584, "prediction": "Convert an object to a JsonNode ."}
{"id": 586, "prediction": "Parse a JsonNode ."}
{"id": 588, "prediction": "Returns the relative path relative to the target path ."}
{"id": 590, "prediction": "Retrieves a list of constraints for a given set of constraints ."}
{"id": 592, "prediction": "Sets the given duration to the given duration ."}
{"id": 594, "prediction": "Parse a cron expression ."}
{"id": 596, "prediction": "Create a new AhCWSClient ."}
{"id": 598, "prediction": "Render the given request ."}
{"id": 600, "prediction": "Creates a flash ."}
{"id": 602, "prediction": "Returns the binding key for the given annotation ."}
{"id": 604, "prediction": "Convert a provider to a binding ."}
{"id": 606, "prediction": "Convert this object to a binding ."}
{"id": 608, "prediction": "Gets the list of available libraries ."}
{"id": 610, "prediction": "Creates a new evolutions reader ."}
{"id": 612, "prediction": "Removes all the models from the database ."}
{"id": 614, "prediction": "Adds a module loader to the module ."}
{"id": 616, "prediction": "Loads the modules ."}
{"id": 618, "prediction": "Loads the bindings ."}
{"id": 620, "prediction": "Encodes a cookie ."}
{"id": 622, "prediction": "Evaluate the current thread ."}
{"id": 624, "prediction": "Transforms a flow into a flow ."}
{"id": 626, "prediction": "Create an actor flow ref ."}
{"id": 628, "prediction": "Fill the form with the given value ."}
{"id": 630, "prediction": "Returns the JSON representation of the given message ."}
{"id": 632, "prediction": "Fill the form with the given value ."}
{"id": 634, "prediction": "Parse a field ."}
{"id": 636, "prediction": "Print a type descriptor ."}
{"id": 638, "prediction": "Register a converter ."}
{"id": 640, "prediction": "Registers a type converter ."}
{"id": 642, "prediction": "Returns a list of nodes from the specified path ."}
{"id": 644, "prediction": "Returns a copy of the given array ."}
{"id": 646, "prediction": "Creates a new MappedSocketAcceptor from the given class ."}
{"id": 648, "prediction": "Sets whether the given Object is accessible ."}
{"id": 650, "prediction": "Returns the total transformation cost of the given executable ."}
{"id": 652, "prediction": "Gets the message with the given key ."}
{"id": 654, "prediction": "Creates a new database from the specified URL ."}
{"id": 656, "prediction": "Sorts the specified indices using the specified indices ."}
{"id": 658, "prediction": "Invokes the method ."}
{"id": 660, "prediction": "Load the argument at the given index ."}
{"id": 662, "prediction": "Check if the type is null ."}
{"id": 664, "prediction": "Process an array element ."}
{"id": 666, "prediction": "Resolves all the bridges for the bridge ."}
{"id": 668, "prediction": "Filter the given constructors ."}
{"id": 670, "prediction": "Gets the field ."}
{"id": 672, "prediction": "Returns the cardinality of this matrix ."}
{"id": 674, "prediction": "Finds all methods in the given array ."}
{"id": 676, "prediction": "Reads a string from a file ."}
{"id": 678, "prediction": "Create a HttpRequest from a method ."}
{"id": 680, "prediction": "Create a HttpRequest for a given destination ."}
{"id": 682, "prediction": "Sets a PUT request ."}
{"id": 684, "prediction": "Create a DELETE request"}
{"id": 686, "prediction": "Creates a new trace request for trace ."}
{"id": 688, "prediction": "Sets the path ."}
{"id": 690, "prediction": "Add a parameter to the query ."}
{"id": 692, "prediction": "Set the query string"}
{"id": 694, "prediction": "Returns the host URL ."}
{"id": 696, "prediction": "Sets the host header ."}
{"id": 698, "prediction": "Sets the response ."}
{"id": 700, "prediction": "Gets the length of the exception table ."}
{"id": 702, "prediction": "Collect all action filters ."}
{"id": 704, "prediction": "Collect all actions in the action ."}
{"id": 706, "prediction": "Returns the property with the given name ."}
{"id": 708, "prediction": "Gets the writer ."}
{"id": 710, "prediction": "Gets object reference ."}
{"id": 712, "prediction": "Returns the table descriptor for the given table ."}
{"id": 714, "prediction": "Returns the alias for the given table ."}
{"id": 716, "prediction": "Lookup table reference ."}
{"id": 718, "prediction": "Serialize the given value to the given value ."}
{"id": 720, "prediction": "Inject the parameters from the servlet request ."}
{"id": 722, "prediction": "Converts a property name to a column name ."}
{"id": 724, "prediction": "Converts a column name to a column name ."}
{"id": 726, "prediction": "Prepares the value for the given type ."}
{"id": 728, "prediction": "Resolve a wrapper class ."}
{"id": 730, "prediction": "Converts a path to a system separator ."}
{"id": 732, "prediction": "Splits the given filename ."}
{"id": 734, "prediction": "Registers a custom component ."}
{"id": 736, "prediction": "Initializes the madv ."}
{"id": 738, "prediction": "Register all Madvoc components ."}
{"id": 740, "prediction": "Searches for the class scanner ."}
{"id": 742, "prediction": "Removes all entries from the class scanner ."}
{"id": 744, "prediction": "Scans the classpath for the given file ."}
{"id": 746, "prediction": "Convenience method to scan classes ."}
{"id": 748, "prediction": "Creates a new transaction ."}
{"id": 750, "prediction": "Creates a new instance of Madvoc scope ."}
{"id": 752, "prediction": "Decode a byte array ."}
{"id": 754, "prediction": "Ensure that the given token is valid ."}
{"id": 756, "prediction": "Creates a new copy of the given object ."}
{"id": 758, "prediction": "Set the property value ."}
{"id": 760, "prediction": "Resolve a scope ."}
{"id": 762, "prediction": "Register bean ."}
{"id": 764, "prediction": "Resolve bean names ."}
{"id": 766, "prediction": "Registers a property in a bean ."}
{"id": 513, "prediction": "Gets the socket ."}
{"id": 515, "prediction": "Broadcast a message to a client ."}
{"id": 517, "prediction": "Fill frames ."}
{"id": 519, "prediction": "Start the persistence unit ."}
{"id": 521, "prediction": "Sets the transaction ."}
{"id": 523, "prediction": "Wrap a list of arguments"}
{"id": 525, "prediction": "Gets a message with the given arguments ."}
{"id": 527, "prediction": "Set the preferred messages ."}
{"id": 529, "prediction": "Sets the message for the given result ."}
{"id": 531, "prediction": "Create the bindings for the given modules ."}
{"id": 533, "prediction": "Add overrides overrides ."}
{"id": 535, "prediction": "Sets the overrides overrides ."}
{"id": 537, "prediction": "Call this method ."}
{"id": 539, "prediction": "Gets the existing file ."}
{"id": 541, "prediction": "Creates a new Tuple ."}
{"id": 543, "prediction": "Converts an ExecutionContext to an Executor"}
{"id": 545, "prediction": "Creates a new instance of the persistence unit ."}
{"id": 547, "prediction": "Create flow from callback"}
{"id": 549, "prediction": "Adds a constraint to the cache ."}
{"id": 551, "prediction": "Finds a matching method matching the given method name ."}
{"id": 553, "prediction": "Renders a bad request ."}
{"id": 555, "prediction": "Handles request not found ."}
{"id": 557, "prediction": "Logs an error ."}
{"id": 559, "prediction": "Renders a DevServer ."}
{"id": 561, "prediction": "Creates a new documentation handler for the given resources ."}
{"id": 563, "prediction": "Create a new DocDoc from the given jar and jar file ."}
{"id": 565, "prediction": "Creates a new documentation handler for the given jar file ."}
{"id": 567, "prediction": "Create an HttpEntity from the content"}
{"id": 569, "prediction": "Creates a chunked entity ."}
{"id": 571, "prediction": "Sends a status message to a JSON object ."}
{"id": 573, "prediction": "Sends a status message ."}
{"id": 575, "prediction": "Finds a user by id ."}
{"id": 577, "prediction": "Create a unique call ."}
{"id": 579, "prediction": "Returns the absolute URL of the request ."}
{"id": 581, "prediction": "Returns a function that executes the given connection ."}
{"id": 583, "prediction": "Creates a server for the given router ."}
{"id": 585, "prediction": "Converts a JsonNode to a Java object ."}
{"id": 587, "prediction": "Parse a JsonNode from a stream ."}
{"id": 589, "prediction": "Returns the canonical path of the given URL ."}
{"id": 591, "prediction": "Display a displayable constraint ."}
{"id": 593, "prediction": "Checks if the given class is assignable ."}
{"id": 595, "prediction": "Returns the interval of the given date ."}
{"id": 597, "prediction": "Creates a new Guice instance ."}
{"id": 599, "prediction": "Sets session ."}
{"id": 601, "prediction": "Returns the binding key for the given instance ."}
{"id": 603, "prediction": "Returns the binding for the given implementation ."}
{"id": 605, "prediction": "Creates a binding for the given Supplier ."}
{"id": 607, "prediction": "Converts a provider to a binding ."}
{"id": 609, "prediction": "Returns the preferred lang for the given language ."}
{"id": 611, "prediction": "Reader for evolutions ."}
{"id": 613, "prediction": "Creates a new Guice configuration ."}
{"id": 615, "prediction": "Creates a new instance of the given modules ."}
{"id": 617, "prediction": "Load the modules ."}
{"id": 619, "prediction": "Creates a new GuiceApplicationBuilder ."}
{"id": 621, "prediction": "Get the entity manager ."}
{"id": 623, "prediction": "Push an emitter to an entity ."}
{"id": 625, "prediction": "Creates a bypassing flow with the specified merge strategy ."}
{"id": 627, "prediction": "Converts an array of arguments to a list of errors ."}
{"id": 629, "prediction": "Returns a list of global errors ."}
{"id": 631, "prediction": "Returns the value associated with the given key ."}
{"id": 633, "prediction": "Converts the given text into a Java object ."}
{"id": 635, "prediction": "Prints the given object as a string ."}
{"id": 637, "prediction": "Print the given type ."}
{"id": 639, "prediction": "Registers a formatter for the given type ."}
{"id": 641, "prediction": "Encodes a cookie ."}
{"id": 643, "prediction": "Returns a copy of the given list ."}
{"id": 645, "prediction": "Returns a copy of the array of varargs ."}
{"id": 647, "prediction": "Accepts a WebSocket and accepts the result ."}
{"id": 649, "prediction": "Calculates the cost of a primitive class ."}
{"id": 651, "prediction": "Gets the conversion cost of the given class ."}
{"id": 653, "prediction": "Gets a message with the specified keys ."}
{"id": 655, "prediction": "Creates a new Sorter instance ."}
{"id": 657, "prediction": "Merges the specified indices using the specified indices ."}
{"id": 659, "prediction": "Cast a numeric type to another ."}
{"id": 661, "prediction": "Emit a field ."}
{"id": 663, "prediction": "Unbox the given type ."}
{"id": 665, "prediction": "Combines two null values ."}
{"id": 667, "prediction": "Gets the methods from a list of interfaces ."}
{"id": 669, "prediction": "Sets the super class ."}
{"id": 671, "prediction": "Adds a method to the list of methods ."}
{"id": 673, "prediction": "Sets the naming policy ."}
{"id": 675, "prediction": "Resolve a path ."}
{"id": 677, "prediction": "Sets the host ."}
{"id": 679, "prediction": "Connects to the given destination ."}
{"id": 681, "prediction": "Creates a POST request ."}
{"id": 683, "prediction": "Create a PATCH request"}
{"id": 685, "prediction": "Create HEAD request ."}
{"id": 687, "prediction": "Sets the OPTIONS request ."}
{"id": 689, "prediction": "Sets the cookies ."}
{"id": 691, "prediction": "Add a query to the map ."}
{"id": 693, "prediction": "Returns a string representing the query string ."}
{"id": 695, "prediction": "Sets the basic authentication header ."}
{"id": 697, "prediction": "Creates a new HTTP request ."}
{"id": 699, "prediction": "Remove a range from the end of the range ."}
{"id": 701, "prediction": "Collect all action interceptors ."}
{"id": 703, "prediction": "Collect action results ."}
{"id": 705, "prediction": "Sets a simple property ."}
{"id": 707, "prediction": "Extracts the reference name from the given property ."}
{"id": 709, "prediction": "Sets the object reference ."}
{"id": 711, "prediction": "Lookup object reference ."}
{"id": 713, "prediction": "Find table descriptor by column name ."}
{"id": 715, "prediction": "Registers a table reference ."}
{"id": 717, "prediction": "Register a specific hint ."}
{"id": 719, "prediction": "Inject all attributes in the request ."}
{"id": 721, "prediction": "Inject all files in the request ."}
{"id": 723, "prediction": "Converts a column name to a property name ."}
{"id": 725, "prediction": "Store a SQL statement ."}
{"id": 727, "prediction": "Gets all wrappers ."}
{"id": 729, "prediction": "Create a wrapper for the given wrapper class ."}
{"id": 731, "prediction": "Returns the path to the given filename ."}
{"id": 733, "prediction": "Converts a relative path to a relative path ."}
{"id": 735, "prediction": "Sets the action config ."}
{"id": 737, "prediction": "Configure default defaults ."}
{"id": 739, "prediction": "Removes all classes from the jar scanner ."}
{"id": 741, "prediction": "Adds entries to the class scanner ."}
{"id": 743, "prediction": "Scan jar files ."}
{"id": 745, "prediction": "Returns the signature of the given type ."}
{"id": 747, "prediction": "Start scan ."}
{"id": 749, "prediction": "Gets the default scope type ."}
{"id": 751, "prediction": "Creates a new instance of Madvoc scope ."}
{"id": 753, "prediction": "Prepares a CSRF token ."}
{"id": 755, "prediction": "Checks if the given session is valid ."}
{"id": 757, "prediction": "Copy the contents of this bean ."}
{"id": 759, "prediction": "Initialize the table ."}
{"id": 761, "prediction": "Registers a bean definition ."}
{"id": 763, "prediction": "Remove a bean ."}
{"id": 765, "prediction": "Registers a CtorPoint for the given type ."}
{"id": 767, "prediction": "Registers a SetInjectionPoint for the given property ."}
{"id": 768, "prediction": "Register a method injection point for a bean ."}
{"id": 770, "prediction": "Register a destroy method for a destroy method ."}
{"id": 772, "prediction": "Register a provider for a given type ."}
{"id": 774, "prediction": "Define the parameters ."}
{"id": 776, "prediction": "Resolves the Java version number ."}
{"id": 778, "prediction": "Validates the argument index ."}
{"id": 780, "prediction": "Get advice method name ."}
{"id": 782, "prediction": "Load static arguments ."}
{"id": 784, "prediction": "Load a method argument ."}
{"id": 786, "prediction": "Prepares the return value for a method ."}
{"id": 788, "prediction": "Creates a new array ."}
{"id": 790, "prediction": "Extract encoding from content type ."}
{"id": 792, "prediction": "Resolve the authentication token for the request ."}
{"id": 794, "prediction": "Prepares the given file with the given file ."}
{"id": 796, "prediction": "Get all cookies ."}
{"id": 798, "prediction": "Reads the request body from the stream ."}
{"id": 800, "prediction": "Stores the context path variable ."}
{"id": 802, "prediction": "Prepare parameters ."}
{"id": 804, "prediction": "Invokes the given fragment ."}
{"id": 806, "prediction": "Renders the given fragment ."}
{"id": 808, "prediction": "Call all destroy methods ."}
{"id": 810, "prediction": "Inject the parameters in the bean ."}
{"id": 812, "prediction": "Add a header ."}
{"id": 814, "prediction": "Put base property ."}
{"id": 816, "prediction": "Gets a profile entry ."}
{"id": 818, "prediction": "Extract profiles from profile ."}
{"id": 820, "prediction": "Hashes a password with the given password ."}
{"id": 822, "prediction": "Copies all entries from the specified stream into this buffer ."}
{"id": 824, "prediction": "Parse action ."}
{"id": 826, "prediction": "Searches the alias and registers the alias ."}
{"id": 828, "prediction": "Read action filters ."}
{"id": 830, "prediction": "Read method action action ."}
{"id": 832, "prediction": "Create an action runtime ."}
{"id": 834, "prediction": "Apply advice to target class ."}
{"id": 836, "prediction": "Visit an annotation ."}
{"id": 838, "prediction": "Resolve JSON name ."}
{"id": 840, "prediction": "Looks up the type data for the given class ."}
{"id": 842, "prediction": "Resolves the name of the given type ."}
{"id": 844, "prediction": "Returns the content of the file ."}
{"id": 846, "prediction": "Sets the major version ."}
{"id": 848, "prediction": "Put bootstrap methods ."}
{"id": 850, "prediction": "Adds a reference to a method reference ."}
{"id": 852, "prediction": "Adds a reference to the constant pool ."}
{"id": 854, "prediction": "Adds a constant integer to the constant pool ."}
{"id": 856, "prediction": "Add a long constant ."}
{"id": 858, "prediction": "Adds a constant name and symbol ."}
{"id": 860, "prediction": "Adds a constant ."}
{"id": 862, "prediction": "Adds a constant handle to the map ."}
{"id": 864, "prediction": "Adds a static constant ."}
{"id": 866, "prediction": "Adds a static reference to a dynamic reference ."}
{"id": 868, "prediction": "Adds a constant ."}
{"id": 870, "prediction": "Adds the merge of two types ."}
{"id": 872, "prediction": "Removes all entries from the map ."}
{"id": 874, "prediction": "Returns an iterator over the entries ."}
{"id": 876, "prediction": "Grows the buffer if necessary ."}
{"id": 878, "prediction": "Visit an annotation ."}
{"id": 880, "prediction": "Create the first chain delegate chain ."}
{"id": 882, "prediction": "Parse a path ."}
{"id": 884, "prediction": "Configure the servlet context ."}
{"id": 886, "prediction": "Get all field descriptors ."}
{"id": 888, "prediction": "Converts the given transaction mode to a JDBC transaction mode ."}
{"id": 890, "prediction": "Puts all values into the map ."}
{"id": 892, "prediction": "Write a list of strings to the output stream ."}
{"id": 894, "prediction": "Writes the given progress listener to the output stream ."}
{"id": 896, "prediction": "Returns the integer value for the given key ."}
{"id": 898, "prediction": "Returns the double value for the given key ."}
{"id": 900, "prediction": "Gets the value of the given key ."}
{"id": 902, "prediction": "Use this method to connect to a folder"}
{"id": 904, "prediction": "Sets the flags for a given email ."}
{"id": 906, "prediction": "Looks up a named parameter with the given name ."}
{"id": 908, "prediction": "Validate actions ."}
{"id": 910, "prediction": "Sets the mime type ."}
{"id": 912, "prediction": "Sets the target ."}
{"id": 914, "prediction": "Sets the target ."}
{"id": 916, "prediction": "Create proxy ."}
{"id": 918, "prediction": "Create a new instance ."}
{"id": 920, "prediction": "Creates an email address from the given personal name ."}
{"id": 922, "prediction": "Create an email address with the given name ."}
{"id": 924, "prediction": "Set the cc address ."}
{"id": 926, "prediction": "Creates a new HTML message with the specified encoding ."}
{"id": 928, "prediction": "Get the value of the system property ."}
{"id": 930, "prediction": "Returns the integer value for the given name ."}
{"id": 932, "prediction": "Gets the resolved parameters ."}
{"id": 934, "prediction": "Looks up an alias ."}
{"id": 936, "prediction": "Resolve a result path ."}
{"id": 938, "prediction": "Gets the last index of the last slash ."}
{"id": 940, "prediction": "Returns the index of the dot after a dot ."}
{"id": 942, "prediction": "Resolves the schema name for the given type ."}
{"id": 944, "prediction": "Initializes the array with the given key ."}
{"id": 946, "prediction": "Removes a double from the matrix ."}
{"id": 948, "prediction": "Initialize the key - value pair with the given key ."}
{"id": 950, "prediction": "Converts a byte array to a long ."}
{"id": 952, "prediction": "Returns the path of this method ."}
{"id": 954, "prediction": "Gzip a file ."}
{"id": 956, "prediction": "Lists all the entries in a zip file ."}
{"id": 958, "prediction": "Adds a file to a zip archive ."}
{"id": 960, "prediction": "Returns the FieldDescriptor for the given name ."}
{"id": 962, "prediction": "Sets the request bundle name ."}
{"id": 964, "prediction": "Returns the locale for the given session ."}
{"id": 966, "prediction": "Add profile entries ."}
{"id": 968, "prediction": "Read an input stream ."}
{"id": 970, "prediction": "Reads a type annotation from a type annotation ."}
{"id": 972, "prediction": "Reads the verification type information from the given frame ."}
{"id": 974, "prediction": "Returns an array of constructor descriptors ."}
{"id": 976, "prediction": "Gets the request map ."}
{"id": 978, "prediction": "Convert an object to an array ."}
{"id": 980, "prediction": "Add a file to the file ."}
{"id": 982, "prediction": "Add the search path ."}
{"id": 984, "prediction": "Exclude patterns ."}
{"id": 986, "prediction": "Find all files ."}
{"id": 988, "prediction": "Returns an iterator over the files ."}
{"id": 990, "prediction": "Resolve bean name ."}
{"id": 992, "prediction": "Get the output stream ."}
{"id": 994, "prediction": "Returns the descriptor for the given constructor ."}
{"id": 996, "prediction": "Returns the method descriptor for the given method ."}
{"id": 998, "prediction": "Returns the size of this object ."}
{"id": 1000, "prediction": "Sets the rollback of the transaction ."}
{"id": 1002, "prediction": "Rolls all resources associated with this transaction ."}
{"id": 1004, "prediction": "Pop the name ."}
{"id": 1006, "prediction": "Encodes a unicode character ."}
{"id": 1008, "prediction": "Sets the parsing error log level ."}
{"id": 1010, "prediction": "Checks if the given string contains the given value ."}
{"id": 1012, "prediction": "Looks up a pseudo function for the given pseudo function name ."}
{"id": 1014, "prediction": "Visit an annotation ."}
{"id": 1016, "prediction": "Create a proxy constructor ."}
{"id": 1018, "prediction": "Finds the last index in the given range ."}
{"id": 1020, "prediction": "Replace the class instructions ."}
{"id": 1022, "prediction": "Register default values ."}
{"id": 769, "prediction": "Registers a initite init method ."}
{"id": 771, "prediction": "Register a Petite Provider"}
{"id": 773, "prediction": "Iterate over the given bean type ."}
{"id": 775, "prediction": "Intercept the action ."}
{"id": 777, "prediction": "Pushes an integer to the stream ."}
{"id": 779, "prediction": "Get advice field name ."}
{"id": 781, "prediction": "Loads the special method arguments ."}
{"id": 783, "prediction": "Loads the virtual method arguments ."}
{"id": 785, "prediction": "Store a method argument ."}
{"id": 787, "prediction": "Creates a signature for a method ."}
{"id": 789, "prediction": "Store the given array to the array ."}
{"id": 791, "prediction": "Returns true if the given flags are empty ."}
{"id": 793, "prediction": "Requests authentication ."}
{"id": 795, "prediction": "Prepare response ."}
{"id": 797, "prediction": "Reads the request body from the specified reader ."}
{"id": 799, "prediction": "Stores the context path from the given page context ."}
{"id": 801, "prediction": "Checks if the request parameter is a GET parameter ."}
{"id": 803, "prediction": "Copy attributes from servlet request ."}
{"id": 805, "prediction": "Renders the given fragment ."}
{"id": 807, "prediction": "Invokes the init method ."}
{"id": 809, "prediction": "Creates a new instance of the bean ."}
{"id": 811, "prediction": "Rewrite action path ."}
{"id": 813, "prediction": "Adds a profile entry to the map ."}
{"id": 815, "prediction": "Adds a profile property ."}
{"id": 817, "prediction": "Resolves the macro values for the given profile ."}
{"id": 819, "prediction": "read data from a byte array"}
{"id": 821, "prediction": "Checks if the given plaintext is valid ."}
{"id": 823, "prediction": "Copies the given output stream to the given output stream ."}
{"id": 825, "prediction": "Resolve action configuration ."}
{"id": 827, "prediction": "Read action interceptors ."}
{"id": 829, "prediction": "Read package action ."}
{"id": 831, "prediction": "Parse method alias ."}
{"id": 833, "prediction": "Sets the response header ."}
{"id": 835, "prediction": "Inject a proxy into the target object ."}
{"id": 837, "prediction": "Resolve real name ."}
{"id": 839, "prediction": "Lookup the type data for the given class ."}
{"id": 841, "prediction": "Find the type data for the given type ."}
{"id": 843, "prediction": "Resolve real name ."}
{"id": 845, "prediction": "Copy the class methods from the given classReader ."}
{"id": 847, "prediction": "Put constant pool ."}
{"id": 849, "prediction": "Adds a constant field reference ."}
{"id": 851, "prediction": "Adds a reference to the constant pool ."}
{"id": 853, "prediction": "Adds a constant to the constant pool ."}
{"id": 855, "prediction": "Adds a long constant to the map ."}
{"id": 857, "prediction": "Adds a constant pool entry ."}
{"id": 859, "prediction": "Add constant ."}
{"id": 861, "prediction": "Adds a symbol to the hash table ."}
{"id": 863, "prediction": "Adds a static constant ."}
{"id": 865, "prediction": "Adds a static reference to the constant pool ."}
{"id": 867, "prediction": "Adds a reference to the constant pool ."}
{"id": 869, "prediction": "Add a bootstrap method ."}
{"id": 871, "prediction": "Returns the hash of the given name ."}
{"id": 873, "prediction": "Get all values of a given name ."}
{"id": 875, "prediction": "Returns a list of entries ."}
{"id": 877, "prediction": "Appends a sequence of characters to this buffer ."}
{"id": 879, "prediction": "Visit the proxy chain ."}
{"id": 881, "prediction": "Create the first chain delegate chain for the given target method ."}
{"id": 883, "prediction": "Adds a field to the path ."}
{"id": 885, "prediction": "Execute the proxy ."}
{"id": 887, "prediction": "Creates a bean definition for the proxy ."}
{"id": 889, "prediction": "Read property ."}
{"id": 891, "prediction": "Append a buffer to this buffer ."}
{"id": 893, "prediction": "Writes the list to the output stream ."}
{"id": 895, "prediction": "Gets a string from the cache ."}
{"id": 897, "prediction": "Get a Long ."}
{"id": 899, "prediction": "Get a Float from the map ."}
{"id": 901, "prediction": "Adds a value to the map ."}
{"id": 903, "prediction": "Receive messages from a folder ."}
{"id": 905, "prediction": "Close the folder if it is opened ."}
{"id": 907, "prediction": "Create alias ."}
{"id": 909, "prediction": "Adds a new Violation violation ."}
{"id": 911, "prediction": "Sets the raw data for the given download file ."}
{"id": 913, "prediction": "Sets the target ."}
{"id": 915, "prediction": "Processes the target class file ."}
{"id": 917, "prediction": "Defines the proxy class ."}
{"id": 919, "prediction": "Dump the class in the debug folder ."}
{"id": 921, "prediction": "Appends an email address to the address ."}
{"id": 923, "prediction": "Sets the reply to the given email address ."}
{"id": 925, "prediction": "Creates a new message with the specified encoding ."}
{"id": 927, "prediction": "Add a header ."}
{"id": 929, "prediction": "Returns a boolean value for the given name ."}
{"id": 931, "prediction": "Returns the long value as a long ."}
{"id": 933, "prediction": "Serialize a key value ."}
{"id": 935, "prediction": "Resolve an alias ."}
{"id": 937, "prediction": "Resolves the value of the given path ."}
{"id": 939, "prediction": "Returns the index of the last dot after the given string ."}
{"id": 941, "prediction": "Strip last camel word"}
{"id": 943, "prediction": "Resolve column descriptor ."}
{"id": 945, "prediction": "Calculate the left rotation ."}
{"id": 947, "prediction": "Adds the key - value pair to the key ."}
{"id": 949, "prediction": "Encrypt a byte array ."}
{"id": 951, "prediction": "Removes leading and trailing chars from string"}
{"id": 953, "prediction": "Creates a new zlib ."}
{"id": 955, "prediction": "Unzip a file ."}
{"id": 957, "prediction": "Unzip a zip file ."}
{"id": 959, "prediction": "Adds a zip entry to a ZIP output stream ."}
{"id": 961, "prediction": "Returns the property descriptor for the given name ."}
{"id": 963, "prediction": "Sets the session locale ."}
{"id": 965, "prediction": "Filter parameters ."}
{"id": 967, "prediction": "Gets a little endian long from the given byte array ."}
{"id": 969, "prediction": "Read a label ."}
{"id": 971, "prediction": "Read element values ."}
{"id": 973, "prediction": "Read the number of bootstrap methods ."}
{"id": 975, "prediction": "Gets the ctor descriptor ."}
{"id": 977, "prediction": "Creates a map from the servlet request ."}
{"id": 979, "prediction": "Initializes the decoder ."}
{"id": 981, "prediction": "Add a file to the search path ."}
{"id": 983, "prediction": "Includes the given patterns ."}
{"id": 985, "prediction": "Adds a path to the list ."}
{"id": 987, "prediction": "Initializes the files ."}
{"id": 989, "prediction": "Resolves the wiring mode for the given type ."}
{"id": 991, "prediction": "Get the print writer ."}
{"id": 993, "prediction": "Gets the class name ."}
{"id": 995, "prediction": "Gets the method descriptor ."}
{"id": 997, "prediction": "Append the descriptor ."}
{"id": 999, "prediction": "Returns the number of arguments for the given method descriptor ."}
{"id": 1001, "prediction": "Perform a commit operation ."}
{"id": 1003, "prediction": "Request a resource ."}
{"id": 1005, "prediction": "Write string ."}
{"id": 1007, "prediction": "Writes a character sequence ."}
{"id": 1009, "prediction": "Start region ."}
{"id": 1011, "prediction": "Register a pseudo function ."}
{"id": 1013, "prediction": "overrides the visitor"}
{"id": 1015, "prediction": "Marks the static initialization block ."}
{"id": 1017, "prediction": "Process super methods ."}
{"id": 1019, "prediction": "Renders a string ."}
{"id": 1021, "prediction": "Gets attributePrototypes ."}
{"id": 1023, "prediction": "Register a new SQL type ."}
{"id": 1024, "prediction": "Looks up the SQL type for the given class ."}
{"id": 1026, "prediction": "Create a SOCKS4 proxy for a proxy ."}
{"id": 1028, "prediction": "Creates a proxy information about a proxy ."}
{"id": 1030, "prediction": "Returns total number of threads in the transaction ."}
{"id": 1032, "prediction": "Continue transaction ."}
{"id": 1034, "prediction": "Creates a proxy object ."}
{"id": 1036, "prediction": "Aligns the text to a string ."}
{"id": 1038, "prediction": "Converts a string to camelCase ."}
{"id": 1040, "prediction": "Converts tabs to tabs ."}
{"id": 1042, "prediction": "Unescapes a string ."}
{"id": 1044, "prediction": "Get the bean with the given name ."}
{"id": 1046, "prediction": "Invoke a provider on the given provider ."}
{"id": 1048, "prediction": "Sets a bean property ."}
{"id": 1050, "prediction": "Shuts down all resources ."}
{"id": 1052, "prediction": "Process the body content ."}
{"id": 1054, "prediction": "Closes the ending tag ."}
{"id": 1056, "prediction": "Add a tag ."}
{"id": 1058, "prediction": "Returns the query string ."}
{"id": 1060, "prediction": "Calculates the number of values to the given count ."}
{"id": 1062, "prediction": "Iterate over an array ."}
{"id": 1064, "prediction": "Replaces the string with the given character ."}
{"id": 1066, "prediction": "Replaces the first substring with the given string ."}
{"id": 1068, "prediction": "Replaces the substring with the given string ."}
{"id": 1070, "prediction": "Remove a string from a string ."}
{"id": 1072, "prediction": "Checks if all strings are empty ."}
{"id": 1074, "prediction": "Converts an object to a string array ."}
{"id": 1076, "prediction": "Creates a title ."}
{"id": 1078, "prediction": "Checks if the given string starts with the given string ."}
{"id": 1080, "prediction": "Count the number of occurrences of a string ignoring case ."}
{"id": 1082, "prediction": "Gets the index of the given string ."}
{"id": 1084, "prediction": "Strips a trailing character from a string ."}
{"id": 1086, "prediction": "Strip a character from a string ."}
{"id": 1088, "prediction": "Crop all strings ."}
{"id": 1090, "prediction": "Removes leading whitespace from the given string ."}
{"id": 1092, "prediction": "Joins a collection of strings into a string ."}
{"id": 1094, "prediction": "Converts the source charset to a string ."}
{"id": 1096, "prediction": "Recursively surrounds a string ."}
{"id": 1098, "prediction": "Returns the suffix of the given string ."}
{"id": 1100, "prediction": "Cut a string from the given string ."}
{"id": 1102, "prediction": "Cut the given string ."}
{"id": 1104, "prediction": "Inserts a string into a string ."}
{"id": 1106, "prediction": "Reverse a string ."}
{"id": 1108, "prediction": "Find common prefix ."}
{"id": 1110, "prediction": "Converts a string to upper case ."}
{"id": 1112, "prediction": "Converts a byte array to a hexadecimal string ."}
{"id": 1114, "prediction": "Detect quote character ."}
{"id": 1116, "prediction": "Visit an enum value ."}
{"id": 1118, "prediction": "Registers a type descriptor ."}
{"id": 1120, "prediction": "Removes an entity from the database ."}
{"id": 1122, "prediction": "Sets the target interface ."}
{"id": 1124, "prediction": "Lookup all annotated properties for the given type ."}
{"id": 1126, "prediction": "Closes the output stream ."}
{"id": 1128, "prediction": "Remove the session id from the session ."}
{"id": 1130, "prediction": "Converts a byte array into a byte array ."}
{"id": 1132, "prediction": "Writes the data to the output stream ."}
{"id": 1134, "prediction": "Prepend an argument to the given type ."}
{"id": 1136, "prediction": "Removes all whitespace characters from the given text ."}
{"id": 1138, "prediction": "Returns the type converter for the given type ."}
{"id": 1140, "prediction": "Selects a list of selectors ."}
{"id": 1142, "prediction": "Returns the first node in the given query ."}
{"id": 1144, "prediction": "Walk through a CssSelector ."}
{"id": 1146, "prediction": "Filters the results in a CssSelect ."}
{"id": 1148, "prediction": "Checks the end of the stream ."}
{"id": 1150, "prediction": "Remove select ."}
{"id": 1152, "prediction": "Remove last order ."}
{"id": 1154, "prediction": "Detects a name from the input stream ."}
{"id": 1156, "prediction": "Build a SELECT statement ."}
{"id": 1158, "prediction": "Find by column name ."}
{"id": 1160, "prediction": "Gets the property name ."}
{"id": 1162, "prediction": "Gets id value ."}
{"id": 1164, "prediction": "Gets the key value ."}
{"id": 1166, "prediction": "Sets the new index ."}
{"id": 1168, "prediction": "Calculates the length of the array"}
{"id": 1170, "prediction": "Create a scoped proxy bean ."}
{"id": 1172, "prediction": "Initialize the map ."}
{"id": 1174, "prediction": "Sets the watch file ."}
{"id": 1176, "prediction": "Registers a change event ."}
{"id": 1178, "prediction": "Compute the size of the field info ."}
{"id": 1180, "prediction": "Create a target object with the given value ."}
{"id": 1182, "prediction": "Decorate a Decorator ."}
{"id": 1184, "prediction": "Writes the content of the DecorPage ."}
{"id": 1186, "prediction": "Start the server ."}
{"id": 1188, "prediction": "Gets the store store ."}
{"id": 1190, "prediction": "Initialize the hint count ."}
{"id": 1192, "prediction": "Append column name ."}
{"id": 1194, "prediction": "Applies the given value to the given flag ."}
{"id": 1196, "prediction": "Processes exclude rules ."}
{"id": 1198, "prediction": "Adds all items to the collection ."}
{"id": 1200, "prediction": "Binds an annotation configuration to the given action type ."}
{"id": 1202, "prediction": "Lookup action configuration ."}
{"id": 1204, "prediction": "Sets system properties ."}
{"id": 1206, "prediction": "Finds the last table for the given node ."}
{"id": 1208, "prediction": "Registers the session beans ."}
{"id": 1210, "prediction": "Initialize the proxy ."}
{"id": 1212, "prediction": "Ends the action ."}
{"id": 1214, "prediction": "Extract profiles from the given key ."}
{"id": 1216, "prediction": "Convert a typed string to a typed class name ."}
{"id": 1218, "prediction": "Convert a typed string to a typed signature ."}
{"id": 1220, "prediction": "Adds all consumers ."}
{"id": 1222, "prediction": "Convert an object to a collection ."}
{"id": 1224, "prediction": "Convert the given value to a collection ."}
{"id": 1226, "prediction": "Add a line number ."}
{"id": 1228, "prediction": "Puts a reference to the given bytecode ."}
{"id": 1230, "prediction": "Resolve a bytecode instruction ."}
{"id": 1232, "prediction": "Add a successor to the subroutine ."}
{"id": 1234, "prediction": "Fix the accent ."}
{"id": 1236, "prediction": "Puts two bytes into the given byte array ."}
{"id": 1238, "prediction": "Puts a 32 - bit integer into a byte array ."}
{"id": 1240, "prediction": "Puts an int into the buffer ."}
{"id": 1242, "prediction": "Puts a long ."}
{"id": 1244, "prediction": "Adds the given size to the array ."}
{"id": 1246, "prediction": "Authenticate user ."}
{"id": 1248, "prediction": "Returns the default message for the given key ."}
{"id": 1250, "prediction": "Gets the value at the given index ."}
{"id": 1252, "prediction": "Save an entity ."}
{"id": 1254, "prediction": "Updates an entity property ."}
{"id": 1256, "prediction": "Finds an entity by id ."}
{"id": 1258, "prediction": "Find an entity by its criteria ."}
{"id": 1260, "prediction": "Delete an entity ."}
{"id": 1262, "prediction": "Increase property ."}
{"id": 1264, "prediction": "Finds all related entities in the target object ."}
{"id": 1266, "prediction": "Removes all attributes ."}
{"id": 1268, "prediction": "Adds an entry to the cache ."}
{"id": 1270, "prediction": "Get the current stack trace ."}
{"id": 1272, "prediction": "Gets the stack trace element of a Throwable ."}
{"id": 1274, "prediction": "Convert a Throwable to a String"}
{"id": 1276, "prediction": "Builds a message from the given cause ."}
{"id": 1278, "prediction": "Register a class with the given classpath ."}
{"id": 1025, "prediction": "Looks up the SQL type for the specified SQL type ."}
{"id": 1027, "prediction": "Factory method for creating SOCKS5 proxy ."}
{"id": 1029, "prediction": "Returns the total number of threads in the transaction ."}
{"id": 1031, "prediction": "Associate a transaction ."}
{"id": 1033, "prediction": "Lookup the resource manager for the given resource type ."}
{"id": 1035, "prediction": "Append the method name ."}
{"id": 1037, "prediction": "Converts a value to a string representation ."}
{"id": 1039, "prediction": "Formats a comma - separated string ."}
{"id": 1041, "prediction": "Escape a string ."}
{"id": 1043, "prediction": "Returns the bean for the specified type ."}
{"id": 1045, "prediction": "Initialize bean definition ."}
{"id": 1047, "prediction": "Register a bean ."}
{"id": 1049, "prediction": "Get bean property ."}
{"id": 1051, "prediction": "Resolve the parameters of a method ."}
{"id": 1053, "prediction": "Gets the value of the profile ."}
{"id": 1055, "prediction": "Creates an element from a tag ."}
{"id": 1057, "prediction": "Removes the last child node if it is empty ."}
{"id": 1059, "prediction": "Gets the name of the action class ."}
{"id": 1061, "prediction": "Iterate through collection ."}
{"id": 1063, "prediction": "Replaces all occurrences of a string with the given string ."}
{"id": 1065, "prediction": "Replaces all characters in the string with the given string ."}
{"id": 1067, "prediction": "Replaces the first substring with the given string ."}
{"id": 1069, "prediction": "Replace the last character in the string ."}
{"id": 1071, "prediction": "Removes a character from the string ."}
{"id": 1073, "prediction": "Check if all strings are blank ."}
{"id": 1075, "prediction": "Change the first character of a string ."}
{"id": 1077, "prediction": "Compress the given string ."}
{"id": 1079, "prediction": "Checks if the string ends with the specified character ."}
{"id": 1081, "prediction": "Compares two strings ignoring case insensitive ."}
{"id": 1083, "prediction": "Strip the leading character from the string ."}
{"id": 1085, "prediction": "Strip a char from a string ."}
{"id": 1087, "prediction": "Strips a character from a string ."}
{"id": 1089, "prediction": "Removes leading whitespace from the given string ."}
{"id": 1091, "prediction": "Returns the index of the first region of the given string ."}
{"id": 1093, "prediction": "Joins the given array with the given separator ."}
{"id": 1095, "prediction": "Checks if the specified character is equal to the specified character ."}
{"id": 1097, "prediction": "Returns the prefix of the given string ."}
{"id": 1099, "prediction": "Cut the given string to the given string ."}
{"id": 1101, "prediction": "Cut the prefix of a string ."}
{"id": 1103, "prediction": "Cut a string into a string ."}
{"id": 1105, "prediction": "Repeat a number of elements in a string ."}
{"id": 1107, "prediction": "Returns the maximum common prefix of two strings ."}
{"id": 1109, "prediction": "Truncate a string ."}
{"id": 1111, "prediction": "Removes quotes from a string ."}
{"id": 1113, "prediction": "Get bytes from string ."}
{"id": 1115, "prediction": "Visit a value ."}
{"id": 1117, "prediction": "Visit an annotation ."}
{"id": 1119, "prediction": "Registers an entity ."}
{"id": 1121, "prediction": "Creates an entity instance ."}
{"id": 1123, "prediction": "Inject target field into target object ."}
{"id": 1125, "prediction": "Detect database ."}
{"id": 1127, "prediction": "Writes a byte to the output stream ."}
{"id": 1129, "prediction": "Returns the name of the mail ."}
{"id": 1131, "prediction": "Writes the given file to the given destination ."}
{"id": 1133, "prediction": "Append an argument ."}
{"id": 1135, "prediction": "Changes the return type ."}
{"id": 1137, "prediction": "Register a type converter ."}
{"id": 1139, "prediction": "Selects a list of nodes ."}
{"id": 1141, "prediction": "Processes select nodes ."}
{"id": 1143, "prediction": "Walk through a list of descendants ."}
{"id": 1145, "prediction": "Adds a node to the list ."}
{"id": 1147, "prediction": "Unpack the contents of a string ."}
{"id": 1149, "prediction": "Creates a page data ."}
{"id": 1151, "prediction": "Removes from the SQL statement"}
{"id": 1153, "prediction": "Decodes the given HTML into a string ."}
{"id": 1155, "prediction": "Build sql statement ."}
{"id": 1157, "prediction": "Resolve columns and column names ."}
{"id": 1159, "prediction": "Find by property name ."}
{"id": 1161, "prediction": "Gets column name ."}
{"id": 1163, "prediction": "Sets the id property ."}
{"id": 1165, "prediction": "Append a string to this string ."}
{"id": 1167, "prediction": "Expand the size of the array"}
{"id": 1169, "prediction": "Create the mixing message ."}
{"id": 1171, "prediction": "Runs the body ."}
{"id": 1173, "prediction": "Checks if the given file is a valid file ."}
{"id": 1175, "prediction": "Starts polling ."}
{"id": 1177, "prediction": "Adds an enumeration to the enumeration ."}
{"id": 1179, "prediction": "Puts the field information ."}
{"id": 1181, "prediction": "Writes a value to the injection point ."}
{"id": 1183, "prediction": "Parses the given page and returns the result ."}
{"id": 1185, "prediction": "Writes the region to the given region ."}
{"id": 1187, "prediction": "Runs the process ."}
{"id": 1189, "prediction": "Create the output stream ."}
{"id": 1191, "prediction": "Append alias ."}
{"id": 1193, "prediction": "Add a rule ."}
{"id": 1195, "prediction": "Processes the rule ."}
{"id": 1197, "prediction": "Gets the pseudo class name ."}
{"id": 1199, "prediction": "Finds the insertion point at the given index ."}
{"id": 1201, "prediction": "Register an action configuration ."}
{"id": 1203, "prediction": "Sets the action consumer ."}
{"id": 1205, "prediction": "Validates the given value against the given context ."}
{"id": 1207, "prediction": "Remove all child elements from the table ."}
{"id": 1209, "prediction": "Replies the session map ."}
{"id": 1211, "prediction": "Add advice init method ."}
{"id": 1213, "prediction": "Adds the given key to the map ."}
{"id": 1215, "prediction": "Adds the given key to the list of values ."}
{"id": 1217, "prediction": "Convert a typeref to a typeref ."}
{"id": 1219, "prediction": "Convert a type to a typeref ."}
{"id": 1221, "prediction": "Creates a new collection ."}
{"id": 1223, "prediction": "Convert the given value to a collection ."}
{"id": 1225, "prediction": "Convert the given value to a collection ."}
{"id": 1227, "prediction": "Makes the visitor visit the line number ."}
{"id": 1229, "prediction": "Adds a forward reference to the reference buffer ."}
{"id": 1231, "prediction": "Marks the given subroutine ."}
{"id": 1233, "prediction": "Compare two digits ."}
{"id": 1235, "prediction": "Puts a byte into the buffer ."}
{"id": 1237, "prediction": "Puts a byte into the buffer ."}
{"id": 1239, "prediction": "Puts a 128 - bit vector into the buffer ."}
{"id": 1241, "prediction": "Puts a 128 - bit vector into the buffer ."}
{"id": 1243, "prediction": "Puts a byte array into the specified byte array ."}
{"id": 1245, "prediction": "Authenticate user ."}
{"id": 1247, "prediction": "Authenticate user ."}
{"id": 1249, "prediction": "Gets the resource bundle ."}
{"id": 1251, "prediction": "Sets the id of the entity ."}
{"id": 1253, "prediction": "Updates the given entity ."}
{"id": 1255, "prediction": "Updates an entity property ."}
{"id": 1257, "prediction": "Find by entity type"}
{"id": 1259, "prediction": "Delete an entity by id ."}
{"id": 1261, "prediction": "Counts the number of entities in the database ."}
{"id": 1263, "prediction": "Decreases the property ."}
{"id": 1265, "prediction": "Lists all entities in the specified class ."}
{"id": 1267, "prediction": "Returns a set of entries ."}
{"id": 1269, "prediction": "Removes the specified key from the map ."}
{"id": 1271, "prediction": "Gets stack trace element ."}
{"id": 1273, "prediction": "Gets an array of Throwable chains ."}
{"id": 1275, "prediction": "Converts a Throwable to a String"}
{"id": 1277, "prediction": "Unwraps an Throwable from the wrapped Throwable ."}
{"id": 1279, "prediction": "Accepts a Madvoc component class ."}
{"id": 1280, "prediction": "Get the system class loader ."}
{"id": 1282, "prediction": "Get an InputStream for a resource ."}
{"id": 1284, "prediction": "Get the input stream as a stream ."}
{"id": 1286, "prediction": "Find a child with the given value ."}
{"id": 1288, "prediction": "Convert an object to a collection ."}
{"id": 1290, "prediction": "Called when an array element is set ."}
{"id": 1292, "prediction": "Extract the type from the bean ."}
{"id": 1294, "prediction": "Start the http session ."}
{"id": 1296, "prediction": "Converts a LocalDateTime to a Calendar object ."}
{"id": 1298, "prediction": "Adds a check ."}
{"id": 1300, "prediction": "Add all classes to the target ."}
{"id": 1302, "prediction": "Collect annotations ."}
{"id": 1304, "prediction": "Encodes the given URI into the given URI ."}
{"id": 1306, "prediction": "Encodes the given URI ."}
{"id": 1308, "prediction": "Encodes the given URI ."}
{"id": 1310, "prediction": "Encodes the given URI with the given encoding ."}
{"id": 1312, "prediction": "Encodes a URI fragment ."}
{"id": 1314, "prediction": "Return an array of PropertyDescriptors ."}
{"id": 1316, "prediction": "Unzip response ."}
{"id": 1318, "prediction": "Determines if this scope is a valid scope ."}
{"id": 1320, "prediction": "Encrypt a byte array ."}
{"id": 1322, "prediction": "Convert a Map to a bean"}
{"id": 1324, "prediction": "Sets the value of the given property ."}
{"id": 1326, "prediction": "Compares two entities ."}
{"id": 1328, "prediction": "Send a request ."}
{"id": 1330, "prediction": "Adds the default headers to the request ."}
{"id": 1332, "prediction": "Adds all cookies to the http request ."}
{"id": 1334, "prediction": "Sets the subject ."}
{"id": 1336, "prediction": "Sets the headers for the given message ."}
{"id": 1338, "prediction": "Sets the recipients ."}
{"id": 1340, "prediction": "Sets the content message ."}
{"id": 1342, "prediction": "Gets the content type ."}
{"id": 1344, "prediction": "Close all associated ResultSets ."}
{"id": 1346, "prediction": "Closes the session ."}
{"id": 1348, "prediction": "Sets the max rows ."}
{"id": 1350, "prediction": "Execute the query"}
{"id": 1352, "prediction": "Returns the query string ."}
{"id": 1354, "prediction": "Creates a collection from an iterator ."}
{"id": 1356, "prediction": "Compares two objects ."}
{"id": 1358, "prediction": "Print a message to the console ."}
{"id": 1360, "prediction": "Shortcut to shorten the class name ."}
{"id": 1362, "prediction": "Serialize the target object to the given target object ."}
{"id": 1364, "prediction": "Clone a serializable object ."}
{"id": 1366, "prediction": "Reads an object from a file ."}
{"id": 1368, "prediction": "Converts a byte array to a byte array ."}
{"id": 1370, "prediction": "Create the table names for the given type ."}
{"id": 1372, "prediction": "Caches the entities in the entity cache ."}
{"id": 1374, "prediction": "Applies the given table name to the given table name ."}
{"id": 1376, "prediction": "Render a view of the specified action ."}
{"id": 1378, "prediction": "Gets the writer ."}
{"id": 1380, "prediction": "Writes the content to the response ."}
{"id": 1382, "prediction": "Prints the given string ."}
{"id": 1384, "prediction": "Gets the token as JSON ."}
{"id": 1386, "prediction": "Stops the user ."}
{"id": 1388, "prediction": "Creates a directory ."}
{"id": 1390, "prediction": "Copy file to destination ."}
{"id": 1392, "prediction": "Moves a file to a destination ."}
{"id": 1394, "prediction": "Removes all files from a directory ."}
{"id": 1396, "prediction": "Reads chars from a file ."}
{"id": 1398, "prediction": "Write a string to a file ."}
{"id": 1400, "prediction": "Read a number of bytes from a file ."}
{"id": 1402, "prediction": "Append bytes to a file ."}
{"id": 1404, "prediction": "Delete a file ."}
{"id": 1406, "prediction": "Checks if the given file is binary ."}
{"id": 1408, "prediction": "Checks if a file exists ."}
{"id": 1410, "prediction": "Resolve action method ."}
{"id": 1412, "prediction": "Registers a path alias ."}
{"id": 1414, "prediction": "Create a CharArraySequenceSequence ."}
{"id": 1416, "prediction": "Checks if the target string matches the upper case ."}
{"id": 1418, "prediction": "Creates the URL of the given class loader ."}
{"id": 1420, "prediction": "Register a serializer for the given type ."}
{"id": 1422, "prediction": "Parses a request ."}
{"id": 1424, "prediction": "Gets the values of the specified parameter ."}
{"id": 1426, "prediction": "Get file upload request ."}
{"id": 1428, "prediction": "Parses the given template ."}
{"id": 1430, "prediction": "Counts the number of escapes in the template ."}
{"id": 1432, "prediction": "Parse a query string ."}
{"id": 1434, "prediction": "Extract media type from content type ."}
{"id": 1436, "prediction": "Converts the appendable node to the inner appendable ."}
{"id": 1438, "prediction": "Reset the class path ."}
{"id": 1440, "prediction": "Replies the type for the given target class ."}
{"id": 1442, "prediction": "Parses a map ."}
{"id": 1444, "prediction": "Skip an object ."}
{"id": 1446, "prediction": "Parse a string into a string ."}
{"id": 1448, "prediction": "Parses the given string ."}
{"id": 1450, "prediction": "Parse array content ."}
{"id": 1452, "prediction": "Create a simple method wrapper ."}
{"id": 1454, "prediction": "Resolve a reference from a property descriptor ."}
{"id": 1456, "prediction": "Reads all references from the given method descriptor ."}
{"id": 1458, "prediction": "Builds the default reference for the given property descriptor ."}
{"id": 1460, "prediction": "Converts a list of references to a bean ."}
{"id": 1462, "prediction": "Runs the joy ."}
{"id": 1464, "prediction": "Finds a constructor that matches the given parameter types ."}
{"id": 1466, "prediction": "Compare two parameters ."}
{"id": 1468, "prediction": "Create a new instance of the given class ."}
{"id": 1470, "prediction": "Get the child class of the given class ."}
{"id": 1472, "prediction": "Sleep for the specified number of milliseconds ."}
{"id": 1474, "prediction": "Wait for an object to be executed ."}
{"id": 1476, "prediction": "Returns the value associated with this supplier ."}
{"id": 1478, "prediction": "Visit an annotation ."}
{"id": 1480, "prediction": "Visit a parameter annotation ."}
{"id": 1482, "prediction": "Visit a method instruction ."}
{"id": 1484, "prediction": "Visit a jump instruction ."}
{"id": 1486, "prediction": "Visit a TryCatch block ."}
{"id": 1488, "prediction": "Convert the properties to a writer ."}
{"id": 1490, "prediction": "Returns the next element ."}
{"id": 1492, "prediction": "Join array of arrays ."}
{"id": 1494, "prediction": "Resizes the buffer to a new array ."}
{"id": 1496, "prediction": "Removes the specified component from the array ."}
{"id": 1498, "prediction": "Returns the index of the first occurrence of the given value ."}
{"id": 1500, "prediction": "Enables XML mode ."}
{"id": 1502, "prediction": "Parse a DOM document ."}
{"id": 1504, "prediction": "End the current basic block ."}
{"id": 1506, "prediction": "Inject servlet context ."}
{"id": 1508, "prediction": "Lookup a pseudo class by name ."}
{"id": 1510, "prediction": "Get all bean property names ."}
{"id": 1512, "prediction": "Returns true if the specified rule is equal to the specified rule ."}
{"id": 1514, "prediction": "Read filter configuration parameters ."}
{"id": 1516, "prediction": "Looks up the bundle for the given bundle ID ."}
{"id": 1518, "prediction": "Registers a bundle ."}
{"id": 1520, "prediction": "Create the bundle ."}
{"id": 1522, "prediction": "Fixes URL links to a CSS file ."}
{"id": 1524, "prediction": "Creates the table name for the given entity ."}
{"id": 1526, "prediction": "Converts an object to a single element ."}
{"id": 1528, "prediction": "Resolve the set of classes ."}
{"id": 1530, "prediction": "Open a connection ."}
{"id": 1532, "prediction": "Close the transaction ."}
{"id": 1534, "prediction": "Rollback the transaction ."}
{"id": 1281, "prediction": "Open a resource ."}
{"id": 1283, "prediction": "Get the input stream for the given class ."}
{"id": 1285, "prediction": "Add a new route ."}
{"id": 1287, "prediction": "Parse request parameters ."}
{"id": 1289, "prediction": "Invokes a setter for the given value ."}
{"id": 1291, "prediction": "Creates a bean instance ."}
{"id": 1293, "prediction": "Stops the cookie ."}
{"id": 1295, "prediction": "Converts a Date to a Date ."}
{"id": 1297, "prediction": "Defines a proxy ."}
{"id": 1299, "prediction": "Creates a ValidationContext for the given class ."}
{"id": 1301, "prediction": "Collects annotations for a property ."}
{"id": 1303, "prediction": "Copies the properties from the given annotation ."}
{"id": 1305, "prediction": "Encodes the given URI ."}
{"id": 1307, "prediction": "Encodes the given URI ."}
{"id": 1309, "prediction": "Encodes the given URI ."}
{"id": 1311, "prediction": "Encodes a URI query parameter ."}
{"id": 1313, "prediction": "Retrieves all the properties of the given type ."}
{"id": 1315, "prediction": "Get the cookies ."}
{"id": 1317, "prediction": "Close the connection ."}
{"id": 1319, "prediction": "Prints out the routes ."}
{"id": 1321, "prediction": "Decrypt a byte array ."}
{"id": 1323, "prediction": "Generate a list from a list ."}
{"id": 1325, "prediction": "Generate a map for the given key type ."}
{"id": 1327, "prediction": "Sets the default header to use ."}
{"id": 1329, "prediction": "Sends a request to the server ."}
{"id": 1331, "prediction": "Read all cookies ."}
{"id": 1333, "prediction": "Send an email message ."}
{"id": 1335, "prediction": "Sets the sent date ."}
{"id": 1337, "prediction": "Sets the recipients of the email message ."}
{"id": 1339, "prediction": "Adds the body data to the message ."}
{"id": 1341, "prediction": "Create attachment part ."}
{"id": 1343, "prediction": "Saves the result set ."}
{"id": 1345, "prediction": "Closes the query ."}
{"id": 1347, "prediction": "Sets the fetch size ."}
{"id": 1349, "prediction": "Execute update query ."}
{"id": 1351, "prediction": "Gets the generated columns ."}
{"id": 1353, "prediction": "Creates a proxy instance for the given aspect class ."}
{"id": 1355, "prediction": "Create a stream from an iterator ."}
{"id": 1357, "prediction": "Sets the default wiring mode ."}
{"id": 1359, "prediction": "Gets the caller class name ."}
{"id": 1361, "prediction": "Exclude the given types ."}
{"id": 1363, "prediction": "Serializes an object to a string ."}
{"id": 1365, "prediction": "Write object to file ."}
{"id": 1367, "prediction": "Converts an object to a byte array ."}
{"id": 1369, "prediction": "Resolve the names of the mapped types ."}
{"id": 1371, "prediction": "Read column value ."}
{"id": 1373, "prediction": "Resolve provider definition ."}
{"id": 1375, "prediction": "Checks if a connection is valid ."}
{"id": 1377, "prediction": "Locates the default target view ."}
{"id": 1379, "prediction": "Get the output stream ."}
{"id": 1381, "prediction": "Sets the content type ."}
{"id": 1383, "prediction": "Performs the login ."}
{"id": 1385, "prediction": "Convenience method for login ."}
{"id": 1387, "prediction": "Converts a URL to a container file ."}
{"id": 1389, "prediction": "Creates a new directory ."}
{"id": 1391, "prediction": "Copy files to destination directory"}
{"id": 1393, "prediction": "Moves the given source to the destination directory ."}
{"id": 1395, "prediction": "Reads chars from a file ."}
{"id": 1397, "prediction": "Writes the contents of the given file to the given file ."}
{"id": 1399, "prediction": "Append a string to a file ."}
{"id": 1401, "prediction": "Write bytes to a file ."}
{"id": 1403, "prediction": "Copy a file to destination ."}
{"id": 1405, "prediction": "Creates a temporary directory ."}
{"id": 1407, "prediction": "Checks if the source directory exists ."}
{"id": 1409, "prediction": "Print usage information ."}
{"id": 1411, "prediction": "Registers an action ."}
{"id": 1413, "prediction": "Moves to the next value ."}
{"id": 1415, "prediction": "Execute the proxy ."}
{"id": 1417, "prediction": "Create a char sequence from the input ."}
{"id": 1419, "prediction": "Add a new email address ."}
{"id": 1421, "prediction": "Lookup the serializer for the given type ."}
{"id": 1423, "prediction": "Gets a parameter from the request ."}
{"id": 1425, "prediction": "Get file upload ."}
{"id": 1427, "prediction": "Initialize this filter ."}
{"id": 1429, "prediction": "Find the end index of a template ."}
{"id": 1431, "prediction": "Build query string ."}
{"id": 1433, "prediction": "Prepare the header parameter name ."}
{"id": 1435, "prediction": "Converts an appendable node to a HTML document ."}
{"id": 1437, "prediction": "Configure the madvoc configuration ."}
{"id": 1439, "prediction": "Sets the lazy parser ."}
{"id": 1441, "prediction": "Parses the given string into a list of objects ."}
{"id": 1443, "prediction": "Resolves the value for the given value ."}
{"id": 1445, "prediction": "Parses the given string ."}
{"id": 1447, "prediction": "Parse unicode character ."}
{"id": 1449, "prediction": "Parse a number ."}
{"id": 1451, "prediction": "Create empty Ctor code ."}
{"id": 1453, "prediction": "Resolve raw type name ."}
{"id": 1455, "prediction": "Resolve references to the given method descriptor ."}
{"id": 1457, "prediction": "Build default references for the given method ."}
{"id": 1459, "prediction": "Removes duplicate names from the cache ."}
{"id": 1461, "prediction": "Converts the given value to an annotation ."}
{"id": 1463, "prediction": "Finds a method with the given name ."}
{"id": 1465, "prediction": "Resolves all interfaces implemented by the given class ."}
{"id": 1467, "prediction": "Force access ."}
{"id": 1469, "prediction": "Get the superclasses of the given type ."}
{"id": 1471, "prediction": "Returns the JarFile for the given class ."}
{"id": 1473, "prediction": "Sleep for the current thread ."}
{"id": 1475, "prediction": "Creates a thread factory ."}
{"id": 1477, "prediction": "Visit a parameter ."}
{"id": 1479, "prediction": "Visit a type annotation ."}
{"id": 1481, "prediction": "Visit a field instruction ."}
{"id": 1483, "prediction": "overrides the visitor to set the invoke method ."}
{"id": 1485, "prediction": "Visit a MultiWarn array ."}
{"id": 1487, "prediction": "Visit a local variable annotation ."}
{"id": 1489, "prediction": "Processes the input file ."}
{"id": 1491, "prediction": "Moves to the next row ."}
{"id": 1493, "prediction": "Joins the array of arrays ."}
{"id": 1495, "prediction": "Appends a new element to the buffer ."}
{"id": 1497, "prediction": "Returns the index of the first occurrence of the specified char array ."}
{"id": 1499, "prediction": "Returns the index of the first occurrence of the specified byte array ."}
{"id": 1501, "prediction": "Parse a document ."}
{"id": 1503, "prediction": "Compute the max stack ."}
{"id": 1505, "prediction": "Collect attribute types ."}
{"id": 1507, "prediction": "Register a pseudo class ."}
{"id": 1509, "prediction": "Invokes the given action ."}
{"id": 1511, "prediction": "Visit all properties ."}
{"id": 1513, "prediction": "Resolve method injection points ."}
{"id": 1515, "prediction": "Sends a bundle to a file ."}
{"id": 1517, "prediction": "Looks up the gzip file for the specified file ."}
{"id": 1519, "prediction": "Create digest ."}
{"id": 1521, "prediction": "Reset all the bundles"}
{"id": 1523, "prediction": "Updates column ."}
{"id": 1525, "prediction": "Get the DB session"}
{"id": 1527, "prediction": "Parse the signature for a generic signature ."}
{"id": 1529, "prediction": "Checks if the property type is excluded ."}
{"id": 1531, "prediction": "Open a transaction ."}
{"id": 1533, "prediction": "Commits the transaction ."}
{"id": 1535, "prediction": "Loads properties from a file ."}
{"id": 1536, "prediction": "Create a Properties object from a String ."}
{"id": 1538, "prediction": "Creates a subset of properties ."}
{"id": 1540, "prediction": "Gets a property from the map ."}
{"id": 1542, "prediction": "Gets a property from the map ."}
{"id": 1544, "prediction": "Gets the transaction mode ."}
{"id": 1546, "prediction": "Reads TransactionAnnotationValues ."}
{"id": 1548, "prediction": "Checks if the given node is a match ."}
{"id": 1550, "prediction": "Unescapes a string ."}
{"id": 1552, "prediction": "Clone the given destination ."}
{"id": 1554, "prediction": "Add a child to this node ."}
{"id": 1556, "prediction": "Inserts the given ref into this node ."}
{"id": 1558, "prediction": "Inserts a new child into this node ."}
{"id": 1560, "prediction": "Remove all child nodes ."}
{"id": 1562, "prediction": "Returns all child nodes that match the given predicate ."}
{"id": 1564, "prediction": "Initialize the child elements ."}
{"id": 1566, "prediction": "Initialize the child nodes ."}
{"id": 1568, "prediction": "Gets the previous sibling name ."}
{"id": 1570, "prediction": "Returns the HTML document ."}
{"id": 1572, "prediction": "Visit all child nodes ."}
{"id": 1574, "prediction": "On tag ."}
{"id": 1576, "prediction": "Define a new decoder"}
{"id": 1578, "prediction": "Add a root package to the mapping ."}
{"id": 1580, "prediction": "Find the root package for the given action path ."}
{"id": 1582, "prediction": "Remove duplicated references from this bean ."}
{"id": 1584, "prediction": "Iterates over the target consumer ."}
{"id": 1586, "prediction": "Iterates through the given scope and executes the given target ."}
{"id": 1588, "prediction": "Creates an array of target types ."}
{"id": 1590, "prediction": "Called when a session has been created ."}
{"id": 1592, "prediction": "Adds a value to the list ."}
{"id": 1594, "prediction": "Removes a value from the map ."}
{"id": 1596, "prediction": "Called when a target is not found ."}
{"id": 1598, "prediction": "Filter the action filter ."}
{"id": 1600, "prediction": "Resolve property injection points ."}
{"id": 1602, "prediction": "Gets the count of all attributes ."}
{"id": 1604, "prediction": "Checks if the given char is equal ."}
{"id": 1606, "prediction": "Returns the index of the first occurrence of the given char ."}
{"id": 1608, "prediction": "Sets the env value ."}
{"id": 1610, "prediction": "Invoke a listener ."}
{"id": 1612, "prediction": "Gets the abstract type from the given symbol table ."}
{"id": 1614, "prediction": "Sets the input frame from an API format ."}
{"id": 1616, "prediction": "Sets the local variable ."}
{"id": 1618, "prediction": "Pushes a symbol table ."}
{"id": 1620, "prediction": "Pops the given descriptor ."}
{"id": 1622, "prediction": "Returns the initial type for the given symbol table ."}
{"id": 1624, "prediction": "Removes all entries from the cache ."}
{"id": 1626, "prediction": "Visit a module ."}
{"id": 1628, "prediction": "Visit an outer class ."}
{"id": 1630, "prediction": "Visit a node ."}
{"id": 1632, "prediction": "Visit a field ."}
{"id": 1634, "prediction": "Closes the session ."}
{"id": 1636, "prediction": "Invokes the action method ."}
{"id": 1638, "prediction": "Calculates the index of the first item in the page ."}
{"id": 1640, "prediction": "Checks whether the given value matches the given value ."}
{"id": 1642, "prediction": "Find the first occurrence of the given source"}
{"id": 1644, "prediction": "Resolve an attribute name ."}
{"id": 1646, "prediction": "Load props ."}
{"id": 1648, "prediction": "Load props ."}
{"id": 1650, "prediction": "Load props ."}
{"id": 1652, "prediction": "Returns the value associated with the given key ."}
{"id": 1654, "prediction": "Extract props ."}
{"id": 1656, "prediction": "Extract sub props ."}
{"id": 1658, "prediction": "Adds the inner map to the profile ."}
{"id": 1660, "prediction": "Get all profiles ."}
{"id": 1662, "prediction": "Adds a property injection point ."}
{"id": 1664, "prediction": "Add a MethodInjectionPoint ."}
{"id": 1666, "prediction": "Add destroy methods ."}
{"id": 1668, "prediction": "Inject target ."}
{"id": 1670, "prediction": "Find the field descriptor for the given field ."}
{"id": 1672, "prediction": "Resolve the key type ."}
{"id": 1674, "prediction": "Creates a JsonResult from an object ."}
{"id": 1676, "prediction": "Resolve the HttpMethod from a method name ."}
{"id": 1678, "prediction": "Resolve loading ."}
{"id": 1680, "prediction": "Loads a class ."}
{"id": 1682, "prediction": "Wait for the thread to finish ."}
{"id": 1684, "prediction": "Build InjectionPoint ."}
{"id": 1686, "prediction": "Replies the URLs of the given class ."}
{"id": 1688, "prediction": "Updates the bean ."}
{"id": 1690, "prediction": "Gets the property ."}
{"id": 1692, "prediction": "Connect to db ."}
{"id": 1694, "prediction": "Print log ."}
{"id": 1696, "prediction": "Creates a socket ."}
{"id": 1698, "prediction": "Gets the default SSLSocketFactory ."}
{"id": 1700, "prediction": "Returns a random string with the specified number of characters ."}
{"id": 1702, "prediction": "Generate a random range of characters ."}
{"id": 1704, "prediction": "Inject a value into an object ."}
{"id": 1706, "prediction": "Visit a provider ."}
{"id": 1708, "prediction": "Put a value into the map ."}
{"id": 1710, "prediction": "Returns the IP address of the given hostname ."}
{"id": 1712, "prediction": "Validate the input string ."}
{"id": 1714, "prediction": "Download bytes from a URL ."}
{"id": 1716, "prediction": "Download file ."}
{"id": 1718, "prediction": "Dispatches the given action request ."}
{"id": 1720, "prediction": "Connect to the specified host and port ."}
{"id": 1722, "prediction": "Loads a class ."}
{"id": 1724, "prediction": "Shuts down all resources ."}
{"id": 1726, "prediction": "Returns a binary search for the given element ."}
{"id": 1728, "prediction": "Includes the given rules ."}
{"id": 1730, "prediction": "Start the start tag ."}
{"id": 1732, "prediction": "Resolve column type ."}
{"id": 1734, "prediction": "Create a ResultSetMapper ."}
{"id": 1736, "prediction": "Populate generated keys ."}
{"id": 1738, "prediction": "Sets the bean ."}
{"id": 1740, "prediction": "Sets the array of objects ."}
{"id": 1742, "prediction": "Looks up the type for the given entity ."}
{"id": 1744, "prediction": "Resolve table name ."}
{"id": 1746, "prediction": "Append missing whitespace ."}
{"id": 1748, "prediction": "Returns true if the specified page is included in the request ."}
{"id": 1750, "prediction": "Gets the request uri ."}
{"id": 1752, "prediction": "Creates a new Petite instance ."}
{"id": 1754, "prediction": "Applies the filter to the subject ."}
{"id": 1756, "prediction": "Filter from address string ."}
{"id": 1758, "prediction": "Filter a cc address ."}
{"id": 1760, "prediction": "Applies the given flags to the given flags ."}
{"id": 1762, "prediction": "Filter a date with the specified operator ."}
{"id": 1764, "prediction": "Set the size of the email filter ."}
{"id": 1766, "prediction": "Filter the email filters"}
{"id": 1768, "prediction": "Concatenate the given search term ."}
{"id": 1770, "prediction": "Convert an object to a byte array ."}
{"id": 1772, "prediction": "Validates the given target object ."}
{"id": 1774, "prediction": "Use this method to set the profile ."}
{"id": 1776, "prediction": "Checks if the given profiles are enabled ."}
{"id": 1778, "prediction": "Returns the number of milliseconds in milliseconds ."}
{"id": 1780, "prediction": "Subtract a Julian date ."}
{"id": 1782, "prediction": "Initialize the parser ."}
{"id": 1784, "prediction": "Write error message ."}
{"id": 1786, "prediction": "Creates a PBKDF2 from the given salt ."}
{"id": 1788, "prediction": "Resolve provider definitions ."}
{"id": 1790, "prediction": "Set the content id from the file ."}
{"id": 1537, "prediction": "Load properties from a string ."}
{"id": 1539, "prediction": "Loads properties from classpath ."}
{"id": 1541, "prediction": "Resolve all variables ."}
{"id": 1543, "prediction": "Resolve scope ."}
{"id": 1545, "prediction": "Registers annotation annotations ."}
{"id": 1547, "prediction": "Returns true if the given node matches the given name ."}
{"id": 1549, "prediction": "Checks if the given node matches the given results ."}
{"id": 1551, "prediction": "Build the JRE packages ."}
{"id": 1553, "prediction": "Removes the node from the parent ."}
{"id": 1555, "prediction": "Inserts a child at the given index ."}
{"id": 1557, "prediction": "Inserts a new child before the given ref ."}
{"id": 1559, "prediction": "Inserts a new child of this node ."}
{"id": 1561, "prediction": "Find the child node with the given name ."}
{"id": 1563, "prediction": "Checks if this node is a child node ."}
{"id": 1565, "prediction": "Initialize the sibling names ."}
{"id": 1567, "prediction": "Change the owner document ."}
{"id": 1569, "prediction": "Returns the text content of this node ."}
{"id": 1571, "prediction": "Gets the inner HTML ."}
{"id": 1573, "prediction": "Get the CSS path ."}
{"id": 1575, "prediction": "On id tag ."}
{"id": 1577, "prediction": "Add a proxy ."}
{"id": 1579, "prediction": "Adds the root package to the given action class ."}
{"id": 1581, "prediction": "Resolve a validation message ."}
{"id": 1583, "prediction": "Add props ."}
{"id": 1585, "prediction": "Iterates through the given scope and passes the given parameters ."}
{"id": 1587, "prediction": "Extract the parameters from the target array ."}
{"id": 1589, "prediction": "Create an action argument ."}
{"id": 1591, "prediction": "Called when a session has been destroyed ."}
{"id": 1593, "prediction": "Adds all elements to the list ."}
{"id": 1595, "prediction": "Resolve target ."}
{"id": 1597, "prediction": "Converts an object to a string ."}
{"id": 1599, "prediction": "Gets the pseudo function name ."}
{"id": 1601, "prediction": "Creates a socket for a proxy ."}
{"id": 1603, "prediction": "Get all action results ."}
{"id": 1605, "prediction": "Find the first index of the given CharSequence ."}
{"id": 1607, "prediction": "Add command line arguments ."}
{"id": 1609, "prediction": "Run the process ."}
{"id": 1611, "prediction": "Copy the given frame to the given frame ."}
{"id": 1613, "prediction": "Get abstract type from symbol table ."}
{"id": 1615, "prediction": "Gets the local index ."}
{"id": 1617, "prediction": "Push the given abstract type to the output stack ."}
{"id": 1619, "prediction": "Removes the given number of elements from the stack ."}
{"id": 1621, "prediction": "Adds an abstract type to the array ."}
{"id": 1623, "prediction": "Put abstract type ."}
{"id": 1625, "prediction": "Schedules a prune timer ."}
{"id": 1627, "prediction": "Visit a host ."}
{"id": 1629, "prediction": "Visit an annotation ."}
{"id": 1631, "prediction": "Visit an inner class ."}
{"id": 1633, "prediction": "Gets the session ."}
{"id": 1635, "prediction": "Creates the execution array for the action ."}
{"id": 1637, "prediction": "Reads the request body ."}
{"id": 1639, "prediction": "Calculates the index of the first item in the page ."}
{"id": 1641, "prediction": "Converts a char array into a byte array ."}
{"id": 1643, "prediction": "Returns the node name for the given node ."}
{"id": 1645, "prediction": "Renders an attribute ."}
{"id": 1647, "prediction": "Load props ."}
{"id": 1649, "prediction": "Load props ."}
{"id": 1651, "prediction": "Load properties from classpath ."}
{"id": 1653, "prediction": "Sets the profile ."}
{"id": 1655, "prediction": "Extract props from target profile"}
{"id": 1657, "prediction": "Returns the inner map of active profiles ."}
{"id": 1659, "prediction": "Resolve active profiles ."}
{"id": 1661, "prediction": "Gets the profiles for the given property ."}
{"id": 1663, "prediction": "Add a set injection point ."}
{"id": 1665, "prediction": "Add init methods ."}
{"id": 1667, "prediction": "Resolve the target class ."}
{"id": 1669, "prediction": "Get the target wrapper type ."}
{"id": 1671, "prediction": "Returns the type of the field ."}
{"id": 1673, "prediction": "Resolve the component type ."}
{"id": 1675, "prediction": "Create a JsonResult from an Exception"}
{"id": 1677, "prediction": "Checks if the string matches the specified pattern ."}
{"id": 1679, "prediction": "Resolve resource loading ."}
{"id": 1681, "prediction": "Returns the URL for the given resource ."}
{"id": 1683, "prediction": "Detect annotation type ."}
{"id": 1685, "prediction": "overrides the visitor to look for all fields"}
{"id": 1687, "prediction": "Sets the bean ."}
{"id": 1689, "prediction": "Loads the property descriptor ."}
{"id": 1691, "prediction": "Gets the setter property ."}
{"id": 1693, "prediction": "Adds an iterator to this iterator ."}
{"id": 1695, "prediction": "Stop this hub ."}
{"id": 1697, "prediction": "Creates a new SSLSocket connection ."}
{"id": 1699, "prediction": "Gets the socket factory ."}
{"id": 1701, "prediction": "Returns a random string with the specified character ."}
{"id": 1703, "prediction": "Create a new collection instance ."}
{"id": 1705, "prediction": "Convert the given value to a type ."}
{"id": 1707, "prediction": "Creates a default type cache ."}
{"id": 1709, "prediction": "Get all MethodDescriptors ."}
{"id": 1711, "prediction": "Converts a string into an IP address ."}
{"id": 1713, "prediction": "Returns the host name for the given IP address ."}
{"id": 1715, "prediction": "Download a string from a URL ."}
{"id": 1717, "prediction": "Injects the given action ."}
{"id": 1719, "prediction": "Connect to the given hostname and port"}
{"id": 1721, "prediction": "Returns the index of the primitive class name ."}
{"id": 1723, "prediction": "Load an array class by name ."}
{"id": 1725, "prediction": "Returns a binary search for the given array ."}
{"id": 1727, "prediction": "Exclude the given rules ."}
{"id": 1729, "prediction": "Includes the specified property ."}
{"id": 1731, "prediction": "Register a component with the given name ."}
{"id": 1733, "prediction": "Preprocess a SQL statement ."}
{"id": 1735, "prediction": "Find generated key ."}
{"id": 1737, "prediction": "Creates a new bean instance ."}
{"id": 1739, "prediction": "Sets the map ."}
{"id": 1741, "prediction": "Inserts a new chunk after the previous chunk ."}
{"id": 1743, "prediction": "Find column reference ."}
{"id": 1745, "prediction": "Resolve a class ."}
{"id": 1747, "prediction": "Returns an enumeration of all the file parameter names ."}
{"id": 1749, "prediction": "Returns the URL of the request ."}
{"id": 1751, "prediction": "Resolve parameter names ."}
{"id": 1753, "prediction": "Stop the petite ."}
{"id": 1755, "prediction": "Filter the given message id ."}
{"id": 1757, "prediction": "Filter to address"}
{"id": 1759, "prediction": "Filter the given BCC address ."}
{"id": 1761, "prediction": "Add a flag to the filter ."}
{"id": 1763, "prediction": "Filter the specified date in milliseconds ."}
{"id": 1765, "prediction": "Add two email filters ."}
{"id": 1767, "prediction": "Filter the given email filter"}
{"id": 1769, "prediction": "Encodes a byte array ."}
{"id": 1771, "prediction": "Checks if the request is gzipable ."}
{"id": 1773, "prediction": "Validates the given target ."}
{"id": 1775, "prediction": "Sets the enabled profiles ."}
{"id": 1777, "prediction": "Parse request body ."}
{"id": 1779, "prediction": "Add a Julian date to this date ."}
{"id": 1781, "prediction": "Sets the fraction ."}
{"id": 1783, "prediction": "Emits a comment ."}
{"id": 1785, "prediction": "Generate a hash of a password ."}
{"id": 1787, "prediction": "Converts a hex string to a byte array ."}
{"id": 1789, "prediction": "Sets the name of the email attachment ."}
{"id": 1791, "prediction": "Resolve the content type ."}
{"id": 1792, "prediction": "Parse a Java type signature ."}
{"id": 1794, "prediction": "Writes the attributes of the module ."}
{"id": 1796, "prediction": "Decode query string ."}
{"id": 1798, "prediction": "Check connection provider ."}
{"id": 1800, "prediction": "overrides the visitor to look for superclasses"}
{"id": 1802, "prediction": "Convert an array of objects to a CSV string ."}
{"id": 1804, "prediction": "Resolve a CtorPoint from the given type ."}
{"id": 1806, "prediction": "Get the class reader for the given proxy ."}
{"id": 1808, "prediction": "Decrypt a string ."}
{"id": 1810, "prediction": "Sets the cookie name ."}
{"id": 1812, "prediction": "Creates a wrapper for the bean ."}
{"id": 1814, "prediction": "Shutdown all registered beans ."}
{"id": 1816, "prediction": "Starts the main service ."}
{"id": 1818, "prediction": "Print error message ."}
{"id": 1820, "prediction": "Returns a mapped file read only if it exists ."}
{"id": 1822, "prediction": "Runs the work queue ."}
{"id": 1824, "prediction": "Offers a new position in the queue ."}
{"id": 1826, "prediction": "Closes the archive ."}
{"id": 1828, "prediction": "Stop the replay session ."}
{"id": 1830, "prediction": "Called when an image is unavailable ."}
{"id": 1832, "prediction": "Returns the status of the given channel ."}
{"id": 1834, "prediction": "Appends a buffer to the buffer ."}
{"id": 1836, "prediction": "Creates a new ByteBuffer for the given aeron file ."}
{"id": 1838, "prediction": "Create a Unsafe header ."}
{"id": 1840, "prediction": "Add a new message to this buffer ."}
{"id": 1842, "prediction": "Try to connect to a response ."}
{"id": 1844, "prediction": "Start recording ."}
{"id": 1846, "prediction": "Performs a replay operation ."}
{"id": 1848, "prediction": "List records ."}
{"id": 1850, "prediction": "List a recording session ."}
{"id": 1852, "prediction": "Gets a recording position ."}
{"id": 1854, "prediction": "List subscriptions ."}
{"id": 1856, "prediction": "Returns the destination address of the given channel ."}
{"id": 1858, "prediction": "Add a destination to the remote destination ."}
{"id": 1860, "prediction": "Finds a ControlToggle ."}
{"id": 1862, "prediction": "Returns the channel tag ."}
{"id": 1864, "prediction": "Add session id ."}
{"id": 1866, "prediction": "Append the padding to the buffer ."}
{"id": 1868, "prediction": "Creates a new UnsafeBuffer ."}
{"id": 1870, "prediction": "Scans the buffer for the given length ."}
{"id": 1872, "prediction": "Validates the given media string ."}
{"id": 1874, "prediction": "Sets the media ."}
{"id": 1876, "prediction": "Sets the length of the term ."}
{"id": 1878, "prediction": "Sets the long value ."}
{"id": 1880, "prediction": "Closes the polling ."}
{"id": 1882, "prediction": "Receive a datagram channel ."}
{"id": 1884, "prediction": "This method is called when the retry timeout expires ."}
{"id": 1886, "prediction": "Allocates a AtomicCounter ."}
{"id": 1888, "prediction": "Validate the input buffer ."}
{"id": 1890, "prediction": "Calculates the length of the producer window ."}
{"id": 1892, "prediction": "Validate page size ."}
{"id": 1894, "prediction": "Validate the timeout ."}
{"id": 1896, "prediction": "Resets the log ."}
{"id": 1898, "prediction": "Adds a list of members to the cluster ."}
{"id": 1900, "prediction": "Check if the cluster is active ."}
{"id": 1902, "prediction": "Resets the log positions ."}
{"id": 1904, "prediction": "Checks if a member has a member of the members of the member ."}
{"id": 1906, "prediction": "Determine the member of the cluster member ."}
{"id": 1908, "prediction": "Checks if two clusters are identical ."}
{"id": 1910, "prediction": "Check if the cluster member is a quorum ."}
{"id": 1912, "prediction": "Find the index of the given cluster members ."}
{"id": 1914, "prediction": "Returns the highest ID of the cluster members ."}
{"id": 1916, "prediction": "Check if the driver is active ."}
{"id": 1918, "prediction": "Check if the driver is active ."}
{"id": 1920, "prediction": "Calculates the length of the given buffer ."}
{"id": 1922, "prediction": "Set the type of the given buffer ."}
{"id": 1924, "prediction": "Sets the term offset for the given buffer ."}
{"id": 1926, "prediction": "Searches for a recording id ."}
{"id": 1928, "prediction": "Returns the record ID for the given counter ."}
{"id": 1930, "prediction": "Sets the status code for the application ."}
{"id": 1932, "prediction": "Finds the last term ."}
{"id": 1934, "prediction": "Creates a RecoveryPlan ."}
{"id": 1936, "prediction": "Append a snapshot of the log entry ."}
{"id": 1938, "prediction": "Adds the entry to the table ."}
{"id": 1940, "prediction": "Offers a vector from the source buffer ."}
{"id": 1942, "prediction": "Get the current channel ."}
{"id": 1944, "prediction": "Checks the length of the given term ."}
{"id": 1946, "prediction": "Calls the active term count ."}
{"id": 1948, "prediction": "Compute the log length ."}
{"id": 1950, "prediction": "Applies the default header to the given metadata ."}
{"id": 1952, "prediction": "Initializes the tail with the given term id ."}
{"id": 1954, "prediction": "Returns the raw tail of the given metadata ."}
{"id": 1956, "prediction": "Set the driver to the driver ."}
{"id": 1958, "prediction": "Finds the last counter id ."}
{"id": 1960, "prediction": "Returns the snapshot of the given counter id ."}
{"id": 1962, "prediction": "Set the channel to be sent to the server ."}
{"id": 1964, "prediction": "Wrap the given buffer ."}
{"id": 1966, "prediction": "Abort the buffer ."}
{"id": 1968, "prediction": "Closes this connection ."}
{"id": 1970, "prediction": "Allocate a new counter ."}
{"id": 1972, "prediction": "Creates a snapshot of the given stream ."}
{"id": 1974, "prediction": "Closes this buffer ."}
{"id": 1976, "prediction": "Adds a new slab to the buffer ."}
{"id": 1978, "prediction": "Add the given statistics ."}
{"id": 1980, "prediction": "Convert an array type to a group type ."}
{"id": 1982, "prediction": "Concatenate a message to a string"}
{"id": 1984, "prediction": "Reads a single object from the stream ."}
{"id": 1986, "prediction": "Reads the overview of the footer ."}
{"id": 1988, "prediction": "Read next row group ."}
{"id": 1990, "prediction": "Reads a dictionary ."}
{"id": 1992, "prediction": "Remove a writer from the internal storage ."}
{"id": 1994, "prediction": "Registers a call back to the given callbacks ."}
{"id": 1996, "prediction": "Starts the block ."}
{"id": 1998, "prediction": "Writes a dictionary page ."}
{"id": 2000, "prediction": "Writes a single column ."}
{"id": 2002, "prediction": "Copies the given input stream to the given position ."}
{"id": 2004, "prediction": "Merges the file metadata ."}
{"id": 2006, "prediction": "Write the metadata file ."}
{"id": 2008, "prediction": "Reads the value of the property ."}
{"id": 2010, "prediction": "Returns the coalesce of the given objects ."}
{"id": 2012, "prediction": "Create a ThriftMetaData object from the extra data ."}
{"id": 2014, "prediction": "Returns the meta data ."}
{"id": 2016, "prediction": "Writes the page ."}
{"id": 2018, "prediction": "Allocate the values in the header buffer ."}
{"id": 2020, "prediction": "Calculate the bit widths for the delta"}
{"id": 2022, "prediction": "Get the statistics for the given type ."}
{"id": 2024, "prediction": "Merge statistics ."}
{"id": 2026, "prediction": "Creates a new TaskAttemptContext instance ."}
{"id": 2028, "prediction": "Display the string representation of a member ."}
{"id": 2030, "prediction": "Initialize counter ."}
{"id": 2032, "prediction": "Reads all the footer data from the file ."}
{"id": 2034, "prediction": "Writes the message ."}
{"id": 2036, "prediction": "Serialize a message ."}
{"id": 2038, "prediction": "Changes the required fields of the required fields ."}
{"id": 2040, "prediction": "Read file meta data from input stream ."}
{"id": 2042, "prediction": "Sets the schema for the given job type ."}
{"id": 2044, "prediction": "Assert that the column type is valid ."}
{"id": 2046, "prediction": "Creates a new schema mapping from the given arrow schema ."}
{"id": 1793, "prediction": "Compute the size of the attributes ."}
{"id": 1795, "prediction": "Decode a string using the given encoding ."}
{"id": 1797, "prediction": "Start the database ."}
{"id": 1799, "prediction": "Visit a method signature ."}
{"id": 1801, "prediction": "Create a method signature ."}
{"id": 1803, "prediction": "Converts a line into a string ."}
{"id": 1805, "prediction": "Creates a class reader ."}
{"id": 1807, "prediction": "Encrypt a string ."}
{"id": 1809, "prediction": "Gets a logger ."}
{"id": 1811, "prediction": "Create an action ."}
{"id": 1813, "prediction": "Destroy bean ."}
{"id": 1815, "prediction": "Gets all the received emails ."}
{"id": 1817, "prediction": "Run the report ."}
{"id": 1819, "prediction": "Prints a rate message ."}
{"id": 1821, "prediction": "Closes the subscription ."}
{"id": 1823, "prediction": "Returns the position of the log ."}
{"id": 1825, "prediction": "Appends the padding to the buffer ."}
{"id": 1827, "prediction": "Poll for error response ."}
{"id": 1829, "prediction": "Called when an image is available ."}
{"id": 1831, "prediction": "Returns the status of the given channel ."}
{"id": 1833, "prediction": "Sets the limit ."}
{"id": 1835, "prediction": "Returns the poll for this fragment ."}
{"id": 1837, "prediction": "Creates a snapshot of the current stream ."}
{"id": 1839, "prediction": "Set the key - value pair ."}
{"id": 1841, "prediction": "Connects to the response stream ."}
{"id": 1843, "prediction": "Closes the session ."}
{"id": 1845, "prediction": "Stop recording ."}
{"id": 1847, "prediction": "Stops the replay session ."}
{"id": 1849, "prediction": "List records for a given URI ."}
{"id": 1851, "prediction": "Extend a recording for a given location"}
{"id": 1853, "prediction": "Gets the stop position ."}
{"id": 1855, "prediction": "Checks if the tag matches the specified udp channel ."}
{"id": 1857, "prediction": "Returns the description of the channel ."}
{"id": 1859, "prediction": "Inserts a packet into the buffer ."}
{"id": 1861, "prediction": "Add a parameter ."}
{"id": 1863, "prediction": "Gets the entity tag ."}
{"id": 1865, "prediction": "Gets the value of a tag ."}
{"id": 1867, "prediction": "Update the publisher limit ."}
{"id": 1869, "prediction": "Returns the label name of the given type ."}
{"id": 1871, "prediction": "Resets the channel string ."}
{"id": 1873, "prediction": "Sets the prefix ."}
{"id": 1875, "prediction": "Set the control mode ."}
{"id": 1877, "prediction": "Sets the term offset ."}
{"id": 1879, "prediction": "Open a datagram channel ."}
{"id": 1881, "prediction": "Check if the frame is valid ."}
{"id": 1883, "prediction": "Performs the action on the given term ."}
{"id": 1885, "prediction": "Returns the status of the given status ."}
{"id": 1887, "prediction": "Resets the buffer ."}
{"id": 1889, "prediction": "Computes the length of the message buffer ."}
{"id": 1891, "prediction": "Validate the socket buffer length ."}
{"id": 1893, "prediction": "Validates the session id range ."}
{"id": 1895, "prediction": "Set the error code ."}
{"id": 1897, "prediction": "Encodes the given cluster members ."}
{"id": 1899, "prediction": "Close all the members in the cluster ."}
{"id": 1901, "prediction": "Returns the quorum position of the cluster ."}
{"id": 1903, "prediction": "Checks to see if a member has been reached ."}
{"id": 1905, "prediction": "Checks if a cluster member has a majority vote ."}
{"id": 1907, "prediction": "Validates the given member members ."}
{"id": 1909, "prediction": "Checks if the cluster member is unanimous ."}
{"id": 1911, "prediction": "Checks if the given members endpoints are duplicate ."}
{"id": 1913, "prediction": "Remove a member from the cluster ."}
{"id": 1915, "prediction": "Maps a CncCnccFile to a CncCncFile ."}
{"id": 1917, "prediction": "Check if the driver is active ."}
{"id": 1919, "prediction": "Requests the driver for the given directory ."}
{"id": 1921, "prediction": "Calculates the length of the frame ."}
{"id": 1923, "prediction": "Writes the given flags to the given buffer ."}
{"id": 1925, "prediction": "Sets the term id for the given buffer ."}
{"id": 1927, "prediction": "Finds a counter by session id ."}
{"id": 1929, "prediction": "Returns true if the given counter is active ."}
{"id": 1931, "prediction": "Reloads all entries from the file ."}
{"id": 1933, "prediction": "Creates a recovery plan ."}
{"id": 1935, "prediction": "Append a term to the end of the entry ."}
{"id": 1937, "prediction": "Commits a log entry ."}
{"id": 1939, "prediction": "Closes the publication ."}
{"id": 1941, "prediction": "Unblock the given term buffer ."}
{"id": 1943, "prediction": "Add a channel to the channel ."}
{"id": 1945, "prediction": "Checks if the given page size is a valid page ."}
{"id": 1947, "prediction": "Computes the position of an active term ."}
{"id": 1949, "prediction": "Stores the default frame header ."}
{"id": 1951, "prediction": "Rotate log ."}
{"id": 1953, "prediction": "Returns the offset of the given length ."}
{"id": 1955, "prediction": "Checks to see if the given raw tail is valid ."}
{"id": 1957, "prediction": "Allocates a new counter ."}
{"id": 1959, "prediction": "Checks if the given counter has been played ."}
{"id": 1961, "prediction": "Converts a flags into an array of flags ."}
{"id": 1963, "prediction": "Offers a cluster ."}
{"id": 1965, "prediction": "Commits the current state of this buffer ."}
{"id": 1967, "prediction": "Main entry point ."}
{"id": 1969, "prediction": "Returns the position of the frame ."}
{"id": 1971, "prediction": "Finds the counter id for the given counter ."}
{"id": 1973, "prediction": "Allocates a new AtomicCounter ."}
{"id": 1975, "prediction": "Dispatch a recording descriptor ."}
{"id": 1977, "prediction": "Set the value at the given index ."}
{"id": 1979, "prediction": "Calculates the row ranges for a given row count ."}
{"id": 1981, "prediction": "Convert a name to a group type ."}
{"id": 1983, "prediction": "Ends the previous bit packed ."}
{"id": 1985, "prediction": "Reads the list of footer ."}
{"id": 1987, "prediction": "Reads the metadata from the input file ."}
{"id": 1989, "prediction": "Read the next row group ."}
{"id": 1991, "prediction": "Adds a writer to the internal buffer ."}
{"id": 1993, "prediction": "Updates the memory allocation ."}
{"id": 1995, "prediction": "Start logging ."}
{"id": 1997, "prediction": "Starts a new column ."}
{"id": 1999, "prediction": "Write a single data page ."}
{"id": 2001, "prediction": "Ends the block ."}
{"id": 2003, "prediction": "End point ."}
{"id": 2005, "prediction": "Merges the given list of Metquet metadata files into the given list ."}
{"id": 2007, "prediction": "Merges the given FileMetaData into the mergeMetaData ."}
{"id": 2009, "prediction": "Checks if the given schema is OK ."}
{"id": 2011, "prediction": "Convert a string to an object ."}
{"id": 2013, "prediction": "Create a ThriftMetaData from the given class ."}
{"id": 2015, "prediction": "Writes null values ."}
{"id": 2017, "prediction": "Initializes the data from the input stream ."}
{"id": 2019, "prediction": "Checks that the given index is valid ."}
{"id": 2021, "prediction": "Throws an exception if the given exception is an exception ."}
{"id": 2023, "prediction": "Returns a builder for the given primitive type ."}
{"id": 2025, "prediction": "Returns the non - null non - null non - null non - empty schemas ."}
{"id": 2027, "prediction": "Invokes the method with the given arguments ."}
{"id": 2029, "prediction": "Merges the fields of the specified type into the specified group ."}
{"id": 2031, "prediction": "Gets the filter ."}
{"id": 2033, "prediction": "Generate splits from a list of splits"}
{"id": 2035, "prediction": "Validate the mapping ."}
{"id": 2037, "prediction": "Creates a new codec factory ."}
{"id": 2039, "prediction": "Checks the set of events ."}
{"id": 2041, "prediction": "Closes the record writer ."}
{"id": 2043, "prediction": "Adds a class to the cache ."}
{"id": 2045, "prediction": "Checks that the cast is castable ."}
{"id": 2047, "prediction": "Creates a new schema mapping from the given message type ."}
{"id": 2049, "prediction": "Write the data page header ."}
{"id": 2051, "prediction": "Write the object to the conf file"}
{"id": 2053, "prediction": "Adds a new entry to the cache ."}
{"id": 2055, "prediction": "Writes the given value to the given schema ."}
{"id": 2057, "prediction": "Sets the regular expression ."}
{"id": 2059, "prediction": "Opens an input stream ."}
{"id": 2061, "prediction": "Convert a StructType to a MessageType ."}
{"id": 2063, "prediction": "Creates a group type ."}
{"id": 2065, "prediction": "Gets the parse input ."}
{"id": 2067, "prediction": "Resolve the given schema ."}
{"id": 2069, "prediction": "Checks that the input file is valid ."}
{"id": 2071, "prediction": "Creates a page filter that returns an unordered page filter ."}
{"id": 2073, "prediction": "Initialize the partitions ."}
{"id": 2075, "prediction": "Summarizes the given schema"}
{"id": 2077, "prediction": "Reads a map entry ."}
{"id": 2079, "prediction": "Read little endian int ."}
{"id": 2081, "prediction": "Creates a topic if it exists ."}
{"id": 2083, "prediction": "Create a new stage bean ."}
{"id": 2085, "prediction": "Creates a new interceptor instance ."}
{"id": 2087, "prediction": "Returns the number of days in milliseconds ."}
{"id": 2089, "prediction": "This method is used to upgrade the configuration ."}
{"id": 2091, "prediction": "Copy blobstore resources ."}
{"id": 2093, "prediction": "Report the health of the given thread ."}
{"id": 2095, "prediction": "Stores the configuration to a new configuration ."}
{"id": 2097, "prediction": "Attempts to upgrade the schema if necessary ."}
{"id": 2099, "prediction": "Upgrade stage configuration ."}
{"id": 2101, "prediction": "Tries to upgrade the given stage definition to the given upgrade ."}
{"id": 2103, "prediction": "Checks if the given package is a system class ."}
{"id": 2105, "prediction": "Add an element to the queue ."}
{"id": 2107, "prediction": "Recursively add all of the snapshots to the output ."}
{"id": 2109, "prediction": "Gets all file descriptors from a set of file descriptors ."}
{"id": 2111, "prediction": "Get the descriptor for a file descriptor ."}
{"id": 2113, "prediction": "Converts a protobuf field to a ProtobufField"}
{"id": 2115, "prediction": "Upgrade the config to a new config ."}
{"id": 2117, "prediction": "Convert kudu type to field type ."}
{"id": 2119, "prediction": "Intercept the given list of interceptors ."}
{"id": 2121, "prediction": "Adds missing configurations to the given stage ."}
{"id": 2123, "prediction": "Add response headers ."}
{"id": 2125, "prediction": "Writes the header to the response ."}
{"id": 2127, "prediction": "Configure the client ."}
{"id": 2129, "prediction": "Increment the source offset"}
{"id": 2131, "prediction": "Add response headers ."}
{"id": 2133, "prediction": "Processes the response ."}
{"id": 2135, "prediction": "Converts a DataParserException to a DataParserException ."}
{"id": 2137, "prediction": "Gets credentials for a given resource ."}
{"id": 2139, "prediction": "Copy a string to the buffer ."}
{"id": 2141, "prediction": "Gets the empty batch ."}
{"id": 2143, "prediction": "Resolve a single chunk ."}
{"id": 2145, "prediction": "Escape quoted string ."}
{"id": 2147, "prediction": "Gets the channel provider ."}
{"id": 2149, "prediction": "Compiles a Groovy expression ."}
{"id": 2151, "prediction": "Adds a dictionary to the dictionary ."}
{"id": 2153, "prediction": "Stops the aggregator ."}
{"id": 2155, "prediction": "Serializes an object to a String ."}
{"id": 2157, "prediction": "Deserialize a type from a file ."}
{"id": 2159, "prediction": "Resolve EL expression ."}
{"id": 2161, "prediction": "Get table name ."}
{"id": 2163, "prediction": "Get the internal field value ."}
{"id": 2165, "prediction": "Returns the location of the given metadata ."}
{"id": 2167, "prediction": "Returns the format format for the given record ."}
{"id": 2169, "prediction": "Validate partition information ."}
{"id": 2171, "prediction": "Serialize a Hadoop Schema to a Hadoop Schema"}
{"id": 2173, "prediction": "Gets the configuration ."}
{"id": 2175, "prediction": "Formats the given template with the given arguments ."}
{"id": 2177, "prediction": "Checks whether solr field contains solr fields ."}
{"id": 2179, "prediction": "Sends an exception to the given record ."}
{"id": 2181, "prediction": "Parse the given URL ."}
{"id": 2183, "prediction": "Closes the cluster ."}
{"id": 2185, "prediction": "Gets a label from a string ."}
{"id": 2187, "prediction": "Reads a key from the vault ."}
{"id": 2189, "prediction": "Writes a document to the output stream ."}
{"id": 2191, "prediction": "Convert a table to a SQL table ."}
{"id": 2193, "prediction": "Creates a copy of all messages in this batch ."}
{"id": 2195, "prediction": "Called when a consumer error occurs ."}
{"id": 2197, "prediction": "Returns a JSON representation of the given parameters ."}
{"id": 2199, "prediction": "Formats the column name ."}
{"id": 2201, "prediction": "Get information about a pipeline ."}
{"id": 2203, "prediction": "Get a list of all pipelines ."}
{"id": 2205, "prediction": "Gets the file path ."}
{"id": 2207, "prediction": "Returns the path for the given column name ."}
{"id": 2209, "prediction": "Get the runner ."}
{"id": 2211, "prediction": "Return a runner ."}
{"id": 2213, "prediction": "Validates that the container is not destroyed ."}
{"id": 2215, "prediction": "Get the last shard id ."}
{"id": 2217, "prediction": "Handle SQL exception ."}
{"id": 2219, "prediction": "Compare two files ."}
{"id": 2221, "prediction": "Validate that the fields are valid ."}
{"id": 2223, "prediction": "Rolls the active stats ."}
{"id": 2225, "prediction": "Ensure the directory exists ."}
{"id": 2227, "prediction": "Writes a batch of partitions to the given table ."}
{"id": 2229, "prediction": "Generate no more data event ."}
{"id": 2231, "prediction": "Update record for HDFS ."}
{"id": 2233, "prediction": "Checks to see if two classes are same ."}
{"id": 2235, "prediction": "Configure authentication ."}
{"id": 2237, "prediction": "Get Http Method ."}
{"id": 2239, "prediction": "Returns null if field is null ."}
{"id": 2241, "prediction": "Register a schema ."}
{"id": 2243, "prediction": "Get the schema ID from the given subject ."}
{"id": 2245, "prediction": "Write the schema id to the output stream"}
{"id": 2247, "prediction": "Get default values from schema ."}
{"id": 2249, "prediction": "Logs the details of the dependencies ."}
{"id": 2251, "prediction": "Initializes the configuration ."}
{"id": 2253, "prediction": "Gets the inward edge vertices ."}
{"id": 2255, "prediction": "Deserialize a map from a string ."}
{"id": 2257, "prediction": "Gets a report ."}
{"id": 2259, "prediction": "Writes the offsets to the offset file ."}
{"id": 2261, "prediction": "Handle error ."}
{"id": 2263, "prediction": "Gets a reader ."}
{"id": 2265, "prediction": "Sets the dpm base url ."}
{"id": 2267, "prediction": "Parse a date ."}
{"id": 2269, "prediction": "Gets the client ."}
{"id": 2271, "prediction": "Get table metadata ."}
{"id": 2273, "prediction": "Creates a new EventBuilder ."}
{"id": 2275, "prediction": "Convert the given Java code to an SDL code ."}
{"id": 2277, "prediction": "Adds all the jars to the job ."}
{"id": 2279, "prediction": "Checks if the given field name matches the given field name ."}
{"id": 2281, "prediction": "Set premain method"}
{"id": 2283, "prediction": "Run a BigQuery ."}
{"id": 2285, "prediction": "Gets the description of the table ."}
{"id": 2287, "prediction": "Gets the column type ."}
{"id": 2289, "prediction": "Get the schema for the table"}
{"id": 2291, "prediction": "Returns the class for the given table name ."}
{"id": 2293, "prediction": "Gets the topic ."}
{"id": 2295, "prediction": "Get the input stream for this proxy ."}
{"id": 2297, "prediction": "Checks if the file exists ."}
{"id": 2299, "prediction": "Checks if all services are available ."}
{"id": 2301, "prediction": "Gets the aggregator unit ."}
{"id": 2303, "prediction": "Creates a new aggregator ."}
{"id": 2048, "prediction": "Creates a new schema mapping for the given arrow schema ."}
{"id": 2050, "prediction": "Skips the next record ."}
{"id": 2052, "prediction": "Removes the entry from the cache ."}
{"id": 2054, "prediction": "Returns the value associated with the given key ."}
{"id": 2056, "prediction": "Writes the given value to the given schema ."}
{"id": 2058, "prediction": "Writes the content to the console ."}
{"id": 2060, "prediction": "Create a UnRecordFilter from a column"}
{"id": 2062, "prediction": "Creates a new group type ."}
{"id": 2064, "prediction": "Gets the merged key metadata ."}
{"id": 2066, "prediction": "Gets all fields of the given record class ."}
{"id": 2068, "prediction": "Gets input files from the input file ."}
{"id": 2070, "prediction": "Gets input files from a directory ."}
{"id": 2072, "prediction": "Creates a list of items from a consumer ."}
{"id": 2074, "prediction": "Merge tuple summary data ."}
{"id": 2076, "prediction": "Read a struct ."}
{"id": 2078, "prediction": "Writes an integer to the output stream ."}
{"id": 2080, "prediction": "Sets the schema ."}
{"id": 2082, "prediction": "Duplicate all the stages of the given stage ."}
{"id": 2084, "prediction": "Creates a list of interceptors for the given stage ."}
{"id": 2086, "prediction": "Parse a schema ."}
{"id": 2088, "prediction": "Get the Avro schema from the header name"}
{"id": 2090, "prediction": "Returns the length of the generator ."}
{"id": 2092, "prediction": "Resets the table ."}
{"id": 2094, "prediction": "Register a thread with the metrics"}
{"id": 2096, "prediction": "Check if the user is authenticated ."}
{"id": 2098, "prediction": "Upgrade the StageConfiguration if necessary ."}
{"id": 2100, "prediction": "Attempts to upgrade the service configuration ."}
{"id": 2102, "prediction": "Gets all fields that are not null ."}
{"id": 2104, "prediction": "Add an element to the list ."}
{"id": 2106, "prediction": "Returns the value associated with the given key or null if not found ."}
{"id": 2108, "prediction": "Returns a descriptor for the given descriptor ."}
{"id": 2110, "prediction": "Populate the default values from the file descriptor ."}
{"id": 2112, "prediction": "Converts a proto record to a protobuf field ."}
{"id": 2114, "prediction": "Converts protobuf protobuf field to protobuf ."}
{"id": 2116, "prediction": "Check connection ."}
{"id": 2118, "prediction": "Create a field from a RowResult ."}
{"id": 2120, "prediction": "Get the text of this line ."}
{"id": 2122, "prediction": "Parse the response ."}
{"id": 2124, "prediction": "Write the response header to the response ."}
{"id": 2126, "prediction": "Saves the metadata file to disk ."}
{"id": 2128, "prediction": "Parses the response headers ."}
{"id": 2130, "prediction": "Parse the paginated result ."}
{"id": 2132, "prediction": "Resolve request headers ."}
{"id": 2134, "prediction": "Determines if a property is defined ."}
{"id": 2136, "prediction": "Converts a DataGeneratorException to a DataGeneratorException ."}
{"id": 2138, "prediction": "Creates a preview with the given pipeline ."}
{"id": 2140, "prediction": "Removes duplicates from the given set of packages ."}
{"id": 2142, "prediction": "Find the next main line ."}
{"id": 2144, "prediction": "Closes the connection ."}
{"id": 2146, "prediction": "Gets the flow control settings ."}
{"id": 2148, "prediction": "Puts an item into the batch ."}
{"id": 2150, "prediction": "Evaluates the expression"}
{"id": 2152, "prediction": "Adds a dictionary to the reader ."}
{"id": 2154, "prediction": "Updates all aggregators ."}
{"id": 2156, "prediction": "Deserialize a body from a string ."}
{"id": 2158, "prediction": "Writes a record to this record ."}
{"id": 2160, "prediction": "Generate the inner field from the list ."}
{"id": 2162, "prediction": "Gets the database name ."}
{"id": 2164, "prediction": "Returns the location of the metadata field ."}
{"id": 2166, "prediction": "Get the Avro schema from the metadata ."}
{"id": 2168, "prediction": "Creates a new schema field ."}
{"id": 2170, "prediction": "Generate the partition path ."}
{"id": 2172, "prediction": "Sets the parameters for the query ."}
{"id": 2174, "prediction": "Parses a string representation of a date ."}
{"id": 2176, "prediction": "Start the batch ."}
{"id": 2178, "prediction": "Filters autogated field names ."}
{"id": 2180, "prediction": "Parse a jar name from a jar file ."}
{"id": 2182, "prediction": "Create a new instance of CouchbaseConnector ."}
{"id": 2184, "prediction": "Validate configuration ."}
{"id": 2186, "prediction": "Verifies that a dependency exists ."}
{"id": 2188, "prediction": "Gets the operation type from the given record ."}
{"id": 2190, "prediction": "Build a sub - mutation mutation ."}
{"id": 2192, "prediction": "Configure SASL configuration ."}
{"id": 2194, "prediction": "Commits the given offset to the given offset ."}
{"id": 2196, "prediction": "Inject the given stage into the given stage ."}
{"id": 2198, "prediction": "Returns the publisher definition for the given filename ."}
{"id": 2200, "prediction": "Formats the value of a string ."}
{"id": 2202, "prediction": "Create a new draft fragment ."}
{"id": 2204, "prediction": "Imports a pipeline fragment ."}
{"id": 2206, "prediction": "Gets the operation code from the record ."}
{"id": 2208, "prediction": "Remove an event from the queue ."}
{"id": 2210, "prediction": "Get the idle runner for the specified time ."}
{"id": 2212, "prediction": "Destroys the thread pool ."}
{"id": 2214, "prediction": "Checks to see if a stream exists ."}
{"id": 2216, "prediction": "Process a queue ."}
{"id": 2218, "prediction": "Gets column hash ."}
{"id": 2220, "prediction": "Retrieves the PID from the process ."}
{"id": 2222, "prediction": "Get the UserGroupInfo for the given user ."}
{"id": 2224, "prediction": "Creates snapshot snapshot ."}
{"id": 2226, "prediction": "Writes a batch of records to the given schema ."}
{"id": 2228, "prediction": "Writes a record to the output iterator ."}
{"id": 2230, "prediction": "Detect a new partition"}
{"id": 2232, "prediction": "Process a group ."}
{"id": 2234, "prediction": "Main entry point ."}
{"id": 2236, "prediction": "Resolve all headers of a record ."}
{"id": 2238, "prediction": "Fill null types ."}
{"id": 2240, "prediction": "Loads a schema from the registry ."}
{"id": 2242, "prediction": "Loads the schema from the registry ."}
{"id": 2244, "prediction": "Loads a schema from the registry ."}
{"id": 2246, "prediction": "Detect schema id ."}
{"id": 2248, "prediction": "Parses a single message ."}
{"id": 2250, "prediction": "Get the list of bad records from the error sink ."}
{"id": 2252, "prediction": "Gets the outward edge vertices for the given vertex ."}
{"id": 2254, "prediction": "Serialize an offset map ."}
{"id": 2256, "prediction": "Queue a report ."}
{"id": 2258, "prediction": "Checks if the file points to see if it exists ."}
{"id": 2260, "prediction": "Deletes the given blob ."}
{"id": 2262, "prediction": "Handles an archive ."}
{"id": 2264, "prediction": "Releases a reader ."}
{"id": 2266, "prediction": "Add default header ."}
{"id": 2268, "prediction": "Escape a string ."}
{"id": 2270, "prediction": "Initializes the connection ."}
{"id": 2272, "prediction": "Create a bulkter for the given index ."}
{"id": 2274, "prediction": "Build a schema from the given fields ."}
{"id": 2276, "prediction": "Add jars to the job ."}
{"id": 2278, "prediction": "Checks the field order by the given field name ."}
{"id": 2280, "prediction": "Gets the offset for a file offset"}
{"id": 2282, "prediction": "Gets the parallelism parallelism ."}
{"id": 2284, "prediction": "Convert a list of fields to a Map ."}
{"id": 2286, "prediction": "Checks that all tables are valid ."}
{"id": 2288, "prediction": "Checks if the given field is nullable ."}
{"id": 2290, "prediction": "Get the properties for a table"}
{"id": 2292, "prediction": "Initialize AerospikeClient"}
{"id": 2294, "prediction": "This method is used to upgrade the configuration ."}
{"id": 2296, "prediction": "Gets the output stream ."}
{"id": 2298, "prediction": "Parses the given permissions ."}
{"id": 2300, "prediction": "Creates a new aggregator ."}
{"id": 2302, "prediction": "Creates aggregator data ."}
{"id": 2305, "prediction": "Stops the aggregator ."}
{"id": 2307, "prediction": "Acquires a login manager ."}
{"id": 2309, "prediction": "Converts a glob to a regex string ."}
{"id": 2311, "prediction": "Stop snapshots ."}
{"id": 2313, "prediction": "Creates a failure snapshot ."}
{"id": 2315, "prediction": "Sets the configuration ."}
{"id": 2317, "prediction": "Check if the partition has changed ."}
{"id": 2319, "prediction": "Rolls a usage timer ."}
{"id": 2321, "prediction": "Disable DPM ."}
{"id": 2323, "prediction": "Retrieves the user token from the given url ."}
{"id": 2325, "prediction": "Updates the token file ."}
{"id": 2327, "prediction": "Creates a schema for a field ."}
{"id": 2329, "prediction": "Gets the decimal precision of the given field ."}
{"id": 2331, "prediction": "Initialize metrics ."}
{"id": 2333, "prediction": "Returns the index of the specified group ."}
{"id": 2335, "prediction": "Checks if the given string is an escaped character ."}
{"id": 2337, "prediction": "Checks if a character class is inside a string ."}
{"id": 2339, "prediction": "Extract group information from a named pattern ."}
{"id": 2341, "prediction": "Executes a GET request ."}
{"id": 2343, "prediction": "Returns true if the transaction has expired ."}
{"id": 2345, "prediction": "Read the next byte from the stream ."}
{"id": 2347, "prediction": "Converts a string to an integer ."}
{"id": 2349, "prediction": "Parse the values from a byte array ."}
{"id": 2351, "prediction": "Create custom field mapping ."}
{"id": 2353, "prediction": "Gets the table name ."}
{"id": 2355, "prediction": "Handle SQL exception ."}
{"id": 2357, "prediction": "Prepare the pipe ."}
{"id": 2359, "prediction": "Flatten a record into a map ."}
{"id": 2361, "prediction": "Execute the action ."}
{"id": 2363, "prediction": "Gets the condition for a partition ."}
{"id": 2365, "prediction": "Gets the list of bundle definitions ."}
{"id": 2367, "prediction": "Get Operation ."}
{"id": 2369, "prediction": "Scans a live file ."}
{"id": 2371, "prediction": "Checks if the given name is whitelisted ."}
{"id": 2373, "prediction": "Starts the bootstrap stream ."}
{"id": 2375, "prediction": "Validate report description ."}
{"id": 2377, "prediction": "Creates a JdbcRecordWriter for the given data type ."}
{"id": 2379, "prediction": "Extracts a map from raw data ."}
{"id": 2381, "prediction": "Creates an embedded SDC ."}
{"id": 2383, "prediction": "Get the list of remote pipelines that have been updated ."}
{"id": 2385, "prediction": "Creates a gauge with the given parameters ."}
{"id": 2387, "prediction": "Generate header attributes ."}
{"id": 2389, "prediction": "Deletes old temp files ."}
{"id": 2391, "prediction": "Returns a file reader for the given input stream ."}
{"id": 2393, "prediction": "Checks if the input field is encrypted ."}
{"id": 2395, "prediction": "Checks the input field ."}
{"id": 2397, "prediction": "Prepares the data for the given field ."}
{"id": 2399, "prediction": "Append a replacement string to the string buffer ."}
{"id": 2401, "prediction": "Replaces all properties with the given replacement string ."}
{"id": 2403, "prediction": "Returns the global variable as a string ."}
{"id": 2405, "prediction": "Creates a new record ."}
{"id": 2407, "prediction": "Extract the value of the field as a RuntimeException ."}
{"id": 2409, "prediction": "Execute the ALB table query ."}
{"id": 2411, "prediction": "Execute query ."}
{"id": 2413, "prediction": "Executes a batch of batches ."}
{"id": 2415, "prediction": "Gets the offset trigger trigger ."}
{"id": 2417, "prediction": "Accepts a consumer ."}
{"id": 2419, "prediction": "Get value from field path"}
{"id": 2421, "prediction": "Sets the document in the record ."}
{"id": 2423, "prediction": "Handle partial file format ."}
{"id": 2425, "prediction": "Sets the context class loader ."}
{"id": 2427, "prediction": "Logs the logout ."}
{"id": 2429, "prediction": "Replace variables in the configuration file"}
{"id": 2431, "prediction": "Main method for testing ."}
{"id": 2433, "prediction": "Renames the final path to a temporary file ."}
{"id": 2435, "prediction": "Checks if the given string matches the pattern ."}
{"id": 2437, "prediction": "Gets the remaining wait time ."}
{"id": 2439, "prediction": "Creates and initializes the stage library ."}
{"id": 2441, "prediction": "Creates a new instance of StageLibraryDelegate"}
{"id": 2443, "prediction": "Find the end end of the header ."}
{"id": 2445, "prediction": "Save temp file to temp file"}
{"id": 2447, "prediction": "Gets the mime type for a file ."}
{"id": 2449, "prediction": "Stops the server ."}
{"id": 2451, "prediction": "Sends an HTTP response to the output stream ."}
{"id": 2453, "prediction": "Creates a new fixed length response ."}
{"id": 2455, "prediction": "Adds a new value to the queue ."}
{"id": 2457, "prediction": "Decode Base64 encoded value ."}
{"id": 2459, "prediction": "Sets the table name ."}
{"id": 2461, "prediction": "Registers a new Spring SessionRepositoryRepository ."}
{"id": 2463, "prediction": "Loads a session ."}
{"id": 2465, "prediction": "Gets the canonical parameter types ."}
{"id": 2467, "prediction": "This method is called when the JCA Synchronization process completes ."}
{"id": 2469, "prediction": "Deploys the module dependencies ."}
{"id": 2471, "prediction": "Returns a list of server config dependencies ."}
{"id": 2473, "prediction": "Increment the read lock count ."}
{"id": 2475, "prediction": "Handles the expiration calculation ."}
{"id": 2477, "prediction": "Makes sure the top level of the top level of the bean is visible ."}
{"id": 2479, "prediction": "Sets the config name and properties ."}
{"id": 2481, "prediction": "Gets the servlet patterns ."}
{"id": 2483, "prediction": "Resolve all views ."}
{"id": 2485, "prediction": "Parse the core environment element ."}
{"id": 2487, "prediction": "Returns the address of the given operation ."}
{"id": 2489, "prediction": "Gets the attribute value for the given operation ."}
{"id": 2491, "prediction": "Create a composite operation ."}
{"id": 2493, "prediction": "Creates a new operation with the given address ."}
{"id": 2495, "prediction": "Create write attribute operation ."}
{"id": 2497, "prediction": "Returns the value associated with this context ."}
{"id": 2499, "prediction": "Remove a URLContextFactory from the given scheme ."}
{"id": 2501, "prediction": "Modify the deployment ."}
{"id": 2503, "prediction": "Modify the context root ."}
{"id": 2505, "prediction": "Sets the run as identity ."}
{"id": 2507, "prediction": "Process the management view ."}
{"id": 2509, "prediction": "Checks if the given class type matches the given arguments ."}
{"id": 2511, "prediction": "Find the field with the given name ."}
{"id": 2513, "prediction": "Returns the useful information about the request ."}
{"id": 2515, "prediction": "Collect jdr report ."}
{"id": 2517, "prediction": "Unregister a resource adapter"}
{"id": 2519, "prediction": "Writes the parameters to the output stream ."}
{"id": 2521, "prediction": "Gets the lock owner ."}
{"id": 2523, "prediction": "Add a log"}
{"id": 2525, "prediction": "Gets the component view ."}
{"id": 2527, "prediction": "Gets the component method ."}
{"id": 2529, "prediction": "Creates a management resource ."}
{"id": 2531, "prediction": "Gets the domain ."}
{"id": 2533, "prediction": "Sets the IDL name to use ."}
{"id": 2535, "prediction": "Creates a JNDI name from the given string ."}
{"id": 2537, "prediction": "Called when a request completes ."}
{"id": 2539, "prediction": "Gets the transaction registry ."}
{"id": 2541, "prediction": "Returns the last component of the given name ."}
{"id": 2543, "prediction": "Creates a NameNotFoundException ."}
{"id": 2545, "prediction": "Creates a naming exception exception ."}
{"id": 2547, "prediction": "Creates an enumeration from a collection of names ."}
{"id": 2549, "prediction": "Gets the control component control ."}
{"id": 2551, "prediction": "Creates a new component instance ."}
{"id": 2553, "prediction": "Resolve runtime name ."}
{"id": 2555, "prediction": "Get the primitive analysis for a given class ."}
{"id": 2557, "prediction": "Gets the list of URL patterns ."}
{"id": 2559, "prediction": "Gets servlet mappings ."}
{"id": 2304, "prediction": "Start a new data window ."}
{"id": 2306, "prediction": "Rolls a new aggregator ."}
{"id": 2308, "prediction": "Release login manager"}
{"id": 2310, "prediction": "Lists all objects in the given bucket ."}
{"id": 2312, "prediction": "Returns an empty list of idle batches for the specified runner ."}
{"id": 2314, "prediction": "Converts a record to a bound statement ."}
{"id": 2316, "prediction": "Generate lookup key ."}
{"id": 2318, "prediction": "Reads a line from the input stream ."}
{"id": 2320, "prediction": "Enable DPM ."}
{"id": 2322, "prediction": "Normalize dpm base url ."}
{"id": 2324, "prediction": "Logs out the server ."}
{"id": 2326, "prediction": "Update dpm properties ."}
{"id": 2328, "prediction": "Creates a schema for the given field ."}
{"id": 2330, "prediction": "Returns the default value for the given schema ."}
{"id": 2332, "prediction": "Compares two files ."}
{"id": 2334, "prediction": "Returns the names of the group names ."}
{"id": 2336, "prediction": "Returns true if the given character is an escaped character ."}
{"id": 2338, "prediction": "Counts the number of parsers in the given string ."}
{"id": 2340, "prediction": "Replaces the regular expression with the given string ."}
{"id": 2342, "prediction": "Refresh the schema of the table"}
{"id": 2344, "prediction": "Returns the offset of the file ."}
{"id": 2346, "prediction": "Creates a new empty stage ."}
{"id": 2348, "prediction": "Parse a part of a field ."}
{"id": 2350, "prediction": "Lookup the primary keys for the table ."}
{"id": 2352, "prediction": "Returns the SQL type name for the given field ."}
{"id": 2354, "prediction": "Set primary keys ."}
{"id": 2356, "prediction": "Runs an instance of the given stage ."}
{"id": 2358, "prediction": "Finishes the given batch ."}
{"id": 2360, "prediction": "Creates a DetachedStageRuntime instance ."}
{"id": 2362, "prediction": "Gets the columns for the given record ."}
{"id": 2364, "prediction": "Validates that the given offset has been modified ."}
{"id": 2366, "prediction": "Gets the non - empty list of arguments ."}
{"id": 2368, "prediction": "Converts a byte representation to a display format ."}
{"id": 2370, "prediction": "Get the number of pending files that have been processed ."}
{"id": 2372, "prediction": "Determines if the expected set are equal ."}
{"id": 2374, "prediction": "Propagate runtime configuration ."}
{"id": 2376, "prediction": "Creates a new JdbcRecordWriter ."}
{"id": 2378, "prediction": "Upgrade the configuration ."}
{"id": 2380, "prediction": "Sends a commit to the consumer ."}
{"id": 2382, "prediction": "Sets the fields in the record ."}
{"id": 2384, "prediction": "Create a new AckDataCollector ."}
{"id": 2386, "prediction": "Gets the columns for the given operation ."}
{"id": 2388, "prediction": "Validates the Transformer ."}
{"id": 2390, "prediction": "Get avro input stream ."}
{"id": 2392, "prediction": "Writes the parquet to the given temp file ."}
{"id": 2394, "prediction": "Checks if the input field is valid ."}
{"id": 2396, "prediction": "Checks if the input field is valid ."}
{"id": 2398, "prediction": "Sets the pattern of this matcher ."}
{"id": 2400, "prediction": "Returns the names of the groups that match the given pattern ."}
{"id": 2402, "prediction": "Ensure that the avro schema exists ."}
{"id": 2404, "prediction": "Create start record ."}
{"id": 2406, "prediction": "Fix offset ."}
{"id": 2408, "prediction": "Execute an ALTER TABLE SELECT statement ."}
{"id": 2410, "prediction": "Execute a database"}
{"id": 2412, "prediction": "Execute query ."}
{"id": 2414, "prediction": "Iterate through all registered pipelines ."}
{"id": 2416, "prediction": "Called when a record is stopped ."}
{"id": 2418, "prediction": "Gets the insert id for the row expression ."}
{"id": 2420, "prediction": "Sets the fragment in the record ."}
{"id": 2422, "prediction": "Sets the row in the given record ."}
{"id": 2424, "prediction": "Returns true if there is incomplete transactions"}
{"id": 2426, "prediction": "Sets the stage creator ."}
{"id": 2428, "prediction": "Sets the exception library ."}
{"id": 2430, "prediction": "Checks whether or not the classloader is valid ."}
{"id": 2432, "prediction": "Gets the directory path ."}
{"id": 2434, "prediction": "Checks whether the record should be rolled ."}
{"id": 2436, "prediction": "Gets the offsets of the file context ."}
{"id": 2438, "prediction": "Retrieves the offsets for the given offset ."}
{"id": 2440, "prediction": "Create a new StageLibraryDelegateDelegate"}
{"id": 2442, "prediction": "Get metric value ."}
{"id": 2444, "prediction": "Gets the body size ."}
{"id": 2446, "prediction": "Creates a new SSLServerSocketFactory based on the given keypath ."}
{"id": 2448, "prediction": "Handle the response ."}
{"id": 2450, "prediction": "Add mappings ."}
{"id": 2452, "prediction": "Sends the body to the output stream ."}
{"id": 2454, "prediction": "Determines whether the GzipUsage should be used ."}
{"id": 2456, "prediction": "Unload all cookies from the response ."}
{"id": 2458, "prediction": "Encodes the given value ."}
{"id": 2460, "prediction": "Returns the name of the principal ."}
{"id": 2462, "prediction": "Resolve the principal name ."}
{"id": 2464, "prediction": "Gets the JNDI name of the model ."}
{"id": 2466, "prediction": "Registers a synchronized synchronization ."}
{"id": 2468, "prediction": "Get the current transaction ."}
{"id": 2470, "prediction": "Identify the cache region name ."}
{"id": 2472, "prediction": "Remove the read lock count ."}
{"id": 2474, "prediction": "Adds a service to the service ."}
{"id": 2476, "prediction": "Add a module dependency ."}
{"id": 2478, "prediction": "Create JBossMetaData instance ."}
{"id": 2480, "prediction": "Gets the security meta data ."}
{"id": 2482, "prediction": "Gets the servlet mappings ."}
{"id": 2484, "prediction": "Get the list of available connections ."}
{"id": 2486, "prediction": "Parse the process id element ."}
{"id": 2488, "prediction": "Sets the address of the given operation ."}
{"id": 2490, "prediction": "Returns true if the given operation should be included ."}
{"id": 2492, "prediction": "Creates a new operation with the given parameters ."}
{"id": 2494, "prediction": "Create a read attribute operation ."}
{"id": 2496, "prediction": "Create an undefine attribute operation ."}
{"id": 2498, "prediction": "Add url context factory ."}
{"id": 2500, "prediction": "Loads all providers from the given class loader ."}
{"id": 2502, "prediction": "Configures the servlets ."}
{"id": 2504, "prediction": "Get the transport class name ."}
{"id": 2506, "prediction": "Populate runAs ."}
{"id": 2508, "prediction": "Inject an object with the specified property value ."}
{"id": 2510, "prediction": "Finds a method with the given name and property ."}
{"id": 2512, "prediction": "Initialize the options ."}
{"id": 2514, "prediction": "Creates a Jdr report ."}
{"id": 2516, "prediction": "Register a resource adapter"}
{"id": 2518, "prediction": "Register transformer ."}
{"id": 2520, "prediction": "Read an exception ."}
{"id": 2522, "prediction": "Release lock ."}
{"id": 2524, "prediction": "Add CDIFF ."}
{"id": 2526, "prediction": "Invokes the given endpoint ."}
{"id": 2528, "prediction": "Checks if the view method matches the given parameters ."}
{"id": 2530, "prediction": "Get EJB security meta data ."}
{"id": 2532, "prediction": "Ensure that the security domain has the same security domain ."}
{"id": 2534, "prediction": "Gets the absolute name ."}
{"id": 2536, "prediction": "Processes the deployment ."}
{"id": 2538, "prediction": "Returns true if the transaction is in progress ."}
{"id": 2540, "prediction": "Gets the connection factory ."}
{"id": 2542, "prediction": "Checks if the name is empty ."}
{"id": 2544, "prediction": "Creates a namingException with the specified message ."}
{"id": 2546, "prediction": "Creates a new CannotProceedException with the given name ."}
{"id": 2548, "prediction": "Binds the name of the given object ."}
{"id": 2550, "prediction": "Parse connection attributes ."}
{"id": 2552, "prediction": "Get the rest of the virtual file ."}
{"id": 2554, "prediction": "Adds a listener to the listener ."}
{"id": 2556, "prediction": "Shuts down the component ."}
{"id": 2558, "prediction": "Get the servlets ."}
{"id": 2561, "prediction": "Gets login config ."}
{"id": 2563, "prediction": "Gets the web resource collection metadata ."}
{"id": 2565, "prediction": "New security constraint ."}
{"id": 2567, "prediction": "New servlet ."}
{"id": 2569, "prediction": "New auth constraint ."}
{"id": 2571, "prediction": "New param value ."}
{"id": 2573, "prediction": "Register a SFSBeanInterceptor ."}
{"id": 2575, "prediction": "Stop the container"}
{"id": 2577, "prediction": "Resolve an attribute definition ."}
{"id": 2579, "prediction": "Returns true if the pool is a pooled connection factory ."}
{"id": 2581, "prediction": "Gets the active server name ."}
{"id": 2583, "prediction": "Registers the activity listener ."}
{"id": 2585, "prediction": "Suspend all pending transactions ."}
{"id": 2587, "prediction": "Completes the invocation ."}
{"id": 2589, "prediction": "Starts the named resource ."}
{"id": 2591, "prediction": "Returns the service name for the dynamic service ."}
{"id": 2593, "prediction": "Returns all the deployment classloaders for the given deployment unit ."}
{"id": 2595, "prediction": "Checks if one phase is bootstrap ."}
{"id": 2597, "prediction": "Determines whether the entity type should be skipped ."}
{"id": 2599, "prediction": "Initializes the ORB for the given application ."}
{"id": 2601, "prediction": "Sets the active naming store ."}
{"id": 2603, "prediction": "Checks the type of the given parameter ."}
{"id": 2605, "prediction": "Validate base type ."}
{"id": 2607, "prediction": "Converts a status to a status string ."}
{"id": 2609, "prediction": "Extracts the dialects from the database ."}
{"id": 2611, "prediction": "Identify dialect ."}
{"id": 2613, "prediction": "Converts the given date into a string ."}
{"id": 2615, "prediction": "Marks a deployment unit ."}
{"id": 2617, "prediction": "Writes the remote object to the output stream ."}
{"id": 2619, "prediction": "Performs a lookup on the specified range ."}
{"id": 2621, "prediction": "Ends the creation of the SFSB ."}
{"id": 2623, "prediction": "Pushes the current entity manager ."}
{"id": 2625, "prediction": "Gets the current call stack ."}
{"id": 2627, "prediction": "Process all managed beans ."}
{"id": 2629, "prediction": "Get the type ID for a given class"}
{"id": 2631, "prediction": "Converts a string to a valid Java IDL name ."}
{"id": 2633, "prediction": "Returns the signature for the given class ."}
{"id": 2635, "prediction": "Returns the primitive type ID for a primitive type ."}
{"id": 2637, "prediction": "Gets the entity manager ."}
{"id": 2639, "prediction": "Converts a CamelCase to a ModelNode ."}
{"id": 2641, "prediction": "Retrieves the timers for the given timed object id ."}
{"id": 2643, "prediction": "Add a listener to the target list ."}
{"id": 2645, "prediction": "Fire an event ."}
{"id": 2647, "prediction": "Add a private credential ."}
{"id": 2649, "prediction": "Adds a view interceptor to the view ."}
{"id": 2651, "prediction": "Creates an instance of Inbound transport configuration ."}
{"id": 2653, "prediction": "Gets the root deployment unit ."}
{"id": 2655, "prediction": "Creates a new view configuration ."}
{"id": 2657, "prediction": "Returns a list of view interceptors for the given method ."}
{"id": 2659, "prediction": "Adds a view interceptor to the view ."}
{"id": 2661, "prediction": "Adds the client interceptors to the proxy ."}
{"id": 2663, "prediction": "Put private data ."}
{"id": 2665, "prediction": "Retrieves the list of EJbEndpoints associated with the given deployment unit ."}
{"id": 2667, "prediction": "Gets the endpoint name ."}
{"id": 2669, "prediction": "Gets the servlet by name ."}
{"id": 2671, "prediction": "Get the attachment from the deployment unit ."}
{"id": 2673, "prediction": "Gets the JBossPortServiceMetaData ."}
{"id": 2675, "prediction": "Gets the context root for the given application ."}
{"id": 2677, "prediction": "Returns the resource with the given name ."}
{"id": 2679, "prediction": "Retrieves a list of resources ."}
{"id": 2681, "prediction": "Gets the entity manager ."}
{"id": 2683, "prediction": "Processes the deployment ."}
{"id": 2685, "prediction": "Checks if the given class is public ."}
{"id": 2687, "prediction": "Creates a new WS deployment ."}
{"id": 2689, "prediction": "Set the next timeout ."}
{"id": 2691, "prediction": "Merges the deployment data ."}
{"id": 2693, "prediction": "Adds a remote view to the local component ."}
{"id": 2695, "prediction": "Checks if the given method is a level of the given method ."}
{"id": 2697, "prediction": "Returns the type of the given class ."}
{"id": 2699, "prediction": "Replies the keystore resource definition ."}
{"id": 2701, "prediction": "Replies the trust manager ."}
{"id": 2703, "prediction": "Convert a string to a vector ."}
{"id": 2705, "prediction": "Shutdown this object ."}
{"id": 2707, "prediction": "Authenticate the given username and password ."}
{"id": 2709, "prediction": "Looks up the binding by name ."}
{"id": 2711, "prediction": "Instantiates a bean ."}
{"id": 2713, "prediction": "Dispatches a lifecycle event ."}
{"id": 2715, "prediction": "Converts a bean to a ServiceName ."}
{"id": 2717, "prediction": "Returns the class description for the given name ."}
{"id": 2719, "prediction": "Post parses the given persistence unit ."}
{"id": 2721, "prediction": "Create the deployment ."}
{"id": 2723, "prediction": "Gets the auth method ."}
{"id": 2725, "prediction": "Handles a state bean ."}
{"id": 2727, "prediction": "Gets the anonymous object id ."}
{"id": 2729, "prediction": "Clear all cached deployments ."}
{"id": 2731, "prediction": "Find the parent class of the given class loader ."}
{"id": 2733, "prediction": "Adds the pu list to the persistence unit ."}
{"id": 2735, "prediction": "Gets the persistence provider ."}
{"id": 2737, "prediction": "Lookup the persistence provider"}
{"id": 2739, "prediction": "Creates the EJB metadata for EJB ."}
{"id": 2741, "prediction": "Refresh a participant ."}
{"id": 2743, "prediction": "Looks up the container for the given class"}
{"id": 2745, "prediction": "Gets the id of the module ."}
{"id": 2747, "prediction": "Converts a long to a string ."}
{"id": 2749, "prediction": "Returns true if the method is a mutable method ."}
{"id": 2751, "prediction": "Read attribute name ."}
{"id": 2753, "prediction": "Fix operation names ."}
{"id": 2755, "prediction": "Escape the given name as a string ."}
{"id": 2757, "prediction": "Parses the default context element ."}
{"id": 2759, "prediction": "Load provider module provider by module name ."}
{"id": 2761, "prediction": "Deploys the module to the module ."}
{"id": 2763, "prediction": "Get the method IntIntIntInt from the context ."}
{"id": 2765, "prediction": "Returns the destination name for the given address ."}
{"id": 2767, "prediction": "Gets the job names ."}
{"id": 2769, "prediction": "Returns the URI of the request ."}
{"id": 2771, "prediction": "Lookup an object by name ."}
{"id": 2773, "prediction": "Call this method to unbind the given path ."}
{"id": 2775, "prediction": "Call this method ."}
{"id": 2777, "prediction": "Creates a new context ."}
{"id": 2779, "prediction": "Lookup a link ."}
{"id": 2781, "prediction": "Removes a property from the environment ."}
{"id": 2783, "prediction": "Parse a credential ."}
{"id": 2785, "prediction": "Lookup the JNDI from the context ."}
{"id": 2787, "prediction": "Creates a new ModularReference ."}
{"id": 2789, "prediction": "Returns the IDL type for the given type ."}
{"id": 2791, "prediction": "Compute the password for the PEM store ."}
{"id": 2793, "prediction": "Start the vault session ."}
{"id": 2795, "prediction": "Display the vault configuration ."}
{"id": 2797, "prediction": "Checks if the value is not null ."}
{"id": 2799, "prediction": "Inserts the specified value into the specified value ."}
{"id": 2801, "prediction": "Get the string representation of this action ."}
{"id": 2803, "prediction": "Send a change notification change ."}
{"id": 2805, "prediction": "Returns the value of the given type ."}
{"id": 2807, "prediction": "Get all interceptors ."}
{"id": 2809, "prediction": "Adds a dependency to this service ."}
{"id": 2811, "prediction": "Gets the list of interceptors associated with the given timeout ."}
{"id": 2813, "prediction": "Add an interceptor interceptor to this interceptor ."}
{"id": 2815, "prediction": "Add preDestroy interceptor ."}
{"id": 2560, "prediction": "Gets the security constraints ."}
{"id": 2562, "prediction": "Gets the context params ."}
{"id": 2564, "prediction": "Gets the init init parameters ."}
{"id": 2566, "prediction": "New web resource collection ."}
{"id": 2568, "prediction": "New servlet mapping ."}
{"id": 2570, "prediction": "New user data constraint ."}
{"id": 2572, "prediction": "Factory method for creating ParameterMetaDataMetaData ."}
{"id": 2574, "prediction": "Process injection targets ."}
{"id": 2576, "prediction": "Returns the JNDI name of the model ."}
{"id": 2578, "prediction": "Returns the type of the pattern ."}
{"id": 2580, "prediction": "Checks if the external connection factory is a pooled connection factory ."}
{"id": 2582, "prediction": "Returns the default persistence unit name ."}
{"id": 2584, "prediction": "Stops the activity ."}
{"id": 2586, "prediction": "Resume the session ."}
{"id": 2588, "prediction": "This method increments the transaction associated with this transaction ."}
{"id": 2590, "prediction": "Stop the given service ."}
{"id": 2592, "prediction": "Creates the list of resources for the deployment ."}
{"id": 2594, "prediction": "Checks if the class file is a class file ."}
{"id": 2596, "prediction": "Determines whether the default data source should be used ."}
{"id": 2598, "prediction": "Gets the ORB for the given environment ."}
{"id": 2600, "prediction": "Initializes the method handles ."}
{"id": 2602, "prediction": "Validate default values ."}
{"id": 2604, "prediction": "Looks up the default value for the given annotation ."}
{"id": 2606, "prediction": "Get the deferred entity managers ."}
{"id": 2608, "prediction": "Adds the cache dependencies to the cache ."}
{"id": 2610, "prediction": "This method retrieves dialect information from database ."}
{"id": 2612, "prediction": "Checks if database table exists ."}
{"id": 2614, "prediction": "Sets the node name ."}
{"id": 2616, "prediction": "Read the parameters from the input stream ."}
{"id": 2618, "prediction": "Writes an exception to the given output stream ."}
{"id": 2620, "prediction": "Starts SFSB ."}
{"id": 2622, "prediction": "Returns the current stack invocation stack invocation ."}
{"id": 2624, "prediction": "Removes a map from the stack ."}
{"id": 2626, "prediction": "Add dependencies to the deployment ."}
{"id": 2628, "prediction": "Read phase listeners ."}
{"id": 2630, "prediction": "Inserts a primitive value into a primitive ."}
{"id": 2632, "prediction": "Returns whether the given string is reserved or not ."}
{"id": 2634, "prediction": "Returns the signature of the method ."}
{"id": 2636, "prediction": "Returns a BatchPermission for the given name ."}
{"id": 2638, "prediction": "Put a value into the map ."}
{"id": 2640, "prediction": "Returns the most recent entity version ."}
{"id": 2642, "prediction": "Gets the directory for the given timestamp id ."}
{"id": 2644, "prediction": "Remove a listener"}
{"id": 2646, "prediction": "Close the consumer ."}
{"id": 2648, "prediction": "Gets the object instance ."}
{"id": 2650, "prediction": "Removes the substring from the string ."}
{"id": 2652, "prediction": "Adds the name prefix to the name of a component ."}
{"id": 2654, "prediction": "Gets the service name ."}
{"id": 2656, "prediction": "Create an InjectionSource for the given service ."}
{"id": 2658, "prediction": "Adds a view interceptor to the proxy ."}
{"id": 2660, "prediction": "Get the list of client interceptors for the given method ."}
{"id": 2662, "prediction": "Adds a client interceptor to the container ."}
{"id": 2664, "prediction": "Read an unexpected element ."}
{"id": 2666, "prediction": "Retrieves the list of JAXP endpoint objects for the given deployment unit ."}
{"id": 2668, "prediction": "Gets the endpoint class name ."}
{"id": 2670, "prediction": "Gets the required attachment ."}
{"id": 2672, "prediction": "Gets the JBossWeb ."}
{"id": 2674, "prediction": "Gets the EJB metadata for the given class name ."}
{"id": 2676, "prediction": "Replies the class for the given name ."}
{"id": 2678, "prediction": "Returns all the resources that match the given name ."}
{"id": 2680, "prediction": "Pop the call stack ."}
{"id": 2682, "prediction": "Registers a listener for the given context ."}
{"id": 2684, "prediction": "Update server configuration ."}
{"id": 2686, "prediction": "New endpoint ."}
{"id": 2688, "prediction": "Checks if the deployment is a JAXRr deployment ."}
{"id": 2690, "prediction": "Sets the timer state ."}
{"id": 2692, "prediction": "Deploys modules ."}
{"id": 2694, "prediction": "Replies the set of container interceptors ."}
{"id": 2696, "prediction": "Checks that the element is not one element ."}
{"id": 2698, "prediction": "Returns the component of the given type ."}
{"id": 2700, "prediction": "Replies the key managers for the entity manager ."}
{"id": 2702, "prediction": "Parse the name of the C CompoundName ."}
{"id": 2704, "prediction": "Parse a component component ."}
{"id": 2706, "prediction": "Convert a CORBA servant to a CORBA"}
{"id": 2708, "prediction": "Checks if the given class is matched ."}
{"id": 2710, "prediction": "Unbind a JNDI name ."}
{"id": 2712, "prediction": "Configures the bean ."}
{"id": 2714, "prediction": "Returns the current selector selector ."}
{"id": 2716, "prediction": "Converts a Class to a ServiceName ."}
{"id": 2718, "prediction": "Process annotation annotations ."}
{"id": 2720, "prediction": "Validate the given descriptor ."}
{"id": 2722, "prediction": "Create webapp descriptor ."}
{"id": 2724, "prediction": "Configures the deployment ."}
{"id": 2726, "prediction": "Creates a stub for the given class ."}
{"id": 2728, "prediction": "Gets the list of persistent providers ."}
{"id": 2730, "prediction": "Adds persistent persistence provider ."}
{"id": 2732, "prediction": "Deploys the module ."}
{"id": 2734, "prediction": "Sets the annotation indexes ."}
{"id": 2736, "prediction": "Saves the persistence provider ."}
{"id": 2738, "prediction": "Returns the set of annotated classes ."}
{"id": 2740, "prediction": "Build the enterprise bean meta data ."}
{"id": 2742, "prediction": "Gets the container analysis ."}
{"id": 2744, "prediction": "Creates a new instance for the given class ."}
{"id": 2746, "prediction": "Converts an integer to a hex string ."}
{"id": 2748, "prediction": "Returns true if the given method is accessor ."}
{"id": 2750, "prediction": "Returns true if the given method is overridden ."}
{"id": 2752, "prediction": "Write the name to the set ."}
{"id": 2754, "prediction": "Fixes the names of the upper case ."}
{"id": 2756, "prediction": "Parse an XML element ."}
{"id": 2758, "prediction": "Read all attributes from the given reader ."}
{"id": 2760, "prediction": "Create add operation handler ."}
{"id": 2762, "prediction": "Writes an attribute to the XML stream ."}
{"id": 2764, "prediction": "Creates a session ."}
{"id": 2766, "prediction": "Registers a set of endpoint handlers ."}
{"id": 2768, "prediction": "Initialize the job ."}
{"id": 2770, "prediction": "Creates a new ResolveResult object ."}
{"id": 2772, "prediction": "Bind the given object to the given name ."}
{"id": 2774, "prediction": "Returns a list of bindings for the given name ."}
{"id": 2776, "prediction": "Destroys a name ."}
{"id": 2778, "prediction": "Creates a new subcontext ."}
{"id": 2780, "prediction": "Add an environment to the environment ."}
{"id": 2782, "prediction": "Add transformations to the resource ."}
{"id": 2784, "prediction": "Remove a security domain ."}
{"id": 2786, "prediction": "Creates a new ModularReference ."}
{"id": 2788, "prediction": "Creates a new ModularReference ."}
{"id": 2790, "prediction": "Waits for a service to be executed ."}
{"id": 2792, "prediction": "Initialize the security vault ."}
{"id": 2794, "prediction": "Prints the display attribute to display ."}
{"id": 2796, "prediction": "Gets the vault configuration ."}
{"id": 2798, "prediction": "Get the deployment service name ."}
{"id": 2800, "prediction": "Returns true if the given permission has the given permission ."}
{"id": 2802, "prediction": "Returns the name of the log ."}
{"id": 2804, "prediction": "Gets the state of this object ."}
{"id": 2806, "prediction": "Gets the service name ."}
{"id": 2808, "prediction": "Add an interceptor to the interceptor ."}
{"id": 2810, "prediction": "Gets the list of ComponentInterceptor factories ."}
{"id": 2812, "prediction": "Adds a timeout interceptor to the given method ."}
{"id": 2814, "prediction": "Add post interceptor ."}
{"id": 2817, "prediction": "Adds a post interceptor to the registry ."}
{"id": 2819, "prediction": "Remove the JNDI aliases from the model ."}
{"id": 2821, "prediction": "Returns the service name of a component service ."}
{"id": 2823, "prediction": "Bind the given environment information to the given environment ."}
{"id": 2825, "prediction": "Returns the cache for the cache ."}
{"id": 2827, "prediction": "Returns the values for the given type ."}
{"id": 2829, "prediction": "Parses the configuration element ."}
{"id": 2831, "prediction": "Add weld integration to the component ."}
{"id": 2833, "prediction": "Adds a component to the view ."}
{"id": 2835, "prediction": "Replies the components for the given view ."}
{"id": 2837, "prediction": "Gets all components of the given component ."}
{"id": 2839, "prediction": "Builds a transformer ."}
{"id": 2841, "prediction": "Rename an attribute ."}
{"id": 2843, "prediction": "Load the module IDs ."}
{"id": 2845, "prediction": "Compute the slot for the given JSF version ."}
{"id": 2847, "prediction": "Adds a type code to the cache ."}
{"id": 2849, "prediction": "Adds the list of interfaces ."}
{"id": 2851, "prediction": "Add a class to this class ."}
{"id": 2853, "prediction": "Add a value to the module ."}
{"id": 2855, "prediction": "Gets the class level ."}
{"id": 2857, "prediction": "Starts a new registry ."}
{"id": 2859, "prediction": "Checks if the given method is allowed ."}
{"id": 2861, "prediction": "Gets all the component classes for the given component ."}
{"id": 2863, "prediction": "Gets the extra parameters ."}
{"id": 2865, "prediction": "Converts a type to a class ."}
{"id": 2867, "prediction": "Gets array types ."}
{"id": 2869, "prediction": "Returns the next object ."}
{"id": 2871, "prediction": "Map the binding name to the binding ."}
{"id": 2873, "prediction": "Closes the health check ."}
{"id": 2875, "prediction": "Gets the handle for the EJB locator ."}
{"id": 2877, "prediction": "Skips over the input stream ."}
{"id": 2879, "prediction": "Add a component description ."}
{"id": 2881, "prediction": "Unbind a component ."}
{"id": 2883, "prediction": "Return a list of all names of the given node ."}
{"id": 2885, "prediction": "Adds a factory to this context ."}
{"id": 2887, "prediction": "Creates an IOSubsystem ."}
{"id": 2889, "prediction": "Get the bean instance ."}
{"id": 2891, "prediction": "Collects the metrics for a resource ."}
{"id": 2893, "prediction": "Performs deployment ."}
{"id": 2895, "prediction": "Stops the web application ."}
{"id": 2897, "prediction": "Registers an endpoint config ."}
{"id": 2899, "prediction": "Post the timer processing ."}
{"id": 2901, "prediction": "Returns the declared fields of the specified class ."}
{"id": 2903, "prediction": "Gets a method ."}
{"id": 2905, "prediction": "Returns true if the parameter is allowed to be allowed ."}
{"id": 2907, "prediction": "Cancel this flag ."}
{"id": 2909, "prediction": "Sets the type ."}
{"id": 2911, "prediction": "Estimate the count of the given class ."}
{"id": 2913, "prediction": "Gets the class of the given package ."}
{"id": 2915, "prediction": "Evaluate the record ."}
{"id": 2917, "prediction": "Update record ."}
{"id": 2919, "prediction": "Returns the minimal set of nodes for the given query cluster ."}
{"id": 2921, "prediction": "Helper method to calculate the orderByOrderByPlanByExpression ."}
{"id": 2923, "prediction": "Checks to see if the given filter is a cluster"}
{"id": 2925, "prediction": "Checks if the given class is a diamond hierarchy ."}
{"id": 2927, "prediction": "Checks if the given key is required ."}
{"id": 2929, "prediction": "Build index search descriptor ."}
{"id": 2931, "prediction": "Creates a new strategy instance ."}
{"id": 2933, "prediction": "Checks if a rule is defined ."}
{"id": 2935, "prediction": "Initialize the system database ."}
{"id": 2937, "prediction": "Called when the server is removed ."}
{"id": 2939, "prediction": "Assigns the lock manager ."}
{"id": 2941, "prediction": "Rollback the transaction ."}
{"id": 2943, "prediction": "Updates the cache for the rollback operation ."}
{"id": 2945, "prediction": "Moves the given file to the given target ."}
{"id": 2947, "prediction": "Execute a local node on the local node ."}
{"id": 2949, "prediction": "Check if the connection is connected ."}
{"id": 2951, "prediction": "Split the given buffer into the buffer ."}
{"id": 2953, "prediction": "Put a single value into the map ."}
{"id": 2955, "prediction": "Executes the given arguments ."}
{"id": 2957, "prediction": "Creates new instance ."}
{"id": 2959, "prediction": "Replaces the content of the file with the given content ."}
{"id": 2961, "prediction": "Ends the request ."}
{"id": 2963, "prediction": "Starts a request ."}
{"id": 2965, "prediction": "Returns the OClientConnection for the given channel ID ."}
{"id": 2967, "prediction": "Stops the connection ."}
{"id": 2969, "prediction": "Push connections to a remote client ."}
{"id": 2971, "prediction": "Release lock ."}
{"id": 2973, "prediction": "Update metadata ."}
{"id": 2975, "prediction": "Reads the next character ."}
{"id": 2977, "prediction": "This method is called when an error occurs ."}
{"id": 2979, "prediction": "Get the number of open files ."}
{"id": 2981, "prediction": "Moves the specified buffer to the specified position ."}
{"id": 2983, "prediction": "Execute the next step ."}
{"id": 2985, "prediction": "Evaluate the record ."}
{"id": 2987, "prediction": "Loads the configuration ."}
{"id": 2989, "prediction": "Executes the request parameters ."}
{"id": 2991, "prediction": "Adds an index definition to the composite ."}
{"id": 2993, "prediction": "Determine the type of an object ."}
{"id": 2995, "prediction": "Get string value ."}
{"id": 2997, "prediction": "Execute the command"}
{"id": 2999, "prediction": "Checks whether the given hash matches the password ."}
{"id": 3001, "prediction": "Checks if the given algorithm is supported ."}
{"id": 3003, "prediction": "Returns an iterator over all vertices in the graph ."}
{"id": 3005, "prediction": "Returns the partition keys ."}
{"id": 3007, "prediction": "Returns the active features ."}
{"id": 3009, "prediction": "Parse timeout ."}
{"id": 3011, "prediction": "Creates a new cluster ."}
{"id": 3013, "prediction": "Start the profiling ."}
{"id": 3015, "prediction": "Creates a new instance set from an entity transformer ."}
{"id": 3017, "prediction": "Revokes an operation ."}
{"id": 3019, "prediction": "Bind the parameters to the map ."}
{"id": 3021, "prediction": "Returns the index of the item at the given index ."}
{"id": 3023, "prediction": "Create an index ."}
{"id": 3025, "prediction": "Returns the index of the global reference ."}
{"id": 3027, "prediction": "Serializes an ODocument to a stream ."}
{"id": 3029, "prediction": "Registers a database ."}
{"id": 3031, "prediction": "Creates a copy of this database ."}
{"id": 3033, "prediction": "Replaces all objects in the given object with the given key ."}
{"id": 3035, "prediction": "Execute a command ."}
{"id": 3037, "prediction": "Unregister the storage ."}
{"id": 3039, "prediction": "Gets the names of the collate types ."}
{"id": 3041, "prediction": "Extracts the field size from the stream ."}
{"id": 3043, "prediction": "Write headers to response ."}
{"id": 3045, "prediction": "Write a record to the response"}
{"id": 3047, "prediction": "Send a response to the stream ."}
{"id": 3049, "prediction": "Closes the database ."}
{"id": 3051, "prediction": "Completes the operation ."}
{"id": 3053, "prediction": "Pushes a writable cache to the cache ."}
{"id": 3055, "prediction": "Pushes the WALCountersHolder to the given holder ."}
{"id": 3057, "prediction": "Stops the write timer ."}
{"id": 3059, "prediction": "Stop the full checkpoint timer ."}
{"id": 3061, "prediction": "Stop the WAL record timer ."}
{"id": 3063, "prediction": "Parse a statement ."}
{"id": 3065, "prediction": "Initialize disconnect ."}
{"id": 3067, "prediction": "Sets the property ."}
{"id": 3069, "prediction": "Checks if a class exists in the schema ."}
{"id": 3071, "prediction": "Defines a vertex strategy ."}
{"id": 2816, "prediction": "Add a pre - pass interceptor to the registry ."}
{"id": 2818, "prediction": "Sets the service factory ."}
{"id": 2820, "prediction": "Accepts the given EJB client context ."}
{"id": 2822, "prediction": "Returns service name of module service ."}
{"id": 2824, "prediction": "Returns the bindInfo for the given JBossInfo ."}
{"id": 2826, "prediction": "Gets the value members ."}
{"id": 2828, "prediction": "Creates the subsystem root ."}
{"id": 2830, "prediction": "Start the service ."}
{"id": 2832, "prediction": "Returns the service operator service name ."}
{"id": 2834, "prediction": "Add a message destination ."}
{"id": 2836, "prediction": "Gets all the components of the deployment ."}
{"id": 2838, "prediction": "Resolve the message destination ."}
{"id": 2840, "prediction": "Sets the defined attribute with the given attribute definition ."}
{"id": 2842, "prediction": "Populate identity from context ."}
{"id": 2844, "prediction": "Checks if the current version is valid ."}
{"id": 2846, "prediction": "Get the constant type code for a given class ."}
{"id": 2848, "prediction": "Creates a new module definition if it exists ."}
{"id": 2850, "prediction": "method to add abstract baseval definitions"}
{"id": 2852, "prediction": "Add an interface to the interface ."}
{"id": 2854, "prediction": "Adds an exception to the exception list ."}
{"id": 2856, "prediction": "Checks if the given JTS is enabled ."}
{"id": 2858, "prediction": "Stops the root context ."}
{"id": 2860, "prediction": "Checks the synchronization of the given method ."}
{"id": 2862, "prediction": "Retrieves the timers associated with the transaction ."}
{"id": 2864, "prediction": "Gets the parameters from a Map ."}
{"id": 2866, "prediction": "Converts the given class to a value ."}
{"id": 2868, "prediction": "Checks if the given types are valid ."}
{"id": 2870, "prediction": "Gets the next batch ."}
{"id": 2872, "prediction": "Observes a resource ."}
{"id": 2874, "prediction": "Replies the reference for the given locator ."}
{"id": 2876, "prediction": "Converts a value to an Enum ."}
{"id": 2878, "prediction": "Checks that two elements are not null ."}
{"id": 2880, "prediction": "Adds the given classloaders to the deployment loaders ."}
{"id": 2882, "prediction": "Lookup an object by name ."}
{"id": 2884, "prediction": "List bindings for a given node ."}
{"id": 2886, "prediction": "Saves the context handle to the factory ."}
{"id": 2888, "prediction": "Create welcome content handler ."}
{"id": 2890, "prediction": "Calculate the operation analysis map ."}
{"id": 2892, "prediction": "Prepare the WSEndpointUnit ."}
{"id": 2894, "prediction": "Publish the web app ."}
{"id": 2896, "prediction": "Starts the container ."}
{"id": 2898, "prediction": "Attempts to retry the timer ."}
{"id": 2900, "prediction": "Gets the declared methods ."}
{"id": 2902, "prediction": "Returns the constructor for the given class ."}
{"id": 2904, "prediction": "Add an ActiveActiveActiveMQ extension ."}
{"id": 2906, "prediction": "Method to migrate generic transport ."}
{"id": 2908, "prediction": "Runs if the STED has failed ."}
{"id": 2910, "prediction": "Determines if the given index is executed ."}
{"id": 2912, "prediction": "Find classes ."}
{"id": 2914, "prediction": "Gets the generic multivalued type ."}
{"id": 2916, "prediction": "Derives a field type from the schema ."}
{"id": 2918, "prediction": "Find record ."}
{"id": 2920, "prediction": "Moves to the left - right AND clause ."}
{"id": 2922, "prediction": "Extract all sub - queries from the query ."}
{"id": 2924, "prediction": "Handles the class with the given sort query ."}
{"id": 2926, "prediction": "Determines if the order of the query is based on the order of the query ."}
{"id": 2928, "prediction": "Finds the index for the given set of indexes ."}
{"id": 2930, "prediction": "Compute the common factor for the given index ."}
{"id": 2932, "prediction": "Allow the given operation to be executed ."}
{"id": 2934, "prediction": "Gets the server status ."}
{"id": 2936, "prediction": "Load local databases ."}
{"id": 2938, "prediction": "Replies the lock manager ."}
{"id": 2940, "prediction": "Commit the commit ."}
{"id": 2942, "prediction": "Updates the identity of an entry in the database ."}
{"id": 2944, "prediction": "Creates a copy of the file with the given path ."}
{"id": 2946, "prediction": "Returns a list of disjoints disjoints ."}
{"id": 2948, "prediction": "Append a character ."}
{"id": 2950, "prediction": "Merge two buffers ."}
{"id": 2952, "prediction": "Execute a command ."}
{"id": 2954, "prediction": "Removes the specified key from the map ."}
{"id": 2956, "prediction": "Execute the first argument ."}
{"id": 2958, "prediction": "Checks that the given bytes are outside of the file ."}
{"id": 2960, "prediction": "Executes a command ."}
{"id": 2962, "prediction": "Add a host ."}
{"id": 2964, "prediction": "Gets the database ."}
{"id": 2966, "prediction": "Kill the connection ."}
{"id": 2968, "prediction": "Disconnect a connection with the given id ."}
{"id": 2970, "prediction": "Swap the given value at the given index ."}
{"id": 2972, "prediction": "Synchronize the schema ."}
{"id": 2974, "prediction": "Set the last record ."}
{"id": 2976, "prediction": "Execute the command"}
{"id": 2978, "prediction": "Registers the given compression algorithm ."}
{"id": 2980, "prediction": "Determines if the given operation is allowed ."}
{"id": 2982, "prediction": "Fill the buffer at the specified position ."}
{"id": 2984, "prediction": "Execute a single step ."}
{"id": 2986, "prediction": "Execute a command ."}
{"id": 2988, "prediction": "Parses the given command request ."}
{"id": 2990, "prediction": "Updates the schedule based on the query ."}
{"id": 2992, "prediction": "Splits the aggregation into the given aggregation ."}
{"id": 2994, "prediction": "Gets the collator for the given document ."}
{"id": 2996, "prediction": "Advances a probe ."}
{"id": 2998, "prediction": "Build an ODocument from a file ."}
{"id": 3000, "prediction": "Creates a SHA - 256 hash algorithm ."}
{"id": 3002, "prediction": "Creates an index ."}
{"id": 3004, "prediction": "Returns an iterator over all edges in the graph ."}
{"id": 3006, "prediction": "Gets the distributed timeout ."}
{"id": 3008, "prediction": "Checks to see if the given file has been updated ."}
{"id": 3010, "prediction": "Parse the lock ."}
{"id": 3012, "prediction": "Free a cluster ."}
{"id": 3014, "prediction": "Shutdown the engine ."}
{"id": 3016, "prediction": "Grants an OR operation ."}
{"id": 3018, "prediction": "Determines if the record should be performed ."}
{"id": 3020, "prediction": "Resets the table ."}
{"id": 3022, "prediction": "Spread a random seed ."}
{"id": 3024, "prediction": "Removes all indices from the database ."}
{"id": 3026, "prediction": "Get the linked class ."}
{"id": 3028, "prediction": "Remove a listener ."}
{"id": 3030, "prediction": "Sets the request ."}
{"id": 3032, "prediction": "Merges this tree with another value ."}
{"id": 3034, "prediction": "Transform the result into a map ."}
{"id": 3036, "prediction": "Closes the database ."}
{"id": 3038, "prediction": "Returns the set of function names ."}
{"id": 3040, "prediction": "Gets the command names ."}
{"id": 3042, "prediction": "Write response status ."}
{"id": 3044, "prediction": "Write all records to the response"}
{"id": 3046, "prediction": "Sends a response to the client ."}
{"id": 3048, "prediction": "Opens a new database object ."}
{"id": 3050, "prediction": "Listen for changes to a collection"}
{"id": 3052, "prediction": "Pushes the components to the snapshot ."}
{"id": 3054, "prediction": "Push the given snapshot to the storage ."}
{"id": 3056, "prediction": "Pushes a snapshot of the given component ."}
{"id": 3058, "prediction": "Stops the memory checkpoint timer ."}
{"id": 3060, "prediction": "Stop commit timer ."}
{"id": 3062, "prediction": "Stops the WAL timer ."}
{"id": 3064, "prediction": "Initialize messages ."}
{"id": 3066, "prediction": "Removes the record from the graph ."}
{"id": 3068, "prediction": "Remove a field from the graph ."}
{"id": 3070, "prediction": "Wrap a cursor to a new index ."}
{"id": 3073, "prediction": "Gets the list of record entries ."}
{"id": 3075, "prediction": "Adds an index entry to the transaction ."}
{"id": 3077, "prediction": "Process the record ."}
{"id": 3079, "prediction": "Prepare keys for the given index ."}
{"id": 3081, "prediction": "Reads a page from the cache ."}
{"id": 3083, "prediction": "Opens the WAL page ."}
{"id": 3085, "prediction": "Gets the node strategy ."}
{"id": 3087, "prediction": "Checks if the cluster is read ."}
{"id": 3089, "prediction": "Get the set of servers for the given collection name ."}
{"id": 3091, "prediction": "Checks if a server is contained in the server ."}
{"id": 3093, "prediction": "Get all configured servers ."}
{"id": 3095, "prediction": "Gets the cluster owners ."}
{"id": 3097, "prediction": "Get the configured cluster owner ."}
{"id": 3099, "prediction": "Returns the set of registered servers ."}
{"id": 3101, "prediction": "Get the number of quorum quorum ."}
{"id": 3103, "prediction": "Gets the list of database servers ."}
{"id": 3105, "prediction": "Gets the global read quorum ."}
{"id": 3107, "prediction": "Gets the cluster configuration ."}
{"id": 3109, "prediction": "Clear initialization stack ."}
{"id": 3111, "prediction": "Drop index ."}
{"id": 3113, "prediction": "Add an edge to the graph ."}
{"id": 3115, "prediction": "Get all vertices for a given class name ."}
{"id": 3117, "prediction": "Gets an edge id ."}
{"id": 3119, "prediction": "Shuts down the database ."}
{"id": 3121, "prediction": "Gets the OrientVertexType ."}
{"id": 3123, "prediction": "Drops the vertex type ."}
{"id": 3125, "prediction": "Create an edge type ."}
{"id": 3127, "prediction": "Drops an element index ."}
{"id": 3129, "prediction": "Remove an existing backgroundException listener ."}
{"id": 3131, "prediction": "Stop monitoring ."}
{"id": 3133, "prediction": "Unregister a MBean"}
{"id": 3135, "prediction": "Fetches the system statistics from the snapshot ."}
{"id": 3137, "prediction": "Compress the given HTTP response into a byte array ."}
{"id": 3139, "prediction": "Detaches an object from the serializer ."}
{"id": 3141, "prediction": "Add a command to the server ."}
{"id": 3143, "prediction": "Declarative Services Method ."}
{"id": 3145, "prediction": "Gets the engine engines ."}
{"id": 3147, "prediction": "Gets the conflict responses ."}
{"id": 3149, "prediction": "Compute quorum response ."}
{"id": 3151, "prediction": "Retrieve an object from the database ."}
{"id": 3153, "prediction": "Gets the library library ."}
{"id": 3155, "prediction": "Returns the next page position for the given atomic operation ."}
{"id": 3157, "prediction": "Get the value stored at the given index ."}
{"id": 3159, "prediction": "Returns the index of the outside of the specified string ."}
{"id": 3161, "prediction": "Gets the jump ."}
{"id": 3163, "prediction": "Enqueue a record ."}
{"id": 3165, "prediction": "Enqueue a cluster ."}
{"id": 3167, "prediction": "Creates a new pojo instance ."}
{"id": 3169, "prediction": "Registers the entity classes ."}
{"id": 3171, "prediction": "Acquires a database ."}
{"id": 3173, "prediction": "Acquires a database ."}
{"id": 3175, "prediction": "Returns an iterator for the given class loader ."}
{"id": 3177, "prediction": "Create a vertex from a JSON object ."}
{"id": 3179, "prediction": "Create a JSON object from a JSON object ."}
{"id": 3181, "prediction": "Executes an import ."}
{"id": 3183, "prediction": "Get the active data center"}
{"id": 3185, "prediction": "Creates an OSymmetric key from the given configuration ."}
{"id": 3187, "prediction": "Creates an OSymmetric key from an input stream ."}
{"id": 3189, "prediction": "Saves the base64 encoded data to an OutputStream ."}
{"id": 3191, "prediction": "Sets the child ."}
{"id": 3193, "prediction": "Gets the value as a Map ."}
{"id": 3195, "prediction": "Get the entry from the map ."}
{"id": 3197, "prediction": "Read the current record ."}
{"id": 3199, "prediction": "Gets the no - tx ."}
{"id": 3201, "prediction": "Get property value"}
{"id": 3203, "prediction": "Parse an OAuth statement ."}
{"id": 3205, "prediction": "Gets a token from the source ."}
{"id": 3207, "prediction": "Returns the vertices of the graph ."}
{"id": 3209, "prediction": "Add an edge to the graph ."}
{"id": 3211, "prediction": "Gets the connection class name ."}
{"id": 3213, "prediction": "Process the set of RIDs from the database ."}
{"id": 3215, "prediction": "Execute a task on a local node ."}
{"id": 3217, "prediction": "Backup the given output stream"}
{"id": 3219, "prediction": "Gets the argument ."}
{"id": 3221, "prediction": "Connect to a server ."}
{"id": 3223, "prediction": "Retrieves information about the server ."}
{"id": 3225, "prediction": "Drop a remote database ."}
{"id": 3227, "prediction": "Releases a remote database ."}
{"id": 3229, "prediction": "Execute the given index ."}
{"id": 3231, "prediction": "Parses the retry command ."}
{"id": 3233, "prediction": "Delete record ."}
{"id": 3235, "prediction": "Authenticate user ."}
{"id": 3237, "prediction": "Stops the server ."}
{"id": 3239, "prediction": "Sets the bucket pointer to the specified value ."}
{"id": 3241, "prediction": "Ends an atomic operation ."}
{"id": 3243, "prediction": "Changes the maximum size of the cache ."}
{"id": 3245, "prediction": "Read the parameters from the socket ."}
{"id": 3247, "prediction": "Adds an item to the cache ."}
{"id": 3249, "prediction": "Acquires an entry from the cache ."}
{"id": 3251, "prediction": "Clears the contents of this buffer ."}
{"id": 3253, "prediction": "Empty read buffer ."}
{"id": 3255, "prediction": "Called after the entry has been read ."}
{"id": 3257, "prediction": "Returns the closest power of the given value ."}
{"id": 3259, "prediction": "Converts the given key to an integer ."}
{"id": 3261, "prediction": "Returns the object serializer for the given type ."}
{"id": 3263, "prediction": "Gets an engine with the specified name ."}
{"id": 3265, "prediction": "Executes the profiling ."}
{"id": 3267, "prediction": "Authenticates an OAuth token ."}
{"id": 3269, "prediction": "Acquires a read lock ."}
{"id": 3271, "prediction": "Returns the id of the graph ."}
{"id": 3273, "prediction": "Removes a property from the current thread ."}
{"id": 3275, "prediction": "Deletes the file ."}
{"id": 3277, "prediction": "Creates a new vertex ."}
{"id": 3279, "prediction": "Reads the positions from the embedded stream ."}
{"id": 3281, "prediction": "Quick fix for the link ."}
{"id": 3283, "prediction": "Set version number ."}
{"id": 3285, "prediction": "Initializes the database instance ."}
{"id": 3287, "prediction": "Execute an index query ."}
{"id": 3289, "prediction": "Register the given command instance ."}
{"id": 3291, "prediction": "Analyze the search condition ."}
{"id": 3293, "prediction": "Attaches the given object to the given object ."}
{"id": 3295, "prediction": "Sets the next batch ."}
{"id": 3297, "prediction": "Add a base class to this class ."}
{"id": 3299, "prediction": "Converts an object to a stream ."}
{"id": 3301, "prediction": "Check to see if there are no memory leaks ."}
{"id": 3303, "prediction": "Convert a byte array to an int ."}
{"id": 3305, "prediction": "Installs the cluster ."}
{"id": 3307, "prediction": "Gets the index of the given object ."}
{"id": 3309, "prediction": "Retrieves all the clusters associated with this target ."}
{"id": 3311, "prediction": "Gets the temporary RID counter ."}
{"id": 3313, "prediction": "Parse the fetch plan ."}
{"id": 3315, "prediction": "Optimize the index ."}
{"id": 3317, "prediction": "Executes the command"}
{"id": 3319, "prediction": "Validate an index value ."}
{"id": 3321, "prediction": "Execute a command"}
{"id": 3323, "prediction": "Sets property ."}
{"id": 3325, "prediction": "Execute an ODT command ."}
{"id": 3327, "prediction": "Get callback hooks ."}
{"id": 3072, "prediction": "Define an edge strategy ."}
{"id": 3074, "prediction": "Gets a list of record entries ."}
{"id": 3076, "prediction": "Merge two sets ."}
{"id": 3078, "prediction": "Checks if the given index is in the indexed function ."}
{"id": 3080, "prediction": "Adds a page to the buffer ."}
{"id": 3082, "prediction": "Truncate the specified page ."}
{"id": 3084, "prediction": "Check if the node is active"}
{"id": 3086, "prediction": "Checks if the given cluster is asynchronous ."}
{"id": 3088, "prediction": "Gets server cluster map ."}
{"id": 3090, "prediction": "Checks if a server is contained in the cluster"}
{"id": 3092, "prediction": "Get the list of master servers ."}
{"id": 3094, "prediction": "Gets the cluster s clusters ."}
{"id": 3096, "prediction": "Gets the cluster owner ."}
{"id": 3098, "prediction": "Get the list of configured servers ."}
{"id": 3100, "prediction": "Returns the set of data centers ."}
{"id": 3102, "prediction": "Checks if sharding cluster is sharded ."}
{"id": 3104, "prediction": "Gets the data center of the server ."}
{"id": 3106, "prediction": "Gets the write quorum ."}
{"id": 3108, "prediction": "Gets the data center configuration ."}
{"id": 3110, "prediction": "Returns an index with the given name ."}
{"id": 3112, "prediction": "Adds a new vertex with the given id ."}
{"id": 3114, "prediction": "Gets an object from the graph ."}
{"id": 3116, "prediction": "Returns an iterator of all edges of the specified class ."}
{"id": 3118, "prediction": "Replaces the current database ."}
{"id": 3120, "prediction": "Gets the orientation type ."}
{"id": 3122, "prediction": "Create a new OrientType ."}
{"id": 3124, "prediction": "Gets the edge type for the given name ."}
{"id": 3126, "prediction": "Returns the element at the given id ."}
{"id": 3128, "prediction": "Create key index ."}
{"id": 3130, "prediction": "Notifies all registered listeners that an exception is thrown ."}
{"id": 3132, "prediction": "Registers a MBean ."}
{"id": 3134, "prediction": "Gets the write cache counters ."}
{"id": 3136, "prediction": "Fetch all components from the given component ."}
{"id": 3138, "prediction": "Get the value of a property ."}
{"id": 3140, "prediction": "Returns the version of the given object ."}
{"id": 3142, "prediction": "Sets the dirty object ."}
{"id": 3144, "prediction": "Gets the index types ."}
{"id": 3146, "prediction": "Gets the list of all nodes in the response ."}
{"id": 3148, "prediction": "Gets the best response group ."}
{"id": 3150, "prediction": "Gets the list of received responses ."}
{"id": 3152, "prediction": "Determine whether the given operation is allowed to be executed ."}
{"id": 3154, "prediction": "Release database engine ."}
{"id": 3156, "prediction": "Update the size of the bucket ."}
{"id": 3158, "prediction": "Checks whether the given index should be used by the given order ."}
{"id": 3160, "prediction": "Jump to the beginning of a white space ."}
{"id": 3162, "prediction": "Sets the fetch plan ."}
{"id": 3164, "prediction": "Cancels a record ."}
{"id": 3166, "prediction": "Gets the dependencies of the given pattern ."}
{"id": 3168, "prediction": "Registers the entity classes ."}
{"id": 3170, "prediction": "Set the class handler ."}
{"id": 3172, "prediction": "Returns the number of available connections ."}
{"id": 3174, "prediction": "Execute the Orient command ."}
{"id": 3176, "prediction": "Checks the configuration of the cache ."}
{"id": 3178, "prediction": "Create an edge from a JSON object ."}
{"id": 3180, "prediction": "Creates an object node from a set of properties ."}
{"id": 3182, "prediction": "Returns the status of this document ."}
{"id": 3184, "prediction": "Extracts the algorithm from the given cipher transform ."}
{"id": 3186, "prediction": "Creates a key from the given algorithm ."}
{"id": 3188, "prediction": "Encrypt the given transform ."}
{"id": 3190, "prediction": "Saves the given OutputStream to the given OutputStream ."}
{"id": 3192, "prediction": "Add an Object to the result"}
{"id": 3194, "prediction": "Authenticate a user ."}
{"id": 3196, "prediction": "Gets the record ."}
{"id": 3198, "prediction": "Gets the object graph ."}
{"id": 3200, "prediction": "Setup the pool ."}
{"id": 3202, "prediction": "Stop the transaction ."}
{"id": 3204, "prediction": "Gets the next token ."}
{"id": 3206, "prediction": "Generate a ParseException ."}
{"id": 3208, "prediction": "Remove all fields from the graph ."}
{"id": 3210, "prediction": "Add an edge to the graph ."}
{"id": 3212, "prediction": "Replies the connection for the given field name ."}
{"id": 3214, "prediction": "Returns a map of all methods in the console ."}
{"id": 3216, "prediction": "Returns the number of nodes with the given status ."}
{"id": 3218, "prediction": "Wait for next retry ."}
{"id": 3220, "prediction": "Returns the number of parameters in the request ."}
{"id": 3222, "prediction": "Retrieves a list of databases ."}
{"id": 3224, "prediction": "Checks if a database exists ."}
{"id": 3226, "prediction": "Sets the remote database ."}
{"id": 3228, "prediction": "Get cluster status ."}
{"id": 3230, "prediction": "Gets the graph ."}
{"id": 3232, "prediction": "Save record ."}
{"id": 3234, "prediction": "Gets the authentication header ."}
{"id": 3236, "prediction": "Checks if a resource is authorized to be authorized ."}
{"id": 3238, "prediction": "Adjust the beginning of a line ."}
{"id": 3240, "prediction": "Returns the bucket pointer for the given offset ."}
{"id": 3242, "prediction": "Acquires an exclusive lock ."}
{"id": 3244, "prediction": "Listen to the specified port ."}
{"id": 3246, "prediction": "Shuts down the log manager ."}
{"id": 3248, "prediction": "Remove the entry from the map ."}
{"id": 3250, "prediction": "Returns the value associated with the given key ."}
{"id": 3252, "prediction": "Closes the cache ."}
{"id": 3254, "prediction": "Adds a task to the pool ."}
{"id": 3256, "prediction": "Puts an entry into the buffer ."}
{"id": 3258, "prediction": "On event ."}
{"id": 3260, "prediction": "Convert all enum constants to a string ."}
{"id": 3262, "prediction": "Initialize the shutdown queue ."}
{"id": 3264, "prediction": "Execute the database ."}
{"id": 3266, "prediction": "Adds the reader to the state ."}
{"id": 3268, "prediction": "Create metadata ."}
{"id": 3270, "prediction": "Returns the vertex at the given direction ."}
{"id": 3272, "prediction": "Sets the current value of the current thread ."}
{"id": 3274, "prediction": "Clears the cache ."}
{"id": 3276, "prediction": "Ends the execution ."}
{"id": 3278, "prediction": "Parse the strategy ."}
{"id": 3280, "prediction": "Execute the given index ."}
{"id": 3282, "prediction": "Fill the record with the given record ."}
{"id": 3284, "prediction": "Gets the record type ."}
{"id": 3286, "prediction": "Print an exception stack trace ."}
{"id": 3288, "prediction": "Convert a record to a link ."}
{"id": 3290, "prediction": "Create a new server user configuration ."}
{"id": 3292, "prediction": "Creates an indexed property ."}
{"id": 3294, "prediction": "Gets the index class ."}
{"id": 3296, "prediction": "Truncate the cluster ."}
{"id": 3298, "prediction": "Add clusters to cluster ids ."}
{"id": 3300, "prediction": "Releases a pointer to the pool ."}
{"id": 3302, "prediction": "Clears the pointer pool ."}
{"id": 3304, "prediction": "Open the database ."}
{"id": 3306, "prediction": "Dump the server status log ."}
{"id": 3308, "prediction": "Returns the index of the specified object in the array ."}
{"id": 3310, "prediction": "Recursively searches the last record ."}
{"id": 3312, "prediction": "Reports a warning ."}
{"id": 3314, "prediction": "Parse the cache ."}
{"id": 3316, "prediction": "Get the status of this document ."}
{"id": 3318, "prediction": "Handles a JVM error ."}
{"id": 3320, "prediction": "Rollback a transaction ."}
{"id": 3322, "prediction": "Registers a cluster ."}
{"id": 3324, "prediction": "Execute the OCommand ."}
{"id": 3326, "prediction": "Delete record ."}
{"id": 3329, "prediction": "Returns the count of the given view ."}
{"id": 3331, "prediction": "Activate the current thread ."}
{"id": 3333, "prediction": "Returns the index of the given position ."}
{"id": 3335, "prediction": "Parses the next word ."}
{"id": 3337, "prediction": "Parses an optional keyword ."}
{"id": 3339, "prediction": "Execute a command ."}
{"id": 3341, "prediction": "Returns the offset as a byte array ."}
{"id": 3343, "prediction": "Obtains an access token from the resource ."}
{"id": 3345, "prediction": "Checks to see if there are more characters ."}
{"id": 3347, "prediction": "Read a line from a byte array ."}
{"id": 3349, "prediction": "Skips over the input stream ."}
{"id": 3351, "prediction": "Merges the elements from the given comparator into the given array ."}
{"id": 3353, "prediction": "Performs a parallel sort operation ."}
{"id": 3355, "prediction": "Hash MurmurHash ."}
{"id": 3357, "prediction": "Truncate a file ."}
{"id": 3359, "prediction": "Called when a consumer needs to be failed ."}
{"id": 3361, "prediction": "Find all matches ."}
{"id": 3363, "prediction": "Removes all snapshots from the snapshot ."}
{"id": 3365, "prediction": "Checks if two objects are equal ."}
{"id": 3367, "prediction": "Called when an announcement completes ."}
{"id": 3369, "prediction": "Read header tags ."}
{"id": 3371, "prediction": "Clear all the segments ."}
{"id": 3373, "prediction": "Returns the size of the bit set ."}
{"id": 3375, "prediction": "Copies data from source to dest ."}
{"id": 3377, "prediction": "Compares two byte arrays ."}
{"id": 3379, "prediction": "Copy the contents of the given byte array to the given length ."}
{"id": 3381, "prediction": "Writes bytes to the output stream ."}
{"id": 3383, "prediction": "Returns the position of the named field ."}
{"id": 3385, "prediction": "Returns true if the given dataset has any of the given dataset"}
{"id": 3387, "prediction": "Generate the files for the given directory ."}
{"id": 3389, "prediction": "Gets the record key ."}
{"id": 3391, "prediction": "Creates a field path for the given hash index ."}
{"id": 3393, "prediction": "Adds an object to the cache ."}
{"id": 3395, "prediction": "Checks if the given key is present in the cache ."}
{"id": 3397, "prediction": "Adds a field to the object ."}
{"id": 3399, "prediction": "Initialize the next major version ."}
{"id": 3401, "prediction": "Finds all records that match the given field name ."}
{"id": 3403, "prediction": "Sets the elements of this element ."}
{"id": 3405, "prediction": "Calculate the hash table ."}
{"id": 3407, "prediction": "Runs the cycle ."}
{"id": 3409, "prediction": "Removes all references from the given object ."}
{"id": 3411, "prediction": "Calculates the type metrics for the given type ."}
{"id": 3413, "prediction": "Writes a fixed length int to the output buffer ."}
{"id": 3415, "prediction": "Return the specified ordinal in the pool ."}
{"id": 3417, "prediction": "Returns the hash of the specified key type ."}
{"id": 3419, "prediction": "Resize storage ."}
{"id": 3421, "prediction": "Prepare the cache ."}
{"id": 3423, "prediction": "Grows the key array if necessary ."}
{"id": 3425, "prediction": "Returns empty key array ."}
{"id": 3427, "prediction": "Finds a unique attribute ."}
{"id": 3429, "prediction": "Returns the hash table size ."}
{"id": 3431, "prediction": "Writes the snapshot ."}
{"id": 3433, "prediction": "Adds a collection to the collection if it is not a schema or not ."}
{"id": 3435, "prediction": "Reindex the hash index ."}
{"id": 3437, "prediction": "Triggers an async refresh ."}
{"id": 3439, "prediction": "Add a new type diff ."}
{"id": 3441, "prediction": "Writes a long to the stream ."}
{"id": 3443, "prediction": "Write a v int to a byte array ."}
{"id": 3445, "prediction": "Read a long ."}
{"id": 3447, "prediction": "Refresh the loading view sizes"}
{"id": 3449, "prediction": "Pull the event ."}
{"id": 3451, "prediction": "Add a rule to the rule builder ."}
{"id": 3453, "prediction": "Create a new rule builder ."}
{"id": 3455, "prediction": "Returns a new rule builder with the specified fact type ."}
{"id": 3457, "prediction": "Applies a rule to the specified rule ."}
{"id": 3459, "prediction": "Applies the given action to the given action ."}
{"id": 3461, "prediction": "Returns the annotated field of the given annotation ."}
{"id": 3463, "prediction": "Gets an annotation from the given class ."}
{"id": 3465, "prediction": "Update rule status ."}
{"id": 3467, "prediction": "Returns a new instance with the specified result type ."}
{"id": 3469, "prediction": "Add an action to this rule ."}
{"id": 3471, "prediction": "Returns a new rule with the specified fact type ."}
{"id": 3473, "prediction": "Read an empty line or empty line ."}
{"id": 3475, "prediction": "Gets the port from the build configuration ."}
{"id": 3477, "prediction": "Parses the port mapping configuration ."}
{"id": 3479, "prediction": "Shift port port ."}
{"id": 3481, "prediction": "Append an image to the target stream ."}
{"id": 3483, "prediction": "Convert a service name to a port ."}
{"id": 3485, "prediction": "Put a value into the map ."}
{"id": 3487, "prediction": "Merge two maps ."}
{"id": 3489, "prediction": "Wait for a pod ."}
{"id": 3491, "prediction": "Convert an object to a List"}
{"id": 3493, "prediction": "Checks if a pod is ready ."}
{"id": 3495, "prediction": "Checks if the given list has already been built ."}
{"id": 3497, "prediction": "Reads and parses the fragment ."}
{"id": 3499, "prediction": "Merge two resources ."}
{"id": 3501, "prediction": "Checks if the container is local ."}
{"id": 3503, "prediction": "Adds a port if the key is valid ."}
{"id": 3505, "prediction": "Returns plugin configuration ."}
{"id": 3507, "prediction": "Download file ."}
{"id": 3509, "prediction": "Merges the configuration with the specified configuration ."}
{"id": 3511, "prediction": "Read profile from classpath"}
{"id": 3513, "prediction": "Find the profile from the given directory ."}
{"id": 3515, "prediction": "Parses the given YAML file ."}
{"id": 3517, "prediction": "Checks if the runtime mode is open ."}
{"id": 3519, "prediction": "Get the first child element of the given name ."}
{"id": 3521, "prediction": "Remove tag by name ."}
{"id": 3523, "prediction": "Applies a project to the project ."}
{"id": 3525, "prediction": "Gets the namespace namespace ."}
{"id": 3527, "prediction": "Create a Kubernetes ."}
{"id": 3529, "prediction": "Retrieves the configuration for the application ."}
{"id": 3531, "prediction": "Calculates the duration of a duration ."}
{"id": 3533, "prediction": "Disable OpenShift features ."}
{"id": 3535, "prediction": "Parses the given input stream ."}
{"id": 3537, "prediction": "Extracts the generator configuration ."}
{"id": 3539, "prediction": "Extracts the engine configuration from the cache ."}
{"id": 3541, "prediction": "Copies all the app config files from the app"}
{"id": 3543, "prediction": "Get the Spring Boot bootstrap version from the Maven project ."}
{"id": 3545, "prediction": "Audit a Kubernetes ."}
{"id": 3547, "prediction": "Builds a map from the source map ."}
{"id": 3549, "prediction": "Returns the singleton template for the given resource ."}
{"id": 3551, "prediction": "Gets the value for the given key ."}
{"id": 3553, "prediction": "Prepares the list of processors for the given name ."}
{"id": 3555, "prediction": "Gets the docker ."}
{"id": 3557, "prediction": "Gets the registry ."}
{"id": 3559, "prediction": "Gets the external service URL ."}
{"id": 3561, "prediction": "Creates a JestClient instance ."}
{"id": 3563, "prediction": "Scan plugins ."}
{"id": 3565, "prediction": "Get the rewards balance"}
{"id": 3567, "prediction": "Gets the authorization header ."}
{"id": 3569, "prediction": "Create a VenmoConfiguration from a JSONObject"}
{"id": 3571, "prediction": "Collect device data ."}
{"id": 3573, "prediction": "Gets the PayPal client metadata id ."}
{"id": 3575, "prediction": "Get a string from a JSON object"}
{"id": 3577, "prediction": "Gets the browser configuration ."}
{"id": 3579, "prediction": "Perform a GET request ."}
{"id": 3581, "prediction": "Perform a POST request ."}
{"id": 3583, "prediction": "Append a local payment request to the local transaction"}
{"id": 3328, "prediction": "Deletes an existing record ."}
{"id": 3330, "prediction": "Counts the number of classes in the database ."}
{"id": 3332, "prediction": "Registers an encryption algorithm ."}
{"id": 3334, "prediction": "Parses an optional word ."}
{"id": 3336, "prediction": "Parses the next character ."}
{"id": 3338, "prediction": "Checks if a separator is valid ."}
{"id": 3340, "prediction": "Clear configuration files ."}
{"id": 3342, "prediction": "Extracts the token from the given token type ."}
{"id": 3344, "prediction": "Copy the current token from the context ."}
{"id": 3346, "prediction": "Read a line from a byte array ."}
{"id": 3348, "prediction": "Skip n bytes ."}
{"id": 3350, "prediction": "Ensures that the array is not null ."}
{"id": 3352, "prediction": "Swaps the elements of the specified array ."}
{"id": 3354, "prediction": "Hash MurmurHash"}
{"id": 3356, "prediction": "Writes a byte buffer to the output channel ."}
{"id": 3358, "prediction": "Sets the file position ."}
{"id": 3360, "prediction": "Awaits completed tasks ."}
{"id": 3362, "prediction": "Finds all the compaction types for a given type ."}
{"id": 3364, "prediction": "Returns the hash code for the given ordinal field ."}
{"id": 3366, "prediction": "Removes all references that are outside of the given closure ."}
{"id": 3368, "prediction": "Called when a cycle completes ."}
{"id": 3370, "prediction": "Extracts the primary key from the given object ."}
{"id": 3372, "prediction": "Reads an array of integers ."}
{"id": 3374, "prediction": "Returns the field value for the given row ."}
{"id": 3376, "prediction": "Copies the given byte array to the given length ."}
{"id": 3378, "prediction": "Copy the contents of the given byte array to the given target ."}
{"id": 3380, "prediction": "Reads the contents of a stream ."}
{"id": 3382, "prediction": "Ensures that the given segment is available ."}
{"id": 3384, "prediction": "Calculates the number of buckets based on the number of buckets ."}
{"id": 3386, "prediction": "Generate files ."}
{"id": 3388, "prediction": "Checks if the key matches the given ordinal path ."}
{"id": 3390, "prediction": "Creates a FieldPath for the primary key ."}
{"id": 3392, "prediction": "Creates a field path for a prefix ."}
{"id": 3394, "prediction": "Initialize the fields ."}
{"id": 3396, "prediction": "Gets the change percentage ."}
{"id": 3398, "prediction": "Returns a list of nested schemas ."}
{"id": 3400, "prediction": "Returns the bit at the given index ."}
{"id": 3402, "prediction": "Finds all records that match the given field name ."}
{"id": 3404, "prediction": "Sets the elements of the elements of this element ."}
{"id": 3406, "prediction": "Restore the last state of the latest version ."}
{"id": 3408, "prediction": "Adds the given key to the primary key ."}
{"id": 3410, "prediction": "Write the blob data to the blob ."}
{"id": 3412, "prediction": "Write the data to the buffer ."}
{"id": 3414, "prediction": "Write fixed length long ."}
{"id": 3416, "prediction": "Sort the number of entries in the list ."}
{"id": 3418, "prediction": "Generates a hash for a given key type ."}
{"id": 3420, "prediction": "Find free ordinal ."}
{"id": 3422, "prediction": "Compares a serialized representation of a serialized representation ."}
{"id": 3424, "prediction": "Rehashes data in the cache ."}
{"id": 3426, "prediction": "Checks if the given object is equal to the given index ."}
{"id": 3428, "prediction": "Swaps the current read state ."}
{"id": 3430, "prediction": "Run a compaction cycle ."}
{"id": 3432, "prediction": "Write delta ."}
{"id": 3434, "prediction": "Normalize a field name to a string ."}
{"id": 3436, "prediction": "Finds all matches for the given query ."}
{"id": 3438, "prediction": "Trigger an asynchronous refresh ."}
{"id": 3440, "prediction": "Calculates the difference between the two types ."}
{"id": 3442, "prediction": "Writes an int to the output stream ."}
{"id": 3444, "prediction": "Read an int from the stream ."}
{"id": 3446, "prediction": "Add a view ."}
{"id": 3448, "prediction": "Update the UI for the mode ."}
{"id": 3450, "prediction": "Overrides the current push to the current view"}
{"id": 3452, "prediction": "Add rule ."}
{"id": 3454, "prediction": "Creates a new rule builder ."}
{"id": 3456, "prediction": "Create a new rule builder ."}
{"id": 3458, "prediction": "Creates a new rule ."}
{"id": 3460, "prediction": "Creates a new instance of the given class ."}
{"id": 3462, "prediction": "Gets the annotated method from the given class ."}
{"id": 3464, "prediction": "Registers an audit rule ."}
{"id": 3466, "prediction": "Gets the map status map ."}
{"id": 3468, "prediction": "Add an action to the rule ."}
{"id": 3470, "prediction": "Resets the current state ."}
{"id": 3472, "prediction": "Gets the list of Pojo rules ."}
{"id": 3474, "prediction": "Converts a list of Service objects into an array of Service objects ."}
{"id": 3476, "prediction": "Extract the list of service ports from configuration ."}
{"id": 3478, "prediction": "Add the port if not null ."}
{"id": 3480, "prediction": "Adds the service parts to the service ."}
{"id": 3482, "prediction": "Checks if the specified service port is equal ."}
{"id": 3484, "prediction": "Gets the host and port ."}
{"id": 3486, "prediction": "Merge the given map into the given map ."}
{"id": 3488, "prediction": "Puts all of the values in the map into the given map ."}
{"id": 3490, "prediction": "Validate the kubernetes"}
{"id": 3492, "prediction": "Returns the resource version for the given entity ."}
{"id": 3494, "prediction": "Gets the current context ."}
{"id": 3496, "prediction": "Checks if the given project is resource ."}
{"id": 3498, "prediction": "Convert a Map to a list of Envars ."}
{"id": 3500, "prediction": "Merge map strings into map ."}
{"id": 3502, "prediction": "Reads a configuration file ."}
{"id": 3504, "prediction": "Gets the Docker configuration for the server ."}
{"id": 3506, "prediction": "Gets the secret configuration ."}
{"id": 3508, "prediction": "Compare two versions ."}
{"id": 3510, "prediction": "Looks up a profile by name ."}
{"id": 3512, "prediction": "Read all profile from classpath ."}
{"id": 3514, "prediction": "Retrieves a list of meta - profile paths ."}
{"id": 3516, "prediction": "Gets the image pull policy ."}
{"id": 3518, "prediction": "Determines the number of replicas in the deployment ."}
{"id": 3520, "prediction": "Installs a template ."}
{"id": 3522, "prediction": "Apply a namespace to the entity ."}
{"id": 3524, "prediction": "Applies a project request to the project ."}
{"id": 3526, "prediction": "Logs an exception ."}
{"id": 3528, "prediction": "Adds namespace annotation ."}
{"id": 3530, "prediction": "Returns the number of seconds in milliseconds ."}
{"id": 3532, "prediction": "Scans the given patterns ."}
{"id": 3534, "prediction": "Checks if the specified service is in the service registry ."}
{"id": 3536, "prediction": "Gets the generator context ."}
{"id": 3538, "prediction": "Gets the Enherher context ."}
{"id": 3540, "prediction": "Gets the default icon ."}
{"id": 3542, "prediction": "Reads a resource from a URL ."}
{"id": 3544, "prediction": "Creates a list of service objects ."}
{"id": 3546, "prediction": "Gets raw config ."}
{"id": 3548, "prediction": "Extracts the watcher configuration from the configuration ."}
{"id": 3550, "prediction": "Get the date of the build date ."}
{"id": 3552, "prediction": "Returns a map with the given name ."}
{"id": 3554, "prediction": "Adds an image to the builder ."}
{"id": 3556, "prediction": "Gets the image name ."}
{"id": 3558, "prediction": "Check if the browser is online ."}
{"id": 3560, "prediction": "Converts a global property to a global value ."}
{"id": 3562, "prediction": "Creates a test node ."}
{"id": 3564, "prediction": "Converts a JSON string to an American ExpressCard object ."}
{"id": 3566, "prediction": "Create a PayPal payment resource ."}
{"id": 3568, "prediction": "Performs POST request ."}
{"id": 3570, "prediction": "Collect device data ."}
{"id": 3572, "prediction": "Collect device data ."}
{"id": 3574, "prediction": "Checks if the given package is valid ."}
{"id": 3576, "prediction": "Parses a payment method ."}
{"id": 3578, "prediction": "Gets the browser agreement configuration ."}
{"id": 3580, "prediction": "Submits a callback to the server ."}
{"id": 3582, "prediction": "Starts payment request ."}
{"id": 3585, "prediction": "Remove a listener ."}
{"id": 3587, "prediction": "Sends an activity result ."}
{"id": 3589, "prediction": "Adds the words to the dictionary ."}
{"id": 3591, "prediction": "Converts a list of tokens to a list of strings ."}
{"id": 3593, "prediction": "Takes a list of tokens ."}
{"id": 3595, "prediction": "Joins the given buffers into a list of buffers ."}
{"id": 3597, "prediction": "Returns the profile for the given index ."}
{"id": 3599, "prediction": "Reads the next marker from the buffer ."}
{"id": 3601, "prediction": "Gets the maximum available frame ."}
{"id": 3603, "prediction": "Copy the contents of a file to a file ."}
{"id": 3605, "prediction": "Converts a frame into a time value ."}
{"id": 3607, "prediction": "Calculates the duration of the edited media"}
{"id": 3609, "prediction": "Convert a TV frame to a TV frame"}
{"id": 3611, "prediction": "Convert a timecode frame to a timecode frame ."}
{"id": 3613, "prediction": "Creates a 7 - 8 - bit integer ."}
{"id": 3615, "prediction": "Checks if the input color space matches this color space ."}
{"id": 3617, "prediction": "Creates a new MPXXMer"}
{"id": 3619, "prediction": "Creates a WAV header ."}
{"id": 3621, "prediction": "Parses the MP4Decoder configuration information ."}
{"id": 3623, "prediction": "Read the decoder of the decoder ."}
{"id": 3625, "prediction": "Decode the given buffer ."}
{"id": 3627, "prediction": "Block the bounding box"}
{"id": 3629, "prediction": "Encodes the given long value into a byte array ."}
{"id": 3631, "prediction": "Adds a packet to the packet ."}
{"id": 3633, "prediction": "Decode a binary number ."}
{"id": 3635, "prediction": "Creates a new mark marker for the given buffer ."}
{"id": 3637, "prediction": "Sets the plane for the plane ."}
{"id": 3639, "prediction": "Computes the COFF ."}
{"id": 3641, "prediction": "Concatenate two bits ."}
{"id": 3643, "prediction": "Reverse a 64 - bit long into a 64 - bit integer"}
{"id": 3645, "prediction": "Replies the image buffer for the specified player ."}
{"id": 3647, "prediction": "Converts a byte into a byte array ."}
{"id": 3649, "prediction": "Converts a AudioBuffer into a float ."}
{"id": 3651, "prediction": "Interleave the given audio format into the given output buffer ."}
{"id": 3653, "prediction": "Gets the size of the video ."}
{"id": 3655, "prediction": "Builds a map from the given width and height ."}
{"id": 3657, "prediction": "Reads a 32 - bit integer from the buffer ."}
{"id": 3659, "prediction": "Encodes a frame into a single frame ."}
{"id": 3661, "prediction": "Encode a frame ."}
{"id": 3663, "prediction": "Gets a list of supported tags ."}
{"id": 3665, "prediction": "Gets the internal state ."}
{"id": 3667, "prediction": "Loads a JNI library from the given application ."}
{"id": 3669, "prediction": "Delete temporary files ."}
{"id": 3671, "prediction": "Gets the audio channel from the layout ."}
{"id": 3673, "prediction": "Returns a string representation of the version information ."}
{"id": 3675, "prediction": "Create a Demuxer ."}
{"id": 3677, "prediction": "Displays a video image ."}
{"id": 3679, "prediction": "Prints a configuration option ."}
{"id": 3681, "prediction": "Generate unique name ."}
{"id": 3683, "prediction": "List of supported video frames ."}
{"id": 3685, "prediction": "Gets a list of audio samples ."}
{"id": 3687, "prediction": "Gets the list of available audio channels ."}
{"id": 3689, "prediction": "Sets the 2 flag 2 ."}
{"id": 3691, "prediction": "Get the Demuxer"}
{"id": 3693, "prediction": "Create a new FilterGraph ."}
{"id": 3695, "prediction": "Retrieve a byte buffer ."}
{"id": 3697, "prediction": "Resample a media picture ."}
{"id": 3699, "prediction": "Validate the image ."}
{"id": 3701, "prediction": "Gets the meta data ."}
{"id": 3703, "prediction": "Get the CPU arch from the given string ."}
{"id": 3705, "prediction": "Get the OSGi family from the given string ."}
{"id": 3707, "prediction": "Attempt to load a library ."}
{"id": 3709, "prediction": "Attempts to load a candidate library ."}
{"id": 3711, "prediction": "Checks if the given library is already loaded ."}
{"id": 3713, "prediction": "Deletes the lock ."}
{"id": 3715, "prediction": "Get the Muxer"}
{"id": 3717, "prediction": "Decodes a base 64 - encoded string ."}
{"id": 3719, "prediction": "Get a transaction"}
{"id": 3721, "prediction": "Returns a list of address transactions for the given address ."}
{"id": 3723, "prediction": "Gets a block ."}
{"id": 3725, "prediction": "Sends a script to the script"}
{"id": 3727, "prediction": "Write primitive array ."}
{"id": 3729, "prediction": "Writes an object to the cache ."}
{"id": 3731, "prediction": "Writes an object to the output stream ."}
{"id": 3733, "prediction": "Returns the specificity of the given class ."}
{"id": 3735, "prediction": "Remove a binary from the cache ."}
{"id": 3737, "prediction": "Sets the output stream ."}
{"id": 3739, "prediction": "Creates a struct configuration object ."}
{"id": 3741, "prediction": "Clears all cached caches ."}
{"id": 3743, "prediction": "Gets the object input ."}
{"id": 3745, "prediction": "Gets the object output ."}
{"id": 3747, "prediction": "Returns the cp name for the given class ."}
{"id": 3749, "prediction": "Writes a raw integer to the stream ."}
{"id": 3751, "prediction": "Write primitive array ."}
{"id": 3753, "prediction": "Gets a cached FSTFieldInfo object ."}
{"id": 3755, "prediction": "Called when the object has been written ."}
{"id": 3757, "prediction": "Writes the object to the array ."}
{"id": 3759, "prediction": "Writes a primitive array ."}
{"id": 3761, "prediction": "Sets the snapshot of the change ."}
{"id": 3763, "prediction": "Writes an object to the output stream ."}
{"id": 3765, "prediction": "Read a byte array ."}
{"id": 3767, "prediction": "Adds a buffer to the buffer ."}
{"id": 3769, "prediction": "Starts cassandra cassandra ."}
{"id": 3771, "prediction": "Copy a resource to a directory"}
{"id": 3773, "prediction": "Attempts to connect to a remote host ."}
{"id": 3775, "prediction": "Returns a map of operation descriptors ."}
{"id": 3777, "prediction": "Returns true if the given condition evaluates to true"}
{"id": 3779, "prediction": "Determines if two dimensions are equal ."}
{"id": 3781, "prediction": "Applies the given INDArray to the given condition ."}
{"id": 3783, "prediction": "Converts a buffer to a FlatBuffer ."}
{"id": 3785, "prediction": "Convert a PropertiesBuffer to a FlatBuffer ."}
{"id": 3787, "prediction": "Sets the first element to be first ."}
{"id": 3789, "prediction": "Partitions a list of chunks into a single chunk ."}
{"id": 3791, "prediction": "Shutdown the transport ."}
{"id": 3793, "prediction": "2D matrix ."}
{"id": 3795, "prediction": "Create a compression descriptor from a byte buffer ."}
{"id": 3797, "prediction": "Validates that the dimensions are equal ."}
{"id": 3799, "prediction": "Creates a new Linspace with the given values ."}
{"id": 3801, "prediction": "Creates a bilin product"}
{"id": 3803, "prediction": "Creates a complex number with the given value ."}
{"id": 3805, "prediction": "Determines if the last sync time is synchronized ."}
{"id": 3807, "prediction": "Create a complex number from a complex number ."}
{"id": 3809, "prediction": "Negate a complex number ."}
{"id": 3811, "prediction": "Raize a complex number ."}
{"id": 3813, "prediction": "Converts a set of features into the normalized distribution ."}
{"id": 3815, "prediction": "Returns the memory footprint of the data ."}
{"id": 3817, "prediction": "Returns the simple hostname ."}
{"id": 3819, "prediction": "Converts a byte array to a hex string ."}
{"id": 3821, "prediction": "Splits the given string using the given separator ."}
{"id": 3823, "prediction": "Find the next character in the string ."}
{"id": 3825, "prediction": "Joins the given strings using the given separator ."}
{"id": 3827, "prediction": "Replaces all tokens with the given pattern ."}
{"id": 3829, "prediction": "Implements the inverse of the matrix"}
{"id": 3831, "prediction": "Checks if the host is on the host side ."}
{"id": 3833, "prediction": "Creates the shape information ."}
{"id": 3835, "prediction": "Checks if the given shape is a vector ."}
{"id": 3837, "prediction": "Returns the offset for the given indices"}
{"id": 3839, "prediction": "Gets the short at the given index ."}
{"id": 3584, "prediction": "Add listener ."}
{"id": 3586, "prediction": "Request the Billing Agreement for the given payment"}
{"id": 3588, "prediction": "Parses a PayPal account ."}
{"id": 3590, "prediction": "Remove a word from a dictionary"}
{"id": 3592, "prediction": "Extracts a list of Korean phrases from a list of symbols ."}
{"id": 3594, "prediction": "Fetches a ByteBuffer from a channel ."}
{"id": 3596, "prediction": "Joins the given buffers into the given list ."}
{"id": 3598, "prediction": "Normalizes the preconditions ."}
{"id": 3600, "prediction": "Reads the next marker into the buffer ."}
{"id": 3602, "prediction": "Modify the edit file ."}
{"id": 3604, "prediction": "Gets the edited duration of a track ."}
{"id": 3606, "prediction": "Convert a time value to a frame ."}
{"id": 3608, "prediction": "Calculates the edited media time for a given movie"}
{"id": 3610, "prediction": "Calculates the time for a movie ."}
{"id": 3612, "prediction": "Returns a string representation of the given timecode ."}
{"id": 3614, "prediction": "Set a value at a given position"}
{"id": 3616, "prediction": "Returns the size of the specified size ."}
{"id": 3618, "prediction": "Reads the cache from the input stream ."}
{"id": 3620, "prediction": "Creates a MultiChannel from the given headers ."}
{"id": 3622, "prediction": "Encodes a symbol ."}
{"id": 3624, "prediction": "Split a movie into a TV movie"}
{"id": 3626, "prediction": "Sets the big endian endian ."}
{"id": 3628, "prediction": "Encode a frame to a native frame"}
{"id": 3630, "prediction": "Returns the length of the given long ."}
{"id": 3632, "prediction": "Reposition the contents of the file to the file ."}
{"id": 3634, "prediction": "Decodes the bitcode of the given range ."}
{"id": 3636, "prediction": "Returns the sample frequency for a given integer ."}
{"id": 3638, "prediction": "Start a block"}
{"id": 3640, "prediction": "Finishes the given block ."}
{"id": 3642, "prediction": "Rewind the reverse order of 32 bits ."}
{"id": 3644, "prediction": "Finds the key frame in the given frame ."}
{"id": 3646, "prediction": "Gets the index of the change point ID ."}
{"id": 3648, "prediction": "Converts an int into a byte array ."}
{"id": 3650, "prediction": "Convert a AudioBuffer to a float ."}
{"id": 3652, "prediction": "Interprets the given AudioFormat into an output buffer ."}
{"id": 3654, "prediction": "Builds out the box out of the box ."}
{"id": 3656, "prediction": "Read an ULBatch ."}
{"id": 3658, "prediction": "Calculates the MVD of a matrix ."}
{"id": 3660, "prediction": "Encode an IDR frame ."}
{"id": 3662, "prediction": "Gets the set of codecs ."}
{"id": 3664, "prediction": "Add a reference to the list of references ."}
{"id": 3666, "prediction": "Flush the cache ."}
{"id": 3668, "prediction": "Unpack the library ."}
{"id": 3670, "prediction": "Returns the default layout for the given number of channels ."}
{"id": 3672, "prediction": "Make a media packet ."}
{"id": 3674, "prediction": "Get the default time base ."}
{"id": 3676, "prediction": "Play a video"}
{"id": 3678, "prediction": "Make a new codec descriptor ."}
{"id": 3680, "prediction": "Register a factory ."}
{"id": 3682, "prediction": "Make a media adapter ."}
{"id": 3684, "prediction": "Gets the list of supported video pixels ."}
{"id": 3686, "prediction": "Gets the list of AudioFormats ."}
{"id": 3688, "prediction": "Sets the flag ."}
{"id": 3690, "prediction": "Gets the decoder ."}
{"id": 3692, "prediction": "Get all the muxer formats ."}
{"id": 3694, "prediction": "Gets the type filter type ."}
{"id": 3696, "prediction": "Create a new AudioFrame from the given audio format ."}
{"id": 3698, "prediction": "Validate the image ."}
{"id": 3700, "prediction": "Gets the filter graph ."}
{"id": 3702, "prediction": "Get the CPU from the java file ."}
{"id": 3704, "prediction": "Get the operating system family"}
{"id": 3706, "prediction": "Play a sound ."}
{"id": 3708, "prediction": "Sets the library ."}
{"id": 3710, "prediction": "Initialize search paths ."}
{"id": 3712, "prediction": "Record the screen ."}
{"id": 3714, "prediction": "Get Muxer Stream"}
{"id": 3716, "prediction": "Make a set script transaction ."}
{"id": 3718, "prediction": "Generate seed ."}
{"id": 3720, "prediction": "Returns a list of address transactions for the given address ."}
{"id": 3722, "prediction": "Retrieves a list of blocks from the specified range ."}
{"id": 3724, "prediction": "Sends a request to the server ."}
{"id": 3726, "prediction": "Compiles the given script ."}
{"id": 3728, "prediction": "Flush the output stream ."}
{"id": 3730, "prediction": "Read the ClassInfo object ."}
{"id": 3732, "prediction": "Sets the MMF data ."}
{"id": 3734, "prediction": "Resize memory ."}
{"id": 3736, "prediction": "Writes an ASI string ."}
{"id": 3738, "prediction": "Creates a JST configuration object ."}
{"id": 3740, "prediction": "Calculate the size of an object"}
{"id": 3742, "prediction": "Get a FSTObject from the input stream ."}
{"id": 3744, "prediction": "Get a copy of FSTObject from a byte array ."}
{"id": 3746, "prediction": "Register a CrossPlatformClass mapping ."}
{"id": 3748, "prediction": "Writes an integer to the stream ."}
{"id": 3750, "prediction": "Write int ."}
{"id": 3752, "prediction": "Write a byte array to the buffer ."}
{"id": 3754, "prediction": "Notify listeners that the object has been written ."}
{"id": 3756, "prediction": "Returns the FSTFieldInfo for the given class ."}
{"id": 3758, "prediction": "Sets the string buffer ."}
{"id": 3760, "prediction": "Closes the current change tracker ."}
{"id": 3762, "prediction": "Registers an object for an object ."}
{"id": 3764, "prediction": "Converts a byte array into a byte array ."}
{"id": 3766, "prediction": "Read int ."}
{"id": 3768, "prediction": "Enable or disable the thread pool ."}
{"id": 3770, "prediction": "Removes all data embedded in the table ."}
{"id": 3772, "prediction": "Prints the thread s threads ."}
{"id": 3774, "prediction": "Returns empty subscriber state"}
{"id": 3776, "prediction": "Calculate the output shape"}
{"id": 3778, "prediction": "Determines if the ndarray is an ndarray"}
{"id": 3780, "prediction": "Returns true if the given condition is an array of elements ."}
{"id": 3782, "prediction": "Returns the first index of the given INDArray ."}
{"id": 3784, "prediction": "Create a FunctionProperties from a Flat Properties object ."}
{"id": 3786, "prediction": "Sets the exception ."}
{"id": 3788, "prediction": "Merge two coordinates ."}
{"id": 3790, "prediction": "Convert an nd4j type to nd4j ."}
{"id": 3792, "prediction": "Gets the current device architecture ."}
{"id": 3794, "prediction": "Creates a pooling 2D object pool ."}
{"id": 3796, "prediction": "Converts a list of partitions into a batch ."}
{"id": 3798, "prediction": "Sets the data type ."}
{"id": 3800, "prediction": "Converts the given matrices into an array of indices ."}
{"id": 3802, "prediction": "Creates a complex number ."}
{"id": 3804, "prediction": "Creates a complex number with the given value ."}
{"id": 3806, "prediction": "Sets the sub - number ."}
{"id": 3808, "prediction": "Creates a complex number ."}
{"id": 3810, "prediction": "Returns the abs of a complex number ."}
{"id": 3812, "prediction": "Gets the context ."}
{"id": 3814, "prediction": "Sample a dataset ."}
{"id": 3816, "prediction": "Converts a Throwable to a String"}
{"id": 3818, "prediction": "Converts a String array into an array of Strings ."}
{"id": 3820, "prediction": "Get the array of Strings from a delimiter"}
{"id": 3822, "prediction": "Splits a string using the specified separator ."}
{"id": 3824, "prediction": "Escape a string ."}
{"id": 3826, "prediction": "Converts a string to a camelized version ."}
{"id": 3828, "prediction": "Gets the stack trace ."}
{"id": 3830, "prediction": "Support the subscript operator"}
{"id": 3832, "prediction": "Checks if the device is on the current device ."}
{"id": 3834, "prediction": "Creates the shape information for the shape"}
{"id": 3836, "prediction": "Gets the order of the given INDArray ."}
{"id": 3838, "prediction": "Converts an array of indices to an array of indices ."}
{"id": 3841, "prediction": "Copy a buffer to a buffer"}
{"id": 3843, "prediction": "Creates a Kafka URI ."}
{"id": 3845, "prediction": "Log a log array"}
{"id": 3847, "prediction": "Returns the max array of elements"}
{"id": 3849, "prediction": "Calculate min and second array"}
{"id": 3851, "prediction": "Creates an expm1 value from the given ndarray"}
{"id": 3853, "prediction": "Prepare the bounds of a matrix"}
{"id": 3855, "prediction": "Get next data set ."}
{"id": 3857, "prediction": "Builds the allocation shape ."}
{"id": 3859, "prediction": "Reads an object from the input stream ."}
{"id": 3861, "prediction": "Creates an ndarray from ndarray"}
{"id": 3863, "prediction": "Allocates the given workspace ."}
{"id": 3865, "prediction": "Indicates whether the master is started ."}
{"id": 3867, "prediction": "Flush the queue ."}
{"id": 3869, "prediction": "Returns the device for the given thread id ."}
{"id": 3871, "prediction": "Gets the next device ."}
{"id": 3873, "prediction": "Calculates the ARCH type ."}
{"id": 3875, "prediction": "Start the server ."}
{"id": 3877, "prediction": "Intercept the int data type ."}
{"id": 3879, "prediction": "Assigns the payload to the storage ."}
{"id": 3881, "prediction": "Creates a depth w2d w2d w2d w2d ."}
{"id": 3883, "prediction": "Gets the class ."}
{"id": 3885, "prediction": "Returns the shape of this variable ."}
{"id": 3887, "prediction": "Compress the ndarray"}
{"id": 3889, "prediction": "Center the given shape"}
{"id": 3891, "prediction": "Pads the ndarray with the given shape"}
{"id": 3893, "prediction": "Broadcast an INDArray to the device"}
{"id": 3895, "prediction": "Calculate gamma value"}
{"id": 3897, "prediction": "Returns the cardinality of the given BigDecimal ."}
{"id": 3899, "prediction": "Calculates the value of a BigDecimal ."}
{"id": 3901, "prediction": "Parses the power of two numbers ."}
{"id": 3903, "prediction": "Calculates the sin of a BigDecimal ."}
{"id": 3905, "prediction": "Scales a BigDecimal ."}
{"id": 3907, "prediction": "Computes the tanh product of the given BigDecimal ."}
{"id": 3909, "prediction": "Calculate the scalar ."}
{"id": 3911, "prediction": "Creates a BiddableBatch based on the length of the remainder ."}
{"id": 3913, "prediction": "Scalescimal precision ."}
{"id": 3915, "prediction": "Sets the function for the given id ."}
{"id": 3917, "prediction": "Update the array for the given variable name"}
{"id": 3919, "prediction": "Associates an array with the given INDArray"}
{"id": 3921, "prediction": "Adds a property for a given function ."}
{"id": 3923, "prediction": "Adds the arguments to the function ."}
{"id": 3925, "prediction": "Evaluate the input variables ."}
{"id": 3927, "prediction": "Returns a copy of the given SDVariable with the given SDVariable ."}
{"id": 3929, "prediction": "Remove an argument from the function ."}
{"id": 3931, "prediction": "Average pooling 3d pooling ."}
{"id": 3933, "prediction": "Execute the operation ."}
{"id": 3935, "prediction": "Executes the specified function ."}
{"id": 3937, "prediction": "Execute the backward operation"}
{"id": 3939, "prediction": "Allocates the specified number of bytes ."}
{"id": 3941, "prediction": "Returns the DType for the given DataBuffer ."}
{"id": 3943, "prediction": "Gets the operation number by name ."}
{"id": 3945, "prediction": "Prints the allocation statistics ."}
{"id": 3947, "prediction": "Receive the INDArray"}
{"id": 3949, "prediction": "Fetches the threshold from the given vector ."}
{"id": 3951, "prediction": "Runs the scalar data ."}
{"id": 3953, "prediction": "Returns the negative log likelihood of the negative log ."}
{"id": 3955, "prediction": "Attempts to attempt to request to the next request ."}
{"id": 3957, "prediction": "Gets current access state ."}
{"id": 3959, "prediction": "Called when the task completes ."}
{"id": 3961, "prediction": "Initialize the host collector"}
{"id": 3963, "prediction": "Synchronize the host data ."}
{"id": 3965, "prediction": "Sets the host to the given allocation point ."}
{"id": 3967, "prediction": "Gets the properties for this function ."}
{"id": 3969, "prediction": "Execute the diff"}
{"id": 3971, "prediction": "Imports a graph ."}
{"id": 3973, "prediction": "Load a complex number from a blob ."}
{"id": 3975, "prediction": "Copies the real dimension to the real array"}
{"id": 3977, "prediction": "Calculate epsilon ."}
{"id": 3979, "prediction": "Gets the rows of a matrix ."}
{"id": 3981, "prediction": "Puts a single column into this vector ."}
{"id": 3983, "prediction": "Add two elements to this vector ."}
{"id": 3985, "prediction": "Add another vector to this vector ."}
{"id": 3987, "prediction": "Reverse the ndarray"}
{"id": 3989, "prediction": "Returns the generalized eigenvalues of eigenvalues"}
{"id": 3991, "prediction": "Copies data from two arrays ."}
{"id": 3993, "prediction": "This method is used to process a SkipGGGGramMessageMessage ."}
{"id": 3995, "prediction": "Computes the reduction ."}
{"id": 3997, "prediction": "Returns the constructor for the given class ."}
{"id": 3999, "prediction": "Get an annotation from the given annotation type ."}
{"id": 4001, "prediction": "Checks if the given annotation is present on the given class ."}
{"id": 4003, "prediction": "Load an entity from the context ."}
{"id": 4005, "prediction": "Creates a proxy service ."}
{"id": 4007, "prediction": "Query for keys only ."}
{"id": 4009, "prediction": "Performs a normal query ."}
{"id": 4011, "prediction": "Query count for a given key"}
{"id": 4013, "prediction": "Loads all keys from the given keys ."}
{"id": 4015, "prediction": "Creates a new key ."}
{"id": 4017, "prediction": "Creates a key from the raw data store ."}
{"id": 4019, "prediction": "Returns the kind of the kind of the given class ."}
{"id": 4021, "prediction": "Checks if the given type is a super type ."}
{"id": 4023, "prediction": "Capture the given type ."}
{"id": 4025, "prediction": "Get the populator for a given class ."}
{"id": 4027, "prediction": "Checks if the given method is an annotation ."}
{"id": 4029, "prediction": "Gets the key metadata ."}
{"id": 4031, "prediction": "Executes the query ."}
{"id": 4033, "prediction": "Adds the indexed discriminators to the class ."}
{"id": 4035, "prediction": "Returns the component type for the given collection type ."}
{"id": 4037, "prediction": "Creates a forward path ."}
{"id": 4039, "prediction": "Returns the path as a string ."}
{"id": 4041, "prediction": "Put all updates in the cache ."}
{"id": 4043, "prediction": "Cache all keys in the cache ."}
{"id": 4045, "prediction": "Returns a set of keys from a collection of buckets ."}
{"id": 4047, "prediction": "Sets the key in the entity ."}
{"id": 4049, "prediction": "Gets raw parent ."}
{"id": 4051, "prediction": "Checks if two types have the same type ."}
{"id": 4053, "prediction": "Returns the annotation of the given type ."}
{"id": 4055, "prediction": "Loads a key from the given key ."}
{"id": 4057, "prediction": "Translates the given value into a map ."}
{"id": 4059, "prediction": "Load an entity from the cache ."}
{"id": 4061, "prediction": "Returns the raw key for the given key ."}
{"id": 4063, "prediction": "Creates a key from a URL ."}
{"id": 4065, "prediction": "Method to transactional operations ."}
{"id": 4067, "prediction": "Checks if the given condition matches the given conditions ."}
{"id": 4069, "prediction": "Creates an async datastore ."}
{"id": 4071, "prediction": "Allocate a key range ."}
{"id": 4073, "prediction": "Closes the given object ."}
{"id": 4075, "prediction": "Create a Reflection from the given value ."}
{"id": 4077, "prediction": "Add a value to the map ."}
{"id": 4079, "prediction": "Generate the IF conditions ."}
{"id": 4081, "prediction": "Gets the container for the given type ."}
{"id": 4083, "prediction": "Unwraps the given Throwable to the given Throwable ."}
{"id": 4085, "prediction": "Gets the root translator ."}
{"id": 4087, "prediction": "Loads the property from the container ."}
{"id": 4089, "prediction": "Sets the value of a property ."}
{"id": 4091, "prediction": "Gets the value of the property ."}
{"id": 4093, "prediction": "Write content category ."}
{"id": 4095, "prediction": "Processes the snippet ."}
{"id": 3840, "prediction": "Reallocate a data buffer ."}
{"id": 3842, "prediction": "Gets the data buffer for the given float array ."}
{"id": 3844, "prediction": "Create a power array with power of power"}
{"id": 3846, "prediction": "Returns the maximum value of the ndarray"}
{"id": 3848, "prediction": "Returns the minimum of ndarray"}
{"id": 3850, "prediction": "Sets the ndarray"}
{"id": 3852, "prediction": "Log nd array"}
{"id": 3854, "prediction": "Adjusts the bounds of the coordinate to the coordinate ."}
{"id": 3856, "prediction": "Sets the SQ Q Q Q"}
{"id": 3858, "prediction": "Checks if the given path exists ."}
{"id": 3860, "prediction": "Removes all the tail of the specified device ."}
{"id": 3862, "prediction": "Creates a new ndarray from the given file ."}
{"id": 3864, "prediction": "Attaches an object to the cache ."}
{"id": 3866, "prediction": "Execute an operation on a TADO"}
{"id": 3868, "prediction": "Get the input stream for the jar file ."}
{"id": 3870, "prediction": "Attaches a thread to a thread ."}
{"id": 3872, "prediction": "Returns the name of the operating system ."}
{"id": 3874, "prediction": "Publish an INDArray"}
{"id": 3876, "prediction": "Creates a new data buffer for the given pointer ."}
{"id": 3878, "prediction": "Add a complex number ."}
{"id": 3880, "prediction": "Returns the maximum pooling 3d3d 3 ."}
{"id": 3882, "prediction": "Resets all entries ."}
{"id": 3884, "prediction": "Allocate a new array for the given variable name"}
{"id": 3886, "prediction": "Evaluate the input array"}
{"id": 3888, "prediction": "Transform a complex array to a vector ."}
{"id": 3890, "prediction": "Truncate ndarray"}
{"id": 3892, "prediction": "Returns the index of the given ndarray"}
{"id": 3894, "prediction": "Send message ."}
{"id": 3896, "prediction": "Computes the square root of the square root ."}
{"id": 3898, "prediction": "Calculates the root of the given root ."}
{"id": 3900, "prediction": "Scales a BigDecimal ."}
{"id": 3902, "prediction": "Parses the given number of bits ."}
{"id": 3904, "prediction": "Convert a BigDecimal to a tan ."}
{"id": 3906, "prediction": "Calculates the number of sinh ."}
{"id": 3908, "prediction": "Calculate the arc number ."}
{"id": 3910, "prediction": "Calculate Gamma ."}
{"id": 3912, "prediction": "Scales a BigDecimal ."}
{"id": 3914, "prediction": "Convert a decimal value to an integer ."}
{"id": 3916, "prediction": "Gets the input array for the given function ."}
{"id": 3918, "prediction": "Puts the given shape into the given shape ."}
{"id": 3920, "prediction": "Gets the property for the given function instance ."}
{"id": 3922, "prediction": "Add outgoing arguments to the function ."}
{"id": 3924, "prediction": "Checks if the given function has arguments ."}
{"id": 3926, "prediction": "Creates a variable with the given shape ."}
{"id": 3928, "prediction": "Return the zeros of the given input with the given name ."}
{"id": 3930, "prediction": "Sets the gradient for the SDVariable ."}
{"id": 3932, "prediction": "Creates a SDVariable with the given parameters ."}
{"id": 3934, "prediction": "Creates a statement which is executed by the given function ."}
{"id": 3936, "prediction": "Execute the given function ."}
{"id": 3938, "prediction": "Adds the place holder to the place holder ."}
{"id": 3940, "prediction": "Returns the length of a data type for the given data type ."}
{"id": 3942, "prediction": "Gets the Dtype from the context ."}
{"id": 3944, "prediction": "Destroys all workpaces for current thread ."}
{"id": 3946, "prediction": "Truncate a matrix ."}
{"id": 3948, "prediction": "Process an array"}
{"id": 3950, "prediction": "Get node name ."}
{"id": 3952, "prediction": "Assert that there are no workpaces available ."}
{"id": 3954, "prediction": "Requests that the current thread is waiting for the specified time ."}
{"id": 3956, "prediction": "Releases an object to the current state ."}
{"id": 3958, "prediction": "Build the environment ."}
{"id": 3960, "prediction": "Initializes the curr data from the given list ."}
{"id": 3962, "prediction": "Returns the device pointer for this device ."}
{"id": 3964, "prediction": "Applies the gradient to the history ."}
{"id": 3966, "prediction": "Creates an array of ndarray indices ."}
{"id": 3968, "prediction": "Returns true if the input varInputInputInputInputInput has the same position as the input varargs ."}
{"id": 3970, "prediction": "Format the given INDArray"}
{"id": 3972, "prediction": "Convert a Ndarray to a blob"}
{"id": 3974, "prediction": "Save the given array with the given ID ."}
{"id": 3976, "prediction": "Copies the given dimension to the model ."}
{"id": 3978, "prediction": "Assigns this vector to the given array"}
{"id": 3980, "prediction": "Add a row to the graph"}
{"id": 3982, "prediction": "Subtract two elements from another vector ."}
{"id": 3984, "prediction": "Subtract two elements from another vector ."}
{"id": 3986, "prediction": "Assigns the value to the given Number ."}
{"id": 3988, "prediction": "Returns the eigenvalues of eigenvalues"}
{"id": 3990, "prediction": "Returns the index of the given element ."}
{"id": 3992, "prediction": "Computes the scalar of a vector ."}
{"id": 3994, "prediction": "Count the number of nonnegative counts"}
{"id": 3996, "prediction": "Returns the no - arg constructor for the given class ."}
{"id": 3998, "prediction": "Invokes the method with the given parameters ."}
{"id": 4000, "prediction": "Gets the declared annotation ."}
{"id": 4002, "prediction": "Creates a proxy instance ."}
{"id": 4004, "prediction": "Save a single entity ."}
{"id": 4006, "prediction": "Gets the metadata for the given kind ."}
{"id": 4008, "prediction": "Execute a hybrid query"}
{"id": 4010, "prediction": "Query for projection"}
{"id": 4012, "prediction": "Partition the given input data ."}
{"id": 4014, "prediction": "Converts a path to a formatted message ."}
{"id": 4016, "prediction": "Compare two identity hashes ."}
{"id": 4018, "prediction": "Returns the key of the given typed object ."}
{"id": 4020, "prediction": "Returns true if the type parameter is missing ."}
{"id": 4022, "prediction": "Returns the exact copy of the given type ."}
{"id": 4024, "prediction": "Gets translator ."}
{"id": 4026, "prediction": "Gets the index instruction for the given class ."}
{"id": 4028, "prediction": "Gets the declared properties of a class ."}
{"id": 4030, "prediction": "Gets the result of the session ."}
{"id": 4032, "prediction": "Fetch all pending entities from the cache ."}
{"id": 4034, "prediction": "Register a subclass ."}
{"id": 4036, "prediction": "Returns the key type for the given map type ."}
{"id": 4038, "prediction": "Returns the final path ."}
{"id": 4040, "prediction": "Returns the number of entries ."}
{"id": 4042, "prediction": "Adds the given keys to the cache ."}
{"id": 4044, "prediction": "Cache all keys from the given collection"}
{"id": 4046, "prediction": "Find key fields ."}
{"id": 4048, "prediction": "Sets the id for the given id ."}
{"id": 4050, "prediction": "Register a subclass ."}
{"id": 4052, "prediction": "Transform the specified owner of the specified type ."}
{"id": 4054, "prediction": "Adds all values to this session ."}
{"id": 4056, "prediction": "Execute this method ."}
{"id": 4058, "prediction": "Fetches a set of keys from the specified set ."}
{"id": 4060, "prediction": "Creates a raw object for the given id ."}
{"id": 4062, "prediction": "Returns the value associated with the given key ."}
{"id": 4064, "prediction": "Creates a transactional transaction ."}
{"id": 4066, "prediction": "Performs a transactional operation ."}
{"id": 4068, "prediction": "Returns the object associated with this context ."}
{"id": 4070, "prediction": "Get the metadata for the given object ."}
{"id": 4072, "prediction": "Creates a new ObjectFactory ."}
{"id": 4074, "prediction": "Concatenates the given list of indices to be homogeneous ."}
{"id": 4076, "prediction": "Retrieves the value associated with the given key ."}
{"id": 4078, "prediction": "Returns true if the request has finished ."}
{"id": 4080, "prediction": "Execute the runnable ."}
{"id": 4082, "prediction": "Gets stat ."}
{"id": 4084, "prediction": "Get a translator for a given type ."}
{"id": 4086, "prediction": "Creates a translator ."}
{"id": 4088, "prediction": "Gets the value of a property ."}
{"id": 4090, "prediction": "Saves the value of the property ."}
{"id": 4092, "prediction": "Write extended extensions ."}
{"id": 4094, "prediction": "Write content categories ."}
{"id": 4097, "prediction": "Sets the bid with the given id ."}
{"id": 4099, "prediction": "Removes all bids that match the given criteria ."}
{"id": 4101, "prediction": "Reads extended extensions ."}
{"id": 4103, "prediction": "Register a new OpenTableReader instance with the given message reader ."}
{"id": 4105, "prediction": "Sets the field candidates ."}
{"id": 4107, "prediction": "Updates an iterable ."}
{"id": 4109, "prediction": "Get the name of the current JsonParser"}
{"id": 4111, "prediction": "Starts an array ."}
{"id": 4113, "prediction": "Write integer field ."}
{"id": 4115, "prediction": "Writes a list of integers to a JSON array ."}
{"id": 4117, "prediction": "Writes a list of EnumEnums to the given fields ."}
{"id": 4119, "prediction": "Fixes a base query with the given base query ."}
{"id": 4121, "prediction": "Gets the host ."}
{"id": 4123, "prediction": "Loads a list from storm conf"}
{"id": 4125, "prediction": "Returns the protocol for the given URL ."}
{"id": 4127, "prediction": "Extract a refresh URL from a string ."}
{"id": 4129, "prediction": "Filter the given metadata ."}
{"id": 4131, "prediction": "Clean the field name ."}
{"id": 4133, "prediction": "Extract charset from content ."}
{"id": 4135, "prediction": "Searches for a given content ."}
{"id": 4137, "prediction": "Returns the first value of the given key ."}
{"id": 4139, "prediction": "Checks if the domain name matches the domainName ."}
{"id": 4141, "prediction": "Gets the robot rules from the cache ."}
{"id": 4143, "prediction": "Records a tuple ."}
{"id": 4145, "prediction": "Removes all URLs from the given URL ."}
{"id": 4147, "prediction": "Process query elements ."}
{"id": 4149, "prediction": "Add a new record to this format ."}
{"id": 4151, "prediction": "Triggers if all queries have been processed ."}
{"id": 4153, "prediction": "Append a node to the document ."}
{"id": 4155, "prediction": "Add processing instruction ."}
{"id": 4157, "prediction": "Writes the content of the node to the node ."}
{"id": 4159, "prediction": "Sets the prefix mapping ."}
{"id": 4161, "prediction": "Trims the given text ."}
{"id": 4163, "prediction": "Load the URLFilters from config file ."}
{"id": 4165, "prediction": "Resolves the size and size of a measure ."}
{"id": 4167, "prediction": "Set the angle of the wheel ."}
{"id": 4169, "prediction": "Invalidates the item drawable ."}
{"id": 4171, "prediction": "Updates the pulse ."}
{"id": 4173, "prediction": "Clamp value to upper limit ."}
{"id": 4175, "prediction": "Get the data as a byte array ."}
{"id": 4177, "prediction": "Make an array of Strings"}
{"id": 4179, "prediction": "Create an ArrayChar from a String array"}
{"id": 4181, "prediction": "Retrieves the offset of the current time interval ."}
{"id": 4183, "prediction": "Shows the icon if it doesn t exist ."}
{"id": 4185, "prediction": "Main entry point for testing ."}
{"id": 4187, "prediction": "Create a unit name ."}
{"id": 4189, "prediction": "Checks if the given date is included in this calendar ."}
{"id": 4191, "prediction": "Extend a date range ."}
{"id": 4193, "prediction": "Sets the start date ."}
{"id": 4195, "prediction": "Set the duration ."}
{"id": 4197, "prediction": "Add a map ."}
{"id": 4199, "prediction": "Gets the name of the location ."}
{"id": 4201, "prediction": "Opens a file ."}
{"id": 4203, "prediction": "Synchronize the settings ."}
{"id": 4205, "prediction": "Register a watcher ."}
{"id": 4207, "prediction": "Set the reference date ."}
{"id": 4209, "prediction": "Wrap a dataset"}
{"id": 4211, "prediction": "Finds the feature type ."}
{"id": 4213, "prediction": "Convert a catalog to HTML ."}
{"id": 4215, "prediction": "Gets the user head ."}
{"id": 4217, "prediction": "Add global services to the catalog ."}
{"id": 4219, "prediction": "Get the content of the given session"}
{"id": 4221, "prediction": "Gets the front page ."}
{"id": 4223, "prediction": "Extracts the geospatial coverage for the specified group ."}
{"id": 4225, "prediction": "Checks if two vertices are equal ."}
{"id": 4227, "prediction": "Parse a Grads attribute ."}
{"id": 4229, "prediction": "Converts a short array to an int ."}
{"id": 4231, "prediction": "Gets the date as a Date ."}
{"id": 4233, "prediction": "Checks if the given name is valid ."}
{"id": 4235, "prediction": "Reads a record data from a section ."}
{"id": 4237, "prediction": "Recursively fills the non - non - non - empty variables ."}
{"id": 4239, "prediction": "Constructs a TimeStruct from a Calendar ."}
{"id": 4241, "prediction": "Adds a function to the server ."}
{"id": 4243, "prediction": "Get the BTF for the given name"}
{"id": 4245, "prediction": "Returns the level name of the grid ."}
{"id": 4247, "prediction": "Get the level unit ."}
{"id": 4249, "prediction": "Checks if the grid is vertical or not ."}
{"id": 4251, "prediction": "Create a coordinate transform ."}
{"id": 4253, "prediction": "Create a projection for a given coverage coordinate ."}
{"id": 4255, "prediction": "Saves the contents of the table ."}
{"id": 4257, "prediction": "Write count ."}
{"id": 4259, "prediction": "Writes a byte array to the output stream ."}
{"id": 4261, "prediction": "Finish initialization ."}
{"id": 4263, "prediction": "Creates a factory for the given data ."}
{"id": 4265, "prediction": "Determine the das representation of the given text ."}
{"id": 4267, "prediction": "Reads a grid record ."}
{"id": 4269, "prediction": "Write a constraint ."}
{"id": 4271, "prediction": "Writes the parameters to the file ."}
{"id": 4273, "prediction": "Scans a log file ."}
{"id": 4275, "prediction": "Find grid record ."}
{"id": 4277, "prediction": "Unpack data ."}
{"id": 4279, "prediction": "Unpack Grib1 data ."}
{"id": 4281, "prediction": "Print grid records ."}
{"id": 4283, "prediction": "Creates a Calendar from a Calendar object ."}
{"id": 4285, "prediction": "Creates a Calendar object from the given time ."}
{"id": 4287, "prediction": "Parses a calendar from a calendar ."}
{"id": 4289, "prediction": "Creates an atomic array for the given data ."}
{"id": 4291, "prediction": "Escape a string ."}
{"id": 4293, "prediction": "Unwrap a file ."}
{"id": 4295, "prediction": "Compute the effective shape ."}
{"id": 4297, "prediction": "Multiply this unit by another unit ."}
{"id": 4299, "prediction": "Divide this unit to another unit ."}
{"id": 4301, "prediction": "Converts the given amount to a derived unit ."}
{"id": 4303, "prediction": "Get the value of the given unit ."}
{"id": 4305, "prediction": "Read the contents of the section in the section ."}
{"id": 4307, "prediction": "Flattens a list of timeSeriesCollectionRecords ."}
{"id": 4309, "prediction": "Calculates the size of a point"}
{"id": 4311, "prediction": "Returns the number of gatepoints for the given datastore ."}
{"id": 4313, "prediction": "Sets the size of the layout ."}
{"id": 4315, "prediction": "Generates a proxy catalog from the catalog ."}
{"id": 4317, "prediction": "Returns a new calendar unit with the given calendar unit ."}
{"id": 4319, "prediction": "Calculates the offset from a reference date ."}
{"id": 4321, "prediction": "Get the QuantityDimension"}
{"id": 4323, "prediction": "Read a map of stn names ."}
{"id": 4325, "prediction": "Read an int array ."}
{"id": 4327, "prediction": "Calculates the elevation of the given angle ."}
{"id": 4329, "prediction": "Calculate the value of the intersection"}
{"id": 4331, "prediction": "Calculate the nyquist ."}
{"id": 4333, "prediction": "Sets the debug flags ."}
{"id": 4335, "prediction": "Reads a row from a grid ."}
{"id": 4337, "prediction": "Get the LatLonal bounding box of the view"}
{"id": 4339, "prediction": "Adds a tab to the buffer ."}
{"id": 4341, "prediction": "Return a String with the specified width and height"}
{"id": 4343, "prediction": "Format the given size ."}
{"id": 4345, "prediction": "Print a value to the output"}
{"id": 4347, "prediction": "Finish a slice ."}
{"id": 4349, "prediction": "Compose the slice ."}
{"id": 4351, "prediction": "Dumps bytes to a byte array ."}
{"id": 4096, "prediction": "Returns an iterator that iterates over all bids in the response ."}
{"id": 4098, "prediction": "Updates the bids for the given bid response ."}
{"id": 4100, "prediction": "Returns an iterable containing all the imps matching the specified criteria ."}
{"id": 4102, "prediction": "Returns true if the token is empty ."}
{"id": 4104, "prediction": "Registers a new instance with the given message writer ."}
{"id": 4106, "prediction": "Extracts fields from the specified macro ."}
{"id": 4108, "prediction": "Filters the items in the given list ."}
{"id": 4110, "prediction": "Start the object ."}
{"id": 4112, "prediction": "Returns the next token ."}
{"id": 4114, "prediction": "Writes a list of strings to a list of strings ."}
{"id": 4116, "prediction": "Write long fields ."}
{"id": 4118, "prediction": "Resolves a URL from a base URL ."}
{"id": 4120, "prediction": "Returns the host names of the given URL ."}
{"id": 4122, "prediction": "Gets the full URL ."}
{"id": 4124, "prediction": "Extract configuration from conf ."}
{"id": 4126, "prediction": "Generate WARInfo for WARInfo"}
{"id": 4128, "prediction": "Get metadata for the given source URL"}
{"id": 4130, "prediction": "Add a new Queue"}
{"id": 4132, "prediction": "Gets the charset name from a byte array ."}
{"id": 4134, "prediction": "get charset from buffer"}
{"id": 4136, "prediction": "Sets the value of the given key ."}
{"id": 4138, "prediction": "Get a list of cookies from a URL"}
{"id": 4140, "prediction": "Gets the cache key ."}
{"id": 4142, "prediction": "Extract meta tags ."}
{"id": 4144, "prediction": "Filters the given URL with the given metadata ."}
{"id": 4146, "prediction": "Reads the rules from a file ."}
{"id": 4148, "prediction": "Loads the navigation filters from storm configuration ."}
{"id": 4150, "prediction": "Sets the amount of time in milliseconds ."}
{"id": 4152, "prediction": "Creates a new ParseFilters from storm configuration ."}
{"id": 4154, "prediction": "Ignorable whitespace ."}
{"id": 4156, "prediction": "Add a comment to the document ."}
{"id": 4158, "prediction": "Start DTD ."}
{"id": 4160, "prediction": "Determine the value for a given URL ."}
{"id": 4162, "prediction": "Checks if a custom interval is valid ."}
{"id": 4164, "prediction": "Set the item count ."}
{"id": 4166, "prediction": "Set the empty item"}
{"id": 4168, "prediction": "Updates the selected position ."}
{"id": 4170, "prediction": "Converts the given position to a raw position ."}
{"id": 4172, "prediction": "Gets the color of the entry ."}
{"id": 4174, "prediction": "Writes the coverage data to the given writer ."}
{"id": 4176, "prediction": "Sets the string representation of a string ."}
{"id": 4178, "prediction": "Make an ArrayChar from a String ."}
{"id": 4180, "prediction": "Create a char array from a String array"}
{"id": 4182, "prediction": "Show this window ."}
{"id": 4184, "prediction": "Creates a size estimate for a grid ."}
{"id": 4186, "prediction": "Create a unit name ."}
{"id": 4188, "prediction": "Make plural ."}
{"id": 4190, "prediction": "Returns the intersection of the given date range ."}
{"id": 4192, "prediction": "Extend a date ."}
{"id": 4194, "prediction": "Sets the end date ."}
{"id": 4196, "prediction": "Calculates the duration of the resolution ."}
{"id": 4198, "prediction": "Generates a YARror from a String ."}
{"id": 4200, "prediction": "Returns a string representation of the parameters ."}
{"id": 4202, "prediction": "Compute the bounds of the specified rectangle ."}
{"id": 4204, "prediction": "Compute the full chunking chunking ."}
{"id": 4206, "prediction": "Process watch events ."}
{"id": 4208, "prediction": "Opens a feature ."}
{"id": 4210, "prediction": "Determines whether the given feature type is OK or not ."}
{"id": 4212, "prediction": "Writes a catalog to the catalog ."}
{"id": 4214, "prediction": "Get the user s CSS ."}
{"id": 4216, "prediction": "Create a dynamic catalog from the given path ."}
{"id": 4218, "prediction": "Initialize the client with the given credentials provider ."}
{"id": 4220, "prediction": "Puts the content of the given URL ."}
{"id": 4222, "prediction": "Creates a new catalog ."}
{"id": 4224, "prediction": "Get a single Dataset by its type name ."}
{"id": 4226, "prediction": "Creates a new unit id ."}
{"id": 4228, "prediction": "Read the top level from the NEXAR file ."}
{"id": 4230, "prediction": "Converts a byte array to an int ."}
{"id": 4232, "prediction": "Makes sure that the given name is valid ."}
{"id": 4234, "prediction": "Open a write operation ."}
{"id": 4236, "prediction": "Reads a record data set from a section ."}
{"id": 4238, "prediction": "Constructs a TimeStruct from the given time index ."}
{"id": 4240, "prediction": "Checks if a time template has a time template ."}
{"id": 4242, "prediction": "Get the BoolFunction for the given name"}
{"id": 4244, "prediction": "Loads a new function ."}
{"id": 4246, "prediction": "Returns the description of the given GridRecord ."}
{"id": 4248, "prediction": "Returns the projection type for the given grid ."}
{"id": 4250, "prediction": "Check if a grid record is a layer ."}
{"id": 4252, "prediction": "Creates a dummy transformation from a coordinate matrix ."}
{"id": 4254, "prediction": "Main entry point ."}
{"id": 4256, "prediction": "Returns a copy of the Chronology ."}
{"id": 4258, "prediction": "Write an array of atoms to an array ."}
{"id": 4260, "prediction": "Writes a byte array to the output stream ."}
{"id": 4262, "prediction": "Create a new DateRange from the given date range ."}
{"id": 4264, "prediction": "Determines a DDB representation of the given text ."}
{"id": 4266, "prediction": "Swap the grid header ."}
{"id": 4268, "prediction": "Main entry point ."}
{"id": 4270, "prediction": "Writes the headers to the file ."}
{"id": 4272, "prediction": "Read all files from a directory ."}
{"id": 4274, "prediction": "Get the data type for a grid number ."}
{"id": 4276, "prediction": "Convert a DMG word to an array"}
{"id": 4278, "prediction": "Computes the DIGRDF from the input stream ."}
{"id": 4280, "prediction": "Unpack Grib2 data"}
{"id": 4282, "prediction": "Reads next byte ."}
{"id": 4284, "prediction": "Create a new Calendar object from a Java Date ."}
{"id": 4286, "prediction": "Creates a new Calendar object from the given calendar ."}
{"id": 4288, "prediction": "Gets the difference between two dates ."}
{"id": 4290, "prediction": "Setup the download parameters ."}
{"id": 4292, "prediction": "Creates a list of slices ."}
{"id": 4294, "prediction": "Determines whether the given list contains a variable length ."}
{"id": 4296, "prediction": "Add a date ."}
{"id": 4298, "prediction": "Divide unit by unit ."}
{"id": 4300, "prediction": "Raises a unit to a given power ."}
{"id": 4302, "prediction": "Converts an input array to a derived unit ."}
{"id": 4304, "prediction": "Returns the canonical representation of this unit ."}
{"id": 4306, "prediction": "Read two data sets ."}
{"id": 4308, "prediction": "Find a service by name ."}
{"id": 4310, "prediction": "Returns the index of the first gate ."}
{"id": 4312, "prediction": "Writes an XML document to the output stream ."}
{"id": 4314, "prediction": "Verifies that the given path is a descendant of the ancestor ."}
{"id": 4316, "prediction": "Returns a calendar unit with the given name ."}
{"id": 4318, "prediction": "Create a new instance of a calendar unit ."}
{"id": 4320, "prediction": "Make a calendar date ."}
{"id": 4322, "prediction": "Checks if the file is valid ."}
{"id": 4324, "prediction": "Read data from a variable ."}
{"id": 4326, "prediction": "Reads data from a channel to a byte array"}
{"id": 4328, "prediction": "Calculate step ."}
{"id": 4330, "prediction": "Calculates the standard deviation of the given data ."}
{"id": 4332, "prediction": "Make a vertical transform for this dataset ."}
{"id": 4334, "prediction": "Sets whether or not ."}
{"id": 4336, "prediction": "Checks if the given time is missing ."}
{"id": 4338, "prediction": "Finishes the structure"}
{"id": 4340, "prediction": "Pad a string with the specified width ."}
{"id": 4342, "prediction": "Pad a long to a long ."}
{"id": 4344, "prediction": "Print format ."}
{"id": 4346, "prediction": "Returns the string representation of the shape"}
{"id": 4348, "prediction": "Returns a string representation of this constraint ."}
{"id": 4350, "prediction": "Returns the index of the specified slice ."}
{"id": 4353, "prediction": "Gets the type of an entity ."}
{"id": 4355, "prediction": "Decode a VL value from a primitive type ."}
{"id": 4357, "prediction": "Extract a list of URLs from a URL"}
{"id": 4359, "prediction": "Filter the input stream ."}
{"id": 4361, "prediction": "Adds all attributes to the list of attributes ."}
{"id": 4363, "prediction": "Remove an attribute from the list ."}
{"id": 4365, "prediction": "Add an action source listener ."}
{"id": 4367, "prediction": "Retrieves the date from the given text ."}
{"id": 4369, "prediction": "Gets the date ."}
{"id": 4371, "prediction": "Sets the value of the given date ."}
{"id": 4373, "prediction": "Gets the spacing of the grid unit ."}
{"id": 4375, "prediction": "Add a coordinate axis axis ."}
{"id": 4377, "prediction": "Add all GDS parameters to the given variable ."}
{"id": 4379, "prediction": "Searches for the grid ."}
{"id": 4381, "prediction": "Creates a Mercator for this Mercator ."}
{"id": 4383, "prediction": "Sets the distance between two points ."}
{"id": 4385, "prediction": "Creates a new DatasetScan scan ."}
{"id": 4387, "prediction": "Returns the level type of this level block ."}
{"id": 4389, "prediction": "Writes a byte array to the output stream ."}
{"id": 4391, "prediction": "Returns the coordinate name of the Axis Dataset"}
{"id": 4393, "prediction": "Build the XML representation of this message ."}
{"id": 4395, "prediction": "Retrieves the breakdown levels for the specified level ."}
{"id": 4397, "prediction": "Creates new variables ."}
{"id": 4399, "prediction": "Removes the bit from the float mask ."}
{"id": 4401, "prediction": "Wraps the given ncdfFile into a Netcdatet ."}
{"id": 4403, "prediction": "clear all coordinate systems"}
{"id": 4405, "prediction": "Find the coordinate of the given name ."}
{"id": 4407, "prediction": "Find a coordinate transform ."}
{"id": 4409, "prediction": "Sets the values of a variable ."}
{"id": 4411, "prediction": "Creates a new array with the given data type ."}
{"id": 4413, "prediction": "Gets the existing file ."}
{"id": 4415, "prediction": "Removes the ndarray"}
{"id": 4417, "prediction": "Adds a document to the document ."}
{"id": 4419, "prediction": "Returns the maximum number of bytes in the buffer ."}
{"id": 4421, "prediction": "Retrieves the datasource associated with the given context ."}
{"id": 4423, "prediction": "Build the convention attribute ."}
{"id": 4425, "prediction": "Recursively find the coordinates of a set of coordinates ."}
{"id": 4427, "prediction": "Sets the coordinate systems ."}
{"id": 4429, "prediction": "Replies if the given axis is a coordinate axis ."}
{"id": 4431, "prediction": "Sets the inherited dataset ."}
{"id": 4433, "prediction": "Marks a set of datas to be deleted ."}
{"id": 4435, "prediction": "Initialize the server ."}
{"id": 4437, "prediction": "Adds a symbol ."}
{"id": 4439, "prediction": "Compare two boolean rows ."}
{"id": 4441, "prediction": "Checks if the node is reserved ."}
{"id": 4443, "prediction": "Checks if the next segment has been read ."}
{"id": 4445, "prediction": "Register a new DSP ."}
{"id": 4447, "prediction": "Unregister a DSP class ."}
{"id": 4449, "prediction": "Calculates the size of the time interval in milliseconds ."}
{"id": 4451, "prediction": "Gets the Vert coordinate type ."}
{"id": 4453, "prediction": "Sort the DapNode ."}
{"id": 4455, "prediction": "Find a variable with the given name ."}
{"id": 4457, "prediction": "Returns the name of the variable with the given attribute ."}
{"id": 4459, "prediction": "Returns the nested Structure for a given Structure ."}
{"id": 4461, "prediction": "Gets the value of a global attribute ."}
{"id": 4463, "prediction": "Returns the variable name for the given key ."}
{"id": 4465, "prediction": "Utility function to connect to a given value ."}
{"id": 4467, "prediction": "Creates a section of the specified range ."}
{"id": 4469, "prediction": "Gets the name of the group ."}
{"id": 4471, "prediction": "Returns the match for the given path ."}
{"id": 4473, "prediction": "Returns the index of the first occurrence of the given byte array ."}
{"id": 4475, "prediction": "Report the cache ."}
{"id": 4477, "prediction": "Stop the background loading"}
{"id": 4479, "prediction": "Create a HPMTOTT token from the given URL ."}
{"id": 4481, "prediction": "Returns the next random count ."}
{"id": 4483, "prediction": "Get the FileSystemProvider for the given URI ."}
{"id": 4485, "prediction": "Gets the index of the given value ."}
{"id": 4487, "prediction": "Convert a cloud cloud to a H2 bucket ."}
{"id": 4489, "prediction": "Sets the number of colors ."}
{"id": 4491, "prediction": "Convert URI to AuthScope"}
{"id": 4493, "prediction": "Checks if the Factor is equal to the given Factor ."}
{"id": 4495, "prediction": "Finds the index of the given query"}
{"id": 4497, "prediction": "Read metadata content ."}
{"id": 4499, "prediction": "Validate the metadata ."}
{"id": 4501, "prediction": "Read a DatasourceSource element ."}
{"id": 4503, "prediction": "Reads a DatasetFilter from a Dataset ."}
{"id": 4505, "prediction": "Creates a new CatGenConfig element ."}
{"id": 4507, "prediction": "Creates a new DatasetNamingNamedElement instance ."}
{"id": 4509, "prediction": "Create a new result service element ."}
{"id": 4511, "prediction": "Construct the menu ."}
{"id": 4513, "prediction": "Adds parameters to the input stream ."}
{"id": 4515, "prediction": "Gets a parameter with the given name ."}
{"id": 4517, "prediction": "Read bytes from input stream ."}
{"id": 4519, "prediction": "Set the station info ."}
{"id": 4521, "prediction": "Show the format info for the given field ."}
{"id": 4523, "prediction": "Set the FTP file ."}
{"id": 4525, "prediction": "Parses the name of the components ."}
{"id": 4527, "prediction": "Determines the value of the netdfcdf ."}
{"id": 4529, "prediction": "Constructs the dimension of a group ."}
{"id": 4531, "prediction": "Read data from server ."}
{"id": 4533, "prediction": "Get an image from a full image ."}
{"id": 4535, "prediction": "Read data from the given index ."}
{"id": 4537, "prediction": "Read data from a layout ."}
{"id": 4539, "prediction": "Converts a byte array to a byte array ."}
{"id": 4541, "prediction": "Convert a byte array to a byte array ."}
{"id": 4543, "prediction": "Creates a Structure object from a SectionData object ."}
{"id": 4545, "prediction": "Returns the scalar data structure for the given index ."}
{"id": 4547, "prediction": "Computes the structure for the given variable ."}
{"id": 4549, "prediction": "Creates a CrawlableDatableDataset ."}
{"id": 4551, "prediction": "Adds an explicit dataset to the cache ."}
{"id": 4553, "prediction": "Call this method to finish ."}
{"id": 4555, "prediction": "Gets the dataset ."}
{"id": 4557, "prediction": "Put a resource control ."}
{"id": 4559, "prediction": "Gets the bb ."}
{"id": 4561, "prediction": "Validates that the string is valid ."}
{"id": 4563, "prediction": "Adds all points to a feature ."}
{"id": 4565, "prediction": "Evaluate all clauses ."}
{"id": 4567, "prediction": "Attempt to amend odf ."}
{"id": 4569, "prediction": "Checks that the given dimension is not null ."}
{"id": 4571, "prediction": "Read Xlink content ."}
{"id": 4573, "prediction": "Sets the projection ."}
{"id": 4575, "prediction": "Invalidate the layout ."}
{"id": 4577, "prediction": "Get the minimum layout size ."}
{"id": 4579, "prediction": "Checks if the given coordinate is a coordinate system ."}
{"id": 4581, "prediction": "Open a URL connection ."}
{"id": 4583, "prediction": "Calculates the latitude of a point ."}
{"id": 4585, "prediction": "Converts an angle to a string"}
{"id": 4587, "prediction": "Set the runtime coordinates for the given runtimes ."}
{"id": 4589, "prediction": "Rewrite a point feature ."}
{"id": 4591, "prediction": "Returns the full name of this node ."}
{"id": 4593, "prediction": "Get the access access for the given service type ."}
{"id": 4595, "prediction": "Get the parent catalog ."}
{"id": 4597, "prediction": "Find service by name ."}
{"id": 4599, "prediction": "Finds the list of CatRefRefs in the given dataset ."}
{"id": 4601, "prediction": "Add a double to the array"}
{"id": 4603, "prediction": "Computes the rho radius for the given latitude ."}
{"id": 4605, "prediction": "Create a Structure object from the given parameters ."}
{"id": 4607, "prediction": "Creates a parameter from the given parameters ."}
{"id": 4352, "prediction": "Dumps a byte array to the buffer ."}
{"id": 4354, "prediction": "Gets the type of ellipsoid ."}
{"id": 4356, "prediction": "Decode VJO data ."}
{"id": 4358, "prediction": "Gets the text content of this URL ."}
{"id": 4360, "prediction": "Reads a section of a section ."}
{"id": 4362, "prediction": "Remove an attribute from the list ."}
{"id": 4364, "prediction": "Returns all the offsets in the given run units ."}
{"id": 4366, "prediction": "Convert a string to a Date ."}
{"id": 4368, "prediction": "Returns the date origin of this time unit ."}
{"id": 4370, "prediction": "Make a date ."}
{"id": 4372, "prediction": "Make a standard date string ."}
{"id": 4374, "prediction": "Adds the dimensions to the network ."}
{"id": 4376, "prediction": "Creates a projection ."}
{"id": 4378, "prediction": "Add a coordinate system variable ."}
{"id": 4380, "prediction": "Calculate the standard deviation ."}
{"id": 4382, "prediction": "Calculate the MSG coordinates of the geometry ."}
{"id": 4384, "prediction": "Read a dataset from the given catalog ."}
{"id": 4386, "prediction": "Reads the metadata from a URL ."}
{"id": 4388, "prediction": "Checks if the given file is valid ."}
{"id": 4390, "prediction": "Sets the name of the attribute ."}
{"id": 4392, "prediction": "Returns the coordinate name for the given Axis ."}
{"id": 4394, "prediction": "Builds a DapException ."}
{"id": 4396, "prediction": "Create a z coordinate axis ."}
{"id": 4398, "prediction": "Create a time axis coordinate from the given time interval ."}
{"id": 4400, "prediction": "Main method for testing ."}
{"id": 4402, "prediction": "Open a file ."}
{"id": 4404, "prediction": "Finds the coordinate of a coordinate type ."}
{"id": 4406, "prediction": "Returns the coordinate system with the given name ."}
{"id": 4408, "prediction": "Determine if the need to be enhanced ."}
{"id": 4410, "prediction": "Sets the values of a variable ."}
{"id": 4412, "prediction": "Returns the index of this image ."}
{"id": 4414, "prediction": "Get features from a bounding box"}
{"id": 4416, "prediction": "Adds a TredDataMetadata to the TredDataMetadata ."}
{"id": 4418, "prediction": "Remove the document from the document ."}
{"id": 4420, "prediction": "Checks if the given netc file is the same ."}
{"id": 4422, "prediction": "Creates a list of convention names ."}
{"id": 4424, "prediction": "Builds the coordinate system objects ."}
{"id": 4426, "prediction": "Recursively find all the coordinate systems ."}
{"id": 4428, "prediction": "Makes sure that all the coordinate systems have the same coordinates ."}
{"id": 4430, "prediction": "Add a coordinate variable ."}
{"id": 4432, "prediction": "Removes a dataset from this dataset ."}
{"id": 4434, "prediction": "Delete an Invocation"}
{"id": 4436, "prediction": "Counts a counter ."}
{"id": 4438, "prediction": "Compares two table rows"}
{"id": 4440, "prediction": "Get the group scope ."}
{"id": 4442, "prediction": "Checks if a date range is valid ."}
{"id": 4444, "prediction": "Register a class ."}
{"id": 4446, "prediction": "Returns true if the specified DSP is registered ."}
{"id": 4448, "prediction": "Creates a factory to create a factory for the specified parameters ."}
{"id": 4450, "prediction": "Retrieves the offset offset from the current record ."}
{"id": 4452, "prediction": "Finishes this node ."}
{"id": 4454, "prediction": "Get the raf file from the given partition"}
{"id": 4456, "prediction": "Find a variable with the given attribute name and value"}
{"id": 4458, "prediction": "Find a variable with the given attribute value ."}
{"id": 4460, "prediction": "Determines if the specified network is a record type ."}
{"id": 4462, "prediction": "Retrieves the feature type from the given dataset ."}
{"id": 4464, "prediction": "Returns the coordinate value at the given index ."}
{"id": 4466, "prediction": "Returns the coordinates of the coordinate axis ."}
{"id": 4468, "prediction": "Find the closest point in the bounds ."}
{"id": 4470, "prediction": "Add an action to the menu ."}
{"id": 4472, "prediction": "Main entry point ."}
{"id": 4474, "prediction": "Adds a source to the cache ."}
{"id": 4476, "prediction": "Stops the background loading"}
{"id": 4478, "prediction": "Create a GET method for a GET request"}
{"id": 4480, "prediction": "Generate a random float from a random type ."}
{"id": 4482, "prediction": "Reads the data from the given section ."}
{"id": 4484, "prediction": "Read the table ."}
{"id": 4486, "prediction": "Remove a data variable ."}
{"id": 4488, "prediction": "Reads the data from the given variable ."}
{"id": 4490, "prediction": "Calculate the transform for the screen ."}
{"id": 4492, "prediction": "Finish the graph ."}
{"id": 4494, "prediction": "Get the catalog catalog ."}
{"id": 4496, "prediction": "Read metadata from a URL ."}
{"id": 4498, "prediction": "Adds metadata content to the metadata object ."}
{"id": 4500, "prediction": "Read a CGenGenConfig element from a parent dataset ."}
{"id": 4502, "prediction": "Reads a DatasetNamplingElement ."}
{"id": 4504, "prediction": "Read result service element ."}
{"id": 4506, "prediction": "Creates a datatype element ."}
{"id": 4508, "prediction": "Creates a new DatasetFilter instance ."}
{"id": 4510, "prediction": "Checks if the given flag is set ."}
{"id": 4512, "prediction": "Adds the menu to the menu ."}
{"id": 4514, "prediction": "Create a parameter from a word ."}
{"id": 4516, "prediction": "Reads the contents of the input stream ."}
{"id": 4518, "prediction": "Replace the template template with the given name ."}
{"id": 4520, "prediction": "Accepts and accepts a message buffer ."}
{"id": 4522, "prediction": "Retrieves a bitmap from the given file ."}
{"id": 4524, "prediction": "Sets the debug flags ."}
{"id": 4526, "prediction": "Checks if the given D structure is a group ."}
{"id": 4528, "prediction": "Get the shared dimension ."}
{"id": 4530, "prediction": "Checks if the opcode is unsigned ."}
{"id": 4532, "prediction": "Gets the image icon ."}
{"id": 4534, "prediction": "Creates a cursor with the specified name ."}
{"id": 4536, "prediction": "Read data fill fill ."}
{"id": 4538, "prediction": "Make an array of primitive types ."}
{"id": 4540, "prediction": "Converts a byte array to a byte array ."}
{"id": 4542, "prediction": "Read a Section object from a parsed Array ."}
{"id": 4544, "prediction": "Gets the scalar string representation of the given structure ."}
{"id": 4546, "prediction": "Returns an array containing the elements of the given structure ."}
{"id": 4548, "prediction": "Adds the dimensions to the network ."}
{"id": 4550, "prediction": "Normalize the given path ."}
{"id": 4552, "prediction": "Adds a directory to the scan ."}
{"id": 4554, "prediction": "Creates a list of datasets ."}
{"id": 4556, "prediction": "Create a Dataset ."}
{"id": 4558, "prediction": "Adds a point to this point ."}
{"id": 4560, "prediction": "Gets the bbower of the bb ."}
{"id": 4562, "prediction": "Checks if this dataset matches the given dataset ."}
{"id": 4564, "prediction": "Parse a constraint ."}
{"id": 4566, "prediction": "Prints a single clause ."}
{"id": 4568, "prediction": "Sets the shared dimensions ."}
{"id": 4570, "prediction": "Find a group by name ."}
{"id": 4572, "prediction": "Gets the standard URI ."}
{"id": 4574, "prediction": "Adds a layout component to the container ."}
{"id": 4576, "prediction": "Remove a layout component from the map ."}
{"id": 4578, "prediction": "Layout the container ."}
{"id": 4580, "prediction": "Returns the maximum value of the radial ."}
{"id": 4582, "prediction": "Converts the given geographic coordinates to an absolute coordinates ."}
{"id": 4584, "prediction": "Calculates the Geometry value of the Geometry ."}
{"id": 4586, "prediction": "Scans the scan axis and returns the scan axis ."}
{"id": 4588, "prediction": "Writes the POJO dataset to the given point ."}
{"id": 4590, "prediction": "Returns an ArraySequence for the given member name ."}
{"id": 4592, "prediction": "Gets the unique ID ."}
{"id": 4594, "prediction": "Find a dataset by name ."}
{"id": 4596, "prediction": "Gets the list of all the metadata ."}
{"id": 4598, "prediction": "Returns a list of Variables for the specified vocab ."}
{"id": 4600, "prediction": "Escapes the given URL ."}
{"id": 4602, "prediction": "Extracts the interpolation from an array of points ."}
{"id": 4604, "prediction": "Returns the detail information for this parse ."}
{"id": 4606, "prediction": "Creates a new variable representing the missing variables ."}
{"id": 4609, "prediction": "Get the size of the stn var names ."}
{"id": 4611, "prediction": "Gets the y - y - y - y - y - y - y - y - y - z - y - y - y - y - y - y - y - y - y - z - y - z - y - y - y - y - y - y - y - y - y - y - z - z - z - y - y - y - y - y - y - y - y - y - y - z - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y"}
{"id": 4613, "prediction": "Reduce the number of symbols to be printed ."}
{"id": 4615, "prediction": "Reads the error message ."}
{"id": 4617, "prediction": "Read header ."}
{"id": 4619, "prediction": "Reads a table from a URL ."}
{"id": 4621, "prediction": "Gets the stn file ."}
{"id": 4623, "prediction": "Returns the beginning of the node ."}
{"id": 4625, "prediction": "Creates all runtime collections ."}
{"id": 4627, "prediction": "Returns the data type for the given format ."}
{"id": 4629, "prediction": "Clean up a unit ."}
{"id": 4631, "prediction": "Checks if the given string is a unit ."}
{"id": 4633, "prediction": "Returns the VarId for the given note ."}
{"id": 4635, "prediction": "Find the dods for a given name ."}
{"id": 4637, "prediction": "Finds a child by its index ."}
{"id": 4639, "prediction": "Returns the dimension of a given element ."}
{"id": 4641, "prediction": "Get the string representation of this attribute ."}
{"id": 4643, "prediction": "Create a slice of the specified dimension ."}
{"id": 4645, "prediction": "Reads the contents of a range ."}
{"id": 4647, "prediction": "Reads the data from the cache ."}
{"id": 4649, "prediction": "Write CDL data ."}
{"id": 4651, "prediction": "Sets the data type ."}
{"id": 4653, "prediction": "Resets the shape ."}
{"id": 4655, "prediction": "Resets the dimensions of this variable ."}
{"id": 4657, "prediction": "Sets the cache data ."}
{"id": 4659, "prediction": "Set the bounding box ."}
{"id": 4661, "prediction": "Get all Dataset from this dataset ."}
{"id": 4663, "prediction": "Open a CDDF dataset ."}
{"id": 4665, "prediction": "Build the sequence types ."}
{"id": 4667, "prediction": "Finds the matching Enum for the specified VARN ."}
{"id": 4669, "prediction": "Scans the number of messages in the given file ."}
{"id": 4671, "prediction": "Performs a POST request ."}
{"id": 4673, "prediction": "Checks if the world bounding box is rotated ."}
{"id": 4675, "prediction": "Converts a point to world coordinates ."}
{"id": 4677, "prediction": "Zoom the specified start pixel ."}
{"id": 4679, "prediction": "Adds a listener to the list of listeners ."}
{"id": 4681, "prediction": "Send an event to all listeners ."}
{"id": 4683, "prediction": "Prints the contents of a file ."}
{"id": 4685, "prediction": "Print a data array"}
{"id": 4687, "prediction": "Prints a structure data structure ."}
{"id": 4689, "prediction": "Prints an array to a PrintWriter"}
{"id": 4691, "prediction": "Read attribute double ."}
{"id": 4693, "prediction": "Main entry point ."}
{"id": 4695, "prediction": "Check if the given grid is positive ."}
{"id": 4697, "prediction": "Make a label for a quantity ."}
{"id": 4699, "prediction": "Read a number of bits from the stream ."}
{"id": 4701, "prediction": "Open a connection ."}
{"id": 4703, "prediction": "Get the DDS from a CE file ."}
{"id": 4705, "prediction": "Calculate the latitude point from the world model ."}
{"id": 4707, "prediction": "Creates a new date range compatible with the given date range ."}
{"id": 4709, "prediction": "Handles the request ."}
{"id": 4711, "prediction": "Read root element ."}
{"id": 4713, "prediction": "convert a string to a string"}
{"id": 4715, "prediction": "Unescape URL query string ."}
{"id": 4717, "prediction": "Encode a string ."}
{"id": 4719, "prediction": "Swaps two byte arrays at the given offset ."}
{"id": 4721, "prediction": "Swap two byte arrays ."}
{"id": 4723, "prediction": "Swaps a double ."}
{"id": 4725, "prediction": "Convert an int to a byte array ."}
{"id": 4727, "prediction": "Creates a new subset transform ."}
{"id": 4729, "prediction": "Calculate the C"}
{"id": 4731, "prediction": "Write the feature list ."}
{"id": 4733, "prediction": "Adds the dimensions to the network ."}
{"id": 4735, "prediction": "Finds a coordinate transform for a specific coordinate type ."}
{"id": 4737, "prediction": "Exit the cache ."}
{"id": 4739, "prediction": "Gets a file or cache if it exists ."}
{"id": 4741, "prediction": "Clears the cache ."}
{"id": 4743, "prediction": "Calculates the bearing between two points ."}
{"id": 4745, "prediction": "Find the point at the given point in the given coordinates ."}
{"id": 4747, "prediction": "Returns the LatL coordinates of the given point ."}
{"id": 4749, "prediction": "Loads the image ."}
{"id": 4751, "prediction": "Stops the cache loading"}
{"id": 4753, "prediction": "Returns the dimension of this image ."}
{"id": 4755, "prediction": "Gets the standard URI ."}
{"id": 4757, "prediction": "Transfer data from another list to another ."}
{"id": 4759, "prediction": "Checks if two objects are equal ."}
{"id": 4761, "prediction": "Reads data from the input stream ."}
{"id": 4763, "prediction": "Get a double array by name ."}
{"id": 4765, "prediction": "Get boolean array by name ."}
{"id": 4767, "prediction": "Get the names of all fields ."}
{"id": 4769, "prediction": "Returns a map of attributes ."}
{"id": 4771, "prediction": "Remove an attribute ."}
{"id": 4773, "prediction": "Returns the parent node of this node ."}
{"id": 4775, "prediction": "Gets the container path ."}
{"id": 4777, "prediction": "Compute the FQQUN ."}
{"id": 4779, "prediction": "Builds the DMR response ."}
{"id": 4781, "prediction": "Retrieves a list from the given key ."}
{"id": 4783, "prediction": "Read data from a file ."}
{"id": 4785, "prediction": "Print compound instance ."}
{"id": 4787, "prediction": "Writes the given element to the output stream ."}
{"id": 4789, "prediction": "Write an element to the writer ."}
{"id": 4791, "prediction": "Make a coordinate transform to a coordinate ."}
{"id": 4793, "prediction": "Creates a unit with the specified name ."}
{"id": 4795, "prediction": "Create a BaseDDBDDB representation ."}
{"id": 4797, "prediction": "Creates a new instance ."}
{"id": 4799, "prediction": "Finds the closest to the given target ."}
{"id": 4801, "prediction": "Open a feature dataset ."}
{"id": 4803, "prediction": "Concatenates a Dataset ."}
{"id": 4805, "prediction": "Returns the string representation of the given parts ."}
{"id": 4807, "prediction": "Normalizes the given units ."}
{"id": 4809, "prediction": "Finishes the catalog ."}
{"id": 4811, "prediction": "Adds an element to the list ."}
{"id": 4813, "prediction": "Print XML attributes ."}
{"id": 4815, "prediction": "Checks if the given attribute is a special type ."}
{"id": 4817, "prediction": "Checks if the given file is valid ."}
{"id": 4819, "prediction": "Set the attributes for the nav block ."}
{"id": 4821, "prediction": "Sets the Calculate attribute attributes ."}
{"id": 4823, "prediction": "Returns the coordinate name of the given type ."}
{"id": 4825, "prediction": "Finds the best coordinate for a given type ."}
{"id": 4827, "prediction": "Find the best coordinate system for the given network ."}
{"id": 4829, "prediction": "Get a variable ."}
{"id": 4831, "prediction": "Read marker data ."}
{"id": 4833, "prediction": "A fatal error ."}
{"id": 4835, "prediction": "Main entry point ."}
{"id": 4837, "prediction": "Returns a list of all the parameters in this array ."}
{"id": 4839, "prediction": "Sets the selected position ."}
{"id": 4841, "prediction": "Reads an object from the input stream ."}
{"id": 4843, "prediction": "Adds a unit to this unit ."}
{"id": 4845, "prediction": "Adds a symbol to this unit ."}
{"id": 4847, "prediction": "Add a unit ."}
{"id": 4849, "prediction": "Adds a new unit to the map ."}
{"id": 4851, "prediction": "Finds a record by its position ."}
{"id": 4853, "prediction": "Serialize a dataset to a CPE ."}
{"id": 4855, "prediction": "Creates a copy of this view ."}
{"id": 4857, "prediction": "Open a feature data type ."}
{"id": 4859, "prediction": "Annotate domain data ."}
{"id": 4861, "prediction": "Add a partition ."}
{"id": 4863, "prediction": "Create a RegExpAndExpancer with the given dataset name ."}
{"id": 4608, "prediction": "Add global attributes ."}
{"id": 4610, "prediction": "Get a DArray for a given type"}
{"id": 4612, "prediction": "Determines if the given key is present in the given state ."}
{"id": 4614, "prediction": "Read DMR data from the input stream ."}
{"id": 4616, "prediction": "Read data from a byte array ."}
{"id": 4618, "prediction": "Converts a string to a Date object ."}
{"id": 4620, "prediction": "Transfer a group to another group ."}
{"id": 4622, "prediction": "Open a station file ."}
{"id": 4624, "prediction": "Gets the end of the node ."}
{"id": 4626, "prediction": "Set the edit value ."}
{"id": 4628, "prediction": "Calculates the EF coordinates of the EF coordinate from a point ."}
{"id": 4630, "prediction": "Clean up a name ."}
{"id": 4632, "prediction": "Creates a factory for a given note ."}
{"id": 4634, "prediction": "Parse the DASDF file ."}
{"id": 4636, "prediction": "Find the data for the DDSVD"}
{"id": 4638, "prediction": "Get the parent group ."}
{"id": 4640, "prediction": "Returns the index of the named dimension ."}
{"id": 4642, "prediction": "Returns the shape of the given variable ."}
{"id": 4644, "prediction": "Sets the enum type ."}
{"id": 4646, "prediction": "Read scalar string ."}
{"id": 4648, "prediction": "Read the contents of a section ."}
{"id": 4650, "prediction": "Returns a debug debug representation of this variable ."}
{"id": 4652, "prediction": "Sets the dimensions of the list ."}
{"id": 4654, "prediction": "Set the dimensions ."}
{"id": 4656, "prediction": "Set the dimension"}
{"id": 4658, "prediction": "Returns a list containing all the dimensions of this dimension ."}
{"id": 4660, "prediction": "Called when the grid is finished ."}
{"id": 4662, "prediction": "Checks if the path ends with the specified path ."}
{"id": 4664, "prediction": "Build the CDM dataset ."}
{"id": 4666, "prediction": "Builds the dimensions of the specified dap ."}
{"id": 4668, "prediction": "Get the core dimension of a list"}
{"id": 4670, "prediction": "Processes a Buf message"}
{"id": 4672, "prediction": "Get the transform ."}
{"id": 4674, "prediction": "Gets the map area area ."}
{"id": 4676, "prediction": "Applies a pan to the map ."}
{"id": 4678, "prediction": "Recalculates the orientation from the bounding box ."}
{"id": 4680, "prediction": "Remove a listener ."}
{"id": 4682, "prediction": "Sends an event to the listener ."}
{"id": 4684, "prediction": "Prints a message to the server ."}
{"id": 4686, "prediction": "Print data section ."}
{"id": 4688, "prediction": "Prints an array of plain text ."}
{"id": 4690, "prediction": "Writes the ncml string to the output stream ."}
{"id": 4692, "prediction": "Add a parameter to this variable ."}
{"id": 4694, "prediction": "Reads an object from a list of slices ."}
{"id": 4696, "prediction": "Check if the unit is compatible with this unit ."}
{"id": 4698, "prediction": "Set bit offset ."}
{"id": 4700, "prediction": "Converts a bit integer to a bit integer ."}
{"id": 4702, "prediction": "Get the DAS server ."}
{"id": 4704, "prediction": "Gets the complete CE ."}
{"id": 4706, "prediction": "Generate the Datas catalog for the given dataset ."}
{"id": 4708, "prediction": "Checks if the file is valid ."}
{"id": 4710, "prediction": "Reads the sensor information from the scanner ."}
{"id": 4712, "prediction": "Clean the character data ."}
{"id": 4714, "prediction": "Escape a URL query string"}
{"id": 4716, "prediction": "Splits a string ."}
{"id": 4718, "prediction": "Add global attributes ."}
{"id": 4720, "prediction": "Swap two byte arrays ."}
{"id": 4722, "prediction": "Swaps a floating point at the given v ."}
{"id": 4724, "prediction": "Converts a short to a byte array ."}
{"id": 4726, "prediction": "Converts a long to a byte array ."}
{"id": 4728, "prediction": "Write the document ."}
{"id": 4730, "prediction": "Start the XML file ."}
{"id": 4732, "prediction": "Add a list of levels to the grid ."}
{"id": 4734, "prediction": "Add a group to the network ."}
{"id": 4736, "prediction": "Returns the index of the grid ."}
{"id": 4738, "prediction": "Gets a file ."}
{"id": 4740, "prediction": "Show the cache files ."}
{"id": 4742, "prediction": "Calculates the bearing for a point ."}
{"id": 4744, "prediction": "Main method for testing ."}
{"id": 4746, "prediction": "Finds the point at the given point ."}
{"id": 4748, "prediction": "Load a image in the specified image ."}
{"id": 4750, "prediction": "Loads the image ."}
{"id": 4752, "prediction": "Stop loading image ."}
{"id": 4754, "prediction": "Sets the source image to be displayed ."}
{"id": 4756, "prediction": "Create a new instance of this field ."}
{"id": 4758, "prediction": "Count the number of bits ."}
{"id": 4760, "prediction": "Reads the header of the file ."}
{"id": 4762, "prediction": "Returns the field with the given name ."}
{"id": 4764, "prediction": "Get string array by name ."}
{"id": 4766, "prediction": "Returns the field name for the given index ."}
{"id": 4768, "prediction": "Main entry point ."}
{"id": 4770, "prediction": "Set the parent attribute ."}
{"id": 4772, "prediction": "Get the group of this node ."}
{"id": 4774, "prediction": "Get the escaped escape name ."}
{"id": 4776, "prediction": "Gets the group path ."}
{"id": 4778, "prediction": "Checks if this is top level ."}
{"id": 4780, "prediction": "Adds a new bean to the cache ."}
{"id": 4782, "prediction": "Retrieves an object from the cache ."}
{"id": 4784, "prediction": "Print the data to the output ."}
{"id": 4786, "prediction": "Write an element to a String"}
{"id": 4788, "prediction": "Writes the given element to the output stream ."}
{"id": 4790, "prediction": "Make a dimension element ."}
{"id": 4792, "prediction": "Gets an array of ints ."}
{"id": 4794, "prediction": "Duplicate a unit name ."}
{"id": 4796, "prediction": "Generate a derived unit db ."}
{"id": 4798, "prediction": "Returns the coordinate element at the given axis ."}
{"id": 4800, "prediction": "Returns the subset of the subset values ."}
{"id": 4802, "prediction": "Open a feature ."}
{"id": 4804, "prediction": "Read an array of data ."}
{"id": 4806, "prediction": "Convert a string to a canonical form ."}
{"id": 4808, "prediction": "Compile this dataset ."}
{"id": 4810, "prediction": "Returns the value associated with the given key ."}
{"id": 4812, "prediction": "Gets the date ."}
{"id": 4814, "prediction": "Print an XML attribute ."}
{"id": 4816, "prediction": "Prints the dimensions of a variable ."}
{"id": 4818, "prediction": "Sets the area attributes ."}
{"id": 4820, "prediction": "Returns the CalcType of the given name ."}
{"id": 4822, "prediction": "Determines the coordinates of a table ."}
{"id": 4824, "prediction": "Finds a coordinate by its type ."}
{"id": 4826, "prediction": "Finds the dimension by its type ."}
{"id": 4828, "prediction": "Finds the coordinate axis for the given axis ."}
{"id": 4830, "prediction": "Deserialize the old data from the server ."}
{"id": 4832, "prediction": "Writes a marker to the stream ."}
{"id": 4834, "prediction": "Creates a dataset for a dataset ."}
{"id": 4836, "prediction": "Gets the JavaArray string representation of this Structure ."}
{"id": 4838, "prediction": "Sets the list of stations ."}
{"id": 4840, "prediction": "Redraw the region selection ."}
{"id": 4842, "prediction": "Writes the object to the output stream ."}
{"id": 4844, "prediction": "Adds a unit ."}
{"id": 4846, "prediction": "Returns the unit with the given id ."}
{"id": 4848, "prediction": "Adds a unit to the unit list ."}
{"id": 4850, "prediction": "Add a menu to the menu ."}
{"id": 4852, "prediction": "Read a scalar data structure ."}
{"id": 4854, "prediction": "Get the values of the rdarray"}
{"id": 4856, "prediction": "Open a feature dataset ."}
{"id": 4858, "prediction": "Open a Dataset"}
{"id": 4860, "prediction": "Removes all properties from a list"}
{"id": 4862, "prediction": "Create a GribCollectionMutableMutableMutableMutableMapper ."}
{"id": 4865, "prediction": "Writes the given query to the given query ."}
{"id": 4867, "prediction": "Sets the image to use ."}
{"id": 4869, "prediction": "Zoom to the image ."}
{"id": 4871, "prediction": "Calculate the FOOO data for a given int ."}
{"id": 4873, "prediction": "Returns a string representation of the given index ."}
{"id": 4875, "prediction": "Returns the LVCD coordinates for the given IV coordinates ."}
{"id": 4877, "prediction": "Returns the grid packing for the specified grid type ."}
{"id": 4879, "prediction": "Read data from an input stream ."}
{"id": 4881, "prediction": "Gets the tag for the given code ."}
{"id": 4883, "prediction": "Returns the size of the given DapType ."}
{"id": 4885, "prediction": "Set the grid size ."}
{"id": 4887, "prediction": "Clears the grid ."}
{"id": 4889, "prediction": "Finds the intersection of a rectangle ."}
{"id": 4891, "prediction": "Finds the closest point in the given circle ."}
{"id": 4893, "prediction": "Get a base unit ."}
{"id": 4895, "prediction": "Search for service type ."}
{"id": 4897, "prediction": "Checks if the given location is a valid URL ."}
{"id": 4899, "prediction": "Send data to a section ."}
{"id": 4901, "prediction": "Returns the prefix for the given FQq ."}
{"id": 4903, "prediction": "Locates relative path ."}
{"id": 4905, "prediction": "Gets the structure path ."}
{"id": 4907, "prediction": "Joins the given array with the given separator ."}
{"id": 4909, "prediction": "Returns a list of all the leading protocols that match the specified endpoint ."}
{"id": 4911, "prediction": "Returns the slice of the specified slice ."}
{"id": 4913, "prediction": "Checks if a slice is a single point ."}
{"id": 4915, "prediction": "Read data from input stream ."}
{"id": 4917, "prediction": "Set the short names ."}
{"id": 4919, "prediction": "Adds a newDeclaration to the tree ."}
{"id": 4921, "prediction": "Find a variable with the given name ."}
{"id": 4923, "prediction": "Returns the statistic type for the given time range ."}
{"id": 4925, "prediction": "Returns a list of all the ranges contained in this frame ."}
{"id": 4927, "prediction": "Get session id ."}
{"id": 4929, "prediction": "Sets whether this session should be used ."}
{"id": 4931, "prediction": "Sets the authentication provider ."}
{"id": 4933, "prediction": "Set the global credentials provider ."}
{"id": 4935, "prediction": "Creates a factory for the given shape ."}
{"id": 4937, "prediction": "Returns the index of the range starting at the specified index ."}
{"id": 4939, "prediction": "Reduce the index ."}
{"id": 4941, "prediction": "Performs a permutation permutations ."}
{"id": 4943, "prediction": "Returns the current element ."}
{"id": 4945, "prediction": "Sets the current shape to the given value ."}
{"id": 4947, "prediction": "Returns the name of the time interval"}
{"id": 4949, "prediction": "Creates a list of file dates ."}
{"id": 4951, "prediction": "Get the list of file stations ."}
{"id": 4953, "prediction": "Gets the list of all registered station keys ."}
{"id": 4955, "prediction": "Returns the index of the station with the given ID ."}
{"id": 4957, "prediction": "Prints the indentation ."}
{"id": 4959, "prediction": "Reads an index from a single file ."}
{"id": 4961, "prediction": "Determines if the scan should be scanned ."}
{"id": 4963, "prediction": "Set the debug flags to be used for debugging purposes ."}
{"id": 4965, "prediction": "Write a file to the file ."}
{"id": 4967, "prediction": "Returns a string representation of the constraint ."}
{"id": 4969, "prediction": "Reads the contents of a Structure object ."}
{"id": 4971, "prediction": "Checks if the structure needs to be needed ."}
{"id": 4973, "prediction": "Convert a Structure to a StructureInfo object ."}
{"id": 4975, "prediction": "Checks if the data structure contains data ."}
{"id": 4977, "prediction": "Determines if the resource is authorized or not ."}
{"id": 4979, "prediction": "Make an ArraySequenceSequence ."}
{"id": 4981, "prediction": "Add a vertex attribute ."}
{"id": 4983, "prediction": "Read an XML catalog from the given string ."}
{"id": 4985, "prediction": "Writes the catalog to the output stream ."}
{"id": 4987, "prediction": "Returns the dimensionless id ."}
{"id": 4989, "prediction": "Divide this unit by another unit ."}
{"id": 4991, "prediction": "Checks if the given unit is compatible with this unit ."}
{"id": 4993, "prediction": "Write a point ."}
{"id": 4995, "prediction": "Write a polygon"}
{"id": 4997, "prediction": "Get subnodes ."}
{"id": 4999, "prediction": "Checks if the node is reserved ."}
{"id": 5001, "prediction": "Creates a Factory from an Array"}
{"id": 5003, "prediction": "Factory method for creating a Structure from a Structure"}
{"id": 5005, "prediction": "Make a standard time series feature ."}
{"id": 5007, "prediction": "Compile the given sequence in the given sequence ."}
{"id": 5009, "prediction": "Creates an ArrayView for the given index ."}
{"id": 5011, "prediction": "Extend the given LatLonPoint ."}
{"id": 5013, "prediction": "Returns the intersection with the specified clip ."}
{"id": 5015, "prediction": "Checks if two arrays are conformable ."}
{"id": 5017, "prediction": "Convert an Array to Array"}
{"id": 5019, "prediction": "Copy the values from the given Array to the given Array"}
{"id": 5021, "prediction": "Gets min max ."}
{"id": 5023, "prediction": "Creates a new catalog builder ."}
{"id": 5025, "prediction": "Unescape identifier ."}
{"id": 5027, "prediction": "Unescape URL ."}
{"id": 5029, "prediction": "Splits a string into a string ."}
{"id": 5031, "prediction": "Gets the index of the escaped character ."}
{"id": 5033, "prediction": "Reads the atomic data from the given type ."}
{"id": 5035, "prediction": "Returns the UIDDefaults of the specified class ."}
{"id": 5037, "prediction": "Compile the dap variables ."}
{"id": 5039, "prediction": "Compile the structure of the given variable ."}
{"id": 5041, "prediction": "Compile a sequence of records ."}
{"id": 5043, "prediction": "Gets a field ."}
{"id": 5045, "prediction": "Sets the value of a field ."}
{"id": 5047, "prediction": "Add a checkbox field ."}
{"id": 5049, "prediction": "Add a double field ."}
{"id": 5051, "prediction": "Adds a password field ."}
{"id": 5053, "prediction": "Adds a text field to this field ."}
{"id": 5055, "prediction": "Adds a header to the row ."}
{"id": 5057, "prediction": "Add empty row ."}
{"id": 5059, "prediction": "Gets the cell spacing ."}
{"id": 5061, "prediction": "Multiply the dimension of this dimension ."}
{"id": 5063, "prediction": "Checks if the dimension of the dimension is equal ."}
{"id": 5065, "prediction": "Creates a factory for the given lookup table ."}
{"id": 5067, "prediction": "Adds a parameter to the table ."}
{"id": 5069, "prediction": "Set the value of this unit to a given value ."}
{"id": 5071, "prediction": "Initialize the unit table ."}
{"id": 5073, "prediction": "Returns the name of the file ."}
{"id": 5075, "prediction": "Retrieves an unsigned integer from the given byte array ."}
{"id": 5077, "prediction": "Get a double from the stream ."}
{"id": 5079, "prediction": "Adds a symbol ."}
{"id": 5081, "prediction": "Sets the structure data ."}
{"id": 5083, "prediction": "Draw the shape"}
{"id": 5085, "prediction": "Read data from the input stream ."}
{"id": 5087, "prediction": "Read the number of bytes from the stream ."}
{"id": 5089, "prediction": "Skips over n bytes ."}
{"id": 5091, "prediction": "Gets the index of the coordinate ."}
{"id": 5093, "prediction": "Open the nc file ."}
{"id": 5095, "prediction": "Read one row data ."}
{"id": 5097, "prediction": "Creates a new variable array ."}
{"id": 5099, "prediction": "Set the map area ."}
{"id": 5101, "prediction": "Sets the location of the map area ."}
{"id": 5103, "prediction": "Add actions to the menu ."}
{"id": 5105, "prediction": "New screen size ."}
{"id": 5107, "prediction": "Get a double from the given offset"}
{"id": 5109, "prediction": "Get object from index"}
{"id": 5111, "prediction": "Read a scaled integer ."}
{"id": 5113, "prediction": "Moves the next odmeter to the current state ."}
{"id": 5115, "prediction": "Get the number of time steps per file ."}
{"id": 5117, "prediction": "Gets the file names ."}
{"id": 5119, "prediction": "Gets the full path ."}
{"id": 5121, "prediction": "Converts a reference to a reference date ."}
{"id": 5123, "prediction": "Get uncompressed data ."}
{"id": 5125, "prediction": "Parses the circle ."}
{"id": 5127, "prediction": "Parses the vector ."}
{"id": 5129, "prediction": "Parses the given vector ."}
{"id": 5131, "prediction": "Returns an array of dpolples for a given short array ."}
{"id": 5133, "prediction": "Adds a parameter to this set ."}
{"id": 5135, "prediction": "Gets an unsigned integer ."}
{"id": 5137, "prediction": "Convert byte array to byte array ."}
{"id": 5139, "prediction": "Gets the DAP request state ."}
{"id": 5141, "prediction": "Attach a point to this point ."}
{"id": 5143, "prediction": "Get the bounds of this rectangle"}
{"id": 5145, "prediction": "Parses the given text ."}
{"id": 5147, "prediction": "Ensures that the given memory size is a valid array size ."}
{"id": 5149, "prediction": "Read a 64 - bit unsigned integer from the stream ."}
{"id": 5151, "prediction": "Read a 32 - bit integer ."}
{"id": 5153, "prediction": "Reads a 4 - byte float from the input stream ."}
{"id": 5155, "prediction": "Reads a 64 - bit integer from the input stream ."}
{"id": 5157, "prediction": "Creates a new copy of this map ."}
{"id": 5159, "prediction": "Escape entity string ."}
{"id": 5161, "prediction": "Splits a string into a list of strings ."}
{"id": 5163, "prediction": "Gets the service special ."}
{"id": 5165, "prediction": "Returns the reference time in milliseconds ."}
{"id": 5167, "prediction": "Main entry point for testing ."}
{"id": 5169, "prediction": "Checks if the given file is a valid MdfFile ."}
{"id": 5171, "prediction": "Acquire area ."}
{"id": 5173, "prediction": "Returns true if the given date is before the specified date ."}
{"id": 5175, "prediction": "Sets the value at the given index ."}
{"id": 5177, "prediction": "Sets the units of this unit ."}
{"id": 5179, "prediction": "Initialize the configuration ."}
{"id": 5181, "prediction": "Extract datasets from a list of datasets ."}
{"id": 5183, "prediction": "Determines whether the given lon is between the given values ."}
{"id": 5185, "prediction": "Converts the given integer to a string ."}
{"id": 5187, "prediction": "Returns the selected dataset node ."}
{"id": 5189, "prediction": "Create a new tree path from the given node ."}
{"id": 5191, "prediction": "Sets the catalog ."}
{"id": 5193, "prediction": "Finds the alias for this variable"}
{"id": 5195, "prediction": "Writes a number of characters to a string ."}
{"id": 5197, "prediction": "Sets the debug flags ."}
{"id": 5199, "prediction": "Hide the given member ."}
{"id": 5201, "prediction": "Find a member by its name ."}
{"id": 5203, "prediction": "Restore the state of the popup ."}
{"id": 5205, "prediction": "Gets the index of the model ."}
{"id": 5207, "prediction": "Returns the scalar value of the given Structure ."}
{"id": 5209, "prediction": "Gets the scalar float ."}
{"id": 5211, "prediction": "Returns the byte representation of the given member ."}
{"id": 5213, "prediction": "Returns the scalar value for the given Structure ."}
{"id": 5215, "prediction": "Gets the scalar short ."}
{"id": 5217, "prediction": "Gets the scalar long ."}
{"id": 5219, "prediction": "Returns the scalar character of the given Structure ."}
{"id": 5221, "prediction": "Write a Dataset to the Dataset"}
{"id": 5223, "prediction": "Create a copy of this dataset ."}
{"id": 5225, "prediction": "Gets the ThredentialMetadata object ."}
{"id": 5227, "prediction": "Show the missing records ."}
{"id": 5229, "prediction": "Returns the grid record for the given time interval ."}
{"id": 5231, "prediction": "Builds a long name ."}
{"id": 5233, "prediction": "Compares two byte arrays ."}
{"id": 5235, "prediction": "Extract attributes from a dataset ."}
{"id": 5237, "prediction": "Set the Gaussian distance between two points ."}
{"id": 5239, "prediction": "Convert a list of variables to a string ."}
{"id": 5241, "prediction": "Closes the session ."}
{"id": 5243, "prediction": "Determines if the given location corresponds to the given location ."}
{"id": 5245, "prediction": "Sets the stream ."}
{"id": 5247, "prediction": "Start the given task ."}
{"id": 5249, "prediction": "Create a URI from the given URI ."}
{"id": 5251, "prediction": "Converts a prefix to a canonical suffix ."}
{"id": 5253, "prediction": "Copies the information from the Grib collection ."}
{"id": 5255, "prediction": "Sets the index of the file ."}
{"id": 5257, "prediction": "Closes the index ."}
{"id": 5259, "prediction": "Adds a global attribute ."}
{"id": 5261, "prediction": "Delete global attribute ."}
{"id": 5263, "prediction": "Add a variable attribute ."}
{"id": 5265, "prediction": "Delete a variable attribute ."}
{"id": 5267, "prediction": "Sets the file type ."}
{"id": 5269, "prediction": "Writes the members of the GML file ."}
{"id": 5271, "prediction": "Writes a string representation of the station collection ."}
{"id": 5273, "prediction": "Sends a request to the DN"}
{"id": 5275, "prediction": "Closes the output stream ."}
{"id": 5277, "prediction": "Creates a copy of this map ."}
{"id": 5279, "prediction": "Get the element at the given index ."}
{"id": 5281, "prediction": "Read data ."}
{"id": 5283, "prediction": "Returns a subset of the subset vector ."}
{"id": 5285, "prediction": "Cleans up the tracker ."}
{"id": 5287, "prediction": "Gets data for a given chunk ."}
{"id": 5289, "prediction": "Get the dataset boundaries ."}
{"id": 5291, "prediction": "Get the Datasource for the given name ."}
{"id": 5293, "prediction": "Adds the vertices to the vertices ."}
{"id": 5295, "prediction": "Finishes the metadata ."}
{"id": 5297, "prediction": "Transfer metadata from a datastore ."}
{"id": 5299, "prediction": "Sets the contributors to the given list of contributors ."}
{"id": 5301, "prediction": "Remove a dataset from this dataset ."}
{"id": 5303, "prediction": "Add a service ."}
{"id": 5305, "prediction": "Sets the service local service ."}
{"id": 5307, "prediction": "Get the user property ."}
{"id": 5309, "prediction": "Returns a list of descriptors ."}
{"id": 5311, "prediction": "Get the list of WFS capabilities"}
{"id": 5313, "prediction": "Checks if the given request parameter is required ."}
{"id": 5315, "prediction": "Retrieves the capabilities of a given URL ."}
{"id": 5317, "prediction": "Retrieve the last modified version of the object ."}
{"id": 5319, "prediction": "Sends a file to a file"}
{"id": 5321, "prediction": "Set the response content ."}
{"id": 5323, "prediction": "Gets the request path ."}
{"id": 5325, "prediction": "Returns the parameter ignoring case insensitive ."}
{"id": 5327, "prediction": "Write a directory to a directory"}
{"id": 5329, "prediction": "Create a new BitCounter from the given table ."}
{"id": 5331, "prediction": "Append a line ."}
{"id": 5333, "prediction": "Gets the capabilities document ."}
{"id": 5335, "prediction": "Gets the coordinate of a coordinate ."}
{"id": 5337, "prediction": "Handle exception ."}
{"id": 5339, "prediction": "Move the current position to the next index ."}
{"id": 5341, "prediction": "Get the feature type from the endpoint"}
{"id": 5343, "prediction": "Creates a factory for the given grid number ."}
{"id": 5345, "prediction": "Reads the contents of a file ."}
{"id": 5347, "prediction": "Writes the contents of a file to the output stream ."}
{"id": 5349, "prediction": "Copy an input stream to the output stream ."}
{"id": 5351, "prediction": "Reads the contents of a file into a byte array ."}
{"id": 5353, "prediction": "Write the contents of a file to a file ."}
{"id": 5355, "prediction": "Writes a file to an output stream ."}
{"id": 5357, "prediction": "Displays the DAP exception handler ."}
{"id": 5359, "prediction": "Get the catalog"}
{"id": 5361, "prediction": "Prints the status of the server ."}
{"id": 5363, "prediction": "Get the reference date ."}
{"id": 5365, "prediction": "Read ncml string ."}
{"id": 5367, "prediction": "Replaces all characters in a string with a given character ."}
{"id": 5369, "prediction": "Filters characters in a string ."}
{"id": 5371, "prediction": "Make a valid CdmObject name ."}
{"id": 5373, "prediction": "Pad the given string with the given length ."}
{"id": 5375, "prediction": "Remove a string from a string ."}
{"id": 4864, "prediction": "Create a RegExpAndExpancer with the given dataset path ."}
{"id": 4866, "prediction": "Read a structure data structure ."}
{"id": 4868, "prediction": "Sets the buffered image ."}
{"id": 4870, "prediction": "Paint the component ."}
{"id": 4872, "prediction": "Converts the given offset to a TG string ."}
{"id": 4874, "prediction": "Determine the number of days for the given month ."}
{"id": 4876, "prediction": "Wrap an array of integers ."}
{"id": 4878, "prediction": "Gets the data type of the specified type ."}
{"id": 4880, "prediction": "Write the output stream to the output stream ."}
{"id": 4882, "prediction": "Get next image from current grid"}
{"id": 4884, "prediction": "Returns the sum of the elements in the array ."}
{"id": 4886, "prediction": "Sets the overlap ."}
{"id": 4888, "prediction": "Marks the specified object as clear if it is empty ."}
{"id": 4890, "prediction": "Finds the intersection of a point ."}
{"id": 4892, "prediction": "Calculates the Euclidean distance from the specified point ."}
{"id": 4894, "prediction": "Search for the given fragment ."}
{"id": 4896, "prediction": "Decodes a path extension ."}
{"id": 4898, "prediction": "Checks if the given location is a DAP response ."}
{"id": 4900, "prediction": "Returns the suffix of the given fq ."}
{"id": 4902, "prediction": "Locate a file in a directory"}
{"id": 4904, "prediction": "Extract byte array from buffer ."}
{"id": 4906, "prediction": "Return null if not null ."}
{"id": 4908, "prediction": "Checks to see if the path of the given path exists"}
{"id": 4910, "prediction": "Converts the specified index into a list of slices ."}
{"id": 4912, "prediction": "Checks if slices are contiguous ."}
{"id": 4914, "prediction": "Convert a list of slices to an index ."}
{"id": 4916, "prediction": "Set the station information ."}
{"id": 4918, "prediction": "Reads the configuration from a catalog ."}
{"id": 4920, "prediction": "Update the list of groups ."}
{"id": 4922, "prediction": "Returns the Axis type for the given variable ."}
{"id": 4924, "prediction": "Calculate the subset of laton ."}
{"id": 4926, "prediction": "Sets the default values ."}
{"id": 4928, "prediction": "Sets the maximum number of redirects ."}
{"id": 4930, "prediction": "Closes this instance ."}
{"id": 4932, "prediction": "Track a session ."}
{"id": 4934, "prediction": "Validate the catalog ."}
{"id": 4936, "prediction": "Computes the distance between two vertices ."}
{"id": 4938, "prediction": "Returns the index of this shape ."}
{"id": 4940, "prediction": "Transposes two indices ."}
{"id": 4942, "prediction": "Gets the index iterator ."}
{"id": 4944, "prediction": "Sets the index of this array ."}
{"id": 4946, "prediction": "Sets the index of the elements in this vector ."}
{"id": 4948, "prediction": "Create a CalendarDateRange from the given calendar ."}
{"id": 4950, "prediction": "Make a list of parameters from DMPP ."}
{"id": 4952, "prediction": "Creates a new instance of this ring ."}
{"id": 4954, "prediction": "Get the list of dates ."}
{"id": 4956, "prediction": "Gets the file type ."}
{"id": 4958, "prediction": "Set the indentation ."}
{"id": 4960, "prediction": "Add directory to directory ."}
{"id": 4962, "prediction": "Checks if the dataset has been scanned ."}
{"id": 4964, "prediction": "Add a variable to this model ."}
{"id": 4966, "prediction": "Validate XML ."}
{"id": 4968, "prediction": "Sets the original variable ."}
{"id": 4970, "prediction": "Reads the contents of a section ."}
{"id": 4972, "prediction": "Convert an Array to a Array"}
{"id": 4974, "prediction": "Gets the variable from the org . org . org . org . org . org . org . org . org . org . org . org . org . org . org . org . org . org . org ."}
{"id": 4976, "prediction": "Enhanced mode ."}
{"id": 4978, "prediction": "Make an empty sequence"}
{"id": 4980, "prediction": "Create a Sequence from the given parameters ."}
{"id": 4982, "prediction": "Read XML ."}
{"id": 4984, "prediction": "Reads an XML catalog from the given string ."}
{"id": 4986, "prediction": "Get the metadata converter ."}
{"id": 4988, "prediction": "Multiply this unit by another unit ."}
{"id": 4990, "prediction": "Converts the input array to an output array ."}
{"id": 4992, "prediction": "Write a feature ."}
{"id": 4994, "prediction": "Write line ."}
{"id": 4996, "prediction": "Pulls a named node ."}
{"id": 4998, "prediction": "Parse the response ."}
{"id": 5000, "prediction": "Returns the subset of the given variable ID ."}
{"id": 5002, "prediction": "Sets the member array ."}
{"id": 5004, "prediction": "Gets the geometry type ."}
{"id": 5006, "prediction": "Compile the AST node ."}
{"id": 5008, "prediction": "Reduce a node definition ."}
{"id": 5010, "prediction": "Returns true if the given rectangle is contained within the rectangle ."}
{"id": 5012, "prediction": "Extend the given LatLong"}
{"id": 5014, "prediction": "Add two arrays ."}
{"id": 5016, "prediction": "Checks if two dimensions are conformable ."}
{"id": 5018, "prediction": "Copies the given Array to the given Array ."}
{"id": 5020, "prediction": "Copies the elements from the given Array ."}
{"id": 5022, "prediction": "Sets a double ."}
{"id": 5024, "prediction": "Creates a new ProjectionAdapter ."}
{"id": 5026, "prediction": "Decode a string ."}
{"id": 5028, "prediction": "Removes a string from the given string ."}
{"id": 5030, "prediction": "Tokenize a string ."}
{"id": 5032, "prediction": "Converts a DAP string into a string ."}
{"id": 5034, "prediction": "Gets the cursor path ."}
{"id": 5036, "prediction": "Get the JComponent for the given component ."}
{"id": 5038, "prediction": "Compile a structure array ."}
{"id": 5040, "prediction": "Compiles a sequence array into a sequence ."}
{"id": 5042, "prediction": "Read a long from the stream ."}
{"id": 5044, "prediction": "Returns the value of the named field ."}
{"id": 5046, "prediction": "Add a field ."}
{"id": 5048, "prediction": "Add a date field ."}
{"id": 5050, "prediction": "Add an integer field ."}
{"id": 5052, "prediction": "Add a text field ."}
{"id": 5054, "prediction": "Adds a TextArea to this field ."}
{"id": 5056, "prediction": "Adds a component to the layout ."}
{"id": 5058, "prediction": "Find the active frame ."}
{"id": 5060, "prediction": "Returns an array containing all the factors in this matrix ."}
{"id": 5062, "prediction": "Computes the power of the given power ."}
{"id": 5064, "prediction": "Determines if the dimensionless is dimensionless ."}
{"id": 5066, "prediction": "Factory method for creating Grib1 param ."}
{"id": 5068, "prediction": "Adds a parameter to the table ."}
{"id": 5070, "prediction": "Converts an array to a derived unit ."}
{"id": 5072, "prediction": "Creates a variable from the vertices ."}
{"id": 5074, "prediction": "get short from byte array"}
{"id": 5076, "prediction": "Gets a float from the stream ."}
{"id": 5078, "prediction": "Throws an exception with the given alias ."}
{"id": 5080, "prediction": "Creates a converter from a unit ."}
{"id": 5082, "prediction": "Set the list feature data ."}
{"id": 5084, "prediction": "Get the shapes for the GIS feature"}
{"id": 5086, "prediction": "Read buffer ."}
{"id": 5088, "prediction": "Read bytes from a byte array ."}
{"id": 5090, "prediction": "Adds the dimensions to the network ."}
{"id": 5092, "prediction": "Check if a file is valid ."}
{"id": 5094, "prediction": "Read data from a section ."}
{"id": 5096, "prediction": "Creates a set of grid variables from a grid ."}
{"id": 5098, "prediction": "Fire the map area event ."}
{"id": 5100, "prediction": "Set the map area ."}
{"id": 5102, "prediction": "Set the projection"}
{"id": 5104, "prediction": "Start the timer ."}
{"id": 5106, "prediction": "Sets the selected variables ."}
{"id": 5108, "prediction": "Gets the double value ."}
{"id": 5110, "prediction": "Gets the system ID ."}
{"id": 5112, "prediction": "Find a parameter ignoring case insensitive ."}
{"id": 5114, "prediction": "Swaps the byte order ."}
{"id": 5116, "prediction": "Retrieves the file name for the specified offset ."}
{"id": 5118, "prediction": "Returns the path to the ddf file ."}
{"id": 5377, "prediction": "Remove a string from the end of the string"}
{"id": 5379, "prediction": "Replaces all occurrences of a string in the given string ."}
{"id": 5381, "prediction": "Replaces the given string with the given pattern ."}
{"id": 5383, "prediction": "Substitute a substring ."}
{"id": 5385, "prediction": "Removes the given character from the given string ."}
{"id": 5387, "prediction": "Replaces the substring with the given string ."}
{"id": 5389, "prediction": "Process event update ."}
{"id": 5391, "prediction": "Updates a collection ."}
{"id": 5393, "prediction": "Gets the datasource ."}
{"id": 5395, "prediction": "Creates a deep copy of the given data structure ."}
{"id": 5397, "prediction": "Creates a copy of the given structure ."}
{"id": 5399, "prediction": "Creates a copy of the given structure ."}
{"id": 5401, "prediction": "Creates a new section of a range ."}
{"id": 5403, "prediction": "Gets the first feature type ."}
{"id": 5405, "prediction": "Synchronize the ncfile ."}
{"id": 5407, "prediction": "Swap a long value at the given offset ."}
{"id": 5409, "prediction": "Swap two bytes ."}
{"id": 5411, "prediction": "Add a parameter to the map"}
{"id": 5413, "prediction": "Checks if this group is parent of this group ."}
{"id": 5415, "prediction": "Adds a dimension to this group ."}
{"id": 5417, "prediction": "Adds a new group to this group ."}
{"id": 5419, "prediction": "Adds a variable to this group ."}
{"id": 5421, "prediction": "Create a group from the given path ."}
{"id": 5423, "prediction": "Print the DAS object to the output stream ."}
{"id": 5425, "prediction": "Write grid data to a grid ."}
{"id": 5427, "prediction": "Replace the missing values with the missing values ."}
{"id": 5429, "prediction": "Write the grid data to a grid ."}
{"id": 5431, "prediction": "Returns the name of the cqlib ."}
{"id": 5433, "prediction": "Gets the type of Grib2 ."}
{"id": 5435, "prediction": "Update leaf collection ."}
{"id": 5437, "prediction": "Creates a GribCollection from a data file"}
{"id": 5439, "prediction": "Checks if the URL matches the pattern ."}
{"id": 5441, "prediction": "Finds a string from a URL ."}
{"id": 5443, "prediction": "Loads a file ."}
{"id": 5445, "prediction": "Gets the list of datasets ."}
{"id": 5447, "prediction": "Sets the projection ."}
{"id": 5449, "prediction": "Creates the shape shapes for the given iterator ."}
{"id": 5451, "prediction": "Start a new progress monitor ."}
{"id": 5453, "prediction": "Normalize a list of variables ."}
{"id": 5455, "prediction": "Returns the StructureData object for the given index ."}
{"id": 5457, "prediction": "Get the scalar representation of the given structure ."}
{"id": 5459, "prediction": "Convert a scalar value to a scalar integer ."}
{"id": 5461, "prediction": "Get the scalar value from the given structure ."}
{"id": 5463, "prediction": "Returns the character at the given position ."}
{"id": 5465, "prediction": "Get the Structure for the Sequence"}
{"id": 5467, "prediction": "Get an ArrayObject from a Sequence"}
{"id": 5469, "prediction": "Evaluate the field in the given sequence ."}
{"id": 5471, "prediction": "Returns true if this node is a reference ."}
{"id": 5473, "prediction": "Returns the number of expansion counts in the given structure ."}
{"id": 5475, "prediction": "Compute the groups ."}
{"id": 5477, "prediction": "Check to see if a file is valid ."}
{"id": 5479, "prediction": "Get byte order ."}
{"id": 5481, "prediction": "Find the key with the given name ."}
{"id": 5483, "prediction": "Gets the header for the given name ."}
{"id": 5485, "prediction": "Returns the data pointer at the specified index ."}
{"id": 5487, "prediction": "Read a string from a file ."}
{"id": 5489, "prediction": "Converts a number of bits to a string ."}
{"id": 5491, "prediction": "Parse the base attribute ."}
{"id": 5493, "prediction": "Parse aliases ."}
{"id": 5495, "prediction": "Retrieves a list of data structures ."}
{"id": 5497, "prediction": "Gets the signature type ."}
{"id": 5499, "prediction": "Returns true if the given DapNode represents a reference ."}
{"id": 5501, "prediction": "Prints the object of the given object ."}
{"id": 5503, "prediction": "Returns the best version of the given time ."}
{"id": 5505, "prediction": "Show time series ."}
{"id": 5507, "prediction": "Gets the values of this Array ."}
{"id": 5509, "prediction": "Write CDL file ."}
{"id": 5511, "prediction": "Set the values from a list of values ."}
{"id": 5513, "prediction": "Creates a scan ."}
{"id": 5515, "prediction": "Schedules a write message ."}
{"id": 5517, "prediction": "Implements the jdbc datatype type"}
{"id": 5519, "prediction": "Sets the dataset ."}
{"id": 5521, "prediction": "Creates the tool ."}
{"id": 5523, "prediction": "Returns the less than or equal to the given coordinate ."}
{"id": 5525, "prediction": "Gets the ProjectCTION ."}
{"id": 5527, "prediction": "Checks if the axis is regular ."}
{"id": 5529, "prediction": "Checks if the list contains the given axes ."}
{"id": 5531, "prediction": "Checks if a domain exists in the list"}
{"id": 5533, "prediction": "Checks if the given axis type is a coordinate type ."}
{"id": 5535, "prediction": "Returns the currently selected bean ."}
{"id": 5537, "prediction": "Get the list of selected cells ."}
{"id": 5539, "prediction": "Restore the state of the view ."}
{"id": 5541, "prediction": "Closes the connection ."}
{"id": 5543, "prediction": "Checks if the given variable is coordinate ."}
{"id": 5545, "prediction": "Add data variables to the table ."}
{"id": 5547, "prediction": "Create a new station feature ."}
{"id": 5549, "prediction": "Returns a factory for a given name ."}
{"id": 5551, "prediction": "Make a unit test ."}
{"id": 5553, "prediction": "Checks if the given date is a valid date unit ."}
{"id": 5555, "prediction": "Returns the conversion factor of the given input unit"}
{"id": 5557, "prediction": "Checks if the given unit is unknown ."}
{"id": 5559, "prediction": "Creates a new Relation clause ."}
{"id": 5561, "prediction": "Creates a new BTF clause ."}
{"id": 5563, "prediction": "Recursively crawl data to the catalog ."}
{"id": 5565, "prediction": "Cleans up the direct datastream from the catalog ."}
{"id": 5567, "prediction": "Gets the file or cache if it exists ."}
{"id": 5569, "prediction": "Gets a list of files ."}
{"id": 5571, "prediction": "Seek at the specified position ."}
{"id": 5573, "prediction": "Read the next byte ."}
{"id": 5575, "prediction": "Read an int from the stream ."}
{"id": 5577, "prediction": "Read a long ."}
{"id": 5579, "prediction": "Read a double ."}
{"id": 5581, "prediction": "Reads a string from the input stream ."}
{"id": 5583, "prediction": "Write short array ."}
{"id": 5585, "prediction": "Writes an array of integers to an array of integers ."}
{"id": 5587, "prediction": "Write float array ."}
{"id": 5589, "prediction": "Write a string ."}
{"id": 5591, "prediction": "Performs a forward scan ."}
{"id": 5593, "prediction": "Factory method to create a MCollection ."}
{"id": 5595, "prediction": "Checks if the given index is a leaf ."}
{"id": 5597, "prediction": "Scans all children for a directory ."}
{"id": 5599, "prediction": "Gets the gridets ."}
{"id": 5601, "prediction": "Remove the cache file"}
{"id": 5603, "prediction": "Release the cacheable ."}
{"id": 5605, "prediction": "Update the cache ."}
{"id": 5607, "prediction": "Make the vertical transform for a grid"}
{"id": 5609, "prediction": "Returns true if the vertices are positive ."}
{"id": 5611, "prediction": "Finds the Y index of the given coordinate ."}
{"id": 5613, "prediction": "Returns the x - index of the x - coordinate of the given latitude in the latitude range ."}
{"id": 5615, "prediction": "Get the item in pixels"}
{"id": 5617, "prediction": "Get remote files"}
{"id": 5619, "prediction": "Create a CalendarPeriod from a String ."}
{"id": 5621, "prediction": "Creates a calendar with the given udunit ."}
{"id": 5623, "prediction": "Returns the factor for the given month ."}
{"id": 5625, "prediction": "Gets the offset between two dates ."}
{"id": 5627, "prediction": "Initialize the tables ."}
{"id": 5629, "prediction": "Find the longest path matching the given request ."}
{"id": 5631, "prediction": "Convert a data root to a data root ."}
{"id": 5120, "prediction": "Adds a sub - sub - sub - sub - sub - classes ."}
{"id": 5122, "prediction": "Reads a WMOID from the input stream ."}
{"id": 5124, "prediction": "Generate code for a given code point ."}
{"id": 5126, "prediction": "Read nids header ."}
{"id": 5128, "prediction": "Parses a text string representation of this class ."}
{"id": 5130, "prediction": "Returns an array of n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n -"}
{"id": 5132, "prediction": "Add a new variable ."}
{"id": 5134, "prediction": "Uncompress a byte array ."}
{"id": 5136, "prediction": "Gets an integer from the given byte array ."}
{"id": 5138, "prediction": "Parses the DMR ."}
{"id": 5140, "prediction": "Sends a message to the server ."}
{"id": 5142, "prediction": "Draws a point ."}
{"id": 5144, "prediction": "Returns the bounds of this rectangle ."}
{"id": 5146, "prediction": "Replace the data structures in the structure"}
{"id": 5148, "prediction": "Read a 32 - bit integer ."}
{"id": 5150, "prediction": "Read a 32 - bit integer ."}
{"id": 5152, "prediction": "Read a 32 - bit integer ."}
{"id": 5154, "prediction": "Calculates the 4 - bit float value of a 4 - digit ."}
{"id": 5156, "prediction": "Counts the number of bits in a byte array ."}
{"id": 5158, "prediction": "Returns the WKS string representation of the WKS ."}
{"id": 5160, "prediction": "Splits a string into an empty string ."}
{"id": 5162, "prediction": "Create a FMRInvInvocationInv from a file ."}
{"id": 5164, "prediction": "Returns the number of projected components ."}
{"id": 5166, "prediction": "Factory method for creating a new ArrayStructure instance ."}
{"id": 5168, "prediction": "Read record ."}
{"id": 5170, "prediction": "Creates a UTM projection for the given data ."}
{"id": 5172, "prediction": "Returns true if the given date is before the given date ."}
{"id": 5174, "prediction": "Returns true if the given date is after the given date ."}
{"id": 5176, "prediction": "Add a coordinate system ."}
{"id": 5178, "prediction": "Returns the string representation of this unit ."}
{"id": 5180, "prediction": "Read a catalog ."}
{"id": 5182, "prediction": "Reads all the files in the given directory ."}
{"id": 5184, "prediction": "Convert a latitude to a string ."}
{"id": 5186, "prediction": "Compares two BaseQuantity objects ."}
{"id": 5188, "prediction": "Set the selected dataset ."}
{"id": 5190, "prediction": "Open the catalog ."}
{"id": 5192, "prediction": "Sets the catalog ."}
{"id": 5194, "prediction": "Writes an int to the buffer ."}
{"id": 5196, "prediction": "Reads chars from the given buffer ."}
{"id": 5198, "prediction": "Adds a new member ."}
{"id": 5200, "prediction": "Gets the list of members ."}
{"id": 5202, "prediction": "Read a Grib1 bitmap ."}
{"id": 5204, "prediction": "Gets the rows in the table ."}
{"id": 5206, "prediction": "Retrieves the elements of a Structure object ."}
{"id": 5208, "prediction": "Get the Java array of double arrays ."}
{"id": 5210, "prediction": "Gets the float array ."}
{"id": 5212, "prediction": "Get the byte array as a byte array ."}
{"id": 5214, "prediction": "Gets the Java array as an array ."}
{"id": 5216, "prediction": "Gets the JavaArray short array ."}
{"id": 5218, "prediction": "Returns the JavaArray representation of the given Structure ."}
{"id": 5220, "prediction": "Gets the Java array as a char array ."}
{"id": 5222, "prediction": "Checks if a dataset is usable ."}
{"id": 5224, "prediction": "Transfer metadata from datastream ."}
{"id": 5226, "prediction": "Add a product to this record ."}
{"id": 5228, "prediction": "Returns the number of missing summary results ."}
{"id": 5230, "prediction": "Dump the contents of this record ."}
{"id": 5232, "prediction": "Returns a subset of coverage by the given interval ."}
{"id": 5234, "prediction": "Parses a DMR document ."}
{"id": 5236, "prediction": "Adds a collection of coordinates to the collection ."}
{"id": 5238, "prediction": "Parse a variable selector ."}
{"id": 5240, "prediction": "returns true if the box contains the coordinates"}
{"id": 5242, "prediction": "Execute the HTTP GET request"}
{"id": 5244, "prediction": "Checks if the given axis is a coordinate type ."}
{"id": 5246, "prediction": "Read the next character ."}
{"id": 5248, "prediction": "Parse a string into a URI ."}
{"id": 5250, "prediction": "Returns null if the string is null ."}
{"id": 5252, "prediction": "Checks whether the given dataset is accepted ."}
{"id": 5254, "prediction": "Returns a list of filenames"}
{"id": 5256, "prediction": "Gets index file path ."}
{"id": 5258, "prediction": "Gets the number of counters ."}
{"id": 5260, "prediction": "Adds a global attribute ."}
{"id": 5262, "prediction": "Renames a global attribute ."}
{"id": 5264, "prediction": "Add a variable attribute ."}
{"id": 5266, "prediction": "Renames an attribute ."}
{"id": 5268, "prediction": "Writes the headers to the request ."}
{"id": 5270, "prediction": "Writes the XML dataset to a string ."}
{"id": 5272, "prediction": "Writes the DER encoded string to the output stream ."}
{"id": 5274, "prediction": "Write an error message ."}
{"id": 5276, "prediction": "Flush the stream ."}
{"id": 5278, "prediction": "Checks if the given list contains the given value ."}
{"id": 5280, "prediction": "Changes the range of this range ."}
{"id": 5282, "prediction": "Read data ."}
{"id": 5284, "prediction": "Gets the catalog of all catalogs ."}
{"id": 5286, "prediction": "Sets the values of a float ."}
{"id": 5288, "prediction": "Make a double array ."}
{"id": 5290, "prediction": "Checks that all variables are contained in the dataset ."}
{"id": 5292, "prediction": "Returns the resource path for the given location ."}
{"id": 5294, "prediction": "Reads a PIB file ."}
{"id": 5296, "prediction": "Transfers the inherited metadata from another Metadata ."}
{"id": 5298, "prediction": "Transfer metadata to targetMetadata ."}
{"id": 5300, "prediction": "Adds a dataset to the dataset ."}
{"id": 5302, "prediction": "Replace the given dataset with the given ID ."}
{"id": 5304, "prediction": "Remove a service ."}
{"id": 5306, "prediction": "Remove local metadata ."}
{"id": 5308, "prediction": "Validates that the string is valid ."}
{"id": 5310, "prediction": "Construct the server path ."}
{"id": 5312, "prediction": "Gets the feature ."}
{"id": 5314, "prediction": "Handles the http request ."}
{"id": 5316, "prediction": "Returns the length of the S3 object ."}
{"id": 5318, "prediction": "Iterate over the top - level variables ."}
{"id": 5320, "prediction": "Converts a String to a String"}
{"id": 5322, "prediction": "Gets the request URI ."}
{"id": 5324, "prediction": "Gets the request ."}
{"id": 5326, "prediction": "Saves this partition ."}
{"id": 5328, "prediction": "Set bit offset ."}
{"id": 5330, "prediction": "Count the number of bits ."}
{"id": 5332, "prediction": "Make a DocumentSetDocumentDocument ."}
{"id": 5334, "prediction": "Get the record at the given coordinates ."}
{"id": 5336, "prediction": "Adds an item to the list ."}
{"id": 5338, "prediction": "Get the slice at the specified index ."}
{"id": 5340, "prediction": "Retrieves a map of NCEProcesses for NCE"}
{"id": 5342, "prediction": "Sets the value of the given type ."}
{"id": 5344, "prediction": "Copy the input stream to the output stream ."}
{"id": 5346, "prediction": "Reads the contents of an InputStream into a byte array ."}
{"id": 5348, "prediction": "Copy a file to the output stream ."}
{"id": 5350, "prediction": "Copy a directory to a directory"}
{"id": 5352, "prediction": "Read a file ."}
{"id": 5354, "prediction": "Writes the contents of a file to a file ."}
{"id": 5356, "prediction": "Parse an exception handler ."}
{"id": 5358, "prediction": "Sends a bad URL to the client ."}
{"id": 5360, "prediction": "Prints the catalog ."}
{"id": 5362, "prediction": "Prints a bad URL page ."}
{"id": 5364, "prediction": "Read vlen data from a variable ."}
{"id": 5366, "prediction": "Opens an ncmlCollection reader ."}
{"id": 5368, "prediction": "Clean up byte array ."}
{"id": 5370, "prediction": "Filters a string with the specified prefix ."}
{"id": 5372, "prediction": "Compare two strings ."}
{"id": 5374, "prediction": "Pad the given string with the given length ."}
{"id": 5633, "prediction": "Reindex all the elements in the list ."}
{"id": 5635, "prediction": "Add a new group ."}
{"id": 5637, "prediction": "Delete a group attribute ."}
{"id": 5639, "prediction": "Add a record structure to this record ."}
{"id": 5641, "prediction": "Write properties ."}
{"id": 5643, "prediction": "Divide this unit to another unit ."}
{"id": 5645, "prediction": "Extracts the value from the given unit ."}
{"id": 5647, "prediction": "Convert an array to a top - level variable ."}
{"id": 5649, "prediction": "Closes all databases ."}
{"id": 5651, "prediction": "Convert a time value to a Joda Period ."}
{"id": 5653, "prediction": "Returns the string at the specified index ."}
{"id": 5655, "prediction": "Create a proxy catalog from the given path ."}
{"id": 5657, "prediction": "Creates a factory for the given byte array ."}
{"id": 5659, "prediction": "Applies a scale factor to the given value ."}
{"id": 5661, "prediction": "Adds a local concept to the input stream ."}
{"id": 5663, "prediction": "Store a single concept ."}
{"id": 5665, "prediction": "Writes the table to the directory ."}
{"id": 5667, "prediction": "Main method for testing ."}
{"id": 5669, "prediction": "Expand the catalog ."}
{"id": 5671, "prediction": "Name of the dataset"}
{"id": 5673, "prediction": "Sets the name of the dataset ."}
{"id": 5675, "prediction": "Stop the background loading of the specified picture ."}
{"id": 5677, "prediction": "Triggers the progress loading of a file ."}
{"id": 5679, "prediction": "Get the size of the image"}
{"id": 5681, "prediction": "Gets the merged parts ."}
{"id": 5683, "prediction": "Determines the types of the SNK ."}
{"id": 5685, "prediction": "Sets the root directory ."}
{"id": 5687, "prediction": "Gets the cache file ."}
{"id": 5689, "prediction": "Clean up the disk cache ."}
{"id": 5691, "prediction": "Creates a new coordinate axis ."}
{"id": 5693, "prediction": "Checks if the data type is numeric ."}
{"id": 5695, "prediction": "Gets the Calendar from the given attribute ."}
{"id": 5697, "prediction": "Returns the currently selected row ."}
{"id": 5699, "prediction": "Returns the index of the model ."}
{"id": 5701, "prediction": "Sort the elements in the array ."}
{"id": 5703, "prediction": "Gets the existing file ."}
{"id": 5705, "prediction": "Creates a new XMLStore from a file ."}
{"id": 5707, "prediction": "Creates a new XMLStore from a resource ."}
{"id": 5709, "prediction": "Save the BakStore to the file ."}
{"id": 5711, "prediction": "Writes an atomic variable ."}
{"id": 5713, "prediction": "Writes the structure of the data structure"}
{"id": 5715, "prediction": "Writes a record to the given record ."}
{"id": 5717, "prediction": "Get the WmoId of this Wmo ."}
{"id": 5719, "prediction": "Returns the data at the given index ."}
{"id": 5721, "prediction": "Gets the data for the grid ."}
{"id": 5723, "prediction": "Make a grid file ."}
{"id": 5725, "prediction": "Make a grid file ."}
{"id": 5727, "prediction": "Sets the currently selected name ."}
{"id": 5729, "prediction": "Selects the closest to the given point ."}
{"id": 5731, "prediction": "Returns the name for the given type ."}
{"id": 5733, "prediction": "Retrieves a named station with the given name ."}
{"id": 5735, "prediction": "Creates a DataSet iterator for the given dates ."}
{"id": 5737, "prediction": "Returns the dot product of this vector ."}
{"id": 5739, "prediction": "Normalizes the values of the norm ."}
{"id": 5741, "prediction": "Returns the parameter with the given id ."}
{"id": 5743, "prediction": "Adds a prefix to the list ."}
{"id": 5745, "prediction": "Gets prefix ."}
{"id": 5747, "prediction": "Returns the parameter with the given name ."}
{"id": 5749, "prediction": "Checks if the input is thin"}
{"id": 5751, "prediction": "Returns the time type for the given time range ."}
{"id": 5753, "prediction": "Sets the next polygon ."}
{"id": 5755, "prediction": "Finds a property by name ."}
{"id": 5757, "prediction": "Returns the subset of the given time with the given parameters ."}
{"id": 5759, "prediction": "Registers an IOProvider for the user ."}
{"id": 5761, "prediction": "Returns true if the specified class is registered ."}
{"id": 5763, "prediction": "Checks if the given location is open ."}
{"id": 5765, "prediction": "Creates a new NetcdfFileFile with the given name ."}
{"id": 5767, "prediction": "Open a NetcdfcFile"}
{"id": 5769, "prediction": "Convert a URL to a string ."}
{"id": 5771, "prediction": "Write CDLL ."}
{"id": 5773, "prediction": "Adds an attribute to this group ."}
{"id": 5775, "prediction": "Add a new group ."}
{"id": 5777, "prediction": "Removes the dimension from the group ."}
{"id": 5779, "prediction": "Adds a new variable to this group ."}
{"id": 5781, "prediction": "Remove a variable from the group ."}
{"id": 5783, "prediction": "Sends the record to the output ."}
{"id": 5785, "prediction": "Reads a variable section ."}
{"id": 5787, "prediction": "Read a list of variables ."}
{"id": 5789, "prediction": "Make the full name of a node in the tree ."}
{"id": 5791, "prediction": "Returns true if the given file should be included ."}
{"id": 5793, "prediction": "Checks if the given file is accepted ."}
{"id": 5795, "prediction": "Dispatch a check value ."}
{"id": 5797, "prediction": "Checks if the given string is a valid byte ."}
{"id": 5799, "prediction": "Checks if a string is an integer ."}
{"id": 5801, "prediction": "Checks if a string is a float ."}
{"id": 5803, "prediction": "Get the data type for the given attribute ."}
{"id": 5805, "prediction": "Checks if the given string is valid ."}
{"id": 5807, "prediction": "Checks if a set of alphanumeric characters are valid ."}
{"id": 5809, "prediction": "Convert a code point to a hexadecimal string ."}
{"id": 5811, "prediction": "Compare two grids ."}
{"id": 5813, "prediction": "Read a BUFR message ."}
{"id": 5815, "prediction": "Mark the stack of variables in the stack ."}
{"id": 5817, "prediction": "Gets the value of the ThreddsConfig from the given key ."}
{"id": 5819, "prediction": "Creates a new StationHelper instance"}
{"id": 5821, "prediction": "Gets the azimuth message ."}
{"id": 5823, "prediction": "Gets the latitudes of this matrix ."}
{"id": 5825, "prediction": "Returns an array of all the positions in this stream ."}
{"id": 5827, "prediction": "Gets the elevations ."}
{"id": 5829, "prediction": "Returns a new Structure with the given name ."}
{"id": 5831, "prediction": "Sets the variable variables ."}
{"id": 5833, "prediction": "Calculates the size of all elements in this set ."}
{"id": 5835, "prediction": "Read a structure from a vector"}
{"id": 5837, "prediction": "Gets the data category ."}
{"id": 5839, "prediction": "Add a parameter ."}
{"id": 5841, "prediction": "Converts the given latitude to b - coordinate coordinates ."}
{"id": 5843, "prediction": "Returns the z - coordinate for the given vertices ."}
{"id": 5845, "prediction": "Set the color scale parameters ."}
{"id": 5847, "prediction": "Returns true if this group is a child of this group ."}
{"id": 5849, "prediction": "Install all columns in the given table ."}
{"id": 5851, "prediction": "Creates a new Label instance ."}
{"id": 5853, "prediction": "Create a HTML Label with the given value ."}
{"id": 5855, "prediction": "Gets the list of IPs from a CloudSqlSql instance ."}
{"id": 5857, "prediction": "Removes all entries from the logger ."}
{"id": 5859, "prediction": "Compiles the given source code ."}
{"id": 5861, "prediction": "Reads the graphic extension ."}
{"id": 5863, "prediction": "Gets the selectable properties ."}
{"id": 5865, "prediction": "Returns the person with the given ID ."}
{"id": 5867, "prediction": "Sets the person id ."}
{"id": 5869, "prediction": "Create a view model for the given view type ."}
{"id": 5871, "prediction": "Loads all the subdivisions ."}
{"id": 5873, "prediction": "Adds an immutable field to the setter ."}
{"id": 5875, "prediction": "Creates a new FX xml step ."}
{"id": 5877, "prediction": "Create the index events ."}
{"id": 5879, "prediction": "Load a ViewViewTuple from a View ."}
{"id": 5881, "prediction": "Query for a style row"}
{"id": 5883, "prediction": "Reads the pixels of an image ."}
{"id": 5885, "prediction": "Creates an image image ."}
{"id": 5887, "prediction": "Returns a raw SQL query ."}
{"id": 5376, "prediction": "Removes a character from the string ."}
{"id": 5378, "prediction": "Collapses all whitespace characters in a string ."}
{"id": 5380, "prediction": "Replaces all characters in a string with a replacement string ."}
{"id": 5382, "prediction": "Replaces the substring with the given string ."}
{"id": 5384, "prediction": "Removes a string from a string builder ."}
{"id": 5386, "prediction": "Replaces all occurrences of a string in the given string ."}
{"id": 5388, "prediction": "Removes all characters from the given string ."}
{"id": 5390, "prediction": "Checks the state of the current state ."}
{"id": 5392, "prediction": "Creates unique templates ."}
{"id": 5394, "prediction": "Releases all registered datasets ."}
{"id": 5396, "prediction": "Creates a copy of the given array ."}
{"id": 5398, "prediction": "Creates a copy of the given structure ."}
{"id": 5400, "prediction": "Returns the size of the expected time interval in milliseconds ."}
{"id": 5402, "prediction": "Creates a table analyzer ."}
{"id": 5404, "prediction": "Analyze the configuration file"}
{"id": 5406, "prediction": "Calculates the latitude of the given type ."}
{"id": 5408, "prediction": "Swap a float to a byte array ."}
{"id": 5410, "prediction": "Sets the coordinates of the coordinate axis ."}
{"id": 5412, "prediction": "Get the common parent of this group ."}
{"id": 5414, "prediction": "Sets the parent group ."}
{"id": 5416, "prediction": "Add a dimension to this group ."}
{"id": 5418, "prediction": "Adds an enumeration to this set ."}
{"id": 5420, "prediction": "Remove dimension ."}
{"id": 5422, "prediction": "This method converts DDS aliases to DDS ."}
{"id": 5424, "prediction": "Gets the variable with the given name ."}
{"id": 5426, "prediction": "Replace the missing values in the grid ."}
{"id": 5428, "prediction": "Gets the geo shift ."}
{"id": 5430, "prediction": "Write the HttpServletResponse ."}
{"id": 5432, "prediction": "Create the top index file from the feature collection ."}
{"id": 5434, "prediction": "Update GribCollection"}
{"id": 5436, "prediction": "Open GribCollection"}
{"id": 5438, "prediction": "Opens a Grib collection from a data file ."}
{"id": 5440, "prediction": "Adds a key to the cache ."}
{"id": 5442, "prediction": "Sets whether the triples are known ."}
{"id": 5444, "prediction": "Inserts a triple into the list ."}
{"id": 5446, "prediction": "Find a Dataset by name ."}
{"id": 5448, "prediction": "Get the shapes in the world model"}
{"id": 5450, "prediction": "Compares a string with the specified ID ."}
{"id": 5452, "prediction": "Checks if a collection of files have been deleted ."}
{"id": 5454, "prediction": "Sets the object at the given index ."}
{"id": 5456, "prediction": "Copy all structures from the given recursively ."}
{"id": 5458, "prediction": "Convert a scalar value to a scalar double ."}
{"id": 5460, "prediction": "Get the scalar float value from the given structure ."}
{"id": 5462, "prediction": "Get the scalar short from the given structure ."}
{"id": 5464, "prediction": "Gets the scalar string representation of the given structure ."}
{"id": 5466, "prediction": "Get the SequenceSequence ."}
{"id": 5468, "prediction": "Returns the minimum value of the specified long value ."}
{"id": 5470, "prediction": "Returns a string representation of this variable ."}
{"id": 5472, "prediction": "Returns true if the given variable matches the given pattern ."}
{"id": 5474, "prediction": "Compute the set of enum types ."}
{"id": 5476, "prediction": "Compile a CPE constraint ."}
{"id": 5478, "prediction": "Make the action system ."}
{"id": 5480, "prediction": "Set the byte order ."}
{"id": 5482, "prediction": "Find the file header with the given name ."}
{"id": 5484, "prediction": "Prints all the parts of this class ."}
{"id": 5486, "prediction": "Calculates the rflater for a given word"}
{"id": 5488, "prediction": "Moves the DMK record from the given part ."}
{"id": 5490, "prediction": "Write ndc file to channel"}
{"id": 5492, "prediction": "Parse a grid element ."}
{"id": 5494, "prediction": "Decode a list of keys"}
{"id": 5496, "prediction": "Get dataset name ."}
{"id": 5498, "prediction": "Checks if the two values are equal ."}
{"id": 5500, "prediction": "Parses the given spec ."}
{"id": 5502, "prediction": "Checks if the given variable is a corner ."}
{"id": 5504, "prediction": "Converts a LatL coordinates to a longitude ."}
{"id": 5506, "prediction": "Creates a map of attributes ."}
{"id": 5508, "prediction": "Returns the numeric value for the given index ."}
{"id": 5510, "prediction": "Sets the string value ."}
{"id": 5512, "prediction": "Sets the values of this Array ."}
{"id": 5514, "prediction": "Generate a proxy catalog for a proxy dataset"}
{"id": 5516, "prediction": "Sets the thddf datatype ."}
{"id": 5518, "prediction": "This method is called when a threddroid is configured ."}
{"id": 5520, "prediction": "Prepare the GUI ."}
{"id": 5522, "prediction": "Creates a string representation of the given axes ."}
{"id": 5524, "prediction": "Finds the Axis Axis with the given type ."}
{"id": 5526, "prediction": "Determines if the Geometry is a Geometry ."}
{"id": 5528, "prediction": "Checks if the given collection is subset ."}
{"id": 5530, "prediction": "Checks if the given axis exists in the given axis ."}
{"id": 5532, "prediction": "Checks if the list of Axis types contains the given list ."}
{"id": 5534, "prediction": "Clone a DAG node ."}
{"id": 5536, "prediction": "Gets the selected beans ."}
{"id": 5538, "prediction": "Sets the selected bean ."}
{"id": 5540, "prediction": "Creates an unknown unit ."}
{"id": 5542, "prediction": "Returns true if the given variable is extra ."}
{"id": 5544, "prediction": "Finds the coordinate of a coordinate ."}
{"id": 5546, "prediction": "Adds a join to the join list ."}
{"id": 5548, "prediction": "Creates a new node map ."}
{"id": 5550, "prediction": "Creates a factory with the given name ."}
{"id": 5552, "prediction": "Checks if the given unit string is compatible with the given exceptions ."}
{"id": 5554, "prediction": "Checks if the given string is a time unit ."}
{"id": 5556, "prediction": "Convert a unit to a unit ."}
{"id": 5558, "prediction": "Returns the value of the scaling unit ."}
{"id": 5560, "prediction": "Creates a new BoolFunction ."}
{"id": 5562, "prediction": "Creates an image image from the given array ."}
{"id": 5564, "prediction": "Adds a dataset to the Datasource ."}
{"id": 5566, "prediction": "Gets the file or cache if it exists ."}
{"id": 5568, "prediction": "Sets the debug leaks ."}
{"id": 5570, "prediction": "Close the cache ."}
{"id": 5572, "prediction": "Flush the buffer ."}
{"id": 5574, "prediction": "Read a short array ."}
{"id": 5576, "prediction": "Reads an int from the given array of integers ."}
{"id": 5578, "prediction": "Read a float ."}
{"id": 5580, "prediction": "Read a String ."}
{"id": 5582, "prediction": "Write boolean ."}
{"id": 5584, "prediction": "Writes a char to the buffer ."}
{"id": 5586, "prediction": "Write long ."}
{"id": 5588, "prediction": "Write double ."}
{"id": 5590, "prediction": "Writes a byte array to the output stream ."}
{"id": 5592, "prediction": "Append a query to the query buffer"}
{"id": 5594, "prediction": "Finds the index ."}
{"id": 5596, "prediction": "Returns the children of the given index ."}
{"id": 5598, "prediction": "Read a list of files from the given index ."}
{"id": 5600, "prediction": "Acquires a file from the cache ."}
{"id": 5602, "prediction": "Evaluate the cache ."}
{"id": 5604, "prediction": "Convert four bytes to a 4 - bit integer ."}
{"id": 5606, "prediction": "Clears the cache ."}
{"id": 5608, "prediction": "Determines if the left and right coordinates are left ."}
{"id": 5610, "prediction": "Finds the x - coordinate from the given coordinates ."}
{"id": 5612, "prediction": "Returns the x index of the x - y - coordinate of the given laton ."}
{"id": 5614, "prediction": "Returns the position of the item ."}
{"id": 5616, "prediction": "Iterate over the mFile collection ."}
{"id": 5618, "prediction": "Returns the sub - center name of the given sub - center ."}
{"id": 5620, "prediction": "Creates a CalendarPeriod with the specified value ."}
{"id": 5622, "prediction": "Subtract the difference between two dates ."}
{"id": 5624, "prediction": "Returns the value in millisecond ."}
{"id": 5626, "prediction": "Synchronize the cache ."}
{"id": 5628, "prediction": "Adds the given data to the tree ."}
{"id": 5630, "prediction": "Finds the data for the given request path ."}
{"id": 5889, "prediction": "Queries a new result ."}
{"id": 5891, "prediction": "Handle a Cursor ."}
{"id": 5893, "prediction": "Registers a cursor to the table ."}
{"id": 5895, "prediction": "Get the coverage data for a tile"}
{"id": 5897, "prediction": "Get the coverage data for the tile"}
{"id": 5899, "prediction": "Get the coverage data for the tile matrix"}
{"id": 5901, "prediction": "Get the coverage data for the tile"}
{"id": 5903, "prediction": "Get the value of the tile at the specified location"}
{"id": 5905, "prediction": "Gets the icon row ."}
{"id": 5907, "prediction": "Converts a byte array to a Bitmap ."}
{"id": 5909, "prediction": "Create the table metadata ."}
{"id": 5911, "prediction": "Get or create a TableMetadata ."}
{"id": 5913, "prediction": "Creates the table metadata ."}
{"id": 5915, "prediction": "Get the feature row for the RTree cursor"}
{"id": 5917, "prediction": "Query for the bounding box"}
{"id": 5919, "prediction": "Count the number of geometries in the envelope ."}
{"id": 5921, "prediction": "Builds the WHERE clause ."}
{"id": 5923, "prediction": "Count the number of features in the projection"}
{"id": 5925, "prediction": "Query for features ."}
{"id": 5927, "prediction": "Set bitmap ."}
{"id": 5929, "prediction": "Sets the bitmap configuration ."}
{"id": 5931, "prediction": "Adjust the bounding box for the zoom level"}
{"id": 5933, "prediction": "Calculate the WGS84 bounding box for the tile grid"}
{"id": 5935, "prediction": "Get the bounding box for the zoom level"}
{"id": 5937, "prediction": "Query for a tile row"}
{"id": 5939, "prediction": "Get the closest zoom level"}
{"id": 5941, "prediction": "Query for a tile grid"}
{"id": 5943, "prediction": "Count the number of tiles in the zoom level"}
{"id": 5945, "prediction": "Get the pixel value of the image ."}
{"id": 5947, "prediction": "Validate the image data ."}
{"id": 5949, "prediction": "Sets the pixel value of the image ."}
{"id": 5951, "prediction": "Gets the current row ."}
{"id": 5953, "prediction": "Query by base feature id"}
{"id": 5955, "prediction": "Get the rectangle of a bounding box"}
{"id": 5957, "prediction": "Deletes missing databases ."}
{"id": 5959, "prediction": "Checks if the database is valid ."}
{"id": 5961, "prediction": "Validate and close the database ."}
{"id": 5963, "prediction": "Validate the database header"}
{"id": 5965, "prediction": "Add internal databases ."}
{"id": 5967, "prediction": "Imports a GeoPackage"}
{"id": 5969, "prediction": "Gets the GeoPackage metadata for the given path ."}
{"id": 5971, "prediction": "Populate a geometry ."}
{"id": 5973, "prediction": "Creates or updates a geometry ."}
{"id": 5975, "prediction": "Get the count of the GeoPackage"}
{"id": 5977, "prediction": "Updates the column values ."}
{"id": 5979, "prediction": "Returns a list of all rows for a given ids"}
{"id": 5981, "prediction": "Get the user mapping"}
{"id": 5983, "prediction": "Returns the mapping for the given base id ."}
{"id": 5985, "prediction": "Checks if the given base id matches the given baseId"}
{"id": 5987, "prediction": "Register a CursorWrapper for the GeoPackage"}
{"id": 5989, "prediction": "Get the tile from the request bounding box"}
{"id": 5991, "prediction": "Reproject a tile to a tile box"}
{"id": 5993, "prediction": "Calculate the overlap between points ."}
{"id": 5995, "prediction": "Sets the line of the line ."}
{"id": 5997, "prediction": "Draw the tile data ."}
{"id": 5999, "prediction": "Draws the tile index for a tile"}
{"id": 6001, "prediction": "Query for features in the bounding box"}
{"id": 6003, "prediction": "Query for features within the bounding box"}
{"id": 6005, "prediction": "Helper method to simplify the list of points"}
{"id": 6007, "prediction": "Get the paint for the specified feature style ."}
{"id": 6009, "prediction": "Get the paint fill paint for the style"}
{"id": 6011, "prediction": "Get the paint for the specified style"}
{"id": 6013, "prediction": "Get the paint for the specified style ."}
{"id": 6015, "prediction": "Creates a bitmap from icon cache"}
{"id": 6017, "prediction": "Creates a bitmap ."}
{"id": 6019, "prediction": "Get the bitmap for the layer"}
{"id": 6021, "prediction": "Creates and initializes the canvas ."}
{"id": 6023, "prediction": "Get the style DAO"}
{"id": 6025, "prediction": "Get the feature table style"}
{"id": 6027, "prediction": "Get the table style for a feature table"}
{"id": 6029, "prediction": "Get the icon row for the feature table"}
{"id": 6031, "prediction": "Get feature styles for a feature table"}
{"id": 6033, "prediction": "Get the icons for a feature row"}
{"id": 6035, "prediction": "Get the icons for a feature id"}
{"id": 6037, "prediction": "Set the table style for the feature table"}
{"id": 6039, "prediction": "Sets the feature styles for the feature"}
{"id": 6041, "prediction": "Sets the styles for the feature"}
{"id": 6043, "prediction": "Sets the style of a feature"}
{"id": 6045, "prediction": "Set the default style for a feature table"}
{"id": 6047, "prediction": "Set the icons for the feature table"}
{"id": 6049, "prediction": "Set the default icon for the feature row"}
{"id": 6051, "prediction": "Gets the style id ."}
{"id": 6053, "prediction": "Insert a style mapping ."}
{"id": 6055, "prediction": "Delete the table icon mapping"}
{"id": 6057, "prediction": "Delete the table mapping"}
{"id": 6059, "prediction": "Get all the style IDs for a feature table"}
{"id": 6061, "prediction": "Get all style IDs for a feature table"}
{"id": 6063, "prediction": "Get the image bytes ."}
{"id": 6065, "prediction": "Retrieves the pixel value of the specified pixel ."}
{"id": 6067, "prediction": "Draw a feature"}
{"id": 6069, "prediction": "Draw a polygon"}
{"id": 6071, "prediction": "Add a polygon to the polygon"}
{"id": 6073, "prediction": "Removes a feature from the database ."}
{"id": 6075, "prediction": "Get the styles for this table ."}
{"id": 6077, "prediction": "Get RTree table"}
{"id": 6079, "prediction": "Sets the height of the column ."}
{"id": 6081, "prediction": "Calculates the density of the tile"}
{"id": 6083, "prediction": "Read a custom table ."}
{"id": 6085, "prediction": "Validates a color ."}
{"id": 6087, "prediction": "Get the GeoPackageManager ."}
{"id": 6089, "prediction": "Returns the index of the given type ."}
{"id": 6091, "prediction": "Deletes the index of the given type ."}
{"id": 6093, "prediction": "Delete the index of the given type"}
{"id": 6095, "prediction": "Checks if the feature is indexed ."}
{"id": 6097, "prediction": "Query for feature index results"}
{"id": 6099, "prediction": "Get the bounding box for the feature table"}
{"id": 6101, "prediction": "Gets the indexed index type ."}
{"id": 6103, "prediction": "Get file path ."}
{"id": 6105, "prediction": "Set the geometry type"}
{"id": 6107, "prediction": "Replaces the coordinates of a tile ."}
{"id": 6109, "prediction": "Replace the bounding box with the specified coordinates ."}
{"id": 6111, "prediction": "Gets the geometry data ."}
{"id": 6113, "prediction": "Update the last indexed time"}
{"id": 6115, "prediction": "Delete index"}
{"id": 6117, "prediction": "Query the data for the feature table"}
{"id": 6119, "prediction": "Get the count of the bounding box"}
{"id": 6121, "prediction": "Counts the number of elements in the envelope ."}
{"id": 6123, "prediction": "Count the bounding box of the projection"}
{"id": 6125, "prediction": "Get the GeometryMetadata ."}
{"id": 6127, "prediction": "Get the feature row for the given geometry ."}
{"id": 6129, "prediction": "Get the feature tables for the tile table"}
{"id": 6131, "prediction": "Query by id"}
{"id": 6133, "prediction": "Returns a list of unique IDs related to the user ."}
{"id": 6135, "prediction": "Delete by related id"}
{"id": 6137, "prediction": "Builds the WHEREIDs for the given base id ."}
{"id": 6139, "prediction": "Delete the database"}
{"id": 6141, "prediction": "Renames a GeoPackage"}
{"id": 6143, "prediction": "Get GeoPackage"}
{"id": 5632, "prediction": "Get the date range ."}
{"id": 5634, "prediction": "Creates a new NetcdfcFileWriter for the given location ."}
{"id": 5636, "prediction": "Add a new enum type ."}
{"id": 5638, "prediction": "Renames a group attribute ."}
{"id": 5640, "prediction": "Aborts the connection ."}
{"id": 5642, "prediction": "Extracts the ThredddsData from the given datastream ."}
{"id": 5644, "prediction": "Converts the given amount to a derived unit ."}
{"id": 5646, "prediction": "Convert an array to a nested variable ."}
{"id": 5648, "prediction": "Convert a DSD array to an array"}
{"id": 5650, "prediction": "Open a database ."}
{"id": 5652, "prediction": "Ensure that the given String array contains the given capacity ."}
{"id": 5654, "prediction": "Create a catalog for the given path ."}
{"id": 5656, "prediction": "Gets the coordinate type ."}
{"id": 5658, "prediction": "Calculates the time of a date ."}
{"id": 5660, "prediction": "Parses a local concept ."}
{"id": 5662, "prediction": "Removes all lines from a line ."}
{"id": 5664, "prediction": "Writes all the Grib1 to the file ."}
{"id": 5666, "prediction": "Show local concepts ."}
{"id": 5668, "prediction": "Returns the type of the given name ."}
{"id": 5670, "prediction": "Creates an expanded catalog ."}
{"id": 5672, "prediction": "Creates a new dataset ."}
{"id": 5674, "prediction": "Loads the image ."}
{"id": 5676, "prediction": "Change the source status change ."}
{"id": 5678, "prediction": "Create a new image in the thread pool ."}
{"id": 5680, "prediction": "Gets the scaled size ."}
{"id": 5682, "prediction": "Creates the header for the given date ."}
{"id": 5684, "prediction": "Checks if a group is valid ."}
{"id": 5686, "prediction": "Sets the root directory ."}
{"id": 5688, "prediction": "Clean the cache files ."}
{"id": 5690, "prediction": "Checks to see if the given number is a Buf table ."}
{"id": 5692, "prediction": "Creates a copy of this node ."}
{"id": 5694, "prediction": "Gets information about the specified formatter ."}
{"id": 5696, "prediction": "Sets the list ."}
{"id": 5698, "prediction": "Increments the current selection ."}
{"id": 5700, "prediction": "Set the selected slider ."}
{"id": 5702, "prediction": "Swaps two elements ."}
{"id": 5704, "prediction": "Rotate the east bounding box ."}
{"id": 5706, "prediction": "Creates a new XMLStore from the given input stream ."}
{"id": 5708, "prediction": "Creates the standard filename for the given app name ."}
{"id": 5710, "prediction": "Saves the XML file ."}
{"id": 5712, "prediction": "Writes the data structure to the output stream ."}
{"id": 5714, "prediction": "Writes a sequence of data to the output stream ."}
{"id": 5716, "prediction": "Checks if a file is valid ."}
{"id": 5718, "prediction": "Reads a row from the input stream ."}
{"id": 5720, "prediction": "Gets the data from the grid ."}
{"id": 5722, "prediction": "Reads a list of objects from the given slices ."}
{"id": 5724, "prediction": "Make the size of the grid file ."}
{"id": 5726, "prediction": "Sets the list of stations ."}
{"id": 5728, "prediction": "Selects a point from the coordinates"}
{"id": 5730, "prediction": "Gets the selected state ."}
{"id": 5732, "prediction": "Retrieves a list of all available locations ."}
{"id": 5734, "prediction": "Returns a DataIterator for the given station ."}
{"id": 5736, "prediction": "Reads the data from a block ."}
{"id": 5738, "prediction": "Returns the norm of the norm ."}
{"id": 5740, "prediction": "Sets the services for the given dataset builder ."}
{"id": 5742, "prediction": "Returns the local parameter for the given id ."}
{"id": 5744, "prediction": "Adds a symbol to the list ."}
{"id": 5746, "prediction": "Check if email is OK"}
{"id": 5748, "prediction": "Calculates the CRC value ."}
{"id": 5750, "prediction": "Returns the index of the field with the given name ."}
{"id": 5752, "prediction": "Get the time coordinate ."}
{"id": 5754, "prediction": "Sets the prev ."}
{"id": 5756, "prediction": "Set the current projection"}
{"id": 5758, "prediction": "Registers an IO provider ."}
{"id": 5760, "prediction": "Registers the IOS provider for the specified class ."}
{"id": 5762, "prediction": "Determine if the specified class is registered ."}
{"id": 5764, "prediction": "Creates a new instance of a class file ."}
{"id": 5766, "prediction": "Opens a file in bytes ."}
{"id": 5768, "prediction": "Find the global attribute with the given name ."}
{"id": 5770, "prediction": "Writes a CDL file ."}
{"id": 5772, "prediction": "Write CDLL ."}
{"id": 5774, "prediction": "Adds an attribute to the group ."}
{"id": 5776, "prediction": "Adds a dimension to this group ."}
{"id": 5778, "prediction": "Add a variable to this group ."}
{"id": 5780, "prediction": "Add a variable to this group ."}
{"id": 5782, "prediction": "Sends a message to the server ."}
{"id": 5784, "prediction": "Finishes the grouping ."}
{"id": 5786, "prediction": "Reads a byte array from the given section ."}
{"id": 5788, "prediction": "Read variable section ."}
{"id": 5790, "prediction": "Make a full path name ."}
{"id": 5792, "prediction": "Returns true if the given file should be excluded ."}
{"id": 5794, "prediction": "Append a value to the given string ."}
{"id": 5796, "prediction": "Force a value to a string ."}
{"id": 5798, "prediction": "Checks if the given string is a short ."}
{"id": 5800, "prediction": "Checks if a string is a UUID ."}
{"id": 5802, "prediction": "Checks if a string is a double ."}
{"id": 5804, "prediction": "Checks if the given datastream is available ."}
{"id": 5806, "prediction": "Checks if the given alphanumeric string is valid ."}
{"id": 5808, "prediction": "Determines if the file path is a file path ."}
{"id": 5810, "prediction": "Returns the value associated with the given key ."}
{"id": 5812, "prediction": "Read data from input stream ."}
{"id": 5814, "prediction": "Removes quotes from a string ."}
{"id": 5816, "prediction": "Writes the given location ."}
{"id": 5818, "prediction": "Writes a CDL object to a string ."}
{"id": 5820, "prediction": "Validates the request header ."}
{"id": 5822, "prediction": "Gets the elevation of the message ."}
{"id": 5824, "prediction": "Gets the longitudes ."}
{"id": 5826, "prediction": "Gets the azimuth patterns ."}
{"id": 5828, "prediction": "Returns a copy of the given structure ."}
{"id": 5830, "prediction": "Adds a new member variable ."}
{"id": 5832, "prediction": "Sets the parent group ."}
{"id": 5834, "prediction": "Read a structure data structure ."}
{"id": 5836, "prediction": "Returns an iterator over the structure ."}
{"id": 5838, "prediction": "Gets the class name ."}
{"id": 5840, "prediction": "Gets the header ."}
{"id": 5842, "prediction": "Returns the version number for the given name ."}
{"id": 5844, "prediction": "Delete a file ."}
{"id": 5846, "prediction": "Render the plan view ."}
{"id": 5848, "prediction": "Gets the message type ."}
{"id": 5850, "prediction": "Sets the api key ."}
{"id": 5852, "prediction": "Creates a label ."}
{"id": 5854, "prediction": "Connects to a Cloud SQL Server ."}
{"id": 5856, "prediction": "Connect to the remote server ."}
{"id": 5858, "prediction": "Compile the Java source code ."}
{"id": 5860, "prediction": "Add a source code to the compilation ."}
{"id": 5862, "prediction": "Get next frame ."}
{"id": 5864, "prediction": "Initialize list events ."}
{"id": 5866, "prediction": "Adds a message to the list of messages ."}
{"id": 5868, "prediction": "Create a ViewModel for the given view ."}
{"id": 5870, "prediction": "Loads the country ."}
{"id": 5872, "prediction": "Add a bean property ."}
{"id": 5874, "prediction": "Creates a new java view step ."}
{"id": 5876, "prediction": "Clear the given map ."}
{"id": 5878, "prediction": "Access the given object to the given callable ."}
{"id": 5880, "prediction": "Creates the fxml path for the given view type ."}
{"id": 5882, "prediction": "Get the pixel value from the image ."}
{"id": 5884, "prediction": "Validate the image type"}
{"id": 5886, "prediction": "Sets the tile data ."}
{"id": 6145, "prediction": "Get or create a GeoPackageMetadata ."}
{"id": 6147, "prediction": "Get the GeoPackage"}
{"id": 6149, "prediction": "Gets the metadata of the metadata for the given column ."}
{"id": 6151, "prediction": "Create a GeoPackageMetadata ."}
{"id": 6153, "prediction": "Recursively adds the view to the view ."}
{"id": 6155, "prediction": "Creates a custom view ."}
{"id": 6157, "prediction": "Find the configuration file from the system properties ."}
{"id": 6159, "prediction": "Auto - auto - config ."}
{"id": 6161, "prediction": "Converts a socket address to a string ."}
{"id": 6163, "prediction": "Starts all converters ."}
{"id": 6165, "prediction": "Adds a substitution property ."}
{"id": 6167, "prediction": "Compile the converter ."}
{"id": 6169, "prediction": "Gets the node ."}
{"id": 6171, "prediction": "Converts a fixed date to a regular expression ."}
{"id": 6173, "prediction": "End the evaluator ."}
{"id": 6175, "prediction": "Creates a new context selector for the given context ."}
{"id": 6177, "prediction": "Gets the directory path ."}
{"id": 6179, "prediction": "Returns the absolute path for the given filename ."}
{"id": 6181, "prediction": "Returns the binding value for the given event ."}
{"id": 6183, "prediction": "Gets the decision decision ."}
{"id": 6185, "prediction": "Creates the trust manager ."}
{"id": 6187, "prediction": "Extracts location from system properties ."}
{"id": 6189, "prediction": "Returns true if the Throwable is a Throwable ."}
{"id": 6191, "prediction": "Print the status of the given context ."}
{"id": 6193, "prediction": "Print status ."}
{"id": 6195, "prediction": "Gets the entry from the map ."}
{"id": 6197, "prediction": "Constructs a format from a string ."}
{"id": 6199, "prediction": "Checks if the files are on the same file ."}
{"id": 6201, "prediction": "Get the system property ."}
{"id": 6203, "prediction": "Outputs the MDC for all MDC properties ."}
{"id": 6205, "prediction": "Checks if the current class is in the framework"}
{"id": 6207, "prediction": "Add a listener to the status list ."}
{"id": 6209, "prediction": "Returns the list of applicable actions for the given element ."}
{"id": 6211, "prediction": "Retrieves a value from the system property ."}
{"id": 6213, "prediction": "Decompresses the given name ."}
{"id": 6215, "prediction": "Get the property descriptors for the given class ."}
{"id": 6217, "prediction": "Adds a new onConsoleStatusListener to this context ."}
{"id": 6219, "prediction": "Returns the binding value for the given event ."}
{"id": 6221, "prediction": "Start the shutdown hook ."}
{"id": 6223, "prediction": "Returns the set of supported protocols ."}
{"id": 6225, "prediction": "Returns an array of Strings matching the given default values ."}
{"id": 6227, "prediction": "Sets the properties ."}
{"id": 6229, "prediction": "Removes the given appender from the list of apps ."}
{"id": 6231, "prediction": "Handle the parent level change ."}
{"id": 6233, "prediction": "Detaches the given logging event ."}
{"id": 6235, "prediction": "Call this method to call the auto - filter ."}
{"id": 6237, "prediction": "Creates a new socket ."}
{"id": 6239, "prediction": "Converts this level to an integer ."}
{"id": 6241, "prediction": "Returns the number of URLs in the given resource ."}
{"id": 6243, "prediction": "Returns the class loader for the given object ."}
{"id": 6245, "prediction": "Returns the class of the given class ."}
{"id": 6247, "prediction": "Gets the tag ."}
{"id": 6249, "prediction": "Gets the separator index of the given name ."}
{"id": 6251, "prediction": "Returns the name of the logback thread ."}
{"id": 6253, "prediction": "Start the session ."}
{"id": 6255, "prediction": "Sends a buffer to the appender ."}
{"id": 6257, "prediction": "Creates a converter ."}
{"id": 6259, "prediction": "Determines the compression mode ."}
{"id": 6261, "prediction": "Configure the file ."}
{"id": 6263, "prediction": "Builds the interpreter ."}
{"id": 6265, "prediction": "Starts the configuration ."}
{"id": 6267, "prediction": "Sets the name of the context ."}
{"id": 6269, "prediction": "Gets the last reset date ."}
{"id": 6271, "prediction": "Gets the effective map ."}
{"id": 6273, "prediction": "Returns the file footer ."}
{"id": 6275, "prediction": "Ends the stack trace ."}
{"id": 6277, "prediction": "Add a client ."}
{"id": 6279, "prediction": "Gets a copy of the current context ."}
{"id": 6281, "prediction": "Gets the next filter decision ."}
{"id": 6283, "prediction": "Initialize the logger ."}
{"id": 6285, "prediction": "Prints the current status ."}
{"id": 6287, "prediction": "Gets the database file ."}
{"id": 6289, "prediction": "Check if the clock is expired ."}
{"id": 6291, "prediction": "Append the secondary sub - component to the given event ."}
{"id": 6293, "prediction": "Converts an object to a string ."}
{"id": 6295, "prediction": "Merge the properties of the given event ."}
{"id": 6297, "prediction": "Gets the length of the path ."}
{"id": 6299, "prediction": "Set a property ."}
{"id": 6301, "prediction": "Gets the value of the parent ."}
{"id": 6303, "prediction": "Opens an input stream ."}
{"id": 6305, "prediction": "Returns true if the server is started ."}
{"id": 6307, "prediction": "Sets the default hosts ."}
{"id": 6309, "prediction": "Synchronize the data ."}
{"id": 6311, "prediction": "Waits for a task to complete ."}
{"id": 6313, "prediction": "Converts a stream to a string ."}
{"id": 6315, "prediction": "Consumes a connection ."}
{"id": 6317, "prediction": "Sets the type ."}
{"id": 6319, "prediction": "Puts a value into the cache ."}
{"id": 6321, "prediction": "Waits for all threads to complete ."}
{"id": 6323, "prediction": "Reports an exception to the given test ."}
{"id": 6325, "prediction": "Initializes the simulation properties ."}
{"id": 6327, "prediction": "Gets a method by its name ."}
{"id": 6329, "prediction": "Formats a double ."}
{"id": 6331, "prediction": "Reads a syntax character ."}
{"id": 6333, "prediction": "Writes a JSON string to the output stream ."}
{"id": 6335, "prediction": "Write a double value ."}
{"id": 6337, "prediction": "Reads characters from a JSON string ."}
{"id": 6339, "prediction": "Reads a double ."}
{"id": 6341, "prediction": "Executes the given method call ."}
{"id": 6343, "prediction": "Enqueue a call ."}
{"id": 6345, "prediction": "Updates the decoration of the decorator ."}
{"id": 6347, "prediction": "Gets the resource history view ."}
{"id": 6349, "prediction": "Reports failure failure ."}
{"id": 6351, "prediction": "Creates the default settings ."}
{"id": 6353, "prediction": "Sets whether the node is kept alive ."}
{"id": 6355, "prediction": "Set the owner ."}
{"id": 6357, "prediction": "Create a new condition term ."}
{"id": 6359, "prediction": "Returns a reader for the specified rule source ."}
{"id": 6361, "prediction": "Read the configuration file ."}
{"id": 6363, "prediction": "Add response body ."}
{"id": 6365, "prediction": "Inserts a href before the given ref ."}
{"id": 6367, "prediction": "Adds a prop stat to this list ."}
{"id": 6369, "prediction": "Get the status of the node ."}
{"id": 6371, "prediction": "Checks if two classes are subclasses ."}
{"id": 6373, "prediction": "Clone a DOM node ."}
{"id": 6375, "prediction": "Create action actions ."}
{"id": 6377, "prediction": "Get the value of the specified property ."}
{"id": 6379, "prediction": "Sets the location of the given point ."}
{"id": 6381, "prediction": "Sets the size of the view ."}
{"id": 6383, "prediction": "Adds a lock entry ."}
{"id": 6385, "prediction": "Remove a child from the graph ."}
{"id": 6387, "prediction": "Stops the plugin ."}
{"id": 6389, "prediction": "Gets the resource bundle ."}
{"id": 6391, "prediction": "Set the date time ."}
{"id": 6393, "prediction": "Creates an error message ."}
{"id": 6395, "prediction": "Adds a field to the editor ."}
{"id": 6397, "prediction": "Apply the font ."}
{"id": 6399, "prediction": "Initialize the fields ."}
{"id": 5888, "prediction": "Wrap a query result ."}
{"id": 5890, "prediction": "Queries a user ."}
{"id": 5892, "prediction": "Get the feature row for the given geometry index"}
{"id": 5894, "prediction": "Retrieves a tile row from the map ."}
{"id": 5896, "prediction": "Get the coverage data for the tile"}
{"id": 5898, "prediction": "Get the coverage data from the request"}
{"id": 5900, "prediction": "Get the coverage data for the tile"}
{"id": 5902, "prediction": "Get the tile matrix for the requested coverage data ."}
{"id": 5904, "prediction": "Set the icon row ."}
{"id": 5906, "prediction": "Open bindings ."}
{"id": 5908, "prediction": "Converts a bitmap into a byte array ."}
{"id": 5910, "prediction": "Delete a table"}
{"id": 5912, "prediction": "Get the GeoPackage ID for the GeoPackage"}
{"id": 5914, "prediction": "Creates a new extension"}
{"id": 5916, "prediction": "Creates a raw SQL query from the database ."}
{"id": 5918, "prediction": "Query for a geometry envelope"}
{"id": 5920, "prediction": "Query for the specified parameters"}
{"id": 5922, "prediction": "Query for feature projection"}
{"id": 5924, "prediction": "Query for geometries"}
{"id": 5926, "prediction": "Counts the number of times"}
{"id": 5928, "prediction": "Sets the data to a bitmap ."}
{"id": 5930, "prediction": "Get the tile count"}
{"id": 5932, "prediction": "Adjusts the bounding box to the Google Maps ."}
{"id": 5934, "prediction": "Adjust the bounding box of the tile bounding box"}
{"id": 5936, "prediction": "Get the tile grid"}
{"id": 5938, "prediction": "Query for tile zoom level"}
{"id": 5940, "prediction": "Get the approximate zoom level ."}
{"id": 5942, "prediction": "Delete a tile at a specific zoom level"}
{"id": 5944, "prediction": "Checks if the current tile is Google Maps ."}
{"id": 5946, "prediction": "Get the pixel values for the image ."}
{"id": 5948, "prediction": "Create image data ."}
{"id": 5950, "prediction": "Open a GeoPackage"}
{"id": 5952, "prediction": "Moves cursor to next cursor ."}
{"id": 5954, "prediction": "Delete the base geometry by id"}
{"id": 5956, "prediction": "Get a rounded float rectangle"}
{"id": 5958, "prediction": "Creates a GeoPackage ."}
{"id": 5960, "prediction": "Validate the database and throw exceptions ."}
{"id": 5962, "prediction": "Validate database ."}
{"id": 5964, "prediction": "Checks if the database header is valid"}
{"id": 5966, "prediction": "Add a list of external databases to the GeoPackage"}
{"id": 5968, "prediction": "Get GeoPackage metadata ."}
{"id": 5970, "prediction": "Create a new geometry ."}
{"id": 5972, "prediction": "Delete the table"}
{"id": 5974, "prediction": "Updates the geometry ."}
{"id": 5976, "prediction": "Create a GeometryMetadata ."}
{"id": 5978, "prediction": "Draw a tile ."}
{"id": 5980, "prediction": "Checks the integrity check ."}
{"id": 5982, "prediction": "Get a SimpleAttributes DAO"}
{"id": 5984, "prediction": "Gets the mapping for a related relation ."}
{"id": 5986, "prediction": "Count the number of entries in the given user ."}
{"id": 5988, "prediction": "Read a table"}
{"id": 5990, "prediction": "Draws a tile in the tile image"}
{"id": 5992, "prediction": "Retrieves the tile results from the tile bounding box"}
{"id": 5994, "prediction": "Sets the density of the polygon"}
{"id": 5996, "prediction": "Sets the color of the polygon ."}
{"id": 5998, "prediction": "Draw a tile at the specified location ."}
{"id": 6000, "prediction": "Query the number of features in the geometries"}
{"id": 6002, "prediction": "Query for features in the specified location"}
{"id": 6004, "prediction": "Draws a tile for all features"}
{"id": 6006, "prediction": "Replies the paint for the specified feature ."}
{"id": 6008, "prediction": "Get the paint for the specified feature style ."}
{"id": 6010, "prediction": "Get the paint for the feature style"}
{"id": 6012, "prediction": "Get the paint for a style row"}
{"id": 6014, "prediction": "Adds a bitmap to the icon row ."}
{"id": 6016, "prediction": "Wrap the values of a ContentValues"}
{"id": 6018, "prediction": "Recycle the canvas ."}
{"id": 6020, "prediction": "Get the canvas ."}
{"id": 6022, "prediction": "Get the style mapping"}
{"id": 6024, "prediction": "Get icon DAO"}
{"id": 6026, "prediction": "Get the styles for a feature table"}
{"id": 6028, "prediction": "Get the icons for a feature table ."}
{"id": 6030, "prediction": "Get feature styles for a feature row"}
{"id": 6032, "prediction": "Get the styles for a feature row"}
{"id": 6034, "prediction": "Get styles for a feature id"}
{"id": 6036, "prediction": "Set the feature table style ."}
{"id": 6038, "prediction": "Set the table icons for the feature table"}
{"id": 6040, "prediction": "Set the feature table style"}
{"id": 6042, "prediction": "Set the styles for a feature table"}
{"id": 6044, "prediction": "Set the default style for the feature row"}
{"id": 6046, "prediction": "Sets the icons for the feature row ."}
{"id": 6048, "prediction": "Set the icon for the feature row"}
{"id": 6050, "prediction": "Set the default icon for the feature table"}
{"id": 6052, "prediction": "Gets the icon for the given icon row ."}
{"id": 6054, "prediction": "Delete the feature table"}
{"id": 6056, "prediction": "Delete the table mapping"}
{"id": 6058, "prediction": "Delete a mapping"}
{"id": 6060, "prediction": "Get all the icon ids for the feature table"}
{"id": 6062, "prediction": "Get all icon ids for a feature table"}
{"id": 6064, "prediction": "Flush the image data ."}
{"id": 6066, "prediction": "Reads the pixels from the image ."}
{"id": 6068, "prediction": "Draw the path to the given feature ."}
{"id": 6070, "prediction": "Add a line to the map ."}
{"id": 6072, "prediction": "Get the cache for the specified table name ."}
{"id": 6074, "prediction": "Clears the cache ."}
{"id": 6076, "prediction": "Get the icons for this table ."}
{"id": 6078, "prediction": "Set the width of the column"}
{"id": 6080, "prediction": "Get the derived dimensions ."}
{"id": 6082, "prediction": "Read blob value ."}
{"id": 6084, "prediction": "Gets the default color ."}
{"id": 6086, "prediction": "Creates a color ."}
{"id": 6088, "prediction": "Sets the progress"}
{"id": 6090, "prediction": "Indexes the given feature row ."}
{"id": 6092, "prediction": "Deletes the given row index ."}
{"id": 6094, "prediction": "Delete a feature index"}
{"id": 6096, "prediction": "Get the list of features indexed by the type query order ."}
{"id": 6098, "prediction": "Returns the number of features in this table ."}
{"id": 6100, "prediction": "Query for feature index results"}
{"id": 6102, "prediction": "Gets the internal file ."}
{"id": 6104, "prediction": "Gets the geometry type ."}
{"id": 6106, "prediction": "Check if the bounding box contains a bounding box"}
{"id": 6108, "prediction": "Checks if the given URL has been replaced ."}
{"id": 6110, "prediction": "Replace the bounding box of a bounding box ."}
{"id": 6112, "prediction": "Index a feature row"}
{"id": 6114, "prediction": "Delete index"}
{"id": 6116, "prediction": "Checks if the feature is indexed ."}
{"id": 6118, "prediction": "Query for the feature table"}
{"id": 6120, "prediction": "Query for the feature envelope"}
{"id": 6122, "prediction": "Query for the bounding box"}
{"id": 6124, "prediction": "Get the feature bounding box for the projection"}
{"id": 6126, "prediction": "Get the feature row from the cursor"}
{"id": 6128, "prediction": "Get all tiles for the feature table"}
{"id": 6130, "prediction": "Get the bounding box for the feature"}
{"id": 6132, "prediction": "Returns a list of unique base ids ."}
{"id": 6134, "prediction": "Delete by base id"}
{"id": 6136, "prediction": "Delete the given id ."}
{"id": 6138, "prediction": "Create a GeoPackage"}
{"id": 6140, "prediction": "Renames a GeoPackage"}
{"id": 6142, "prediction": "Get all GeoPackage"}
{"id": 6401, "prediction": "Sets the active editor ."}
{"id": 6403, "prediction": "Determine the dialect ."}
{"id": 6405, "prediction": "Save the current progress monitor to the given progress monitor ."}
{"id": 6407, "prediction": "Creates the table ."}
{"id": 6409, "prediction": "Put a value into the table ."}
{"id": 6411, "prediction": "Add a child node ."}
{"id": 6413, "prediction": "Adds a new condition ."}
{"id": 6415, "prediction": "Returns true if the given condition matches this condition ."}
{"id": 6417, "prediction": "Get the status of the node ."}
{"id": 6419, "prediction": "Gets the last line ."}
{"id": 6421, "prediction": "Bind a string to a given id ."}
{"id": 6423, "prediction": "Returns the message for the given id ."}
{"id": 6425, "prediction": "Create the process sample ."}
{"id": 6427, "prediction": "Visit a retry ."}
{"id": 6429, "prediction": "Returns the dot id of the given object ."}
{"id": 6431, "prediction": "Adds a set to this set ."}
{"id": 6433, "prediction": "This method initializes the presentation ."}
{"id": 6435, "prediction": "Checks if the given condition is contained in this condition ."}
{"id": 6437, "prediction": "Add pages to the document ."}
{"id": 6439, "prediction": "HTTP POST request"}
{"id": 6441, "prediction": "Executes the pull operation ."}
{"id": 6443, "prediction": "Sets the value at the specified index ."}
{"id": 6445, "prediction": "Removes all proposals from a prefix ."}
{"id": 6447, "prediction": "Calculates the retree list of retries ."}
{"id": 6449, "prediction": "Gets the edit part for the given model element ."}
{"id": 6451, "prediction": "Declares an image ."}
{"id": 6453, "prediction": "Gets the row index ."}
{"id": 6455, "prediction": "Dumps all rows in the graph ."}
{"id": 6457, "prediction": "Load Retrieves the Retrie model ."}
{"id": 6459, "prediction": "Draw the graph ."}
{"id": 6461, "prediction": "Set the href attribute ."}
{"id": 6463, "prediction": "Copy a set of properties to a file ."}
{"id": 6465, "prediction": "Extracts the URL table from a resource ."}
{"id": 6467, "prediction": "Returns an enumeration of all the locks ."}
{"id": 6469, "prediction": "Heads the response ."}
{"id": 6471, "prediction": "Moves the given destination to the given destination ."}
{"id": 6473, "prediction": "Refresh the lock for the given lock ."}
{"id": 6475, "prediction": "Remove a property ."}
{"id": 6477, "prediction": "Sets a set of properties ."}
{"id": 6479, "prediction": "Unlock a request ."}
{"id": 6481, "prediction": "Request version control ."}
{"id": 6483, "prediction": "Examine status code ."}
{"id": 6485, "prediction": "Writes the request to the output stream ."}
{"id": 6487, "prediction": "Convert an int array to a hexadecimal representation ."}
{"id": 6489, "prediction": "Sets the name of the property ."}
{"id": 6491, "prediction": "Strips the last word from a string ."}
{"id": 6493, "prediction": "Writes an input stream to the output stream ."}
{"id": 6495, "prediction": "Recursively mark errors ."}
{"id": 6497, "prediction": "Add a resource to the target location"}
{"id": 6499, "prediction": "Gets the age ."}
{"id": 6501, "prediction": "Returns the maximum number of forwards ."}
{"id": 6503, "prediction": "Returns true if the path is present in the system ."}
{"id": 6505, "prediction": "Adds a property key ."}
{"id": 6507, "prediction": "Opens a file ."}
{"id": 6509, "prediction": "Gets object metadata ."}
{"id": 6511, "prediction": "Add tokens to the tree ."}
{"id": 6513, "prediction": "Returns the children of the given object ."}
{"id": 6515, "prediction": "Prints the tree ."}
{"id": 6517, "prediction": "Prints the tabs to the output ."}
{"id": 6519, "prediction": "Returns an image descriptor for the given id ."}
{"id": 6521, "prediction": "Sets the request header field ."}
{"id": 6523, "prediction": "Creates a new rule ."}
{"id": 6525, "prediction": "Creates a new rule jar ."}
{"id": 6527, "prediction": "Create image ."}
{"id": 6529, "prediction": "Gets the evaluator ."}
{"id": 6531, "prediction": "Add Guava resource properties ."}
{"id": 6533, "prediction": "Binds a member to the given member ."}
{"id": 6535, "prediction": "Optimize the graph ."}
{"id": 6537, "prediction": "Validate the page ."}
{"id": 6539, "prediction": "Get the edge of this vertex ."}
{"id": 6541, "prediction": "Checks to see if the given user belongs to the given user ."}
{"id": 6543, "prediction": "Add a yuby to the user"}
{"id": 6545, "prediction": "Clear the password ."}
{"id": 6547, "prediction": "Checks if the given string is valid ."}
{"id": 6549, "prediction": "Creates a new Evaluation instance ."}
{"id": 6551, "prediction": "Returns true if the annotation is an annotation ."}
{"id": 6553, "prediction": "Returns the package name of the given class ."}
{"id": 6555, "prediction": "Returns the class of the given object ."}
{"id": 6557, "prediction": "Find the best method for the given target object ."}
{"id": 6559, "prediction": "Get the property descriptors for the given class ."}
{"id": 6561, "prediction": "Returns the read method for the given class ."}
{"id": 6563, "prediction": "Open a projection scope ."}
{"id": 6565, "prediction": "Parses a long value ."}
{"id": 6567, "prediction": "Convert a value to a BigInteger ."}
{"id": 6569, "prediction": "Converts an object to a string ."}
{"id": 6571, "prediction": "Convert a value to a type"}
{"id": 6573, "prediction": "Gets the numeric type of the given int ."}
{"id": 6575, "prediction": "Creates a Number from a long value ."}
{"id": 6577, "prediction": "Generate an OGNL getter method ."}
{"id": 6579, "prediction": "Flatten the tree ."}
{"id": 6581, "prediction": "Escape a character ."}
{"id": 6583, "prediction": "Gets the value of the expression ."}
{"id": 6585, "prediction": "Sets the value of the given tree ."}
{"id": 6587, "prediction": "Gets the default watch service ."}
{"id": 6589, "prediction": "Reads the contents of a file ."}
{"id": 6591, "prediction": "Gets the archiving instance ."}
{"id": 6593, "prediction": "Reads the contents of a file ."}
{"id": 6595, "prediction": "Adds a system property ."}
{"id": 6597, "prediction": "Open the dialog ."}
{"id": 6599, "prediction": "Refresh the button state ."}
{"id": 6601, "prediction": "Return the selected folder ."}
{"id": 6603, "prediction": "Checks if the given file is valid ."}
{"id": 6605, "prediction": "Start a new list style ."}
{"id": 6607, "prediction": "Handle motion ."}
{"id": 6609, "prediction": "Compute the layout ."}
{"id": 6611, "prediction": "Adds the span to the Span ."}
{"id": 6613, "prediction": "Returns the dropdown view for the specified position ."}
{"id": 6615, "prediction": "Calculates the span between two paragraphs ."}
{"id": 6617, "prediction": "Determine the original file for the given URI ."}
{"id": 6619, "prediction": "Returns the local name for the given name ."}
{"id": 6621, "prediction": "Sets an attribute of the specified type ."}
{"id": 6623, "prediction": "Gets the name of the file ."}
{"id": 6625, "prediction": "Write byte array to buffer ."}
{"id": 6627, "prediction": "Reads data from the input stream ."}
{"id": 6629, "prediction": "Converts this buffer to a byte array ."}
{"id": 6631, "prediction": "Converts a path to a Unix separator ."}
{"id": 6633, "prediction": "Ensures that the highlight is visible ."}
{"id": 6635, "prediction": "Reset the document locator ."}
{"id": 6637, "prediction": "Set the element type ."}
{"id": 6639, "prediction": "Set the parent element ."}
{"id": 6641, "prediction": "Returns the value of the specified entity ."}
{"id": 6643, "prediction": "Applies the given value to the given editor ."}
{"id": 6645, "prediction": "Executes the operation ."}
{"id": 6647, "prediction": "Replaces all occurrences of the given string in the given string ."}
{"id": 6649, "prediction": "Sets the options ."}
{"id": 6651, "prediction": "Decode a file descriptor ."}
{"id": 6653, "prediction": "Gets the font fonts ."}
{"id": 6655, "prediction": "Initializes this element ."}
{"id": 6144, "prediction": "Get a GeoPackage"}
{"id": 6146, "prediction": "Check if the database is external"}
{"id": 6148, "prediction": "Gets the metadata for the given sort column ."}
{"id": 6150, "prediction": "Get the list of metadata where the column name is the name of the"}
{"id": 6152, "prediction": "Called when a view is created ."}
{"id": 6154, "prediction": "This method is called when the view is created ."}
{"id": 6156, "prediction": "Add an event to the log ."}
{"id": 6158, "prediction": "Retrieves a resource from the classpath ."}
{"id": 6160, "prediction": "Update the status of a resource ."}
{"id": 6162, "prediction": "New executor service ."}
{"id": 6164, "prediction": "Append the given event to the given trigger ."}
{"id": 6166, "prediction": "Returns the value associated with the given key ."}
{"id": 6168, "prediction": "Returns the next node ."}
{"id": 6170, "prediction": "Escapes the next character in the buffer ."}
{"id": 6172, "prediction": "Start the evaluator ."}
{"id": 6174, "prediction": "Initializes the context ."}
{"id": 6176, "prediction": "Setup the properties ."}
{"id": 6178, "prediction": "Gets the directory path ."}
{"id": 6180, "prediction": "Evaluate logging ."}
{"id": 6182, "prediction": "Update the mask if necessary ."}
{"id": 6184, "prediction": "Creates the key manager ."}
{"id": 6186, "prediction": "Creates a keystore from system properties ."}
{"id": 6188, "prediction": "Returns the URL for the given location ."}
{"id": 6190, "prediction": "Stop the logback ."}
{"id": 6192, "prediction": "Prints error status ."}
{"id": 6194, "prediction": "Handles a throwable exception ."}
{"id": 6196, "prediction": "Remove the end of the given key"}
{"id": 6198, "prediction": "Renames a file ."}
{"id": 6200, "prediction": "Get environment variable ."}
{"id": 6202, "prediction": "Sets the MDC property map ."}
{"id": 6204, "prediction": "Extract the stack data from the stack ."}
{"id": 6206, "prediction": "Adds a new status to the queue ."}
{"id": 6208, "prediction": "Lookup the implicit action list ."}
{"id": 6210, "prediction": "Sets the class loader ."}
{"id": 6212, "prediction": "Retrieves the value of a Boolean property ."}
{"id": 6214, "prediction": "Gets the array of MethodDescriptors ."}
{"id": 6216, "prediction": "Start the encoder ."}
{"id": 6218, "prediction": "Ends the context of an object ."}
{"id": 6220, "prediction": "Determines if the logging event should be discarded ."}
{"id": 6222, "prediction": "Add the logback hook ."}
{"id": 6224, "prediction": "Returns the set of enabled cipher suites ."}
{"id": 6226, "prediction": "Convert a String to a String"}
{"id": 6228, "prediction": "Add a new appender ."}
{"id": 6230, "prediction": "Detach an appender from its name ."}
{"id": 6232, "prediction": "Call this method ."}
{"id": 6234, "prediction": "Creates a Logger with the given name ."}
{"id": 6236, "prediction": "Log event ."}
{"id": 6238, "prediction": "Create the missing parent directories ."}
{"id": 6240, "prediction": "Converts an integer to a Level ."}
{"id": 6242, "prediction": "Gets a resource from the classpath ."}
{"id": 6244, "prediction": "Get the ClassLoader as a Class ."}
{"id": 6246, "prediction": "Starts the encoder ."}
{"id": 6248, "prediction": "Initializes the scope ."}
{"id": 6250, "prediction": "Evaluate a logging event ."}
{"id": 6252, "prediction": "Checks if two files are on the same file"}
{"id": 6254, "prediction": "Append an event to the queue ."}
{"id": 6256, "prediction": "Adds a new MDCValueLevel to the MDCValue ."}
{"id": 6258, "prediction": "Creates a composite converter ."}
{"id": 6260, "prediction": "Configure the URL ."}
{"id": 6262, "prediction": "Configures the input stream ."}
{"id": 6264, "prediction": "Processes the configuration ."}
{"id": 6266, "prediction": "Returns the property name for the given key ."}
{"id": 6268, "prediction": "Returns true if the given context has a status listener ."}
{"id": 6270, "prediction": "Starts the converter ."}
{"id": 6272, "prediction": "Returns the file header ."}
{"id": 6274, "prediction": "Start the application ."}
{"id": 6276, "prediction": "Creates a copy of clients ."}
{"id": 6278, "prediction": "Remove a client"}
{"id": 6280, "prediction": "Gets the value of the method ."}
{"id": 6282, "prediction": "Checks if the OS is Android ."}
{"id": 6284, "prediction": "Return a list of files in the given directory"}
{"id": 6286, "prediction": "Determines the number of bytes for a given string ."}
{"id": 6288, "prediction": "Clears expired logs ."}
{"id": 6290, "prediction": "Submits a log event ."}
{"id": 6292, "prediction": "Binds a logging event ."}
{"id": 6294, "prediction": "Compute the reference mask ."}
{"id": 6296, "prediction": "Insert exception ."}
{"id": 6298, "prediction": "Gets the effective level ."}
{"id": 6300, "prediction": "Checks if the given class is instantiated ."}
{"id": 6302, "prediction": "Parses an event ."}
{"id": 6304, "prediction": "Trims the head and end of the list of head events ."}
{"id": 6306, "prediction": "Returns true if the server is transient ."}
{"id": 6308, "prediction": "Ensure that the local index is valid ."}
{"id": 6310, "prediction": "Synchronized sync ."}
{"id": 6312, "prediction": "Lists all indexes in the database ."}
{"id": 6314, "prediction": "Converts an input stream to a byte array ."}
{"id": 6316, "prediction": "Returns the list of hosts that belong to ."}
{"id": 6318, "prediction": "Starts the query ."}
{"id": 6320, "prediction": "Returns the value associated with the given key ."}
{"id": 6322, "prediction": "Compare two strings ."}
{"id": 6324, "prediction": "Copies the given target to a directory ."}
{"id": 6326, "prediction": "Gets the static field value ."}
{"id": 6328, "prediction": "Formats a percentage ."}
{"id": 6330, "prediction": "Formats a long ."}
{"id": 6332, "prediction": "Validates a byte value ."}
{"id": 6334, "prediction": "Write a JSON integer ."}
{"id": 6336, "prediction": "Reads a JSON string ."}
{"id": 6338, "prediction": "Reads a JSON integer ."}
{"id": 6340, "prediction": "Read a base64 string ."}
{"id": 6342, "prediction": "Invokes the method on the request ."}
{"id": 6344, "prediction": "Gets a resource from FSPath ."}
{"id": 6346, "prediction": "Refresh the RepositoryView ."}
{"id": 6348, "prediction": "Open the Eclipse editor ."}
{"id": 6350, "prediction": "Prompts a login prompt for authentication ."}
{"id": 6352, "prediction": "Start the animation"}
{"id": 6354, "prediction": "Sets whether the given element is an atom ."}
{"id": 6356, "prediction": "Adds a condition to the collection ."}
{"id": 6358, "prediction": "Returns true if the given condition matches this condition ."}
{"id": 6360, "prediction": "Load the configuration file ."}
{"id": 6362, "prediction": "Creates a menu ."}
{"id": 6364, "prediction": "Adds a href to this link ."}
{"id": 6366, "prediction": "Remove a href from a href ."}
{"id": 6368, "prediction": "Gets the href ."}
{"id": 6370, "prediction": "Get a Java stack frame ."}
{"id": 6372, "prediction": "Checks if a collection contains a valid proposal ."}
{"id": 6374, "prediction": "Reset the input stream ."}
{"id": 6376, "prediction": "Adds a connection to the Connection ."}
{"id": 6378, "prediction": "Remove a connection ."}
{"id": 6380, "prediction": "Sets the value of the specified property ."}
{"id": 6382, "prediction": "Dump the given list of constraints ."}
{"id": 6384, "prediction": "Add a child to this vertex ."}
{"id": 6386, "prediction": "Starts the bundle ."}
{"id": 6388, "prediction": "Returns the resource string for the given key ."}
{"id": 6390, "prediction": "Gets the formatter colors for the display form ."}
{"id": 6392, "prediction": "Sets the date time ."}
{"id": 6394, "prediction": "Log an error message ."}
{"id": 6396, "prediction": "Adjusts the grid layout ."}
{"id": 6398, "prediction": "Calculates the number of columns ."}
{"id": 6657, "prediction": "Returns an InputStream for the given system ID ."}
{"id": 6659, "prediction": "Expands all entities in the source file ."}
{"id": 6661, "prediction": "Restart the stack ."}
{"id": 6663, "prediction": "Removes the element from the stack ."}
{"id": 6665, "prediction": "Returns true if the given namespace is a foreign namespace"}
{"id": 6667, "prediction": "Splits a string into an array of strings ."}
{"id": 6669, "prediction": "Creates a new name from the buffer ."}
{"id": 6671, "prediction": "Destroy all the listeners ."}
{"id": 6673, "prediction": "This method is called when the event is active ."}
{"id": 6675, "prediction": "Returns the zoom level ."}
{"id": 6677, "prediction": "Find the spans for a given paragraph ."}
{"id": 6679, "prediction": "Decode a query string"}
{"id": 6681, "prediction": "Rotate image ."}
{"id": 6683, "prediction": "Write a character ."}
{"id": 6685, "prediction": "Checks if the given name is equal to the given value ."}
{"id": 6687, "prediction": "Writes the namespace declarations to the namespace ."}
{"id": 6689, "prediction": "Creates a stream if it exists ."}
{"id": 6691, "prediction": "Completes the snapshot of the snapshot s snapshots ."}
{"id": 6693, "prediction": "Gets a list of records ."}
{"id": 6695, "prediction": "Try to find an action for an action ."}
{"id": 6697, "prediction": "Loads all snapshots from the store ."}
{"id": 6699, "prediction": "Replaces the occurrences of a string with a new pattern ."}
{"id": 6701, "prediction": "Add a report report ."}
{"id": 6703, "prediction": "Gets the configuration properties ."}
{"id": 6705, "prediction": "Converts preProcessors to PostProcessor ."}
{"id": 6707, "prediction": "Reloads the cache update ."}
{"id": 6709, "prediction": "Gets the servlet request ."}
{"id": 6711, "prediction": "Process an error message ."}
{"id": 6713, "prediction": "Processes a resource ."}
{"id": 6715, "prediction": "Locates InputStream ."}
{"id": 6717, "prediction": "Register change listeners ."}
{"id": 6719, "prediction": "Sets the WroConfiguration ."}
{"id": 6721, "prediction": "Merges the given imported model ."}
{"id": 6723, "prediction": "Applies the post processors to the cache ."}
{"id": 6725, "prediction": "Performs processing ."}
{"id": 6727, "prediction": "Load properties from the given input stream ."}
{"id": 6729, "prediction": "Creates a custom Wro manager factory ."}
{"id": 6731, "prediction": "Checks if the given group is a target group ."}
{"id": 6733, "prediction": "Gets the input stream as a resource ."}
{"id": 6735, "prediction": "Sets the model ."}
{"id": 6737, "prediction": "Merges the given list of resources ."}
{"id": 6739, "prediction": "Run the preprocessing process ."}
{"id": 6741, "prediction": "Decorate preProcessor ."}
{"id": 6743, "prediction": "Get all fields of the given object ."}
{"id": 6745, "prediction": "Compute a new image location"}
{"id": 6747, "prediction": "Sets the processed bundle ."}
{"id": 6749, "prediction": "Extract the variables from the given variables ."}
{"id": 6751, "prediction": "Replaces all variables in the given map with the given name ."}
{"id": 6753, "prediction": "Checks if the given resource type is acceptable ."}
{"id": 6755, "prediction": "Creates a new PathPatternDecorator which returns a PathPattern which can be used to create a PathPattern ."}
{"id": 6757, "prediction": "Create a new ResourceChangeHandler ."}
{"id": 6759, "prediction": "Processes a CSS import ."}
{"id": 6761, "prediction": "Checks if the given request is minimized ."}
{"id": 6763, "prediction": "Compute absolute url ."}
{"id": 6765, "prediction": "Gets the list of aliases ."}
{"id": 6767, "prediction": "Evaluate the given reader ."}
{"id": 6769, "prediction": "Schedules the resource bundle ."}
{"id": 6771, "prediction": "Creates the handler for the request ."}
{"id": 6773, "prediction": "Compute the destination folder ."}
{"id": 6775, "prediction": "Checks the change for a group ."}
{"id": 6777, "prediction": "Creates a new object pool ."}
{"id": 6779, "prediction": "Opens a JAR file ."}
{"id": 6781, "prediction": "Checks if the request is minized ."}
{"id": 6783, "prediction": "Creates a decoratorFactory that decorates the given list of decorated models ."}
{"id": 6785, "prediction": "Process the given string ."}
{"id": 6787, "prediction": "Called when a resource is processed ."}
{"id": 6789, "prediction": "Create the process ."}
{"id": 6791, "prediction": "Returns an array of TaskInfo ."}
{"id": 6793, "prediction": "Parse the header ."}
{"id": 6795, "prediction": "Gets the context info from the given location ."}
{"id": 6797, "prediction": "Checks if the given path matches the request URI ."}
{"id": 6799, "prediction": "Safely close the reader ."}
{"id": 6801, "prediction": "Clean the image url ."}
{"id": 6803, "prediction": "Generate data URI for the given input stream ."}
{"id": 6805, "prediction": "Sets the configuration ."}
{"id": 6807, "prediction": "Checks if the cache has changed ."}
{"id": 6809, "prediction": "Check if a resource has changed ."}
{"id": 6811, "prediction": "Checks if the given resource type matches the given resource type ."}
{"id": 6813, "prediction": "Encode a serializable object ."}
{"id": 6815, "prediction": "Parses a group ."}
{"id": 6817, "prediction": "Parse a resource ."}
{"id": 6819, "prediction": "Logs the current thread ."}
{"id": 6821, "prediction": "Get the named timer for the given name ."}
{"id": 6823, "prediction": "Prints the statistics ."}
{"id": 6825, "prediction": "Updates the number of counters to be processed ."}
{"id": 6827, "prediction": "Checks if the given value is smaller than the given counter ."}
{"id": 6829, "prediction": "Recursively iterate over the given property ."}
{"id": 6831, "prediction": "Restore state ."}
{"id": 6833, "prediction": "Restore the taxonomy ."}
{"id": 6835, "prediction": "Gets the evidence of the given object ."}
{"id": 6837, "prediction": "Invalidates the internal state of this process ."}
{"id": 6839, "prediction": "Get the collection of removed individuals from the list ."}
{"id": 6841, "prediction": "Removes the element at the specified position ."}
{"id": 6843, "prediction": "Gets the position of the element ."}
{"id": 6845, "prediction": "Add an element to the end of the element"}
{"id": 6847, "prediction": "Adds the given class to this timer ."}
{"id": 6849, "prediction": "Puts the given key into the map ."}
{"id": 6851, "prediction": "Enlarges the map ."}
{"id": 6853, "prediction": "Saves the configuration to disk ."}
{"id": 6855, "prediction": "Gets all instances of the given node ."}
{"id": 6857, "prediction": "Combine a Multiset to a list of hashes ."}
{"id": 6859, "prediction": "Copy input stream to output stream ."}
{"id": 6861, "prediction": "Process taxonomy ."}
{"id": 6863, "prediction": "Append an appendable to an appender ."}
{"id": 6865, "prediction": "Adds a new direct type node ."}
{"id": 6867, "prediction": "Returns a set containing the elements in the given set ."}
{"id": 6869, "prediction": "Adds the specified element to the list ."}
{"id": 6871, "prediction": "Adds a class to this class ."}
{"id": 6873, "prediction": "Set configuration options ."}
{"id": 6875, "prediction": "Prints the header ."}
{"id": 6877, "prediction": "Convert a char to a string ."}
{"id": 6879, "prediction": "Writes a resource ."}
{"id": 6881, "prediction": "Returns the property descriptor for the given property type ."}
{"id": 6883, "prediction": "Checks if the given class is a single value type ."}
{"id": 6885, "prediction": "Sets the type of the media type ."}
{"id": 6887, "prediction": "Adds a new value to the link ."}
{"id": 6889, "prediction": "Expand the URI"}
{"id": 6891, "prediction": "Gets the value of the link ."}
{"id": 6893, "prediction": "Returns the value of the given type ."}
{"id": 6895, "prediction": "Checks if the given property contains the given value ."}
{"id": 6897, "prediction": "Checks if this request is required ."}
{"id": 6899, "prediction": "Returns the parameter name of the request parameter"}
{"id": 6901, "prediction": "Determines the vocabab of the given mixin ."}
{"id": 6903, "prediction": "Append the form to the action"}
{"id": 6905, "prediction": "Appends a select parameter to the list ."}
{"id": 6907, "prediction": "Returns the partial URI template components ."}
{"id": 6909, "prediction": "Get first node by name"}
{"id": 6911, "prediction": "Returns an iterator over the hypernode iterator ."}
{"id": 6400, "prediction": "Fire a property change event ."}
{"id": 6402, "prediction": "Add the toolbar to the tool bar ."}
{"id": 6404, "prediction": "Creates a new context with the given locator ."}
{"id": 6406, "prediction": "Creates and displays the listeners ."}
{"id": 6408, "prediction": "Adds a URL to the URL ."}
{"id": 6410, "prediction": "Add a node to this node ."}
{"id": 6412, "prediction": "Sets the file length ."}
{"id": 6414, "prediction": "Add a state token ."}
{"id": 6416, "prediction": "Gets the property ."}
{"id": 6418, "prediction": "Set the property ."}
{"id": 6420, "prediction": "Returns the last non - dash line of the given text ."}
{"id": 6422, "prediction": "Binds two strings ."}
{"id": 6424, "prediction": "Creates the main process ."}
{"id": 6426, "prediction": "Returns the runtime id for the Eclipse ."}
{"id": 6428, "prediction": "Visits a node ."}
{"id": 6430, "prediction": "Add a remove ."}
{"id": 6432, "prediction": "Returns a new locator for the given resource URL ."}
{"id": 6434, "prediction": "Returns true if the given object has the same status code ."}
{"id": 6436, "prediction": "Creates a state from the given stream ."}
{"id": 6438, "prediction": "HTTP DELETE request"}
{"id": 6440, "prediction": "Get the status of a job ."}
{"id": 6442, "prediction": "Handles pull results ."}
{"id": 6444, "prediction": "Create a new active lock ."}
{"id": 6446, "prediction": "Read backwards from document ."}
{"id": 6448, "prediction": "Paint the background ."}
{"id": 6450, "prediction": "Returns an image descriptor for the given path ."}
{"id": 6452, "prediction": "Add a vertex ."}
{"id": 6454, "prediction": "Returns the width of the row ."}
{"id": 6456, "prediction": "Optimize this matrix ."}
{"id": 6458, "prediction": "Initialize the graph ."}
{"id": 6460, "prediction": "Get the Drools breakpoint ."}
{"id": 6462, "prediction": "Returns true if the device can be turned on ."}
{"id": 6464, "prediction": "Evaluate a multi - status response ."}
{"id": 6466, "prediction": "Gets the response stream ."}
{"id": 6468, "prediction": "Get the property ."}
{"id": 6470, "prediction": "Locks a lock ."}
{"id": 6472, "prediction": "Creates a check in the DB ."}
{"id": 6474, "prediction": "Remove all the properties from a collection ."}
{"id": 6476, "prediction": "Sets the content of an input stream ."}
{"id": 6478, "prediction": "Set a new property ."}
{"id": 6480, "prediction": "Updates the given document ."}
{"id": 6482, "prediction": "Deletes the response ."}
{"id": 6484, "prediction": "Checks if the given property has the given name ."}
{"id": 6486, "prediction": "Converts a byte array to a hex string ."}
{"id": 6488, "prediction": "Sets whether all the properties are all of the elements ."}
{"id": 6490, "prediction": "Set the property ."}
{"id": 6492, "prediction": "Updates the tree ."}
{"id": 6494, "prediction": "Step 2 . 1"}
{"id": 6496, "prediction": "Skip whitespace ."}
{"id": 6498, "prediction": "Commit the file changes ."}
{"id": 6500, "prediction": "Gets the content length ."}
{"id": 6502, "prediction": "Returns true if the given string is an overwrite ."}
{"id": 6504, "prediction": "Gets the timeout ."}
{"id": 6506, "prediction": "Sets the timeout ."}
{"id": 6508, "prediction": "Parse the file ."}
{"id": 6510, "prediction": "Strip object metadata ."}
{"id": 6512, "prediction": "Returns the children of the given text ."}
{"id": 6514, "prediction": "Adds a child node to the list ."}
{"id": 6516, "prediction": "Prints a node ."}
{"id": 6518, "prediction": "Reads a JsonValue from the given text ."}
{"id": 6520, "prediction": "Invokes the proxy ."}
{"id": 6522, "prediction": "Creates the rule jar file ."}
{"id": 6524, "prediction": "Create the rule flow ."}
{"id": 6526, "prediction": "Gets the selected items ."}
{"id": 6528, "prediction": "Gets the field name ."}
{"id": 6530, "prediction": "Returns the value of the field ."}
{"id": 6532, "prediction": "Sends a baseline control ."}
{"id": 6534, "prediction": "Returns the locator for the given locator ."}
{"id": 6536, "prediction": "Initialize the dialog ."}
{"id": 6538, "prediction": "Generate entity tag ."}
{"id": 6540, "prediction": "Validate OTPP"}
{"id": 6542, "prediction": "Gets the ykuser for the given id ."}
{"id": 6544, "prediction": "Verify OAuth"}
{"id": 6546, "prediction": "Returns the public ID for the given OAuth key ."}
{"id": 6548, "prediction": "Creates a new evaluation ."}
{"id": 6550, "prediction": "Clears the cache ."}
{"id": 6552, "prediction": "Returns the package name of the given object ."}
{"id": 6554, "prediction": "Returns the unique identifier for the given object ."}
{"id": 6556, "prediction": "Checks if two classes are identical ."}
{"id": 6558, "prediction": "Gets the value of the method property ."}
{"id": 6560, "prediction": "Gets a PropertyDescriptor from a named class ."}
{"id": 6562, "prediction": "Reads a character from the stream ."}
{"id": 6564, "prediction": "Select all AST nodes ."}
{"id": 6566, "prediction": "Parses a double value ."}
{"id": 6568, "prediction": "Convert a value to a BigDecimal ."}
{"id": 6570, "prediction": "Returns the numeric type of the given object ."}
{"id": 6572, "prediction": "Converts an object to an integer ."}
{"id": 6574, "prediction": "Gets the numeric type of v2 ."}
{"id": 6576, "prediction": "Removes the evaluation ."}
{"id": 6578, "prediction": "Generate an optional value setter method ."}
{"id": 6580, "prediction": "Initializes this node ."}
{"id": 6582, "prediction": "Sets the root node ."}
{"id": 6584, "prediction": "Sets the value of an expression ."}
{"id": 6586, "prediction": "Check if the given string is a valid expression ."}
{"id": 6588, "prediction": "Waits until the server starts ."}
{"id": 6590, "prediction": "Reloads the class loader ."}
{"id": 6592, "prediction": "Checks that all files that are present in the given archive ."}
{"id": 6594, "prediction": "Create the project ."}
{"id": 6596, "prediction": "Add system property ."}
{"id": 6598, "prediction": "Change the directory ."}
{"id": 6600, "prediction": "Creates a new file observer ."}
{"id": 6602, "prediction": "Creates a new folder ."}
{"id": 6604, "prediction": "Start the background job ."}
{"id": 6606, "prediction": "Finds the end tag style ."}
{"id": 6608, "prediction": "Get the top rectangle"}
{"id": 6610, "prediction": "Register a RTFTextListener ."}
{"id": 6612, "prediction": "Updates the spinner view ."}
{"id": 6614, "prediction": "Convert RTF text to RTF ."}
{"id": 6616, "prediction": "Creates a unique file ."}
{"id": 6618, "prediction": "Returns the namespace of the given namespace ."}
{"id": 6620, "prediction": "Sets an attribute ."}
{"id": 6622, "prediction": "Get the font name from the file path ."}
{"id": 6624, "prediction": "Creates a new buffer ."}
{"id": 6626, "prediction": "Writes a byte to the buffer ."}
{"id": 6628, "prediction": "Writes the buffer to the output stream ."}
{"id": 6630, "prediction": "Set the font size ."}
{"id": 6632, "prediction": "Recompute the focus ."}
{"id": 6634, "prediction": "Calculates the center of the highlight view ."}
{"id": 6636, "prediction": "Validates the given string ."}
{"id": 6638, "prediction": "Sets the value of an attribute ."}
{"id": 6640, "prediction": "Returns the element type for the given name ."}
{"id": 6642, "prediction": "Cleans up the segments in the given text ."}
{"id": 6644, "prediction": "Checks if the given domain is valid ."}
{"id": 6646, "prediction": "Reduces the edit text ."}
{"id": 6648, "prediction": "Gets the thread status ."}
{"id": 6650, "prediction": "Returns true if the thread can be decoding ."}
{"id": 6652, "prediction": "Get the set of RTTypefaces from the given context ."}
{"id": 6654, "prediction": "Gets the system font names ."}
{"id": 6913, "prediction": "Creates a new PersistentTreeMap from an iterable ."}
{"id": 6915, "prediction": "Returns an immutable set of entries in this tree ."}
{"id": 6917, "prediction": "Creates an XformProvider from an iterable ."}
{"id": 6919, "prediction": "Drop a function from the function ."}
{"id": 6921, "prediction": "Creates a new tuple from the given entry ."}
{"id": 6923, "prediction": "Registers an array of classes ."}
{"id": 6925, "prediction": "Adds a new node to the tree ."}
{"id": 6927, "prediction": "Returns a mutable set containing all the items in the specified array ."}
{"id": 6929, "prediction": "Creates a set of items from the given array ."}
{"id": 6931, "prediction": "Returns an unmodifiable view of the given items ."}
{"id": 6933, "prediction": "Creates a string representation of an array of items ."}
{"id": 6935, "prediction": "Applies a value to the pool ."}
{"id": 6937, "prediction": "Returns a copy of the specified array ."}
{"id": 6939, "prediction": "Starts the async operation ."}
{"id": 6941, "prediction": "Validates the given directory ."}
{"id": 6943, "prediction": "Copy methods from source to destination ."}
{"id": 6945, "prediction": "Creates a leaf tree ."}
{"id": 6947, "prediction": "Returns true if the given param is enabled ."}
{"id": 6949, "prediction": "Installs the service ."}
{"id": 6951, "prediction": "Checks if the given resource name is referenced by the RA link ."}
{"id": 6953, "prediction": "Resets all usage parameters ."}
{"id": 6955, "prediction": "Get the profile for the given profile ."}
{"id": 6957, "prediction": "Displays the result ."}
{"id": 6959, "prediction": "Executes a transaction ."}
{"id": 6961, "prediction": "Removes the name from the node ."}
{"id": 6963, "prediction": "Get the name bindings for this node ."}
{"id": 6965, "prediction": "Checks if the given TraceLevel is higher than this one ."}
{"id": 6967, "prediction": "Puts an input stream into the output stream ."}
{"id": 6969, "prediction": "Attaches the given SbbEntity to the given SbEntity ."}
{"id": 6971, "prediction": "Returns true if the node is attached to this bbserver ."}
{"id": 6973, "prediction": "Attaches a timer to the given timer ."}
{"id": 6975, "prediction": "Returns true if the clock has been attached ."}
{"id": 6977, "prediction": "Adds a name bound to this node ."}
{"id": 6979, "prediction": "Returns true if this node is bound ."}
{"id": 6981, "prediction": "Sets the cmp attribute ."}
{"id": 6983, "prediction": "Returns a copy of the CmpAttributes ."}
{"id": 6985, "prediction": "Sends a usage notification ."}
{"id": 6987, "prediction": "Updates the deployed components ."}
{"id": 6989, "prediction": "Uninstalls a deployment ."}
{"id": 6991, "prediction": "Returns the status of the deployment ."}
{"id": 6993, "prediction": "Gets the logger ."}
{"id": 6995, "prediction": "Gets the Sbb entities ."}
{"id": 6997, "prediction": "Gets the code source code source ."}
{"id": 6999, "prediction": "Remove the profile from the profile"}
{"id": 7001, "prediction": "This method is called when an instance is active ."}
{"id": 7003, "prediction": "Activate this instance ."}
{"id": 7005, "prediction": "Schedule all activities ."}
{"id": 7007, "prediction": "Returns the ResourceInterfaceInterface for the given ResourceType ."}
{"id": 7009, "prediction": "Determine the ActivityHandle for the given handle ."}
{"id": 7011, "prediction": "This method is called when the configuration is updated ."}
{"id": 7013, "prediction": "Called when a resource object is stopped ."}
{"id": 7015, "prediction": "Unregister resource ."}
{"id": 7017, "prediction": "Declarative Services method ."}
{"id": 7019, "prediction": "Resume the execution context ."}
{"id": 7021, "prediction": "Remove the MBeanServer"}
{"id": 7023, "prediction": "Decorate the abstract class ."}
{"id": 7025, "prediction": "Fire an event ."}
{"id": 7027, "prediction": "Gets the service parameter set ."}
{"id": 7029, "prediction": "Gets the super methods from the given interface ."}
{"id": 7031, "prediction": "Remove object pool ."}
{"id": 7033, "prediction": "Adds an alarm to the alarm ."}
{"id": 7035, "prediction": "Gets the event descriptor descriptor ."}
{"id": 7037, "prediction": "Initialize the deployment ."}
{"id": 7039, "prediction": "Stop the deployment"}
{"id": 7041, "prediction": "Execute actions ."}
{"id": 7043, "prediction": "Executes the after rollback actions ."}
{"id": 7045, "prediction": "Execute before commit priority actions ."}
{"id": 7047, "prediction": "Creates a tracer ."}
{"id": 7049, "prediction": "Register the properties ."}
{"id": 7051, "prediction": "Gets the object pool ."}
{"id": 7053, "prediction": "Executes the action ."}
{"id": 7055, "prediction": "End the activity ."}
{"id": 7057, "prediction": "Fire an event ."}
{"id": 7059, "prediction": "Make the getter method ."}
{"id": 7061, "prediction": "Set the profile ID ."}
{"id": 7063, "prediction": "Returns true if this object contains the given object ."}
{"id": 7065, "prediction": "Removes all items from this collection ."}
{"id": 7067, "prediction": "Resolve the internal state ."}
{"id": 7069, "prediction": "Add profile call ."}
{"id": 7071, "prediction": "Pass the profile object to remove profile object from the profile ."}
{"id": 7073, "prediction": "Generate the activity context interface ."}
{"id": 7075, "prediction": "Set the cache attribute ."}
{"id": 7077, "prediction": "Remove naming bindings ."}
{"id": 7079, "prediction": "Attaches a timer to the cache ."}
{"id": 7081, "prediction": "Attaches the given SBB entity to the cache ."}
{"id": 7083, "prediction": "Gets SbbAttachmentSet ."}
{"id": 7085, "prediction": "Add a component to the deployment ."}
{"id": 7087, "prediction": "Checks if the dependencies are satisfied ."}
{"id": 7089, "prediction": "Gets all the actions that have been executed ."}
{"id": 7091, "prediction": "Checks if the component is present in the JNDI"}
{"id": 7093, "prediction": "Get object name from profile table"}
{"id": 7095, "prediction": "Sets the cmp field ."}
{"id": 7097, "prediction": "Determine whether or not the profile should be started ."}
{"id": 7099, "prediction": "Initialize the management method invocation ."}
{"id": 7101, "prediction": "Deletes the given path ."}
{"id": 7103, "prediction": "Gets the default usage parameter setter ."}
{"id": 7105, "prediction": "Create the fire event handlers ."}
{"id": 7107, "prediction": "Adds the given expression to the list of cycles ."}
{"id": 7109, "prediction": "Rebinds a named object with the specified name ."}
{"id": 7111, "prediction": "Invoke a method on the proxy ."}
{"id": 7113, "prediction": "Sets the value of the given field ."}
{"id": 7115, "prediction": "Set the profile context ."}
{"id": 7117, "prediction": "Declarative Services method for unsetting the profile context ."}
{"id": 7119, "prediction": "Fires a profile event ."}
{"id": 7121, "prediction": "Creates a class from the given interfaces ."}
{"id": 7123, "prediction": "Add an annotation ."}
{"id": 7125, "prediction": "Get the activity context for the given activity ."}
{"id": 7127, "prediction": "Sets the deployment unit ."}
{"id": 7129, "prediction": "Start the activity ."}
{"id": 7131, "prediction": "Gets all interfaces of the given class ."}
{"id": 7133, "prediction": "Checks if the tracer name is valid ."}
{"id": 7135, "prediction": "Checks if the component is dependent on the component ."}
{"id": 7137, "prediction": "Gets the entity manager ."}
{"id": 7139, "prediction": "Switch class loader ."}
{"id": 7141, "prediction": "Checks if the transaction is a transaction ."}
{"id": 7143, "prediction": "Check if the profile is visible ."}
{"id": 7145, "prediction": "Get the list of logger names"}
{"id": 7147, "prediction": "Clear all loggers ."}
{"id": 7149, "prediction": "Add a new socket handler ."}
{"id": 7151, "prediction": "Convert tracer name to logger name"}
{"id": 7153, "prediction": "Assigns the log level ."}
{"id": 7155, "prediction": "Sends a notification to the trace ."}
{"id": 7157, "prediction": "Serialize an object to a serialized object ."}
{"id": 7159, "prediction": "Add a direct dependency ."}
{"id": 7161, "prediction": "Finds a class by its name ."}
{"id": 7163, "prediction": "Returns an enumeration of URLs for the given name ."}
{"id": 7165, "prediction": "Resume a transaction ."}
{"id": 7167, "prediction": "Gets the set of resource references for the given component ."}
{"id": 7169, "prediction": "Shuts down the cluster ."}
{"id": 7171, "prediction": "Generate a method parameter setter for a method parameter ."}
{"id": 7173, "prediction": "Builds a Polygon ."}
{"id": 7175, "prediction": "Execute a transaction ."}
{"id": 7177, "prediction": "Get the region s region ."}
{"id": 7179, "prediction": "Gets the onType object from the annotation context ."}
{"id": 7181, "prediction": "Add a view hint ."}
{"id": 7183, "prediction": "Adds a renderings to this resource ."}
{"id": 7185, "prediction": "Merges two image profiles ."}
{"id": 7187, "prediction": "Creates a size request from a String ."}
{"id": 7189, "prediction": "Get the dump of the file"}
{"id": 7191, "prediction": "Pushes the device to the current device ."}
{"id": 7193, "prediction": "Pulls the dump of the pc to the given pc"}
{"id": 7195, "prediction": "Removes all tabs from the tab ."}
{"id": 7197, "prediction": "Tokenizes a collection of HTML tags ."}
{"id": 7199, "prediction": "Escape special chars for special characters ."}
{"id": 7201, "prediction": "Closes this statement ."}
{"id": 7203, "prediction": "Writes the Filer to the Filer ."}
{"id": 7205, "prediction": "Append the bits of a bit vector ."}
{"id": 7207, "prediction": "Gets a JSON object from a path ."}
{"id": 7209, "prediction": "Sets the Klov report ."}
{"id": 7211, "prediction": "Set the system info ."}
{"id": 7213, "prediction": "Create a Selector with the given alias ."}
{"id": 7215, "prediction": "Extract all annotations for a given property"}
{"id": 7217, "prediction": "Get the PropertyDescriptor for the given type ."}
{"id": 7219, "prediction": "Creates a new object from the given map ."}
{"id": 7221, "prediction": "Creates a new instance from a set of values ."}
{"id": 7223, "prediction": "Convert an object to a Map ."}
{"id": 7225, "prediction": "Creates a validator for the given list of validators ."}
{"id": 7227, "prediction": "Lookup a validator in the registry ."}
{"id": 7229, "prediction": "Checks if the property is blank ."}
{"id": 7231, "prediction": "Returns the size of the cache ."}
{"id": 7233, "prediction": "Returns the default options ."}
{"id": 7235, "prediction": "Writes all values in the given map to the given map ."}
{"id": 7237, "prediction": "Searches for a key - value pair ."}
{"id": 7239, "prediction": "Closes the database ."}
{"id": 7241, "prediction": "Reduces the value by the given array ."}
{"id": 7243, "prediction": "Returns the mean value of the double array"}
{"id": 7245, "prediction": "Calculate the reduction of a float array"}
{"id": 7247, "prediction": "Checks if the given object matches the given criteria ."}
{"id": 7249, "prediction": "Create criteria from list ."}
{"id": 7251, "prediction": "Adds an array to the array ."}
{"id": 7253, "prediction": "Returns the first element of the given list ."}
{"id": 7255, "prediction": "Returns the last slice of the given list ."}
{"id": 7257, "prediction": "Returns the minimum element of the list ."}
{"id": 7259, "prediction": "Process a map ."}
{"id": 7261, "prediction": "Creates a map from the given map ."}
{"id": 7263, "prediction": "Creates a tool with the given name and name space ."}
{"id": 7265, "prediction": "Adds a hex character to the buffer ."}
{"id": 7267, "prediction": "Process write operations ."}
{"id": 7269, "prediction": "Returns the string at the specified index ."}
{"id": 7271, "prediction": "Checks if the given character is in the given string ."}
{"id": 7273, "prediction": "Adds the given objects to the string ."}
{"id": 7275, "prediction": "Split a string into a char array ."}
{"id": 7277, "prediction": "Splits an array of strings into a string ."}
{"id": 7279, "prediction": "Converts a string to a camel case ."}
{"id": 7281, "prediction": "Returns the lower case of the given string ."}
{"id": 7283, "prediction": "Creates a Sort from the given sorts ."}
{"id": 7285, "prediction": "Replies the comparator for this field ."}
{"id": 7287, "prediction": "Checks if the given value is in the given map ."}
{"id": 7289, "prediction": "Checks if two arrays are equal ."}
{"id": 7291, "prediction": "Rounds the given number to the given number ."}
{"id": 7293, "prediction": "Sort the fields by the given list ."}
{"id": 7295, "prediction": "Converts an object to a List ."}
{"id": 7297, "prediction": "Deep copy ."}
{"id": 7299, "prediction": "Checks if a class has a static field ."}
{"id": 7301, "prediction": "Gets the first supertype of the given class ."}
{"id": 7303, "prediction": "Compares this cache entry ."}
{"id": 7305, "prediction": "Sorts the given list ."}
{"id": 7307, "prediction": "Sort entries by the given map ."}
{"id": 7309, "prediction": "Sort keys by the given component type ."}
{"id": 7311, "prediction": "Returns a comparator that can be used to sort a comparator ."}
{"id": 7313, "prediction": "Returns the value associated with the given key ."}
{"id": 7315, "prediction": "Returns the number of elements in the queue ."}
{"id": 7317, "prediction": "Initialize the class if necessary ."}
{"id": 7319, "prediction": "Determines if the process should exit ."}
{"id": 7321, "prediction": "Queues a flush to a flush ."}
{"id": 7323, "prediction": "Start monitoring ."}
{"id": 7325, "prediction": "Main entry point for the query ."}
{"id": 7327, "prediction": "Sets the time out of the file ."}
{"id": 7329, "prediction": "Close the output stream ."}
{"id": 7331, "prediction": "Writes the data to disk ."}
{"id": 7333, "prediction": "Put all values in the map ."}
{"id": 7335, "prediction": "Reads the meta data from the specified class ."}
{"id": 7337, "prediction": "Reads the validator meta data ."}
{"id": 7339, "prediction": "Extracts all validators from the given annotations ."}
{"id": 7341, "prediction": "Split a string into a char array ."}
{"id": 7343, "prediction": "Splits a string into a String array of strings ."}
{"id": 7345, "prediction": "Splits a string into a range of characters ."}
{"id": 7347, "prediction": "Parse an int from a buffer ."}
{"id": 7349, "prediction": "Gets a property by path ."}
{"id": 7351, "prediction": "Returns the type of the given property ."}
{"id": 7353, "prediction": "Sets the value of a property ."}
{"id": 7355, "prediction": "Gets the value of a property ."}
{"id": 7357, "prediction": "Initialize this message ."}
{"id": 7359, "prediction": "Creates a new message ."}
{"id": 7361, "prediction": "Returns the subject of the current subject ."}
{"id": 7363, "prediction": "Send http request ."}
{"id": 7365, "prediction": "Creates a database ."}
{"id": 7367, "prediction": "Gets a list of resources ."}
{"id": 7369, "prediction": "Query the value for the given class"}
{"id": 7371, "prediction": "Synchronize all documents in the database ."}
{"id": 7373, "prediction": "Gets a list of all DesignDocs from a Proposal ."}
{"id": 7375, "prediction": "Save the database"}
{"id": 7377, "prediction": "Find all the Replicator document"}
{"id": 7379, "prediction": "Finds an object by id ."}
{"id": 7381, "prediction": "Checks if the document contains the given id ."}
{"id": 7383, "prediction": "Perform a HTTP PUT request ."}
{"id": 7385, "prediction": "Perform a POST request ."}
{"id": 7387, "prediction": "Validates the response ."}
{"id": 7389, "prediction": "Adds an attachment ."}
{"id": 7391, "prediction": "Read next row ."}
{"id": 7393, "prediction": "Shuts down the active locks ."}
{"id": 7395, "prediction": "Add tags ."}
{"id": 7397, "prediction": "Returns the namespace id for the given namespace ."}
{"id": 7399, "prediction": "Sends authentication request ."}
{"id": 7401, "prediction": "Generate the subject access for the subject ."}
{"id": 7403, "prediction": "On client failure ."}
{"id": 7405, "prediction": "Retrieves the scheduled job details ."}
{"id": 7407, "prediction": "Ends the exchange ."}
{"id": 7409, "prediction": "Converts a step to buckets ."}
{"id": 7411, "prediction": "Sends a message to the producer ."}
{"id": 7413, "prediction": "Scans the given scan parameters ."}
{"id": 7415, "prediction": "Adds a file to the zip archive ."}
{"id": 7417, "prediction": "Builds a file ."}
{"id": 7419, "prediction": "Retrieves the content of a CID resource ."}
{"id": 7421, "prediction": "Upload a link to a file"}
{"id": 7423, "prediction": "Creates a new File with the given parent directory ."}
{"id": 6656, "prediction": "Get the reader for the given input stream ."}
{"id": 6658, "prediction": "Sets the new attribute ."}
{"id": 6660, "prediction": "Look up an entity in the schema ."}
{"id": 6662, "prediction": "Pop the stack ."}
{"id": 6664, "prediction": "Returns the prefix of the given name ."}
{"id": 6666, "prediction": "Removes all quotes from a string ."}
{"id": 6668, "prediction": "Remove the element from the stack ."}
{"id": 6670, "prediction": "Updates the state of this instance ."}
{"id": 6672, "prediction": "Called when an event is active ."}
{"id": 6674, "prediction": "Get the base matrix ."}
{"id": 6676, "prediction": "Checks if the given selection is in the text ."}
{"id": 6678, "prediction": "Encodes the given URL ."}
{"id": 6680, "prediction": "Pick up the directory for the specified directory ."}
{"id": 6682, "prediction": "Sets the output ."}
{"id": 6684, "prediction": "Writes a string to the output stream ."}
{"id": 6686, "prediction": "Writes a string to the output stream ."}
{"id": 6688, "prediction": "Write the name ."}
{"id": 6690, "prediction": "Wait for stream activation ."}
{"id": 6692, "prediction": "Waits for the next transaction to be executed ."}
{"id": 6694, "prediction": "Performs the given action with the given retries ."}
{"id": 6696, "prediction": "Checks if a bucket is accessible ."}
{"id": 6698, "prediction": "Trigger a wildcard expansion ."}
{"id": 6700, "prediction": "Delete any of the given chars"}
{"id": 6702, "prediction": "Update the properties with the given configuration ."}
{"id": 6704, "prediction": "Creates an InputStream based on the wro file name ."}
{"id": 6706, "prediction": "Compiles the given script ."}
{"id": 6708, "prediction": "Reloads the model ."}
{"id": 6710, "prediction": "Creates a Transformer transformer that represents a base name ."}
{"id": 6712, "prediction": "Sends a redirect to the given resource ."}
{"id": 6714, "prediction": "Create a new expand handler for the specified group ."}
{"id": 6716, "prediction": "Creates the WroConfiguration object ."}
{"id": 6718, "prediction": "Process request ."}
{"id": 6720, "prediction": "Detect duplicate groups ."}
{"id": 6722, "prediction": "Locates an input stream ."}
{"id": 6724, "prediction": "Decorate a processor ."}
{"id": 6726, "prediction": "Split the options into an array ."}
{"id": 6728, "prediction": "Parse a list of properties ."}
{"id": 6730, "prediction": "Persists the groups of the given groups ."}
{"id": 6732, "prediction": "Extend the classpath ."}
{"id": 6734, "prediction": "Initializes the WroManagerFactory ."}
{"id": 6736, "prediction": "Compiles the given handle ."}
{"id": 6738, "prediction": "Process a list of resources ."}
{"id": 6740, "prediction": "Applies all pre processors to the given resource ."}
{"id": 6742, "prediction": "Persist the fallback storage ."}
{"id": 6744, "prediction": "Rewrite the image ."}
{"id": 6746, "prediction": "Add a model transformer ."}
{"id": 6748, "prediction": "Initialize the folder path ."}
{"id": 6750, "prediction": "Parse a string ."}
{"id": 6752, "prediction": "Converts a resource into PreProcessor ."}
{"id": 6754, "prediction": "Apply gzip response ."}
{"id": 6756, "prediction": "Create a PathPatternDecor that will be used to create a PathPattern that will be used to create a PathPattern ."}
{"id": 6758, "prediction": "Recursively remember the fingerprint ."}
{"id": 6760, "prediction": "Filters the items in the collection ."}
{"id": 6762, "prediction": "Finds all resources that match the given resource ."}
{"id": 6764, "prediction": "Converts an array of strings to a string ."}
{"id": 6766, "prediction": "Creates the context object ."}
{"id": 6768, "prediction": "Evaluate the script ."}
{"id": 6770, "prediction": "Check if the request is a handler"}
{"id": 6772, "prediction": "Rename a group ."}
{"id": 6774, "prediction": "Process a group ."}
{"id": 6776, "prediction": "Locates an input stream into a resource ."}
{"id": 6778, "prediction": "Locates an input stream ."}
{"id": 6780, "prediction": "Extracts the path from URI ."}
{"id": 6782, "prediction": "Add uri locators ."}
{"id": 6784, "prediction": "Add a RequireRequire ."}
{"id": 6786, "prediction": "Logs the summary ."}
{"id": 6788, "prediction": "Gets the lock for the given key ."}
{"id": 6790, "prediction": "Parse a list of properties ."}
{"id": 6792, "prediction": "Gets the compilation command ."}
{"id": 6794, "prediction": "Add no caching headers ."}
{"id": 6796, "prediction": "Gets the servlet path from the given location ."}
{"id": 6798, "prediction": "Loads a regular expression from a string ."}
{"id": 6800, "prediction": "Creates a temporary file ."}
{"id": 6802, "prediction": "Sets an attribute ."}
{"id": 6804, "prediction": "Generate data URI ."}
{"id": 6806, "prediction": "Declarative Services method ."}
{"id": 6808, "prediction": "Called when an exception occurs ."}
{"id": 6810, "prediction": "Updates the hash for the group ."}
{"id": 6812, "prediction": "Creates a process ."}
{"id": 6814, "prediction": "Process the tag groups ."}
{"id": 6816, "prediction": "Create a group element ."}
{"id": 6818, "prediction": "Gets the resources for a group ."}
{"id": 6820, "prediction": "Stop the given timer name ."}
{"id": 6822, "prediction": "Get the name of the given timer ."}
{"id": 6824, "prediction": "Notify all workers that have been started ."}
{"id": 6826, "prediction": "Updates all counters for the given job ."}
{"id": 6828, "prediction": "Determines the default visitor for the given rule ."}
{"id": 6830, "prediction": "Ensure that the node is loading ."}
{"id": 6832, "prediction": "Checks if the consistency check is consistent ."}
{"id": 6834, "prediction": "Restore instances from an instance ."}
{"id": 6836, "prediction": "Initializes the worker ."}
{"id": 6838, "prediction": "Gets the collection of the entity ."}
{"id": 6840, "prediction": "Creates an UnsupportedOperationException ."}
{"id": 6842, "prediction": "Removes a value from the v ."}
{"id": 6844, "prediction": "Returns true if the given object contains the given object ."}
{"id": 6846, "prediction": "Checks the number of occurrences ."}
{"id": 6848, "prediction": "Adds a new rule to the timer ."}
{"id": 6850, "prediction": "Removes an entry from the map ."}
{"id": 6852, "prediction": "Shrinks the current value to the given key ."}
{"id": 6854, "prediction": "Writes a list of classes to an output stream ."}
{"id": 6856, "prediction": "Removes all elements from the map ."}
{"id": 6858, "prediction": "Combine two arrays together ."}
{"id": 6860, "prediction": "Creates a new InCompletionMonitor that will be added to the given monitor ."}
{"id": 6862, "prediction": "Submits a buffer to the buffer ."}
{"id": 6864, "prediction": "Marks the given query ."}
{"id": 6866, "prediction": "Checks that the given start position is valid ."}
{"id": 6868, "prediction": "Maps a set of functor to a Set ."}
{"id": 6870, "prediction": "Removes the specified object from the map ."}
{"id": 6872, "prediction": "Logs memory usage ."}
{"id": 6874, "prediction": "Shutdown the process ."}
{"id": 6876, "prediction": "Prints an array of values ."}
{"id": 6878, "prediction": "Adds the rule counter ."}
{"id": 6880, "prediction": "Gets the action input parameter ."}
{"id": 6882, "prediction": "Gets the required parameters ."}
{"id": 6884, "prediction": "Add a rel ."}
{"id": 6886, "prediction": "Add a hrflangl to the HReflangl"}
{"id": 6888, "prediction": "Adds a link param ."}
{"id": 6890, "prediction": "Gets the list of rels ."}
{"id": 6892, "prediction": "Returns true if all required parameters are satisfied ."}
{"id": 6894, "prediction": "Returns whether the given property is hidden ."}
{"id": 6896, "prediction": "Returns whether or not the given property value should be hidden or not ."}
{"id": 6898, "prediction": "Returns the default value ."}
{"id": 6900, "prediction": "Gets the value of a property ."}
{"id": 6902, "prediction": "Returns the query string ."}
{"id": 6904, "prediction": "Write input button ."}
{"id": 6906, "prediction": "Adds the action to the action builder ."}
{"id": 6908, "prediction": "Removes the given URI template components from the given action ."}
{"id": 6910, "prediction": "Get the first node by rel"}
{"id": 7425, "prediction": "Registers the given STGroup ."}
{"id": 7427, "prediction": "Prepare the template ."}
{"id": 7429, "prediction": "Sets a property ."}
{"id": 7431, "prediction": "Creates a supplier from a directory ."}
{"id": 7433, "prediction": "Parse a file ."}
{"id": 7435, "prediction": "Gets the elements of the given element ."}
{"id": 7437, "prediction": "Gets the first child element of the given parent ."}
{"id": 7439, "prediction": "Validate XML Schema ."}
{"id": 7441, "prediction": "Returns the content of the given stream ."}
{"id": 7443, "prediction": "Process a zip file ."}
{"id": 7445, "prediction": "Sets the signature ."}
{"id": 7447, "prediction": "Sign the request ."}
{"id": 7449, "prediction": "Completes a multipart upload ."}
{"id": 7451, "prediction": "Adds the entry to the notification state ."}
{"id": 7453, "prediction": "Get notification ."}
{"id": 7455, "prediction": "Returns a list of Addreses for the given notification ."}
{"id": 7457, "prediction": "Returns information about an event ."}
{"id": 7459, "prediction": "Returns the entry for the given entry ."}
{"id": 7461, "prediction": "Returns the number of notifications ."}
{"id": 7463, "prediction": "Retrieves the SSP notification from the server ."}
{"id": 7465, "prediction": "Maps a notification to a JSON response ."}
{"id": 7467, "prediction": "Attaches the actions to the queue ."}
{"id": 7469, "prediction": "Gets the notification category ."}
{"id": 7471, "prediction": "Sets the read notification ."}
{"id": 7473, "prediction": "Gets the user ID from the request ."}
{"id": 7475, "prediction": "Invokes the hide action ."}
{"id": 7477, "prediction": "Normalize the GeoTuple"}
{"id": 7479, "prediction": "Computes the closest point on the specified point ."}
{"id": 7481, "prediction": "Set the Segment"}
{"id": 7483, "prediction": "Convert a polygon to a polygon"}
{"id": 7485, "prediction": "Determines the bounding rectangle of the given rectangle ."}
{"id": 7487, "prediction": "Computes the center of a quadratic ."}
{"id": 7489, "prediction": "Compute convex hull ."}
{"id": 7491, "prediction": "Calculates the error point for the target point"}
{"id": 7493, "prediction": "Returns true if the specified rectangle contains the specified point ."}
{"id": 7495, "prediction": "Returns the intersection of two lines ."}
{"id": 7497, "prediction": "Computes the intersection between two lines ."}
{"id": 7499, "prediction": "Compute intersection between two points ."}
{"id": 7501, "prediction": "Calculates the intersection of two points ."}
{"id": 7503, "prediction": "Converts a quaternion to a matrix ."}
{"id": 7505, "prediction": "Sets rotation ."}
{"id": 7507, "prediction": "Computes the rotation matrix ."}
{"id": 7509, "prediction": "Convert an Euler to a matrix ."}
{"id": 7511, "prediction": "Sets the angle of the curve ."}
{"id": 7513, "prediction": "Sets the transitions ."}
{"id": 7515, "prediction": "Searches the center of the centroid"}
{"id": 7517, "prediction": "Returns the length of the side of the triangle ."}
{"id": 7519, "prediction": "Convert a CONCTION to a CONCTION ."}
{"id": 7521, "prediction": "Converts a Paracian FIBic to a Paracian FIBic ."}
{"id": 7523, "prediction": "Divide a point ."}
{"id": 7525, "prediction": "Convert a tuple to a tuple ."}
{"id": 7527, "prediction": "Returns the half - half - th half of the specified axis ."}
{"id": 7529, "prediction": "Returns true if the plane is contained inside the plane ."}
{"id": 7531, "prediction": "Interpolate two points ."}
{"id": 7533, "prediction": "Calculate the polygon"}
{"id": 7535, "prediction": "Converts a matrix into a homography matrix ."}
{"id": 7537, "prediction": "Calculate the axis x y coordinate ."}
{"id": 7539, "prediction": "Converts a vector to a unit vector ."}
{"id": 7541, "prediction": "Calculates the perimeter of the polygon"}
{"id": 7543, "prediction": "Computes the point for a line"}
{"id": 7545, "prediction": "Computes the closest point from a line segment ."}
{"id": 7547, "prediction": "Transform a point to a point ."}
{"id": 7549, "prediction": "Checks if the given quadr is equal to the given quadr ."}
{"id": 7551, "prediction": "Convert a line parameter to a line ."}
{"id": 7553, "prediction": "Convert a line segment to a line ."}
{"id": 7555, "prediction": "Convert a point to a line"}
{"id": 7557, "prediction": "Converts a line of lines to a line ."}
{"id": 7559, "prediction": "Convert a line to a line"}
{"id": 7561, "prediction": "Convert a plane to a plane ."}
{"id": 7563, "prediction": "Converts a point to a point ."}
{"id": 7565, "prediction": "Checks if the given t is identical ."}
{"id": 7567, "prediction": "Returns the norm of the dimension"}
{"id": 7569, "prediction": "Returns true if all the elements are uncountable ."}
{"id": 7571, "prediction": "Center the point of the storage ."}
{"id": 7573, "prediction": "Returns true if the given point is an infinite value ."}
{"id": 7575, "prediction": "Converts a point to an image ."}
{"id": 7577, "prediction": "Checks if two signs are identical ."}
{"id": 7579, "prediction": "Converts an ellipse into an ellipse ."}
{"id": 7581, "prediction": "Computes the angle for the given ellipse ."}
{"id": 7583, "prediction": "Selects the tangent between two points ."}
{"id": 7585, "prediction": "Calculates the Euclidean distance between two points ."}
{"id": 7587, "prediction": "Calculates the Euclidean distance between two points ."}
{"id": 7589, "prediction": "Calculates the Euclidean distance between the specified point ."}
{"id": 7591, "prediction": "Returns the Euclidean distance between two segments ."}
{"id": 7593, "prediction": "Calculates the Euclidean distance between two points ."}
{"id": 7595, "prediction": "Calculates the Euclidean distance between two points ."}
{"id": 7597, "prediction": "Returns the Euclidean distance between the specified ellipse ."}
{"id": 7599, "prediction": "Add a node to the path ."}
{"id": 7601, "prediction": "Returns the closest point in the given ellipse"}
{"id": 7603, "prediction": "Creates a random vector ."}
{"id": 7605, "prediction": "Checks if two vectors are identical ."}
{"id": 7607, "prediction": "Creates a matrix from a vector ."}
{"id": 7609, "prediction": "Returns the Euclidean distance between two points ."}
{"id": 7611, "prediction": "Normalizes this vector ."}
{"id": 7613, "prediction": "Returns the quadratic of a quadratic ."}
{"id": 7615, "prediction": "Calculates the mean of the point"}
{"id": 7617, "prediction": "Computes the normalized mean of points ."}
{"id": 7619, "prediction": "Takes a number of times ."}
{"id": 7621, "prediction": "Returns the Euclidean distance between two points ."}
{"id": 7623, "prediction": "Generates a random number of points ."}
{"id": 7625, "prediction": "Generate a random point"}
{"id": 7627, "prediction": "Calculates the mean"}
{"id": 7629, "prediction": "Invalidate all of the given predicate"}
{"id": 7631, "prediction": "Retrieves the configuration of the server ."}
{"id": 7633, "prediction": "Get the list of features from the XML file ."}
{"id": 7635, "prediction": "Parse a set of feature managers ."}
{"id": 7637, "prediction": "Retrieves the set of open Liberty features from a file ."}
{"id": 7639, "prediction": "Returns true if the given collection contains the given reference string ."}
{"id": 7641, "prediction": "Extract the symbolic name from a jar file ."}
{"id": 7643, "prediction": "Checks to see if the files are the same ."}
{"id": 7645, "prediction": "Compare two versions ."}
{"id": 7647, "prediction": "Checks if the given artifact is a bootstrap jar file ."}
{"id": 7649, "prediction": "Returns true if the file is working or not ."}
{"id": 7651, "prediction": "Checks if two objects are equal ."}
{"id": 7653, "prediction": "Convenience function to throw an exception ."}
{"id": 7655, "prediction": "Swaps the contents of the puzzle ."}
{"id": 7657, "prediction": "Prints a formatted message ."}
{"id": 7659, "prediction": "This method is used to create a new instance of the given number of choices ."}
{"id": 7661, "prediction": "Returns the uniform number of elements"}
{"id": 7663, "prediction": "Calculate the poisson distribution"}
{"id": 7665, "prediction": "Main method for testing ."}
{"id": 7667, "prediction": "Uncapitalize the first character of a word ."}
{"id": 7669, "prediction": "Converts a list of JOIN join into a String ."}
{"id": 7671, "prediction": "Extracts the cookie from the cookie list ."}
{"id": 7673, "prediction": "Register a Guice bound ."}
{"id": 7675, "prediction": "Adds a projection to the project"}
{"id": 7677, "prediction": "Convert a trigger to a trigger"}
{"id": 7679, "prediction": "Set start end time ."}
{"id": 6912, "prediction": "Creates an immutable hash map ."}
{"id": 6914, "prediction": "Create a new empty tree map ."}
{"id": 6916, "prediction": "Returns the last key in the map ."}
{"id": 6918, "prediction": "Performs a fold operation ."}
{"id": 6920, "prediction": "Folds the given operation using the given operation ."}
{"id": 6922, "prediction": "Matches a function to a fb ."}
{"id": 6924, "prediction": "Gets the element at the given index ."}
{"id": 6926, "prediction": "Concatenates a list of items into a single vector ."}
{"id": 6928, "prediction": "Returns a mutable list containing all the elements in the given array ."}
{"id": 6930, "prediction": "Returns an immutable list of elements in the given list ."}
{"id": 6932, "prediction": "Creates an indentation of the given length ."}
{"id": 6934, "prediction": "Creates a lazy reference from a producer ."}
{"id": 6936, "prediction": "Inserts an array at the specified position ."}
{"id": 6938, "prediction": "Suspends the current thread to the current thread ."}
{"id": 6940, "prediction": "Builds a list of component components for a given service ."}
{"id": 6942, "prediction": "Create an inheritance link for the given class ."}
{"id": 6944, "prediction": "Copies all methods from the given destination to the given destination ."}
{"id": 6946, "prediction": "Remove the SIB entity with the current class loader"}
{"id": 6948, "prediction": "Returns the set of referenced entity references for the given service component ."}
{"id": 6950, "prediction": "Uninstalls a service ."}
{"id": 6952, "prediction": "Gets the usage parameters for the given SbbId ."}
{"id": 6954, "prediction": "Get profiles for a given profile ."}
{"id": 6956, "prediction": "Get profile by index"}
{"id": 6958, "prediction": "Returns a string array containing the contents of the given array ."}
{"id": 6960, "prediction": "Bind a name to the tree ."}
{"id": 6962, "prediction": "Looks up a child node by name ."}
{"id": 6964, "prediction": "Get the next Sbb entity from the list of events ."}
{"id": 6966, "prediction": "Extract jar contents ."}
{"id": 6968, "prediction": "Adds an object to the cache ."}
{"id": 6970, "prediction": "Detaches the given SbbEntity ."}
{"id": 6972, "prediction": "Gets the list of all Sbb entities attached to this entity ."}
{"id": 6974, "prediction": "Removes the given timer from the given timer ."}
{"id": 6976, "prediction": "Returns the set of all children of this node ."}
{"id": 6978, "prediction": "Remove the name of this node ."}
{"id": 6980, "prediction": "Gets the copy of this set ."}
{"id": 6982, "prediction": "Gets the value of the cmp attribute ."}
{"id": 6984, "prediction": "Initialize the MBeanInfo"}
{"id": 6986, "prediction": "Download a file from the deployment ."}
{"id": 6988, "prediction": "Installs the deployment ."}
{"id": 6990, "prediction": "This method is called when the deployment has been removed ."}
{"id": 6992, "prediction": "Returns true if the given log record is false ."}
{"id": 6994, "prediction": "Gets the references to the given component ."}
{"id": 6996, "prediction": "Get permissions for a given permission ."}
{"id": 6998, "prediction": "Checks if a profile exists ."}
{"id": 7000, "prediction": "Updates configuration properties ."}
{"id": 7002, "prediction": "Stops the invocation ."}
{"id": 7004, "prediction": "Deactivates the state ."}
{"id": 7006, "prediction": "Removes the object from the cache ."}
{"id": 7008, "prediction": "Invoked when the service is active ."}
{"id": 7010, "prediction": "Called when the activity is ended ."}
{"id": 7012, "prediction": "Verify that the configuration is valid ."}
{"id": 7014, "prediction": "Called when a resource is active ."}
{"id": 7016, "prediction": "Declarative Services method for unsetting the resource context ."}
{"id": 7018, "prediction": "Build profile attributes ."}
{"id": 7020, "prediction": "Returns the set of activity context handles ."}
{"id": 7022, "prediction": "Get the value of the usage MBean ."}
{"id": 7024, "prediction": "Fires an event ."}
{"id": 7026, "prediction": "Gets the profile from the profile ."}
{"id": 7028, "prediction": "Gets abstract methods from class ."}
{"id": 7030, "prediction": "Create object pool ."}
{"id": 7032, "prediction": "Checks if the alarm source is owned by the alarm ."}
{"id": 7034, "prediction": "Get the usage parameter set ."}
{"id": 7036, "prediction": "Checks if the specified deployable is accepted ."}
{"id": 7038, "prediction": "Start a new deployment"}
{"id": 7040, "prediction": "Show the status of the deployment ."}
{"id": 7042, "prediction": "Execute the action actions ."}
{"id": 7044, "prediction": "Executes the given commit actions ."}
{"id": 7046, "prediction": "Gets the names of all tracer names ."}
{"id": 7048, "prediction": "Remove replicated data ."}
{"id": 7050, "prediction": "Processes the given component ."}
{"id": 7052, "prediction": "Create object pool ."}
{"id": 7054, "prediction": "Start an activity context ."}
{"id": 7056, "prediction": "Checks the fire event for the given handler ."}
{"id": 7058, "prediction": "Generate the SbbLocalObjectConcrete class ."}
{"id": 7060, "prediction": "Converts a string to an object ."}
{"id": 7062, "prediction": "Extracts the message from the result ."}
{"id": 7064, "prediction": "Returns true if this collection contains all the children of this collection ."}
{"id": 7066, "prediction": "Checks if this level is higher than the given level ."}
{"id": 7068, "prediction": "Removes all classes from the pool ."}
{"id": 7070, "prediction": "Gets the profile object ."}
{"id": 7072, "prediction": "Sets the value of the component ."}
{"id": 7074, "prediction": "Generate concrete methods ."}
{"id": 7076, "prediction": "Adds the name binding ."}
{"id": 7078, "prediction": "Remove the name binding ."}
{"id": 7080, "prediction": "Removes all timers from the cache ."}
{"id": 7082, "prediction": "Detach a SbEntity from the cache ."}
{"id": 7084, "prediction": "End the activity context ."}
{"id": 7086, "prediction": "Get the list of external dependencies ."}
{"id": 7088, "prediction": "Checks if the deployment is installed"}
{"id": 7090, "prediction": "Gets the list of actions related to this component ."}
{"id": 7092, "prediction": "Closes the profile ."}
{"id": 7094, "prediction": "Updates the write mode ."}
{"id": 7096, "prediction": "Called after the profile has been set ."}
{"id": 7098, "prediction": "Called after the activity has been set ."}
{"id": 7100, "prediction": "Invoke the management method invocation ."}
{"id": 7102, "prediction": "Create the default constructor ."}
{"id": 7104, "prediction": "Creates and sets the SbbEntity ."}
{"id": 7106, "prediction": "Create the get activity context ."}
{"id": 7108, "prediction": "Binds a key to a wrapper map ."}
{"id": 7110, "prediction": "Decorate the concrete class ."}
{"id": 7112, "prediction": "Gets the real field name ."}
{"id": 7114, "prediction": "Returns the value of the given field ."}
{"id": 7116, "prediction": "Initialize the profile ."}
{"id": 7118, "prediction": "Gets the profile object ."}
{"id": 7120, "prediction": "Gets the profile s profile ."}
{"id": 7122, "prediction": "Creates an inheritance link for the given class ."}
{"id": 7124, "prediction": "Add member values to the map ."}
{"id": 7126, "prediction": "Gets the class pool ."}
{"id": 7128, "prediction": "Undeploys the pool ."}
{"id": 7130, "prediction": "Checks if the specified class implements the specified interface ."}
{"id": 7132, "prediction": "Resolve an entity from the given public id ."}
{"id": 7134, "prediction": "Handle profile queries ."}
{"id": 7136, "prediction": "Creates a temporary deployment dir"}
{"id": 7138, "prediction": "Start the running state ."}
{"id": 7140, "prediction": "Make safe proxy call ."}
{"id": 7142, "prediction": "Converts the given timeout to a TTL ."}
{"id": 7144, "prediction": "Gets the profile object for the given transaction ."}
{"id": 7146, "prediction": "Resets the logger levels ."}
{"id": 7148, "prediction": "Add a logger to the logger ."}
{"id": 7150, "prediction": "Remove a handler ."}
{"id": 7152, "prediction": "Sets the level of the log4j ."}
{"id": 7154, "prediction": "Reset the cache flags ."}
{"id": 7156, "prediction": "Checks if the tracer name is valid ."}
{"id": 7158, "prediction": "Reads an object from the stream ."}
{"id": 7160, "prediction": "Returns a list of all the dependencies in this classloader ."}
{"id": 7162, "prediction": "Searches for a resource ."}
{"id": 7164, "prediction": "Creates a new profile mbean ."}
{"id": 7166, "prediction": "Gets the Sbb ids for this component ."}
{"id": 7681, "prediction": "Writes the input stream to the output stream ."}
{"id": 7683, "prediction": "Gets the fields of a class ."}
{"id": 7685, "prediction": "Converts an Exception to a Response"}
{"id": 7687, "prediction": "Generate the attributes for the user agent ."}
{"id": 7689, "prediction": "Sends a message to the mail ."}
{"id": 7691, "prediction": "Change the user s password ."}
{"id": 7693, "prediction": "Hashes a password ."}
{"id": 7695, "prediction": "Verifies that the given password is valid ."}
{"id": 7697, "prediction": "Commit the transaction ."}
{"id": 7699, "prediction": "Starts the transaction ."}
{"id": 7701, "prediction": "Checks if the given path is authorized to be authorized ."}
{"id": 7703, "prediction": "Gets the response ."}
{"id": 7705, "prediction": "Creates a new restriction"}
{"id": 7707, "prediction": "Creates a new restriction"}
{"id": 7709, "prediction": "Creates a new limitation"}
{"id": 7711, "prediction": "Creates a new restriction"}
{"id": 7713, "prediction": "Creates a new resource with the given content ."}
{"id": 7715, "prediction": "Creates a new resource with the given value ."}
{"id": 7717, "prediction": "Returns true if the given byte array can be decoded ."}
{"id": 7719, "prediction": "Compare two Reader ."}
{"id": 7721, "prediction": "Updates the specified files ."}
{"id": 7723, "prediction": "Adds padding to the buffer ."}
{"id": 7725, "prediction": "Gets all supertypes of the given class ."}
{"id": 7727, "prediction": "Read a string from a file ."}
{"id": 7729, "prediction": "Append a byte array to the buffer ."}
{"id": 7731, "prediction": "Add a Fraction to this Fraction ."}
{"id": 7733, "prediction": "Multiply this Fraction by Fraction ."}
{"id": 7735, "prediction": "Returns the maximum value of the specified array ."}
{"id": 7737, "prediction": "Throws an IllegalArgumentException ."}
{"id": 7739, "prediction": "Fetches the content of a date ."}
{"id": 7741, "prediction": "Returns a list of hours for the given hours ."}
{"id": 7743, "prediction": "Fetches the content of a forecast query ."}
{"id": 7745, "prediction": "Creates and returns a long term that will be used for a series of days ."}
{"id": 7747, "prediction": "Fetches the content of the available service ."}
{"id": 7749, "prediction": "Returns the Beaufort Level for the given Point ."}
{"id": 7751, "prediction": "Checks if the given date is Sun or not ."}
{"id": 7753, "prediction": "Gets the best fit period for the given date ."}
{"id": 7755, "prediction": "Fetches the content of a TextLocation with the specified latitude and latitude ."}
{"id": 7757, "prediction": "Invokes a string method ."}
{"id": 7759, "prediction": "Gets a reference from a class ."}
{"id": 7761, "prediction": "Returns the configuration for the given class ."}
{"id": 7763, "prediction": "Creates an iterator for the given service ."}
{"id": 7765, "prediction": "Gets a list of services from the specified class ."}
{"id": 7767, "prediction": "Acquire an input stream ."}
{"id": 7769, "prediction": "Wraps a data referenced by a byte array ."}
{"id": 7771, "prediction": "Gets the prefix ."}
{"id": 7773, "prediction": "Execute the regex pattern"}
{"id": 7775, "prediction": "Sets the subset of this subexpression ."}
{"id": 7777, "prediction": "Recursively deletes a subset of the specified subtree ."}
{"id": 7779, "prediction": "Recursively recursively ."}
{"id": 7781, "prediction": "Creates a new nfaode ."}
{"id": 7783, "prediction": "Delivers the state of the given state ."}
{"id": 7785, "prediction": "Copy the given state ."}
{"id": 7787, "prediction": "Applies a bracket to the tree ."}
{"id": 7789, "prediction": "Creates a lacon ."}
{"id": 7791, "prediction": "Coerces a set of characters to a character set ."}
{"id": 7793, "prediction": "Returns a new pseudocor"}
{"id": 7795, "prediction": "Determines if any of the colors are colored ."}
{"id": 7797, "prediction": "Removes the colorchain from the arc"}
{"id": 7799, "prediction": "Start lexer ."}
{"id": 7801, "prediction": "Sets the lexicographical sequence ."}
{"id": 7803, "prediction": "Initializes the state set ."}
{"id": 7805, "prediction": "Returns a set containing the specified character ."}
{"id": 7807, "prediction": "calculate the arcs"}
{"id": 7809, "prediction": "Creates a new state ."}
{"id": 7811, "prediction": "Moves the state of the current state ."}
{"id": 7813, "prediction": "Copies the state of this state to the given state ."}
{"id": 7815, "prediction": "Removes the state of this state ."}
{"id": 7817, "prediction": "Duplicate a state"}
{"id": 7819, "prediction": "Dump information about NFA ."}
{"id": 7821, "prediction": "Dumps the arcs to the given state ."}
{"id": 7823, "prediction": "Dumps the specified Arc ."}
{"id": 7825, "prediction": "Analyzes a set of coordinates ."}
{"id": 7827, "prediction": "Clean up the traversal state ."}
{"id": 7829, "prediction": "Marks the given state as possible ."}
{"id": 7831, "prediction": "Removes the specified Arc from the specified state ."}
{"id": 7833, "prediction": "Get the map of report plugins ."}
{"id": 7835, "prediction": "Gets the selection selector ."}
{"id": 7837, "prediction": "Gets the error message ."}
{"id": 7839, "prediction": "Gather task options ."}
{"id": 7841, "prediction": "Interprets the command line ."}
{"id": 7843, "prediction": "Executes a task ."}
{"id": 7845, "prediction": "Print usage ."}
{"id": 7847, "prediction": "Creates the plugin class loader ."}
{"id": 7849, "prediction": "Retrieves the IDs of all cells in the cell ."}
{"id": 7851, "prediction": "Add route pattern ."}
{"id": 7853, "prediction": "Add route ."}
{"id": 7855, "prediction": "Add route ."}
{"id": 7857, "prediction": "Returns a Criterion that evaluates to a specific property ."}
{"id": 7859, "prediction": "Compare two folders ."}
{"id": 7861, "prediction": "Compare two Bookmarks ."}
{"id": 7863, "prediction": "Gets the list of dependent dependencies ."}
{"id": 7865, "prediction": "Parse the authorization header ."}
{"id": 7867, "prediction": "Map a function to a function ."}
{"id": 7869, "prediction": "Resolve a method for the given name ."}
{"id": 7871, "prediction": "Resolve a variable value ."}
{"id": 7873, "prediction": "Parses the given jar file into a list of nodes ."}
{"id": 7875, "prediction": "Parse the contents of a jar file ."}
{"id": 7877, "prediction": "Gets the resource as a resource ."}
{"id": 7879, "prediction": "Returns the list of classes that have been loaded ."}
{"id": 7881, "prediction": "Start loading the specified class"}
{"id": 7883, "prediction": "Creates a pagination result ."}
{"id": 7885, "prediction": "Fill the configuration ."}
{"id": 7887, "prediction": "Parses the implicit TLD ."}
{"id": 7889, "prediction": "Gets the size of the file ."}
{"id": 7891, "prediction": "Seek to the given block ."}
{"id": 7893, "prediction": "Get the list of Maven artifacts ."}
{"id": 7895, "prediction": "Calculate the number of bytes for a given position ."}
{"id": 7897, "prediction": "Calculate the normal match for a given length ."}
{"id": 7899, "prediction": "Throws an exception if the given position is invalid ."}
{"id": 7901, "prediction": "Scans the tag library for the given input stream ."}
{"id": 7903, "prediction": "Get the parent class loader ."}
{"id": 7905, "prediction": "Gets the birth time of the given name ."}
{"id": 7907, "prediction": "Checks if the file is compiled ."}
{"id": 7909, "prediction": "Start the background thread ."}
{"id": 7911, "prediction": "Runs the compiler ."}
{"id": 7913, "prediction": "Finds a channel ."}
{"id": 7915, "prediction": "Lists a deploy group"}
{"id": 7917, "prediction": "Parses the given node ."}
{"id": 7919, "prediction": "Parse a quoted string ."}
{"id": 7921, "prediction": "Parses the body and returns true if it matches the body of the body ."}
{"id": 7923, "prediction": "Adds a child node to this node ."}
{"id": 7925, "prediction": "Returns all children of this node ."}
{"id": 7927, "prediction": "Replies the base coordinates ."}
{"id": 7929, "prediction": "Sets the thread ."}
{"id": 7931, "prediction": "Returns the PrintStream for this PrintStream ."}
{"id": 7933, "prediction": "Write a string value to the writer ."}
{"id": 7935, "prediction": "Creates a new element with the specified name ."}
{"id": 7168, "prediction": "Initialize the Soy container ."}
{"id": 7170, "prediction": "Validate the state transition ."}
{"id": 7172, "prediction": "Sets an update query ."}
{"id": 7174, "prediction": "Adds a value to the query ."}
{"id": 7176, "prediction": "Creates a RegionRequest from a String ."}
{"id": 7178, "prediction": "Resolves the rectangle with the specified dimensions ."}
{"id": 7180, "prediction": "Sets the list of viewing hints ."}
{"id": 7182, "prediction": "Sets the renderings for this rendering ."}
{"id": 7184, "prediction": "Merges an image profile from the list of profiles ."}
{"id": 7186, "prediction": "Creates a RotationRequest from a string ."}
{"id": 7188, "prediction": "Initialize the AndroidDebugBridge ."}
{"id": 7190, "prediction": "Handles a push box ."}
{"id": 7192, "prediction": "Delete the temp file ."}
{"id": 7194, "prediction": "Get crash log"}
{"id": 7196, "prediction": "Creates a new indentation ."}
{"id": 7198, "prediction": "Mark the text ."}
{"id": 7200, "prediction": "Adds an exception to the database ."}
{"id": 7202, "prediction": "Find the parent of the given type ."}
{"id": 7204, "prediction": "Write bit vector ."}
{"id": 7206, "prediction": "Reads data from input stream ."}
{"id": 7208, "prediction": "Gets a list of elements from the specified path ."}
{"id": 7210, "prediction": "Adds a screen capture to the screen ."}
{"id": 7212, "prediction": "Create a Selector with the specified properties ."}
{"id": 7214, "prediction": "Extract validation data from annotations ."}
{"id": 7216, "prediction": "Find annotations for given property ."}
{"id": 7218, "prediction": "Lookup an object from a JSON string ."}
{"id": 7220, "prediction": "Creates a new instance from the given map ."}
{"id": 7222, "prediction": "Convert an object to a map ."}
{"id": 7224, "prediction": "Extract values from annotation map ."}
{"id": 7226, "prediction": "Initialize the list of validators ."}
{"id": 7228, "prediction": "Apply validation properties to a validator ."}
{"id": 7230, "prediction": "Sets the time in milliseconds ."}
{"id": 7232, "prediction": "Returns the hash code for the given key ."}
{"id": 7234, "prediction": "Open the given file ."}
{"id": 7236, "prediction": "Removes all keys from the database ."}
{"id": 7238, "prediction": "Load all keys from the given collection ."}
{"id": 7240, "prediction": "Reduces the value by the given array ."}
{"id": 7242, "prediction": "Returns the variance of a double array"}
{"id": 7244, "prediction": "Invokes the method with the given arguments ."}
{"id": 7246, "prediction": "Returns the UTC string representation of the given timestamp ."}
{"id": 7248, "prediction": "Returns a Criterion that evaluates to the given values ."}
{"id": 7250, "prediction": "Creates a criteria from a JSON string ."}
{"id": 7252, "prediction": "Returns the maximum element of the array ."}
{"id": 7254, "prediction": "Returns the last element of the given list ."}
{"id": 7256, "prediction": "Returns the smallest element of the list"}
{"id": 7258, "prediction": "Returns the minimum element of the given array ."}
{"id": 7260, "prediction": "Handles a collection of objects ."}
{"id": 7262, "prediction": "Returns the value associated with the given key ."}
{"id": 7264, "prediction": "Generate label value ."}
{"id": 7266, "prediction": "Process the read queue ."}
{"id": 7268, "prediction": "Starts the read queue process ."}
{"id": 7270, "prediction": "Returns the slash of a string ."}
{"id": 7272, "prediction": "Add a character to the string ."}
{"id": 7274, "prediction": "Compacts a String to a String ."}
{"id": 7276, "prediction": "Splits a string by space ."}
{"id": 7278, "prediction": "Convert char array to string ."}
{"id": 7280, "prediction": "Returns true if the given string is inside of the string ."}
{"id": 7282, "prediction": "Convert a number to a number ."}
{"id": 7284, "prediction": "Sort the list of fields ."}
{"id": 7286, "prediction": "Returns the list of child comparators ."}
{"id": 7288, "prediction": "Determines if two values are equal ."}
{"id": 7290, "prediction": "Returns the sum of the specified values ."}
{"id": 7292, "prediction": "Sorts a list of fields in ascending order ."}
{"id": 7294, "prediction": "Set field value ."}
{"id": 7296, "prediction": "Create load version data ."}
{"id": 7298, "prediction": "Checks if a string field has a class field ."}
{"id": 7300, "prediction": "Checks if a class has a field with the given name ."}
{"id": 7302, "prediction": "Gets the sortable field ."}
{"id": 7304, "prediction": "Compare two cache entries ."}
{"id": 7306, "prediction": "Sorts the given list by ascending order ."}
{"id": 7308, "prediction": "Sorts all values in the given map ."}
{"id": 7310, "prediction": "Sorts the given array ."}
{"id": 7312, "prediction": "Returns a comparator that can be used to sort the comparator ."}
{"id": 7314, "prediction": "Returns the value of the specified key ."}
{"id": 7316, "prediction": "Evicts the cache if necessary ."}
{"id": 7318, "prediction": "Allocate a new ByteBuffer ."}
{"id": 7320, "prediction": "Tries to hold the input channel to the output stream ."}
{"id": 7322, "prediction": "Start monitoring ."}
{"id": 7324, "prediction": "Get the object from the map ."}
{"id": 7326, "prediction": "Process a group ."}
{"id": 7328, "prediction": "Synchronize to disk ."}
{"id": 7330, "prediction": "Write the next buffer to the output stream ."}
{"id": 7332, "prediction": "Initialize the output stream ."}
{"id": 7334, "prediction": "Converts a key to a byte array ."}
{"id": 7336, "prediction": "Extracts the validator meta data from a string ."}
{"id": 7338, "prediction": "Extracts the validator meta data from a POJO"}
{"id": 7340, "prediction": "Converts an annotation data into a validator ."}
{"id": 7342, "prediction": "Split a string into a white space ."}
{"id": 7344, "prediction": "Removes the given string from the given delimiter ."}
{"id": 7346, "prediction": "Parse a double from a buffer ."}
{"id": 7348, "prediction": "Parse a long from a buffer ."}
{"id": 7350, "prediction": "Gets the fields from the given object ."}
{"id": 7352, "prediction": "Inject a property into an object ."}
{"id": 7354, "prediction": "Gets the value of an object property ."}
{"id": 7356, "prediction": "Returns the integer value of a property ."}
{"id": 7358, "prediction": "Convenience method for creating a message ."}
{"id": 7360, "prediction": "Converts a list of arguments to an array of values ."}
{"id": 7362, "prediction": "Parses the given text ."}
{"id": 7364, "prediction": "Delete database"}
{"id": 7366, "prediction": "Retrieves a list of UUIDs"}
{"id": 7368, "prediction": "Triggers a replication result ."}
{"id": 7370, "prediction": "Sets the descending view ."}
{"id": 7372, "prediction": "Gets a design document from the database ."}
{"id": 7374, "prediction": "Gets a design document from a specific disk ."}
{"id": 7376, "prediction": "Find replicator document ."}
{"id": 7378, "prediction": "Removes the given replicator ."}
{"id": 7380, "prediction": "Retrieves a list of documents for a given class ."}
{"id": 7382, "prediction": "Perform bulk bulk request ."}
{"id": 7384, "prediction": "Perform a HTTP POST request ."}
{"id": 7386, "prediction": "Executes a DELETE request ."}
{"id": 7388, "prediction": "Sets the entity to use ."}
{"id": 7390, "prediction": "Returns the changes ."}
{"id": 7392, "prediction": "Convert a double value to a string ."}
{"id": 7394, "prediction": "Writes an Observable to the output stream ."}
{"id": 7396, "prediction": "Verifies that all temporary tables have been created ."}
{"id": 7398, "prediction": "Checks if the given server is a query"}
{"id": 7400, "prediction": "Gets the verb from the server ."}
{"id": 7402, "prediction": "Handles the request result ."}
{"id": 7404, "prediction": "Initialize the configuration ."}
{"id": 7406, "prediction": "Convert buckets to buckets ."}
{"id": 7408, "prediction": "Find all data from bucket ."}
{"id": 7410, "prediction": "Sends a message to the server ."}
{"id": 7412, "prediction": "Sends a delay message ."}
{"id": 7414, "prediction": "Sets the value of a property ."}
{"id": 7416, "prediction": "Replaces the given file with the given text ."}
{"id": 7418, "prediction": "Generate metrics ."}
{"id": 7420, "prediction": "Fetches the content of the given order ."}
{"id": 7422, "prediction": "Generate the file metrics ."}
{"id": 7937, "prediction": "Sets the writer ."}
{"id": 7939, "prediction": "Map the EL function to the EL function ."}
{"id": 7941, "prediction": "Register a StorageModel with the given key ."}
{"id": 7943, "prediction": "Registers a monitor ."}
{"id": 7945, "prediction": "Closes the output stream ."}
{"id": 7947, "prediction": "Encode the LZMA object ."}
{"id": 7949, "prediction": "Gets the throwable exception ."}
{"id": 7951, "prediction": "Finishes the end of the stream ."}
{"id": 7953, "prediction": "Evaluate expression ."}
{"id": 7955, "prediction": "Checks if the given path is XML ."}
{"id": 7957, "prediction": "Load class file ."}
{"id": 7959, "prediction": "Main entry point ."}
{"id": 7961, "prediction": "Scans the given file ."}
{"id": 7963, "prediction": "Initializes the system class loader ."}
{"id": 7965, "prediction": "Returns true if the specified string matches the specified string ."}
{"id": 7967, "prediction": "Skips the character at the end of the string ."}
{"id": 7969, "prediction": "Skip the end of the tag ."}
{"id": 7971, "prediction": "Removes the current file ."}
{"id": 7973, "prediction": "Returns a list of all elements that match the given criteria ."}
{"id": 7975, "prediction": "Sets the schema resource prefix ."}
{"id": 7977, "prediction": "Encode the given prefix ."}
{"id": 7979, "prediction": "Merges errors from the given result ."}
{"id": 7981, "prediction": "Scans through all registered channels ."}
{"id": 7983, "prediction": "Invokes a custom tag ."}
{"id": 7985, "prediction": "Gets an array of ints ."}
{"id": 7987, "prediction": "Gets the resource as a resource ."}
{"id": 7989, "prediction": "Adds a stream to the stack ."}
{"id": 7991, "prediction": "Scan XML declaration ."}
{"id": 7993, "prediction": "Gets the real path ."}
{"id": 7995, "prediction": "Get a resource as a stream ."}
{"id": 7997, "prediction": "Log an exception ."}
{"id": 7999, "prediction": "Calculate BufSize"}
{"id": 8001, "prediction": "Set the preset dict ."}
{"id": 8003, "prediction": "Fills the contents of the buffer ."}
{"id": 8005, "prediction": "Returns the number of bytes in the buffer ."}
{"id": 8007, "prediction": "Verifies that all matches the given matches ."}
{"id": 8009, "prediction": "Recycle the internal state ."}
{"id": 8011, "prediction": "Clears the buffer ."}
{"id": 8013, "prediction": "Closes the output stream ."}
{"id": 8015, "prediction": "Allocates the char buffer ."}
{"id": 8017, "prediction": "Make a list of key - value pairs ."}
{"id": 8019, "prediction": "Compile the JSP file ."}
{"id": 8021, "prediction": "Initialize the java compiler ."}
{"id": 8023, "prediction": "Convert a char to a string ."}
{"id": 8025, "prediction": "Compiles the list of tag handlers ."}
{"id": 8027, "prediction": "Generate common common common preamble ."}
{"id": 8029, "prediction": "Generate the JS tag ."}
{"id": 8031, "prediction": "Reads properties from input stream ."}
{"id": 8033, "prediction": "Validates an XML view ."}
{"id": 8035, "prediction": "Parse an EL expression from a string ."}
{"id": 8037, "prediction": "Checks if the given URI is a Jsp page ."}
{"id": 8039, "prediction": "Prints a string to the output ."}
{"id": 8041, "prediction": "Print a multi - line"}
{"id": 8043, "prediction": "Check if the scope is valid ."}
{"id": 8045, "prediction": "Validate expressions ."}
{"id": 8047, "prediction": "Create a Java package name from the given path ."}
{"id": 8049, "prediction": "Create a Java identifier from a string ."}
{"id": 8051, "prediction": "Checks if the given key is a Java Keyword ."}
{"id": 8053, "prediction": "Returns the modifier for the given prefix ."}
{"id": 8055, "prediction": "Run the update ."}
{"id": 8057, "prediction": "Put a value into the cache ."}
{"id": 8059, "prediction": "Build metrics collection ."}
{"id": 8061, "prediction": "Write the object to the output stream ."}
{"id": 8063, "prediction": "Create the prepared statements ."}
{"id": 8065, "prediction": "Track delayed aggregated metrics ."}
{"id": 8067, "prediction": "Write a double to the output stream ."}
{"id": 8069, "prediction": "Creates a new container ."}
{"id": 8071, "prediction": "Clear the slot for the given slot"}
{"id": 8073, "prediction": "Add an event to the list ."}
{"id": 8075, "prediction": "Emits an event ."}
{"id": 8077, "prediction": "Gets the remote name ."}
{"id": 8079, "prediction": "Parse a timestamp ."}
{"id": 8081, "prediction": "Computes the RollupComputer for the given type ."}
{"id": 8083, "prediction": "Puts the given granularity configuration ."}
{"id": 8085, "prediction": "Formats the given array of headers ."}
{"id": 8087, "prediction": "Register metrics ."}
{"id": 8089, "prediction": "Add a metric to the collection ."}
{"id": 8091, "prediction": "Gets tokens from Locator ."}
{"id": 8093, "prediction": "Retrieves the granularity from the given points ."}
{"id": 8095, "prediction": "Sets the server time ."}
{"id": 8097, "prediction": "Get the maximum number of connections per host ."}
{"id": 8099, "prediction": "Insert metrics into the database ."}
{"id": 8101, "prediction": "Gets the Locale locators ."}
{"id": 8103, "prediction": "Retrieves the next regular expression from the given query string ."}
{"id": 8105, "prediction": "Stops the uploader ."}
{"id": 8107, "prediction": "Checks if the discovery layer is currently active ."}
{"id": 8109, "prediction": "Returns true if the given locator is delayed ."}
{"id": 8111, "prediction": "Maps the specified range to the specified range ."}
{"id": 8113, "prediction": "Inserts the given metrics into the cache ."}
{"id": 8115, "prediction": "Returns true if the given metric is delayed ."}
{"id": 8117, "prediction": "Gets metadata values ."}
{"id": 8119, "prediction": "Checks if the given headers are valid ."}
{"id": 8121, "prediction": "Inserts a batch discovery ."}
{"id": 8123, "prediction": "Tries to check if the download manager has been downloaded ."}
{"id": 8125, "prediction": "Returns true if the given name matches the same name ."}
{"id": 8127, "prediction": "Stops the queue ."}
{"id": 8129, "prediction": "Add a list of peer servers ."}
{"id": 8131, "prediction": "Send a message to a user"}
{"id": 8133, "prediction": "Gets the value of the einerese ."}
{"id": 8135, "prediction": "Gets the value of the user defined field ."}
{"id": 8137, "prediction": "Gets the value of the multimediaView property ."}
{"id": 8139, "prediction": "Gets the status code ."}
{"id": 8141, "prediction": "Gets the import ."}
{"id": 8143, "prediction": "Gets the Waehrr ."}
{"id": 8145, "prediction": "Sets the region ."}
{"id": 8147, "prediction": "Sets the address ."}
{"id": 8149, "prediction": "Sets the RentPeriodPeriod property ."}
{"id": 8151, "prediction": "Sets the value of the phone1 property ."}
{"id": 8153, "prediction": "Sets the contact name ."}
{"id": 8155, "prediction": "Sets the main email address ."}
{"id": 8157, "prediction": "Sets the external id ."}
{"id": 8159, "prediction": "Sets the egpart ."}
{"id": 8161, "prediction": "Sets the value of the GEbeaeMean ."}
{"id": 8163, "prediction": "Checks if the given string is numeric ."}
{"id": 8165, "prediction": "Sets the Gruppe ."}
{"id": 8167, "prediction": "Gets the value of the property property ."}
{"id": 8169, "prediction": "Gets the value of the userDefinedDef property ."}
{"id": 8171, "prediction": "Gets the value of the zimmer property ."}
{"id": 8173, "prediction": "Gets the value of the BuenGraph property ."}
{"id": 8175, "prediction": "Gets the value of the LandUndeData property ."}
{"id": 8177, "prediction": "Gets the value of the zinordinertion property ."}
{"id": 8179, "prediction": "Sets the ufiefert ."}
{"id": 8181, "prediction": "Extracts the country version from a country ."}
{"id": 8183, "prediction": "Gets the country code from a country ."}
{"id": 8185, "prediction": "Returns the country name for the specified country ."}
{"id": 8187, "prediction": "Gets the value of the Annotation property ."}
{"id": 8189, "prediction": "Gets the value of the pdf property ."}
{"id": 8191, "prediction": "Sets the property items ."}
{"id": 7424, "prediction": "End the parent ."}
{"id": 7426, "prediction": "Register an attribute renderer ."}
{"id": 7428, "prediction": "Add a domain object ."}
{"id": 7430, "prediction": "Add a child object ."}
{"id": 7432, "prediction": "Copy the input stream to the output stream ."}
{"id": 7434, "prediction": "Parse a XML document ."}
{"id": 7436, "prediction": "Returns a stream containing all children of the given parent element ."}
{"id": 7438, "prediction": "Returns the names of all elements in the given parent ."}
{"id": 7440, "prediction": "Main entry point ."}
{"id": 7442, "prediction": "Construct a content builder from a resource ."}
{"id": 7444, "prediction": "Encodes the given string ascii characters ."}
{"id": 7446, "prediction": "Remove whitespace from data array"}
{"id": 7448, "prediction": "Sets the data to the specified object ."}
{"id": 7450, "prediction": "Sets the favorite notifications ."}
{"id": 7452, "prediction": "Returns true if the time expired ."}
{"id": 7454, "prediction": "Returns a list of all the addresses of the given notification ."}
{"id": 7456, "prediction": "List events for a notification"}
{"id": 7458, "prediction": "Gets the single notification url ."}
{"id": 7460, "prediction": "Gets the authentication token ."}
{"id": 7462, "prediction": "Add new categories ."}
{"id": 7464, "prediction": "Creates a notification response ."}
{"id": 7466, "prediction": "Maps a NotificationEntry to a NotificationEntry ."}
{"id": 7468, "prediction": "Normalize the SSP entry ."}
{"id": 7470, "prediction": "Gets the source notification source ."}
{"id": 7472, "prediction": "Read data from a file ."}
{"id": 7474, "prediction": "Extracts the user ID from the response ."}
{"id": 7476, "prediction": "Get attributes map ."}
{"id": 7478, "prediction": "Checks if two boxes are contained within the box ."}
{"id": 7480, "prediction": "Calculate the sign of a point"}
{"id": 7482, "prediction": "Sets the rotation of this matrix ."}
{"id": 7484, "prediction": "Convert a polygon to a polygon"}
{"id": 7486, "prediction": "Determines the bounding rectangle of the given polygon ."}
{"id": 7488, "prediction": "Calculates the average of the polygon"}
{"id": 7490, "prediction": "Remove a point from a polygon"}
{"id": 7492, "prediction": "Computes the area between two points ."}
{"id": 7494, "prediction": "Returns true if the polygon contains the points"}
{"id": 7496, "prediction": "Calculate the intersection of two lines ."}
{"id": 7498, "prediction": "Calculate the intersection of two lines ."}
{"id": 7500, "prediction": "Returns true if the specified ellipse contains the specified ellips ."}
{"id": 7502, "prediction": "Returns the value at the given index ."}
{"id": 7504, "prediction": "Rotate a matrix ."}
{"id": 7506, "prediction": "Rotates a rotation matrix ."}
{"id": 7508, "prediction": "Sets rotation ."}
{"id": 7510, "prediction": "Returns the rotation matrix for the specified angle ."}
{"id": 7512, "prediction": "Creates a TwistCoord ."}
{"id": 7514, "prediction": "Computes the interpolation for the given rotation ."}
{"id": 7516, "prediction": "Solves the point of a point ."}
{"id": 7518, "prediction": "Returns true if this polygon is inside a polygon ."}
{"id": 7520, "prediction": "Convert a Concat64 matrix to another ."}
{"id": 7522, "prediction": "Convert a Concimal to a Concatiform representation ."}
{"id": 7524, "prediction": "Converts a matrix into a matrix ."}
{"id": 7526, "prediction": "Sets the parameter vector ."}
{"id": 7528, "prediction": "Checks if two points intersect ."}
{"id": 7530, "prediction": "Returns true if polygon intersect ."}
{"id": 7532, "prediction": "Extract the quaternion from the quaternion matrix ."}
{"id": 7534, "prediction": "Set motion ."}
{"id": 7536, "prediction": "Converts a matrix to a homography matrix ."}
{"id": 7538, "prediction": "Checks if two points are identical ."}
{"id": 7540, "prediction": "Returns true if polygon_a is intersect ."}
{"id": 7542, "prediction": "Computes the closest point for a line ."}
{"id": 7544, "prediction": "Returns the closest point for the given plane ."}
{"id": 7546, "prediction": "Returns the closest point between two points ."}
{"id": 7548, "prediction": "Transform a point into a point ."}
{"id": 7550, "prediction": "Calculate the angle of an angle ."}
{"id": 7552, "prediction": "Convert a line to a line"}
{"id": 7554, "prediction": "Convert a line segment into a line ."}
{"id": 7556, "prediction": "Convert a line to a line ."}
{"id": 7558, "prediction": "Convert a line to a line"}
{"id": 7560, "prediction": "Convert the plane to a 3D coordinate ."}
{"id": 7562, "prediction": "Convert a plane to a plane ."}
{"id": 7564, "prediction": "Converts a plane to a plane ."}
{"id": 7566, "prediction": "Creates a copy of this object ."}
{"id": 7568, "prediction": "Computes the t - coordinate of a line ."}
{"id": 7570, "prediction": "Checks if the given parameter is equal to the given range ."}
{"id": 7572, "prediction": "Calculate the angle between two lines ."}
{"id": 7574, "prediction": "Generates a random number of random points ."}
{"id": 7576, "prediction": "Subtract two points ."}
{"id": 7578, "prediction": "Sets the rectangle ."}
{"id": 7580, "prediction": "Computes the point for the given ellipse ."}
{"id": 7582, "prediction": "Computes the plane for the given ellipse ."}
{"id": 7584, "prediction": "Returns the corner of the specified corner ."}
{"id": 7586, "prediction": "Returns the Euclidean distance between two points ."}
{"id": 7588, "prediction": "Returns the Euclidean distance between two points ."}
{"id": 7590, "prediction": "Returns the Euclidean distance between two segments ."}
{"id": 7592, "prediction": "Returns the Euclidean distance between two points ."}
{"id": 7594, "prediction": "Returns the Euclidean distance between the given polygon"}
{"id": 7596, "prediction": "Returns the distance between two lines ."}
{"id": 7598, "prediction": "Returns the Euclidean distance between the specified ellipse ."}
{"id": 7600, "prediction": "Computes the point for a line segment ."}
{"id": 7602, "prediction": "Computes the polynomial coefficients ."}
{"id": 7604, "prediction": "Computes the perpendicular to the given vector ."}
{"id": 7606, "prediction": "Normalizes the vector ."}
{"id": 7608, "prediction": "Convert a matrix to a vector ."}
{"id": 7610, "prediction": "Sets the ellipse ."}
{"id": 7612, "prediction": "Returns the triangle of two points ."}
{"id": 7614, "prediction": "Simple simple polygon"}
{"id": 7616, "prediction": "Calculates the order of points in the list"}
{"id": 7618, "prediction": "Checks if polygon is convex ."}
{"id": 7620, "prediction": "Returns the maximum bounding box"}
{"id": 7622, "prediction": "Returns the Euclidean distance between two points ."}
{"id": 7624, "prediction": "Generates a list of points ."}
{"id": 7626, "prediction": "Computes the mean of points"}
{"id": 7628, "prediction": "Invalidates all cached credentials ."}
{"id": 7630, "prediction": "Combine collection of strings into a set of strings ."}
{"id": 7632, "prediction": "Get the list of configuration files from the server ."}
{"id": 7634, "prediction": "Parses the include XML file ."}
{"id": 7636, "prediction": "Downloads the JSON files for the product"}
{"id": 7638, "prediction": "Checks if the list of Open Liberty Liberty features are installed ."}
{"id": 7640, "prediction": "Get the next product version"}
{"id": 7642, "prediction": "Gets the install - based map from the given directory ."}
{"id": 7644, "prediction": "Extracts the version from a file name ."}
{"id": 7646, "prediction": "Execute the product info command"}
{"id": 7648, "prediction": "Get the Liberty property ."}
{"id": 7650, "prediction": "Move the back to the given length ."}
{"id": 7652, "prediction": "Loads an int from a string ."}
{"id": 7654, "prediction": "Verifies that the image is valid ."}
{"id": 7656, "prediction": "Calculates the distance between the cells ."}
{"id": 7658, "prediction": "Prints a formatted message to the specified locale ."}
{"id": 7660, "prediction": "Print a variable ."}
{"id": 7662, "prediction": "Returns the uniform value of a double ."}
{"id": 7664, "prediction": "Returns the discrete value of a matrix ."}
{"id": 7666, "prediction": "Capitalizes the first character of the first word ."}
{"id": 7668, "prediction": "Fix path ."}
{"id": 7670, "prediction": "Gets the sentence sentence ."}
{"id": 7672, "prediction": "Extract the auth token from the cookie list ."}
{"id": 7674, "prediction": "Gets all the role permissions ."}
{"id": 7676, "prediction": "Convert JobInfo to JobDetail ."}
{"id": 7678, "prediction": "Sets the interval values for the trigger ."}
{"id": 8193, "prediction": "Downgrades the document to the previous version ."}
{"id": 8195, "prediction": "Gets the value of the property ."}
{"id": 8197, "prediction": "Sets the value of the blicker ."}
{"id": 8199, "prediction": "Sets the Monitors property ."}
{"id": 8201, "prediction": "Sets the value of the lastenfiedenames ."}
{"id": 8203, "prediction": "Gets the value of the feldief property ."}
{"id": 8205, "prediction": "Dump the contents of the specified writer ."}
{"id": 8207, "prediction": "Print the contents of this record ."}
{"id": 8209, "prediction": "Sets the ctype property ."}
{"id": 8211, "prediction": "Gets the value of the energypasspass property ."}
{"id": 8213, "prediction": "Sets the Grundst ."}
{"id": 8215, "prediction": "Sets the value of the hall ."}
{"id": 8217, "prediction": "Gets the value of the JVM ."}
{"id": 8219, "prediction": "Gets the value of the vor property ."}
{"id": 8221, "prediction": "Sets the ue ."}
{"id": 8223, "prediction": "Gets the value of theEmailProperty property ."}
{"id": 8225, "prediction": "Sets the value of the einelink ."}
{"id": 8227, "prediction": "Sets the api value ."}
{"id": 8229, "prediction": "Sets the api value ."}
{"id": 8231, "prediction": "Sets the dzie szu ."}
{"id": 8233, "prediction": "Retrieves the value of the Gaussian property ."}
{"id": 8235, "prediction": "Gets the HttpSeekt ."}
{"id": 8237, "prediction": "Gets the value of the Vermarker ."}
{"id": 8239, "prediction": "Sets the Wertinert ."}
{"id": 8241, "prediction": "Sets the value of the JAXBonder ."}
{"id": 8243, "prediction": "Sets the value of the bero property ."}
{"id": 8245, "prediction": "Sets the property ."}
{"id": 8247, "prediction": "Sets the value of the einzel function ."}
{"id": 8249, "prediction": "Sets the value of the JAXagen object ."}
{"id": 8251, "prediction": "Sets the value of the JAXElements property ."}
{"id": 8253, "prediction": "Sets the value of the JAXB property ."}
{"id": 8255, "prediction": "Sets the value of the kebene property ."}
{"id": 8257, "prediction": "Sets the value of the Lager property ."}
{"id": 8259, "prediction": "Sets the value of the effsti property ."}
{"id": 8261, "prediction": "Sets the producer ."}
{"id": 8263, "prediction": "Sets the value of the stelaplet ."}
{"id": 8265, "prediction": "Sets the wald value ."}
{"id": 8267, "prediction": "Gets the value of the WTag property ."}
{"id": 8269, "prediction": "Gets the property value ."}
{"id": 8271, "prediction": "Gets the value of the park property ."}
{"id": 8273, "prediction": "Gets the value of the property ."}
{"id": 8275, "prediction": "Sets the maximum number of times ."}
{"id": 8277, "prediction": "Sets the value of the zstab property ."}
{"id": 8279, "prediction": "Sets the value of the keine ."}
{"id": 8281, "prediction": "Sets the value of the solarziz property ."}
{"id": 8283, "prediction": "Sets the value of the JAXBElement property ."}
{"id": 8285, "prediction": "Sets the value of the fernrink property ."}
{"id": 8287, "prediction": "Sets the kohle value ."}
{"id": 8289, "prediction": "Generate a random letters"}
{"id": 8291, "prediction": "Gets the Wohn category ."}
{"id": 8293, "prediction": "Sets the value of the property ."}
{"id": 8295, "prediction": "Sets the mojo value ."}
{"id": 8297, "prediction": "Sets the sub administrative administrative area ."}
{"id": 8299, "prediction": "Sets the locality ."}
{"id": 8301, "prediction": "This method is used to upgrade the document ."}
{"id": 8303, "prediction": "Gets the value of the field property ."}
{"id": 8305, "prediction": "Gets the value of the adType property ."}
{"id": 8307, "prediction": "Sets the value of the plzi ."}
{"id": 8309, "prediction": "Convenience method to get the kavax ."}
{"id": 8311, "prediction": "Sets the priceType value for this export ."}
{"id": 8313, "prediction": "Sets the directions of the driver ."}
{"id": 8315, "prediction": "Sets the value of the energy rating ."}
{"id": 8317, "prediction": "Sets the property status ."}
{"id": 8319, "prediction": "Sets the value of the BebaBean attribute ."}
{"id": 8321, "prediction": "Sets the value of the park ."}
{"id": 8323, "prediction": "Sets the Freesitibt ."}
{"id": 8325, "prediction": "Sets the value of the email ."}
{"id": 8327, "prediction": "Sets the value of the overseas property ."}
{"id": 8329, "prediction": "Gets the value of the Fehler property ."}
{"id": 8331, "prediction": "Gets the value of the StpMsgProperty property ."}
{"id": 8333, "prediction": "Sets the minimum ."}
{"id": 8335, "prediction": "Gets the value of the photo property ."}
{"id": 8337, "prediction": "Sets the project projects ."}
{"id": 8339, "prediction": "Downgrades the previous version ."}
{"id": 8341, "prediction": "Gets the value of the immobilizer property ."}
{"id": 8343, "prediction": "Gets the value of the FehlerList property ."}
{"id": 8345, "prediction": "Sets the Sonst ."}
{"id": 8347, "prediction": "Gets the value of the danzen property ."}
{"id": 8349, "prediction": "Checks if the given exception is compatible with the given throwable ."}
{"id": 8351, "prediction": "Binds a prefix to a namespace URI ."}
{"id": 8353, "prediction": "Checks if the given content is open ."}
{"id": 8355, "prediction": "Consume a comment from a line ."}
{"id": 8357, "prediction": "Initialize logging ."}
{"id": 8359, "prediction": "Adds an iterator to the composite iterator ."}
{"id": 8361, "prediction": "Add a string option ."}
{"id": 8363, "prediction": "Add a long option ."}
{"id": 8365, "prediction": "Add a boolean option ."}
{"id": 8367, "prediction": "Creates a new instance of a class ."}
{"id": 8369, "prediction": "Sets the target object ."}
{"id": 8371, "prediction": "Find the best matching method for the target class ."}
{"id": 8373, "prediction": "Serializes an object to a byte array ."}
{"id": 8375, "prediction": "Get child element by tag name ."}
{"id": 8377, "prediction": "Gets child elements from the given element ."}
{"id": 8379, "prediction": "Checks if the given node matches the given name ."}
{"id": 8381, "prediction": "Monitor the given handle ."}
{"id": 8383, "prediction": "Keep track thread alive ."}
{"id": 8385, "prediction": "Start namespace mapping ."}
{"id": 8387, "prediction": "Add callback ."}
{"id": 8389, "prediction": "Gets the color of the item ."}
{"id": 8391, "prediction": "Gets the color of the item ."}
{"id": 8393, "prediction": "Gets the value of the bounding box ."}
{"id": 8395, "prediction": "Get the names of the test keywords ."}
{"id": 8397, "prediction": "Gets the documentation for a keyword ."}
{"id": 8399, "prediction": "Stop the remote server ."}
{"id": 8401, "prediction": "Convert a JSON file to a JSON string ."}
{"id": 8403, "prediction": "Convert the input stream to JSON ."}
{"id": 8405, "prediction": "Convert properties to JSON string ."}
{"id": 8407, "prediction": "Converts a map of properties into a map ."}
{"id": 8409, "prediction": "Determines the radius of a shadow ."}
{"id": 8411, "prediction": "Search for an intermediate certificate ."}
{"id": 8413, "prediction": "Preprocess the given input directory ."}
{"id": 8415, "prediction": "Determines the title of a set ."}
{"id": 8417, "prediction": "Replaces all variables with the given content ."}
{"id": 8419, "prediction": "Copy files to a directory"}
{"id": 8421, "prediction": "Wrap a child view ."}
{"id": 8423, "prediction": "Frees the down animation ."}
{"id": 8425, "prediction": "Calculate the overlap between two views ."}
{"id": 8427, "prediction": "Launch an activity ."}
{"id": 8429, "prediction": "Get Fact Sheet List ."}
{"id": 8431, "prediction": "Build http client ."}
{"id": 8433, "prediction": "Update data model ."}
{"id": 8435, "prediction": "Get export list ."}
{"id": 8437, "prediction": "Sets the client credentials ."}
{"id": 8439, "prediction": "Get a list of bookmarkmarks ."}
{"id": 8441, "prediction": "Write the permissions for a node ."}
{"id": 8443, "prediction": "Closes the client ."}
{"id": 8445, "prediction": "Create a dataset graph ."}
{"id": 8447, "prediction": "Resize the geometry"}
{"id": 7680, "prediction": "Sends a mail item to the queue ."}
{"id": 7682, "prediction": "Initialize the scheduler ."}
{"id": 7684, "prediction": "Gets the field map ."}
{"id": 7686, "prediction": "Configure the token based on the configuration ."}
{"id": 7688, "prediction": "Generate a token string ."}
{"id": 7690, "prediction": "Generate a strong password ."}
{"id": 7692, "prediction": "Returns the user with the given name ."}
{"id": 7694, "prediction": "Verifies that the given account name matches the given account name ."}
{"id": 7696, "prediction": "Provide the default model for this query ."}
{"id": 7698, "prediction": "Rollback the transaction ."}
{"id": 7700, "prediction": "Configure a field by name ."}
{"id": 7702, "prediction": "Parse a date ."}
{"id": 7704, "prediction": "Creates a Constructor that adds a value to the given value ."}
{"id": 7706, "prediction": "Creates a new restriction"}
{"id": 7708, "prediction": "Creates a new limitation"}
{"id": 7710, "prediction": "Creates a new limitation ."}
{"id": 7712, "prediction": "Creates a new namespace manager ."}
{"id": 7714, "prediction": "Creates a new Relation ."}
{"id": 7716, "prediction": "Creates a new resource with the given namespace ."}
{"id": 7718, "prediction": "Encodes a string into a byte array ."}
{"id": 7720, "prediction": "Moves a file to a directory ."}
{"id": 7722, "prediction": "Returns the base name of the file ."}
{"id": 7724, "prediction": "Gets the short name ."}
{"id": 7726, "prediction": "Verifies that the given hash matches the given password ."}
{"id": 7728, "prediction": "Append a byte to the buffer ."}
{"id": 7730, "prediction": "Creates a copy of the given array ."}
{"id": 7732, "prediction": "Subtract Fraction from Fraction ."}
{"id": 7734, "prediction": "Creates a new fraction of the given Fraction ."}
{"id": 7736, "prediction": "Returns the minimum value of the specified array ."}
{"id": 7738, "prediction": "Fetches the content of the given longitude and coordinates ."}
{"id": 7740, "prediction": "Fetches the content of the data from the given coordinates ."}
{"id": 7742, "prediction": "Find the closest point for the given date ."}
{"id": 7744, "prediction": "Creates and returns a simple forecast that can be used as a simple forecast ."}
{"id": 7746, "prediction": "Creates a new Location from the given coordinates ."}
{"id": 7748, "prediction": "Returns the symbol name for the given point ."}
{"id": 7750, "prediction": "Creates a new URI ."}
{"id": 7752, "prediction": "Gets the point forecast ."}
{"id": 7754, "prediction": "Fetches the content of a text location and returns the result ."}
{"id": 7756, "prediction": "Update database ."}
{"id": 7758, "prediction": "Acquires an object from the data source ."}
{"id": 7760, "prediction": "Wraps a reference to a wrapped object ."}
{"id": 7762, "prediction": "Determines whether the configuration is enabled or not ."}
{"id": 7764, "prediction": "Retrieves the decoder for the given configuration ."}
{"id": 7766, "prediction": "Retrieves the given class for the given interface type ."}
{"id": 7768, "prediction": "Returns the size of the data source ."}
{"id": 7770, "prediction": "Gets the index of the given component ."}
{"id": 7772, "prediction": "Returns true if the color is colored ."}
{"id": 7774, "prediction": "Finds and returns the next loop ."}
{"id": 7776, "prediction": "Removes the DFA segment from the specified subtree ."}
{"id": 7778, "prediction": "Clone an existing state ."}
{"id": 7780, "prediction": "Marks the given subre ."}
{"id": 7782, "prediction": "Parse a branch ."}
{"id": 7784, "prediction": "Creates a non - non - non - non - white space ."}
{"id": 7786, "prediction": "Returns the index of the reference number ."}
{"id": 7788, "prediction": "Scans the next plain text ."}
{"id": 7790, "prediction": "Generate code for a given color ."}
{"id": 7792, "prediction": "Gets the color from the codepoint ."}
{"id": 7794, "prediction": "Subtract a range of characters from a range"}
{"id": 7796, "prediction": "Calculate the color of a Arc"}
{"id": 7798, "prediction": "Dumps all color descriptors ."}
{"id": 7800, "prediction": "Check prefixes ."}
{"id": 7802, "prediction": "Returns the color of the given codepoint ."}
{"id": 7804, "prediction": "Calculates the last calculated number of times"}
{"id": 7806, "prediction": "Returns the Unicode set for the specified class name ."}
{"id": 7808, "prediction": "Dump the contents of a string ."}
{"id": 7810, "prediction": "Move the current state to the new state ."}
{"id": 7812, "prediction": "Copies the state of the given state ."}
{"id": 7814, "prediction": "Drop the state of the given state ."}
{"id": 7816, "prediction": "Cancels the given Arc ."}
{"id": 7818, "prediction": "Special special cases ."}
{"id": 7820, "prediction": "Dump the state of an Arc ."}
{"id": 7822, "prediction": "Dumps the contents of a line into a string ."}
{"id": 7824, "prediction": "Performs optimization ."}
{"id": 7826, "prediction": "Combine two lines ."}
{"id": 7828, "prediction": "Marks the reachable reachable to the given state ."}
{"id": 7830, "prediction": "Fixes all the states that are not empty ."}
{"id": 7832, "prediction": "Gets the map parameters ."}
{"id": 7834, "prediction": "Gets report plugins ."}
{"id": 7836, "prediction": "Run the command line ."}
{"id": 7838, "prediction": "Gather options ."}
{"id": 7840, "prediction": "Gather task names ."}
{"id": 7842, "prediction": "Gets the command line ."}
{"id": 7844, "prediction": "Read properties ."}
{"id": 7846, "prediction": "Gets the home directory ."}
{"id": 7848, "prediction": "Gets the ids of the cell ids ."}
{"id": 7850, "prediction": "Get the URI of the router"}
{"id": 7852, "prediction": "Returns the number of routes ."}
{"id": 7854, "prediction": "Add a route to this route ."}
{"id": 7856, "prediction": "Determine if the specified array matches any of the requested paths ."}
{"id": 7858, "prediction": "Gets the store file name ."}
{"id": 7860, "prediction": "Compares two entries ."}
{"id": 7862, "prediction": "Sets the time of the servlet ."}
{"id": 7864, "prediction": "Finds a class by its name ."}
{"id": 7866, "prediction": "Creates a new instance of ProtectedFunctionMapper ."}
{"id": 7868, "prediction": "Gets a map for the given function name ."}
{"id": 7870, "prediction": "Sets the values of a char array ."}
{"id": 7872, "prediction": "Parse the contents of a tag ."}
{"id": 7874, "prediction": "Parses a tag file ."}
{"id": 7876, "prediction": "Creates a compiler ."}
{"id": 7878, "prediction": "Calculates the last modified timestamp ."}
{"id": 7880, "prediction": "Checks if the classloader is a parent ."}
{"id": 7882, "prediction": "Reads the data from the input stream ."}
{"id": 7884, "prediction": "Create a MetaKey from a string ."}
{"id": 7886, "prediction": "Get TagFileInfo for given name ."}
{"id": 7888, "prediction": "Gets the checksum of the specified file ."}
{"id": 7890, "prediction": "Validate channel name ."}
{"id": 7892, "prediction": "Locate a block by its position ."}
{"id": 7894, "prediction": "Updates the options and positions of the current position ."}
{"id": 7896, "prediction": "Calculates the number of prices for a given range ."}
{"id": 7898, "prediction": "Throws an exception if the given byte isn t present ."}
{"id": 7900, "prediction": "Scans all the tlds in the system ."}
{"id": 7902, "prediction": "Add a new ServletWrapper ."}
{"id": 7904, "prediction": "Sets the bytecode ."}
{"id": 7906, "prediction": "Saves the bytecode to the file ."}
{"id": 7908, "prediction": "Initializes the classpath ."}
{"id": 7910, "prediction": "Stops the thread ."}
{"id": 7912, "prediction": "Find channel by name ."}
{"id": 7914, "prediction": "Replace all deploy groups ."}
{"id": 7916, "prediction": "Copy the input stream to the output stream ."}
{"id": 7918, "prediction": "Parse attributes ."}
{"id": 7920, "prediction": "Adds the include directives to the file ."}
{"id": 7922, "prediction": "Add an attribute ."}
{"id": 7924, "prediction": "Returns an iterator of all the attributes of this set ."}
{"id": 7926, "prediction": "Find all children of the given name ."}
{"id": 7928, "prediction": "Returns the alias for the given name ."}
{"id": 7930, "prediction": "Unset the thread thread ."}
{"id": 7932, "prediction": "Write optional field value ."}
{"id": 7934, "prediction": "Adds an element to the parent element ."}
{"id": 8449, "prediction": "Specifies the gravity of this operation ."}
{"id": 8451, "prediction": "Specifies the font to be used to fill the specified text ."}
{"id": 8453, "prediction": "Adds an image ."}
{"id": 8455, "prediction": "Prints the usage of the given print stream ."}
{"id": 8457, "prediction": "Parse a Java bean ."}
{"id": 8459, "prediction": "Execute a slide ."}
{"id": 8461, "prediction": "Sorts a list of sizes in a list"}
{"id": 8463, "prediction": "Get the xml file for the slide ."}
{"id": 8465, "prediction": "Sets the overlap with the specified element ."}
{"id": 8467, "prediction": "Executes a message outbound message ."}
{"id": 8469, "prediction": "Gets the temporary directory ."}
{"id": 8471, "prediction": "Logs a message at the given level ."}
{"id": 8473, "prediction": "Log a message at debug level ."}
{"id": 8475, "prediction": "Logs a message at the INFO level ."}
{"id": 8477, "prediction": "Information about an event ."}
{"id": 8479, "prediction": "Logs a message at the specified level ."}
{"id": 8481, "prediction": "Logs an error message ."}
{"id": 8483, "prediction": "Starts the steno wrapper ."}
{"id": 8485, "prediction": "Serialize a Throwable to a Throwable"}
{"id": 8487, "prediction": "Gets the caller data ."}
{"id": 8489, "prediction": "Creates a new database ."}
{"id": 8491, "prediction": "Parse the save attribute ."}
{"id": 8493, "prediction": "Refresh the sheet ."}
{"id": 8495, "prediction": "Gets the save attribute list ."}
{"id": 8497, "prediction": "Sets the value of the hidden objects in hidden columns ."}
{"id": 8499, "prediction": "Set save attributes for a row ."}
{"id": 8501, "prediction": "Format a double number ."}
{"id": 8503, "prediction": "Sets the workbook ."}
{"id": 8505, "prediction": "Get the formula evaluator ."}
{"id": 8507, "prediction": "Load web sheet ."}
{"id": 8509, "prediction": "Load the work sheet by tab name ."}
{"id": 8511, "prediction": "Save this sheet ."}
{"id": 8513, "prediction": "Populate the component ."}
{"id": 8515, "prediction": "Deserialize a serialized object ."}
{"id": 8517, "prediction": "Gets the content of the image ."}
{"id": 8519, "prediction": "Get the photo helper ."}
{"id": 8521, "prediction": "Get the chart helper ."}
{"id": 8523, "prediction": "Convert the given position to a Pager ."}
{"id": 8525, "prediction": "Creates a single Ptg instance ."}
{"id": 8527, "prediction": "Gets a list of rows from the current row mapping ."}
{"id": 8529, "prediction": "Builds a dynamic row for a given ref ."}
{"id": 8531, "prediction": "Gets the BgColor for the specified theme ."}
{"id": 8533, "prediction": "Gets the autoFill color from the theme table ."}
{"id": 8535, "prediction": "Gets the XColor from CRL ."}
{"id": 8537, "prediction": "Converts the given XSSColor to a Clazz ."}
{"id": 8539, "prediction": "Get the color from a cell ."}
{"id": 8541, "prediction": "Populate the attributes from a component ."}
{"id": 8543, "prediction": "Sets object property ."}
{"id": 8545, "prediction": "Setup control attributes ."}
{"id": 8547, "prediction": "Sets the faces for a sheet ."}
{"id": 8549, "prediction": "Sets the faces for a sheet ."}
{"id": 8551, "prediction": "Returns the Pie title of the chart"}
{"id": 8553, "prediction": "Creates a pie chart ."}
{"id": 8555, "prediction": "Initialize the XSSF chart map ."}
{"id": 8557, "prediction": "Initialize the chart map ."}
{"id": 8559, "prediction": "Apply the given collection to the collection ."}
{"id": 8561, "prediction": "Re - re - initialize the top level form ."}
{"id": 8563, "prediction": "Builds the cellulaFormula for a given shift ."}
{"id": 8565, "prediction": "Changes the index number in shift range ."}
{"id": 8567, "prediction": "Changes the index number in the hidden column index ."}
{"id": 8569, "prediction": "Gets the original row in the hidden row ."}
{"id": 8571, "prediction": "Finds the rows from a shift map ."}
{"id": 8573, "prediction": "Find an item in the collection ."}
{"id": 8575, "prediction": "Checks if a row is static ."}
{"id": 8577, "prediction": "Replace the expression value with the given cell value ."}
{"id": 8579, "prediction": "Returns a list of skipped regions for the specified region ."}
{"id": 8581, "prediction": "Builds a SheetComment from a SheetCommand ."}
{"id": 8583, "prediction": "Build the sheet configuration ."}
{"id": 8585, "prediction": "Build a FormCommand from a SheetConfig"}
{"id": 8587, "prediction": "Build the sheet ."}
{"id": 8589, "prediction": "Build the command list from a sheet ."}
{"id": 8591, "prediction": "Checks if the command has the same command ."}
{"id": 8593, "prediction": "Copies the template to the sheet ."}
{"id": 8595, "prediction": "Process a line line ."}
{"id": 8597, "prediction": "Move a comment to a sheet ."}
{"id": 8599, "prediction": "Builds a map from a command line ."}
{"id": 8601, "prediction": "Set the footer of the sheet configuration ."}
{"id": 8603, "prediction": "Set the header of the sheet ."}
{"id": 8605, "prediction": "Removes all ranges from the config map ."}
{"id": 8607, "prediction": "Gets the command from the command - part - name map ."}
{"id": 8609, "prediction": "Deletes an object in the context ."}
{"id": 8611, "prediction": "Index command range ."}
{"id": 8613, "prediction": "Inserts a template into the sheet ."}
{"id": 8615, "prediction": "Evaluate userFormula ."}
{"id": 8617, "prediction": "Creates a new cell for the given cell ."}
{"id": 8619, "prediction": "Removes all rows from the sheet ."}
{"id": 8621, "prediction": "Remove a cached cell for the given sheet ."}
{"id": 8623, "prediction": "Loads a picture from the current table"}
{"id": 8625, "prediction": "Gets the value of the new value ."}
{"id": 8627, "prediction": "Returns the cell value for the given poi cell ."}
{"id": 8629, "prediction": "Returns the cell string value for a given cell type ."}
{"id": 8631, "prediction": "Sets the cell value of the cell ."}
{"id": 8633, "prediction": "Sets the value of the cell ."}
{"id": 8635, "prediction": "Copy rows from source to destination"}
{"id": 8637, "prediction": "Copy a cell to a new cell ."}
{"id": 8639, "prediction": "Copies a cell style from another cell ."}
{"id": 8641, "prediction": "Create the anchor anchor ."}
{"id": 8643, "prediction": "Match comment settings ."}
{"id": 8645, "prediction": "Gets the CTShape from the given VML ."}
{"id": 8647, "prediction": "Convert a cell to a cell ."}
{"id": 8649, "prediction": "Gets the initial rows from the sheet ."}
{"id": 8651, "prediction": "Get the face cell from a body row"}
{"id": 8653, "prediction": "Gets the key from a poi cell ."}
{"id": 8655, "prediction": "Gets the current data context name ."}
{"id": 8657, "prediction": "Evaluate an expression ."}
{"id": 8659, "prediction": "Removes a row from the source list"}
{"id": 8661, "prediction": "Recovers the sheet ."}
{"id": 8663, "prediction": "Converts the given style to a new one ."}
{"id": 8665, "prediction": "Set the chart data ."}
{"id": 8667, "prediction": "Initialize the xsfors for a sheet ."}
{"id": 8669, "prediction": "Gets the chart id from the node map ."}
{"id": 8671, "prediction": "Saves the data in the cache ."}
{"id": 8673, "prediction": "Get the poi cell for the given tab"}
{"id": 8675, "prediction": "Restore data context ."}
{"id": 8677, "prediction": "Checks if the full name can be rebuilt ."}
{"id": 8679, "prediction": "Changes the row ref ."}
{"id": 8681, "prediction": "Set the last row ."}
{"id": 8683, "prediction": "Build single cell ."}
{"id": 8685, "prediction": "Build the category list ."}
{"id": 8687, "prediction": "Builds the chart series for the given index ."}
{"id": 8689, "prediction": "Gets the dpt with the given index ."}
{"id": 8691, "prediction": "Get a list of photos from a file ."}
{"id": 8693, "prediction": "Index image in map"}
{"id": 8695, "prediction": "Generate chart style ."}
{"id": 8697, "prediction": "Get the pattern ."}
{"id": 8699, "prediction": "Recovers the sheet ."}
{"id": 8701, "prediction": "Get the cell style for the given cell ."}
{"id": 8703, "prediction": "Returns the cell font decoration for the specified font ."}
{"id": 7936, "prediction": "Writes the content to the output stream ."}
{"id": 7938, "prediction": "Reallocate buffer ."}
{"id": 7940, "prediction": "Returns the same state for the given key ."}
{"id": 7942, "prediction": "Read data from the input stream ."}
{"id": 7944, "prediction": "Check if the request is authenticated ."}
{"id": 7946, "prediction": "Make a JSON object ."}
{"id": 7948, "prediction": "Creates a union of the given meta data ."}
{"id": 7950, "prediction": "Checks if the given coordinates is a check ."}
{"id": 7952, "prediction": "Gets the exception ."}
{"id": 7954, "prediction": "Create a prefix from the OSGi service properties ."}
{"id": 7956, "prediction": "Parses a tag file ."}
{"id": 7958, "prediction": "Remove proto type files ."}
{"id": 7960, "prediction": "Sets the uri root ."}
{"id": 7962, "prediction": "Locate the uri root ."}
{"id": 7964, "prediction": "Moves the position of the hash ."}
{"id": 7966, "prediction": "Checks if the given string matches the given string ."}
{"id": 7968, "prediction": "Skips the escape character ."}
{"id": 7970, "prediction": "Parse a token ."}
{"id": 7972, "prediction": "Make a new Identifier ."}
{"id": 7974, "prediction": "Gets the list of missing IDs that are missing ."}
{"id": 7976, "prediction": "Sets the dtd resource prefix ."}
{"id": 7978, "prediction": "Converts the given node to a tree ."}
{"id": 7980, "prediction": "Initialize the binder ."}
{"id": 7982, "prediction": "Checks that the given path is equal to the given path ."}
{"id": 7984, "prediction": "Returns a copy of the specified size ."}
{"id": 7986, "prediction": "Converts an artifact result into an AetherResult ."}
{"id": 7988, "prediction": "Validate the given page ."}
{"id": 7990, "prediction": "Get the encoding of the given jar file ."}
{"id": 7992, "prediction": "Report a fatal error ."}
{"id": 7994, "prediction": "Returns the URL for the given resource ."}
{"id": 7996, "prediction": "Returns the set of resource paths ."}
{"id": 7998, "prediction": "Add a filter ."}
{"id": 8000, "prediction": "Returns the memory usage of the given dict ."}
{"id": 8002, "prediction": "Move the contents of the buffer to the current position ."}
{"id": 8004, "prediction": "Processes pending bytes ."}
{"id": 8006, "prediction": "Gets the length of the buffer ."}
{"id": 8008, "prediction": "Moves the position to the current position ."}
{"id": 8010, "prediction": "Flush the buffer ."}
{"id": 8012, "prediction": "Flush the output stream ."}
{"id": 8014, "prediction": "Write a string to the buffer ."}
{"id": 8016, "prediction": "Called when a javac error occurs ."}
{"id": 8018, "prediction": "Generate the Java class file ."}
{"id": 8020, "prediction": "Remove generated files ."}
{"id": 8022, "prediction": "Checks if the system jars in the system ."}
{"id": 8024, "prediction": "Generate the declarations for a page directive ."}
{"id": 8026, "prediction": "Generate an XML declaration ."}
{"id": 8028, "prediction": "Generate postamble ."}
{"id": 8030, "prediction": "Generate tag handlers ."}
{"id": 8032, "prediction": "Export a channel ."}
{"id": 8034, "prediction": "Returns the Jsp tag for the given handler class ."}
{"id": 8036, "prediction": "Selects the next property from the given string ."}
{"id": 8038, "prediction": "Prints a comment ."}
{"id": 8040, "prediction": "Print a string ."}
{"id": 8042, "prediction": "Gets the expression in a string ."}
{"id": 8044, "prediction": "Escape a string ."}
{"id": 8046, "prediction": "Returns the class name for the given path ."}
{"id": 8048, "prediction": "Splits a path into a string ."}
{"id": 8050, "prediction": "Makes a char from a char ."}
{"id": 8052, "prediction": "Adds a property to the map ."}
{"id": 8054, "prediction": "Returns a set of metadata for the given metadata key ."}
{"id": 8056, "prediction": "Gets the basename ."}
{"id": 8058, "prediction": "Load database ."}
{"id": 8060, "prediction": "Resolves a number ."}
{"id": 8062, "prediction": "Gets the TTL for the given granularity ."}
{"id": 8064, "prediction": "Triggers tracking metrics ."}
{"id": 8066, "prediction": "Read a double from the stream ."}
{"id": 8068, "prediction": "Gets all the properties ."}
{"id": 8070, "prediction": "Schedule slots for all slots in the cluster ."}
{"id": 8072, "prediction": "Add an event ."}
{"id": 8074, "prediction": "Removes an event from the list ."}
{"id": 8076, "prediction": "Returns a list of listeners for the specified event ."}
{"id": 8078, "prediction": "Append a rollup event ."}
{"id": 8080, "prediction": "Start server ."}
{"id": 8082, "prediction": "Creates an IOContainer from the configuration ."}
{"id": 8084, "prediction": "Compute the maximum number of inputs ."}
{"id": 8086, "prediction": "Formats the given outputs into an array of strings ."}
{"id": 8088, "prediction": "Set thread pool name ."}
{"id": 8090, "prediction": "Gets the complete metric names ."}
{"id": 8092, "prediction": "Executes the given batch ."}
{"id": 8094, "prediction": "Gets the granularity from points to the given points ."}
{"id": 8096, "prediction": "Returns a set of hostnames ."}
{"id": 8098, "prediction": "Gets the metric family families ."}
{"id": 8100, "prediction": "Insert metrics for the given collection ."}
{"id": 8102, "prediction": "get metric names from Elasticsearch"}
{"id": 8104, "prediction": "Start the storage manager ."}
{"id": 8106, "prediction": "Checks if the current batch layer is in the cache ."}
{"id": 8108, "prediction": "Checks if the token is in the current locator ."}
{"id": 8110, "prediction": "Sets the delayed locator for the given locator ."}
{"id": 8112, "prediction": "Returns an iterator that iterates over the range of intervals ."}
{"id": 8114, "prediction": "Inserts the given collection of metrics to the database ."}
{"id": 8116, "prediction": "Gets the bound statement for the given metric ."}
{"id": 8118, "prediction": "Returns the serializer for the given type ."}
{"id": 8120, "prediction": "Check if the accept header is valid"}
{"id": 8122, "prediction": "Verifies that all aggregated metrics are valid ."}
{"id": 8124, "prediction": "Gets a new instance ."}
{"id": 8126, "prediction": "Start download process ."}
{"id": 8128, "prediction": "Returns the default PnSignature parameters ."}
{"id": 8130, "prediction": "Add a new server to the peer server ."}
{"id": 8132, "prediction": "Send all the objects to the specified message ."}
{"id": 8134, "prediction": "Gets the value of the userdefinedField property ."}
{"id": 8136, "prediction": "Sets the apiFelder property ."}
{"id": 8138, "prediction": "Gets the status of the JVM ."}
{"id": 8140, "prediction": "Gets the status code ."}
{"id": 8142, "prediction": "Gets the adressdress ."}
{"id": 8144, "prediction": "Gets the Bodelag ."}
{"id": 8146, "prediction": "Sets the area of the area ."}
{"id": 8148, "prediction": "Sets the description ."}
{"id": 8150, "prediction": "Sets the value of the ForecastAd property ."}
{"id": 8152, "prediction": "Sets the value of the phone2 property ."}
{"id": 8154, "prediction": "Sets the phone information ."}
{"id": 8156, "prediction": "Sets the cc value ."}
{"id": 8158, "prediction": "Sets the id of the agent ."}
{"id": 8160, "prediction": "Sets the value of the Jahrgang ."}
{"id": 8162, "prediction": "Sets the value of the buero property ."}
{"id": 8164, "prediction": "Sets the value of the LOBE ."}
{"id": 8166, "prediction": "Sets the agent ."}
{"id": 8168, "prediction": "Sets the fallback status ."}
{"id": 8170, "prediction": "Sets the value of the Preiinisinertion ."}
{"id": 8172, "prediction": "Gets the value of the haus property ."}
{"id": 8174, "prediction": "Gets the value of the gastgewer property ."}
{"id": 8176, "prediction": "Gets the value of the property ."}
{"id": 8178, "prediction": "Gets the value of the terrain property ."}
{"id": 8180, "prediction": "Sets the value of the WohnFormat property ."}
{"id": 8182, "prediction": "Gets the country code from an ISO3 object ."}
{"id": 8184, "prediction": "Gets the country code from an ISO2 object ."}
{"id": 8186, "prediction": "Translates a country name into a country ."}
{"id": 8188, "prediction": "Sets the value of the category property ."}
{"id": 8190, "prediction": "Sets the art ."}
{"id": 8705, "prediction": "Gets the column style ."}
{"id": 8707, "prediction": "Gets the vertical alignment for a cell style ."}
{"id": 8709, "prediction": "Set the cell style ."}
{"id": 8711, "prediction": "Returns the set of resource paths for the given path ."}
{"id": 8713, "prediction": "Remove a prefix from a resource ."}
{"id": 8715, "prediction": "Find bean ."}
{"id": 8717, "prediction": "Rounds a double to the given value ."}
{"id": 8719, "prediction": "Gets the tab style ."}
{"id": 8721, "prediction": "Gets the separator for the default locale ."}
{"id": 8723, "prediction": "Sets the tieCommandAlias list ."}
{"id": 8725, "prediction": "Build the watch list for a cell ."}
{"id": 8727, "prediction": "Checks if a string is a command string ."}
{"id": 8729, "prediction": "Gets the key in the map ."}
{"id": 8731, "prediction": "Determine the position of a pair of strings ."}
{"id": 8733, "prediction": "Parses the input form attributes ."}
{"id": 8735, "prediction": "Splits a string into an array of strings ."}
{"id": 8737, "prediction": "Process calendar attributes ."}
{"id": 8739, "prediction": "Gathers the special attributes of the cell ."}
{"id": 8741, "prediction": "Returns the index of the first non - whitespace character position in the string ."}
{"id": 8743, "prediction": "Gets the escape column name ."}
{"id": 8745, "prediction": "Gets the cell by sheet reference ."}
{"id": 8747, "prediction": "Checks if the given string is a valid date ."}
{"id": 8749, "prediction": "Checks if the given string is numeric ."}
{"id": 8751, "prediction": "Sets an object property ."}
{"id": 8753, "prediction": "Checks if the child range is inside the range ."}
{"id": 8755, "prediction": "Delete hidden columns ."}
{"id": 8757, "prediction": "Runs the tieFaces event ."}
{"id": 8759, "prediction": "Validate the current row in the current table"}
{"id": 8761, "prediction": "Check the error message ."}
{"id": 8763, "prediction": "Evaluates the expression ."}
{"id": 8765, "prediction": "Validate the current page ."}
{"id": 8767, "prediction": "Validate the cell in the current row ."}
{"id": 8769, "prediction": "Refresh all cells in the table ."}
{"id": 8771, "prediction": "Validate the work sheet ."}
{"id": 8773, "prediction": "Load the header rows ."}
{"id": 8775, "prediction": "Adds the max columns to the header cell ."}
{"id": 8777, "prediction": "Gets the width style ."}
{"id": 8779, "prediction": "Gets the column style width ."}
{"id": 8781, "prediction": "Initialize the tabs ."}
{"id": 8783, "prediction": "Refresh the data object ."}
{"id": 8785, "prediction": "Refresh data for a cell ."}
{"id": 8787, "prediction": "Load work sheet ."}
{"id": 8789, "prediction": "Sets the data table page ."}
{"id": 8791, "prediction": "Setup the row info ."}
{"id": 8793, "prediction": "Gets the body cells from the cell ."}
{"id": 8795, "prediction": "Processes the refresh cell ."}
{"id": 8797, "prediction": "Adds a repeat row ."}
{"id": 8799, "prediction": "Sets the unsaved state ."}
{"id": 8801, "prediction": "Returns the common constructor for the given type ."}
{"id": 8803, "prediction": "Write a long ."}
{"id": 8805, "prediction": "Sets the conversion tag ."}
{"id": 8807, "prediction": "Add file descriptor ."}
{"id": 8809, "prediction": "Add a header ."}
{"id": 8811, "prediction": "Call this method ."}
{"id": 8813, "prediction": "Binds to the service ."}
{"id": 8815, "prediction": "Remove a listener ."}
{"id": 8817, "prediction": "Converts the input stream to a string ."}
{"id": 8819, "prediction": "Send data to the output stream ."}
{"id": 8821, "prediction": "Closes the pool ."}
{"id": 8823, "prediction": "Reset the data ."}
{"id": 8825, "prediction": "Sends the message header to the output stream ."}
{"id": 8827, "prediction": "Send the transfer header to the output stream ."}
{"id": 8829, "prediction": "Write end end ."}
{"id": 8831, "prediction": "Calculates the length of parts of a part of a part ."}
{"id": 8833, "prediction": "Sends the not modified response ."}
{"id": 8835, "prediction": "Sets the cache headers ."}
{"id": 8837, "prediction": "Closes the channel ."}
{"id": 8839, "prediction": "Sends the data to the output stream ."}
{"id": 8841, "prediction": "Ensure the working directory exists ."}
{"id": 8843, "prediction": "Factory method to create a new stream input stream ."}
{"id": 8845, "prediction": "Gets the context for the given keystore ."}
{"id": 8847, "prediction": "Replace the scale type ."}
{"id": 8849, "prediction": "Gets the PendingIntent of the request ."}
{"id": 8851, "prediction": "Bind service to service ."}
{"id": 8853, "prediction": "Notify listeners that the view has changed ."}
{"id": 8855, "prediction": "On accept response data ."}
{"id": 8857, "prediction": "Wait for the loader to finish ."}
{"id": 8859, "prediction": "Hides the soft input ."}
{"id": 8861, "prediction": "Toggles the soft input ."}
{"id": 8863, "prediction": "Called when an exception is thrown ."}
{"id": 8865, "prediction": "Populates an image from the given URL ."}
{"id": 8867, "prediction": "Create image consumer ."}
{"id": 8869, "prediction": "Sets the loading image ."}
{"id": 8871, "prediction": "Add memcache image ."}
{"id": 8873, "prediction": "Called when a url connection is prepared ."}
{"id": 8875, "prediction": "Try to connect to work ."}
{"id": 8877, "prediction": "Returns the String identifying the given CUma ."}
{"id": 8879, "prediction": "Checks the given result status ."}
{"id": 8881, "prediction": "Add a lexer to the lexer"}
{"id": 8883, "prediction": "Returns the estimated estimate of the given attribute values ."}
{"id": 8885, "prediction": "Verify attribute ."}
{"id": 8887, "prediction": "Verify attribute ."}
{"id": 8889, "prediction": "Gets a list of MetricData ."}
{"id": 8891, "prediction": "Processes a list of JSON data ."}
{"id": 8893, "prediction": "Gets the connection config ."}
{"id": 8895, "prediction": "Creates a GenericCodeList for the GCE code ."}
{"id": 8897, "prediction": "Returns a new GenericColumnSet for the GCC entry ."}
{"id": 8899, "prediction": "Creates a GenericCodeSet from GC10 ."}
{"id": 8901, "prediction": "Get the ID of a column"}
{"id": 8903, "prediction": "Get the column with the given ID"}
{"id": 8905, "prediction": "Get a key from a column set ."}
{"id": 8907, "prediction": "Create a column ."}
{"id": 8909, "prediction": "Set the number of lines to be skipped ."}
{"id": 8911, "prediction": "Creates a new GCE code list for the GCE code ."}
{"id": 8913, "prediction": "Creates a new GenericColumnSet for GCCL 4 ."}
{"id": 8915, "prediction": "Create a GenericCodeSet for GCCodingSet ."}
{"id": 8917, "prediction": "Gets the GCE code list for the GCE ."}
{"id": 8919, "prediction": "Gets a valid GenericColumnSet that is valid for the specified column ."}
{"id": 8921, "prediction": "Validate the GC10 code set ."}
{"id": 8923, "prediction": "Sends the log messages to the server ."}
{"id": 8925, "prediction": "Get the log level ."}
{"id": 8927, "prediction": "Sets the maximum size of the log file ."}
{"id": 8929, "prediction": "Append the additional metadata to the log ."}
{"id": 8931, "prediction": "Log location ."}
{"id": 8933, "prediction": "Gets byte array from file ."}
{"id": 8935, "prediction": "Sets the region to the given region ."}
{"id": 8937, "prediction": "Determines the size of a region ."}
{"id": 8939, "prediction": "Dumps the contents of a PrintStream to stdout ."}
{"id": 8941, "prediction": "Convert a file to a chart ."}
{"id": 8943, "prediction": "Get the pool for the given locator ."}
{"id": 8945, "prediction": "Get a member by name"}
{"id": 8947, "prediction": "Look up a network host name ."}
{"id": 8949, "prediction": "Execute the given function with the given function ."}
{"id": 8951, "prediction": "Execute query ."}
{"id": 8953, "prediction": "Returns a bridge listener for the given entry ."}
{"id": 8955, "prediction": "Gets the onRegionKeyFactorInfo ."}
{"id": 8957, "prediction": "Return a list of host names ."}
{"id": 8959, "prediction": "Returns the application name for the given resources ."}
{"id": 8192, "prediction": "Sets the value of the javad ."}
{"id": 8194, "prediction": "Upgrade the current document to the current document ."}
{"id": 8196, "prediction": "Gets the field names ."}
{"id": 8198, "prediction": "Sets the value of the Pauskey ."}
{"id": 8200, "prediction": "Convenience method to get the best placeholders ."}
{"id": 8202, "prediction": "Sets the value of the zustand ."}
{"id": 8204, "prediction": "Handle validation event ."}
{"id": 8206, "prediction": "Returns the value of the given pos ."}
{"id": 8208, "prediction": "Sets the given position ."}
{"id": 8210, "prediction": "Sets the value of the haird property ."}
{"id": 8212, "prediction": "Sets the value of the kerter ."}
{"id": 8214, "prediction": "Sets the value of the Geschchchachchr ."}
{"id": 8216, "prediction": "Determines if the class is not null ."}
{"id": 8218, "prediction": "Upgrade the current document ."}
{"id": 8220, "prediction": "Gets the value of the WSD property ."}
{"id": 8222, "prediction": "Sets the ui ."}
{"id": 8224, "prediction": "Gets the value of the telnet property ."}
{"id": 8226, "prediction": "Downgrades the previous version ."}
{"id": 8228, "prediction": "Sets the api value ."}
{"id": 8230, "prediction": "Gets the value of the row property ."}
{"id": 8232, "prediction": "Gets the value of the Annotation property ."}
{"id": 8234, "prediction": "Replies the instance of the objt ."}
{"id": 8236, "prediction": "Convenience method to get the list of the Aststattstartstampet ."}
{"id": 8238, "prediction": "Gets the value of the intress property ."}
{"id": 8240, "prediction": "Sets the value of theckerland property ."}
{"id": 8242, "prediction": "Sets the bootstrapping value ."}
{"id": 8244, "prediction": "Sets the camping value ."}
{"id": 8246, "prediction": "Sets the value of the EIFIAM ."}
{"id": 8248, "prediction": "Sets the value of the einzeleckel ."}
{"id": 8250, "prediction": "Sets the garten ."}
{"id": 8252, "prediction": "Sets the value of the JAXB field ."}
{"id": 8254, "prediction": "Sets the value of the industrial component ."}
{"id": 8256, "prediction": "Sets the value of the JAXBinder property ."}
{"id": 8258, "prediction": "Sets the value of the JAXB ."}
{"id": 8260, "prediction": "Sets the park s value ."}
{"id": 8262, "prediction": "Sets the value of the rehenni ."}
{"id": 8264, "prediction": "Sets the value of the villa property ."}
{"id": 8266, "prediction": "Sets the value of the transfer ."}
{"id": 8268, "prediction": "Gets the value of the grundstndi property ."}
{"id": 8270, "prediction": "Gets the value of the hallLager property ."}
{"id": 8272, "prediction": "Gets the value of the Freelimiteral property ."}
{"id": 8274, "prediction": "Gets the value of the stzppolicy property ."}
{"id": 8276, "prediction": "Gets the value of the feature property ."}
{"id": 8278, "prediction": "This method is used to upgrade the current document ."}
{"id": 8280, "prediction": "Sets the value of the Errsemeer property ."}
{"id": 8282, "prediction": "Sets the value of the pellement property ."}
{"id": 8284, "prediction": "Sets the value of the OLElement property ."}
{"id": 8286, "prediction": "Sets the stromased value ."}
{"id": 8288, "prediction": "Returns a random string with the specified length ."}
{"id": 8290, "prediction": "Generates a random numeric string ."}
{"id": 8292, "prediction": "Sets the value of the benzer ."}
{"id": 8294, "prediction": "Gets the value of the feed property ."}
{"id": 8296, "prediction": "Gets the value of the service property ."}
{"id": 8298, "prediction": "Sets the location ."}
{"id": 8300, "prediction": "Downgrades the current version ."}
{"id": 8302, "prediction": "Sets the field type ."}
{"id": 8304, "prediction": "This method is used to upgrade the mojo information from the current document ."}
{"id": 8306, "prediction": "Sets the value of the Gastgeworm ."}
{"id": 8308, "prediction": "Gets the value of the datastink ."}
{"id": 8310, "prediction": "Gets the value of the image property ."}
{"id": 8312, "prediction": "Sets the new development availability ."}
{"id": 8314, "prediction": "Sets the value of the co2 rating ."}
{"id": 8316, "prediction": "Sets the viewing details ."}
{"id": 8318, "prediction": "Sets the value of the adType property ."}
{"id": 8320, "prediction": "Upgrade the current document ."}
{"id": 8322, "prediction": "Sets the value of the alteration attribute ."}
{"id": 8324, "prediction": "Sets the value of the telefonport property ."}
{"id": 8326, "prediction": "Sets the value of the export property ."}
{"id": 8328, "prediction": "Create a user defined field ."}
{"id": 8330, "prediction": "Sets the value of the ErmbiBatch ."}
{"id": 8332, "prediction": "Gets the value of the valueValuelist property ."}
{"id": 8334, "prediction": "Sets the zinsink ."}
{"id": 8336, "prediction": "Sets the metadata for the feed ."}
{"id": 8338, "prediction": "Sets the properties for this feed ."}
{"id": 8340, "prediction": "Upgrade the version of the document ."}
{"id": 8342, "prediction": "Gets the value of the objt property ."}
{"id": 8344, "prediction": "Gets the value of the status property ."}
{"id": 8346, "prediction": "Sets the distanzu zer ."}
{"id": 8348, "prediction": "Gets the value of the danzen property ."}
{"id": 8350, "prediction": "Sets bindings ."}
{"id": 8352, "prediction": "Remove binding ."}
{"id": 8354, "prediction": "Consumes comment tokens ."}
{"id": 8356, "prediction": "Returns the index of the next token ."}
{"id": 8358, "prediction": "Start the namespace mapping ."}
{"id": 8360, "prediction": "Add an option ."}
{"id": 8362, "prediction": "Add an integer option ."}
{"id": 8364, "prediction": "Add a double option ."}
{"id": 8366, "prediction": "Parse the command line arguments ."}
{"id": 8368, "prediction": "Called when the controller is invoked ."}
{"id": 8370, "prediction": "Prepares the target method ."}
{"id": 8372, "prediction": "Converts an array of digits to a string ."}
{"id": 8374, "prediction": "Deserializes an object from a byte array ."}
{"id": 8376, "prediction": "Get the value of the child element with the given tag name ."}
{"id": 8378, "prediction": "Returns true if the given node name matches the given name ."}
{"id": 8380, "prediction": "Sets the size of a string ."}
{"id": 8382, "prediction": "Add an entry to the tracker ."}
{"id": 8384, "prediction": "Calculates the phone number for a mobile phone number ."}
{"id": 8386, "prediction": "Remove the end prefix mapping ."}
{"id": 8388, "prediction": "Parses the jar ."}
{"id": 8390, "prediction": "Sets the values of the layout ."}
{"id": 8392, "prediction": "Sets the text size of the font ."}
{"id": 8394, "prediction": "Gets the introspection ."}
{"id": 8396, "prediction": "Gets the command arguments for the given keyword ."}
{"id": 8398, "prediction": "Starts the remote server ."}
{"id": 8400, "prediction": "Start the remote server ."}
{"id": 8402, "prediction": "Convert a file to a JSON string ."}
{"id": 8404, "prediction": "Convert properties to JSON ."}
{"id": 8406, "prediction": "Convert the properties map to a JSON object ."}
{"id": 8408, "prediction": "Convert properties to JSON ."}
{"id": 8410, "prediction": "Create a new OcspFetcher ."}
{"id": 8412, "prediction": "Processes the Markdown ."}
{"id": 8414, "prediction": "Replaces all variables in the template with the given pattern ."}
{"id": 8416, "prediction": "Adds the title to the HTML file ."}
{"id": 8418, "prediction": "Update relative paths ."}
{"id": 8420, "prediction": "Checks if the given path is valid ."}
{"id": 8422, "prediction": "Displays the animation ."}
{"id": 8424, "prediction": "Calculate the percentage"}
{"id": 8426, "prediction": "Creates an intent to launch an activity ."}
{"id": 8428, "prediction": "Get Todo list"}
{"id": 8430, "prediction": "Download file from response ."}
{"id": 8432, "prediction": "Create an access control entity ."}
{"id": 8434, "prediction": "Create a full export ."}
{"id": 8436, "prediction": "Sets the token provider provider ."}
{"id": 8438, "prediction": "Process a graph ."}
{"id": 8440, "prediction": "Adds permissions to the graph ."}
{"id": 8442, "prediction": "Adds a set of rulesets to the graph ."}
{"id": 8444, "prediction": "Execute a SELECT statement ."}
{"id": 8446, "prediction": "Limit the number of threads ."}
{"id": 8961, "prediction": "Gets region region ."}
{"id": 8963, "prediction": "Constructs a comparator from the source map ."}
{"id": 8965, "prediction": "Closes this resource ."}
{"id": 8967, "prediction": "Main entry point ."}
{"id": 8969, "prediction": "Stop members of the host ."}
{"id": 8971, "prediction": "Shutdown the system ."}
{"id": 8973, "prediction": "Stores the pagination map ."}
{"id": 8975, "prediction": "Imports the specified region to the specified region ."}
{"id": 8977, "prediction": "Execute the function ."}
{"id": 8979, "prediction": "Returns the value of the given column"}
{"id": 8981, "prediction": "Serializes an object to a byte array ."}
{"id": 8983, "prediction": "Creates an instance of an interface ."}
{"id": 8985, "prediction": "Checks the fields for the given column ."}
{"id": 8987, "prediction": "Gets the schema ."}
{"id": 8989, "prediction": "Emits getter for getId"}
{"id": 8991, "prediction": "Checks if the given column name is equal to the given column name ."}
{"id": 8993, "prediction": "Capitalizes the first letter ."}
{"id": 8995, "prediction": "Returns a builder for descending order ."}
{"id": 8997, "prediction": "Gets the value of the given type ."}
{"id": 8999, "prediction": "Log an error message ."}
{"id": 9001, "prediction": "Gets the icons ."}
{"id": 9003, "prediction": "Gets the background decoration ."}
{"id": 9005, "prediction": "Sets the array of values ."}
{"id": 9007, "prediction": "Calculates the root root of a given point ."}
{"id": 9009, "prediction": "Multiplies the given value using the given scale ."}
{"id": 9011, "prediction": "Returns the arctanan with the given scale ."}
{"id": 9013, "prediction": "Calculates the square of a given scale ."}
{"id": 9015, "prediction": "Create a timestamp ."}
{"id": 9017, "prediction": "Puts the given value into the buffer ."}
{"id": 9019, "prediction": "Creates a new complex ."}
{"id": 9021, "prediction": "Multiplies a complex number ."}
{"id": 9023, "prediction": "Sets the matrix ."}
{"id": 9025, "prediction": "Gets the column vector ."}
{"id": 9027, "prediction": "Returns the transpose of this matrix ."}
{"id": 9029, "prediction": "Subtracts a matrix ."}
{"id": 9031, "prediction": "Multiplies a matrix ."}
{"id": 9033, "prediction": "Sets the image ."}
{"id": 9035, "prediction": "Computes the next position ."}
{"id": 9037, "prediction": "Parses the SldInfoDescriptor ."}
{"id": 9039, "prediction": "Validate the given layer descriptor ."}
{"id": 9041, "prediction": "Returns the area of the specified region ."}
{"id": 9043, "prediction": "Sets the values of the matrix ."}
{"id": 9045, "prediction": "Returns the determinant of the matrix ."}
{"id": 9047, "prediction": "Solve x = b"}
{"id": 9049, "prediction": "Iterate over the matrix elimination ."}
{"id": 9051, "prediction": "Replies the substitution vector ."}
{"id": 9053, "prediction": "Convert the square matrix to a square matrix ."}
{"id": 9055, "prediction": "Iterate over the elements of the node ."}
{"id": 9057, "prediction": "Checks if the node has changed ."}
{"id": 9059, "prediction": "Check if the interval is valid ."}
{"id": 9061, "prediction": "Multiply the specified number of bits ."}
{"id": 9063, "prediction": "Iterate over the elements of this matrix ."}
{"id": 9065, "prediction": "Converts a long value to a char array ."}
{"id": 9067, "prediction": "Prints the given PrintStream ."}
{"id": 9069, "prediction": "Validate the float exponent ."}
{"id": 9071, "prediction": "Validate double exponent ."}
{"id": 9073, "prediction": "Calculates the next random central distribution ."}
{"id": 9075, "prediction": "Returns the next random ratio ."}
{"id": 9077, "prediction": "Returns an array of all the elements in pn ."}
{"id": 9079, "prediction": "Computes the next position ."}
{"id": 9081, "prediction": "Sets the java application ."}
{"id": 9083, "prediction": "Sets the default configuration ."}
{"id": 9085, "prediction": "Specify the geocode of the geocode ."}
{"id": 9087, "prediction": "Get the AttributeDefinition for the given attribute definition"}
{"id": 9089, "prediction": "Sanitize a string ."}
{"id": 9091, "prediction": "Add the parameters to the map ."}
{"id": 9093, "prediction": "Query a collection of ServiceInstance objects ."}
{"id": 9095, "prediction": "Returns the meta data for the given decimal parameter ."}
{"id": 9097, "prediction": "Get all users ."}
{"id": 9099, "prediction": "Get the gravatar for the given user ."}
{"id": 9101, "prediction": "Gets the Elasticsearch field type ."}
{"id": 9103, "prediction": "Update flow step ."}
{"id": 9105, "prediction": "Get FlowStep by step"}
{"id": 9107, "prediction": "Delete a flow step ."}
{"id": 9109, "prediction": "Populate the table fields ."}
{"id": 9111, "prediction": "Handles the response ."}
{"id": 9113, "prediction": "Gets the list of ECHO messages from the return value ."}
{"id": 9115, "prediction": "Create a TableRecord ."}
{"id": 9117, "prediction": "Gets the form of the formatter ."}
{"id": 9119, "prediction": "Gets the most recent form data for this form ."}
{"id": 9121, "prediction": "Unlocks the form container ."}
{"id": 9123, "prediction": "Maps a FormContainer to a Map"}
{"id": 9125, "prediction": "Creates a new form definition ."}
{"id": 9127, "prediction": "Gets a form definition by id ."}
{"id": 9129, "prediction": "Gets all log records ."}
{"id": 9131, "prediction": "Gets storage key ."}
{"id": 9133, "prediction": "Shutdown the memcached client ."}
{"id": 9135, "prediction": "Convert an input document to a PDF document ."}
{"id": 9137, "prediction": "Create a flow step entry ."}
{"id": 9139, "prediction": "Create flow step ."}
{"id": 9141, "prediction": "Update flow step ."}
{"id": 9143, "prediction": "Move the flow step entry ."}
{"id": 9145, "prediction": "Delete a flow step entry ."}
{"id": 9147, "prediction": "Delete flow step ."}
{"id": 9149, "prediction": "Gets all user queries ."}
{"id": 9151, "prediction": "Gets the service ticket ."}
{"id": 9153, "prediction": "Create a barcode text field ."}
{"id": 9155, "prediction": "Creates the slider for the specified field ."}
{"id": 9157, "prediction": "Updates the field with the given value ."}
{"id": 9159, "prediction": "Updates the decimal value for a field ."}
{"id": 9161, "prediction": "Update field ."}
{"id": 9163, "prediction": "Gets a list of form fields matching the specified form ."}
{"id": 9165, "prediction": "Delete field ."}
{"id": 9167, "prediction": "Gets the meta data for the given form field ."}
{"id": 9169, "prediction": "Get or create index ."}
{"id": 9171, "prediction": "Update flow ."}
{"id": 9173, "prediction": "Get flow by name"}
{"id": 9175, "prediction": "Delete a flow ."}
{"id": 9177, "prediction": "Gets all global field values ."}
{"id": 9179, "prediction": "Decrypt seed packet ."}
{"id": 9181, "prediction": "Initializes a new request handler ."}
{"id": 9183, "prediction": "Creates an admin user ."}
{"id": 9185, "prediction": "Get user profile info ."}
{"id": 9187, "prediction": "Execute a POST request ."}
{"id": 9189, "prediction": "Check if connection is valid"}
{"id": 9191, "prediction": "Gets the path to the path store ."}
{"id": 9193, "prediction": "Get a FluidList for a job"}
{"id": 9195, "prediction": "Called when a connection is closed ."}
{"id": 9197, "prediction": "Sends a message to the client ."}
{"id": 9199, "prediction": "Closes the session ."}
{"id": 9201, "prediction": "Request a license request ."}
{"id": 9203, "prediction": "Create a plain text field ."}
{"id": 9205, "prediction": "Create a ParagraphText ."}
{"id": 9207, "prediction": "Create a date time field ."}
{"id": 9209, "prediction": "Update the Paragraph text ."}
{"id": 9211, "prediction": "Updates a decimal field ."}
{"id": 9213, "prediction": "Create a field value for a route parameter ."}
{"id": 9215, "prediction": "Gets a list of Configuration objects ."}
{"id": 8448, "prediction": "Performs a rotation on an operation ."}
{"id": 8450, "prediction": "Strip the profile ."}
{"id": 8452, "prediction": "Adds an image to the specified file ."}
{"id": 8454, "prediction": "Parses the given arguments ."}
{"id": 8456, "prediction": "Extracts a TimeUnit from a String ."}
{"id": 8458, "prediction": "Executes the Slide ."}
{"id": 8460, "prediction": "Interprets the given file ."}
{"id": 8462, "prediction": "Renders template text ."}
{"id": 8464, "prediction": "Returns true if the given mouse is within the specified region ."}
{"id": 8466, "prediction": "Executes the given message ."}
{"id": 8468, "prediction": "Reads a file and returns it ."}
{"id": 8470, "prediction": "Creates a LogValueMap for the given object ."}
{"id": 8472, "prediction": "Logs a message with debug level ."}
{"id": 8474, "prediction": "Log a message at debug level ."}
{"id": 8476, "prediction": "Logs a message at the specified level ."}
{"id": 8478, "prediction": "Log a message at the given level ."}
{"id": 8480, "prediction": "Log a message at the specified level ."}
{"id": 8482, "prediction": "Add a context line to the context ."}
{"id": 8484, "prediction": "Write key value pairs ."}
{"id": 8486, "prediction": "Returns the log value ."}
{"id": 8488, "prediction": "Encode the given value ."}
{"id": 8490, "prediction": "Checks that the given array is mapped ."}
{"id": 8492, "prediction": "Saves the data in the context ."}
{"id": 8494, "prediction": "Parse the save attribute string ."}
{"id": 8496, "prediction": "Gets the save attribute from a column index ."}
{"id": 8498, "prediction": "Set the attributes for a sheet ."}
{"id": 8500, "prediction": "Prepare the attributes for the given poi cell ."}
{"id": 8502, "prediction": "Adds a new shift attribute ."}
{"id": 8504, "prediction": "Gets the WSSEbookWorkbook ."}
{"id": 8506, "prediction": "Calculate the maximum number of columns ."}
{"id": 8508, "prediction": "Loads the web sheet ."}
{"id": 8510, "prediction": "Exports the file to a file ."}
{"id": 8512, "prediction": "Submit submit ."}
{"id": 8514, "prediction": "Get the current sheet configuration ."}
{"id": 8516, "prediction": "Returns the locale for the given component ."}
{"id": 8518, "prediction": "Get the cellHelper for this cell ."}
{"id": 8520, "prediction": "Gets the validation handler ."}
{"id": 8522, "prediction": "Converts a list of SharedForms to a SharedFormula ."}
{"id": 8524, "prediction": "Convert a PtgList to a PtgList ."}
{"id": 8526, "prediction": "Gets the serial row list from the current row mapping ."}
{"id": 8528, "prediction": "Fix a ref to a ref ."}
{"id": 8530, "prediction": "Build the dynamic row for a specific area ."}
{"id": 8532, "prediction": "Get the geol color from the specified index ."}
{"id": 8534, "prediction": "Get the XColor from the schema table"}
{"id": 8536, "prediction": "Get the XColor with the specified index ."}
{"id": 8538, "prediction": "Convert an XSSolor color to a hex color array ."}
{"id": 8540, "prediction": "Gets the component name from the given component ."}
{"id": 8542, "prediction": "Tries to match the given object name ."}
{"id": 8544, "prediction": "Gets the value of an object property ."}
{"id": 8546, "prediction": "Find the attributes for a cell ."}
{"id": 8548, "prediction": "Sets the charts for the chart cell ."}
{"id": 8550, "prediction": "Initialize the chart map ."}
{"id": 8552, "prediction": "Set the style for a series ."}
{"id": 8554, "prediction": "Set the bar style ."}
{"id": 8556, "prediction": "Gets the id from a chart ."}
{"id": 8558, "prediction": "Creates a single XSSF chart ."}
{"id": 8560, "prediction": "Gets the full name of a row ."}
{"id": 8562, "prediction": "Sets the upper level formula for a cell ."}
{"id": 8564, "prediction": "Groups rows by full name ."}
{"id": 8566, "prediction": "Changes the upper level length ."}
{"id": 8568, "prediction": "Sets the full name of the hidden column ."}
{"id": 8570, "prediction": "Sets the original row in the hidden column ."}
{"id": 8572, "prediction": "Find child rows mapping ."}
{"id": 8574, "prediction": "Builds the ConfigRange from the given source ."}
{"id": 8576, "prediction": "Checks if the given row is static ."}
{"id": 8578, "prediction": "Returns the merged regions for the specified sheet ."}
{"id": 8580, "prediction": "Adds a cell to the list of cells to the list of cells in the list"}
{"id": 8582, "prediction": "Build a cell comment from a cell ."}
{"id": 8584, "prediction": "Gets the sheet configuration ."}
{"id": 8586, "prediction": "Verifies the last cell of the column ."}
{"id": 8588, "prediction": "Checks the last row ."}
{"id": 8590, "prediction": "Sets the parent command ."}
{"id": 8592, "prediction": "Match the sheet config"}
{"id": 8594, "prediction": "Build the command line list ."}
{"id": 8596, "prediction": "Process a command line ."}
{"id": 8598, "prediction": "Creates a config command ."}
{"id": 8600, "prediction": "Get the SheetConfiguration from the configuration ."}
{"id": 8602, "prediction": "Sets the body of the sheet configuration ."}
{"id": 8604, "prediction": "Delete row ."}
{"id": 8606, "prediction": "Find full name list ."}
{"id": 8608, "prediction": "Insert an empty object into an empty collection ."}
{"id": 8610, "prediction": "Parses the given collection ."}
{"id": 8612, "prediction": "Checks if the given row is allowed ."}
{"id": 8614, "prediction": "Evaluate and return a normal cell"}
{"id": 8616, "prediction": "Checks if the given string is a valid UUID ."}
{"id": 8618, "prediction": "Evaluate the given script"}
{"id": 8620, "prediction": "Remove a single row in the sheet"}
{"id": 8622, "prediction": "Removes all rows from the body of the given body ."}
{"id": 8624, "prediction": "Loads the chart ."}
{"id": 8626, "prediction": "Get the cell value with the given poi ."}
{"id": 8628, "prediction": "Returns the cell value with the given cell type ."}
{"id": 8630, "prediction": "Set cell value ."}
{"id": 8632, "prediction": "Sets the value of a cell ."}
{"id": 8634, "prediction": "Set cell value ."}
{"id": 8636, "prediction": "Copy a single row to a source"}
{"id": 8638, "prediction": "Copy cell value ."}
{"id": 8640, "prediction": "Clone a single comment ."}
{"id": 8642, "prediction": "Create or insert a comment in the specified cell ."}
{"id": 8644, "prediction": "Get the VML drawing from a Cell ."}
{"id": 8646, "prediction": "Create a cell style from a source cell ."}
{"id": 8648, "prediction": "Get row from component attributes"}
{"id": 8650, "prediction": "Get the FacesRow from a body row"}
{"id": 8652, "prediction": "Get the poi cell from the sheet"}
{"id": 8654, "prediction": "Get tie cell in map"}
{"id": 8656, "prediction": "Evaluate expression"}
{"id": 8658, "prediction": "Writes the object to the output stream ."}
{"id": 8660, "prediction": "Merges all rows in the given map ."}
{"id": 8662, "prediction": "Gets the chart type of the chart ."}
{"id": 8664, "prediction": "Initialize the chart data from a chart ."}
{"id": 8666, "prediction": "Initialize the XSSFords map ."}
{"id": 8668, "prediction": "Gets the chart id of the chart ."}
{"id": 8670, "prediction": "Builds a collection of objects ."}
{"id": 8672, "prediction": "Recalculate the formula ."}
{"id": 8674, "prediction": "Get the faces cell with the given row index ."}
{"id": 8676, "prediction": "Get last collection object ."}
{"id": 8678, "prediction": "Start the base data context ."}
{"id": 8680, "prediction": "Sets the first row ref ."}
{"id": 8682, "prediction": "Builds cells for the given row ."}
{"id": 8684, "prediction": "Deserialize the serialized object ."}
{"id": 8686, "prediction": "Build the serial series list ."}
{"id": 8688, "prediction": "Extracts the color list from a list of points"}
{"id": 8690, "prediction": "Sets the command index map ."}
{"id": 8692, "prediction": "Retrieves a list of XSSFests for the specified sheet ."}
{"id": 8694, "prediction": "Generate style for a sheet ."}
{"id": 8696, "prediction": "Get anchor size ."}
{"id": 8698, "prediction": "Gets the chart ."}
{"id": 8700, "prediction": "Gets the row style ."}
{"id": 8702, "prediction": "Returns the cell color for the cell ."}
{"id": 9217, "prediction": "Gets attachment ."}
{"id": 9219, "prediction": "Force delete attachment ."}
{"id": 9221, "prediction": "Sets the class loader ."}
{"id": 9223, "prediction": "Checks that the element is a rule ."}
{"id": 9225, "prediction": "Get the schema node ."}
{"id": 9227, "prediction": "Checks if the element is a rule ."}
{"id": 9229, "prediction": "Creates a CLI instance ."}
{"id": 9231, "prediction": "Parse arguments ."}
{"id": 9233, "prediction": "Creates a new URL builder ."}
{"id": 9235, "prediction": "Gets the value of the pom ."}
{"id": 9237, "prediction": "Calculate the value of the noise noise"}
{"id": 9239, "prediction": "Calculates the cubic angle of a cubic curve ."}
{"id": 9241, "prediction": "Set bounds ."}
{"id": 9243, "prediction": "Processes the given event ."}
{"id": 9245, "prediction": "Applies the predicates to the given rules ."}
{"id": 9247, "prediction": "Creates a file ."}
{"id": 9249, "prediction": "Restore the properties ."}
{"id": 9251, "prediction": "Adds an object to the queue ."}
{"id": 9253, "prediction": "Gets array property ."}
{"id": 9255, "prediction": "Remove the queue ."}
{"id": 9257, "prediction": "Gets the specified type ."}
{"id": 9259, "prediction": "Print stack trace ."}
{"id": 9261, "prediction": "Replaces the object with the given object ."}
{"id": 9263, "prediction": "Sets the task ."}
{"id": 9265, "prediction": "Called when a task is rejected ."}
{"id": 9267, "prediction": "Indicates whether the task is completed ."}
{"id": 9269, "prediction": "Gets the current job ."}
{"id": 9271, "prediction": "Converts the given name to a blocking mode ."}
{"id": 9273, "prediction": "Setup the reader ."}
{"id": 9275, "prediction": "Copies the reader to the given catalog ."}
{"id": 9277, "prediction": "Loads the catalog entries from the system ."}
{"id": 9279, "prediction": "Parses a list of catalog files into the catalog ."}
{"id": 9281, "prediction": "Process an unknown entry ."}
{"id": 9283, "prediction": "Resolves the given ID using the given catalog ID ."}
{"id": 9285, "prediction": "Resolves the system for the given system id ."}
{"id": 9287, "prediction": "Resolve the catalog of all sub - directories ."}
{"id": 9289, "prediction": "Normalize a URI ."}
{"id": 9291, "prediction": "Adds a new delegate entry to the catalog ."}
{"id": 9293, "prediction": "Fires a throwable on the specified type ."}
{"id": 9295, "prediction": "Creates the delegate implementation ."}
{"id": 9297, "prediction": "Gets the value of the property ."}
{"id": 9299, "prediction": "Sets the object at the given index ."}
{"id": 9301, "prediction": "Add an entry type ."}
{"id": 9303, "prediction": "Gets the value of the entry argument count ."}
{"id": 9305, "prediction": "Sets the context class loader ."}
{"id": 9307, "prediction": "Removes a node from the queue ."}
{"id": 9309, "prediction": "Loads a class by its name ."}
{"id": 9311, "prediction": "Creates a URL stream handler ."}
{"id": 9313, "prediction": "Returns the value of the class ."}
{"id": 9315, "prediction": "Make a synchronized counter ."}
{"id": 9317, "prediction": "Returns true if the extension is in the namespace ."}
{"id": 9319, "prediction": "Rebinds the given name with the given name ."}
{"id": 9321, "prediction": "Returns a substring of a string ."}
{"id": 9323, "prediction": "Join a byte array ."}
{"id": 9325, "prediction": "Returns the value as a String ."}
{"id": 9327, "prediction": "Returns the value associated with the given key ."}
{"id": 9329, "prediction": "Removes the given key ."}
{"id": 9331, "prediction": "Gets the list of valid keys ."}
{"id": 9333, "prediction": "Returns the entry for the given key ."}
{"id": 9335, "prediction": "Gets the child element with the given tag name ."}
{"id": 9337, "prediction": "Gets the content of the given element ."}
{"id": 9339, "prediction": "Gets the value of an optional child element ."}
{"id": 9341, "prediction": "Sets the blocking mode ."}
{"id": 9343, "prediction": "Executes the given wrapper ."}
{"id": 9345, "prediction": "Resolves the public catalog for the given system id ."}
{"id": 9347, "prediction": "Resolve external public public public key"}
{"id": 9349, "prediction": "Append a vector to the vector ."}
{"id": 9351, "prediction": "Resolve the system reverse order ."}
{"id": 9353, "prediction": "Resolves all local system entries in the system ."}
{"id": 9355, "prediction": "Reads a catalog from a file ."}
{"id": 9357, "prediction": "Connect to the file ."}
{"id": 9359, "prediction": "Sets the next node to the given value ."}
{"id": 9361, "prediction": "Returns the value of the header ."}
{"id": 9363, "prediction": "Sets the right to right ."}
{"id": 9365, "prediction": "Generates a list of objects ."}
{"id": 9367, "prediction": "Returns the string representation of this class ."}
{"id": 9369, "prediction": "Get property group ."}
{"id": 9371, "prediction": "Creates a copy of the given object ."}
{"id": 9373, "prediction": "Initialize the context ."}
{"id": 9375, "prediction": "Returns the set of keys in this set ."}
{"id": 9377, "prediction": "Remove a property listener ."}
{"id": 9379, "prediction": "Notifies all registered listeners that a property has been removed ."}
{"id": 9381, "prediction": "Notifies all registered listeners that the property has been changed ."}
{"id": 9383, "prediction": "Loads properties from the given reader ."}
{"id": 9385, "prediction": "Get the property group property ."}
{"id": 9387, "prediction": "Resolve the given system ID ."}
{"id": 9389, "prediction": "Resolve the classpath resource ."}
{"id": 9391, "prediction": "Normalize a public id ."}
{"id": 9393, "prediction": "Decode a public key ."}
{"id": 9395, "prediction": "Start the timer ."}
{"id": 9397, "prediction": "Make a stop watch ."}
{"id": 9399, "prediction": "Generate an array of bytes ."}
{"id": 9401, "prediction": "Creates a new list ."}
{"id": 9403, "prediction": "Reads the next token from the input stream ."}
{"id": 9405, "prediction": "Adds a new vertex ."}
{"id": 9407, "prediction": "Remove a vertex from the graph ."}
{"id": 9409, "prediction": "Creates a DFSTree spanning the given vertex ."}
{"id": 9411, "prediction": "Finds all cycles in the graph ."}
{"id": 9413, "prediction": "Parse an XML element ."}
{"id": 9415, "prediction": "Parse a XML document from an input source ."}
{"id": 9417, "prediction": "Resolves a QName from a qualified qualified name ."}
{"id": 9419, "prediction": "Checks if the given node is child elements ."}
{"id": 9421, "prediction": "Get the text content of a node"}
{"id": 9423, "prediction": "Returns the parent element of the given Node ."}
{"id": 9425, "prediction": "Reads a catalog from an input stream ."}
{"id": 9427, "prediction": "Returns the host address ."}
{"id": 9429, "prediction": "Set system property value ."}
{"id": 9431, "prediction": "Describe a string representation of a class ."}
{"id": 9433, "prediction": "Get package name ."}
{"id": 9435, "prediction": "Returns the wrapper for the given type ."}
{"id": 9437, "prediction": "Get all unique interfaces ."}
{"id": 9439, "prediction": "Creates a new instance of the specified class ."}
{"id": 9441, "prediction": "Returns the method setter for the given class ."}
{"id": 9443, "prediction": "Gets a system property ."}
{"id": 9445, "prediction": "Removes all weak objects from the queue ."}
{"id": 9447, "prediction": "Creates a LLLister object ."}
{"id": 9449, "prediction": "Adds a bound property listener ."}
{"id": 9451, "prediction": "Checks if the string is null or empty ."}
{"id": 9453, "prediction": "Registers an editor ."}
{"id": 9455, "prediction": "Get the context class loader ."}
{"id": 9457, "prediction": "Schedule a timeout ."}
{"id": 9459, "prediction": "Creates a subcontext from the given name ."}
{"id": 9461, "prediction": "Checks if the given object is a valid class ."}
{"id": 9463, "prediction": "Get a transition"}
{"id": 9465, "prediction": "Get the verbose verbose"}
{"id": 9467, "prediction": "Get the catalog files from the properties file ."}
{"id": 9469, "prediction": "Queries the preferred preference ."}
{"id": 9471, "prediction": "Resolves an InputSource to an InputSource ."}
{"id": 9473, "prediction": "Make absolute path ."}
{"id": 9475, "prediction": "Invokes the setter method ."}
{"id": 9477, "prediction": "Returns the namespace URI for the given node ."}
{"id": 9479, "prediction": "Convert an enumeration to a List ."}
{"id": 9481, "prediction": "Loads properties from a file ."}
{"id": 9483, "prediction": "Add an edge to the graph ."}
{"id": 9485, "prediction": "Adds a new edge to the graph ."}
{"id": 9487, "prediction": "Removes the specified edge from this graph ."}
{"id": 9489, "prediction": "Finds the edge of the given edge ."}
{"id": 9491, "prediction": "Creates a jar containing the contents of a directory ."}
{"id": 9493, "prediction": "Fire an event ."}
{"id": 9495, "prediction": "Checks if a folder is a directory ."}
{"id": 9497, "prediction": "Gets an event stream ."}
{"id": 9499, "prediction": "Returns a stream that contains all the values of the given record ."}
{"id": 9501, "prediction": "Creates a list of values from a stream ."}
{"id": 9503, "prediction": "Determines whether or not the user should be allowed ."}
{"id": 9505, "prediction": "Entry point for analysis ."}
{"id": 9507, "prediction": "Gets the sum of all words ."}
{"id": 9509, "prediction": "Notify the JdbcResourceLoader ."}
{"id": 9511, "prediction": "Creates an iterable that returns an iterable of the given type ."}
{"id": 9513, "prediction": "Create a list of objects from the given type ."}
{"id": 9515, "prediction": "Returns a list of all of the given class ."}
{"id": 9517, "prediction": "Create an instance of the right type ."}
{"id": 9519, "prediction": "Verifies that the given type is valid ."}
{"id": 9521, "prediction": "Connects to a Jdbc driver and creates a new JdbcDriver instance ."}
{"id": 9523, "prediction": "Queries the given SQL in the database ."}
{"id": 9525, "prediction": "Add a query to the table"}
{"id": 9527, "prediction": "Backup the table ."}
{"id": 9529, "prediction": "Set the empty text ."}
{"id": 9531, "prediction": "Unescapes a string ."}
{"id": 9533, "prediction": "Converts a list of csv pairs into a map ."}
{"id": 9535, "prediction": "Join a list of strings ."}
{"id": 9537, "prediction": "Read database from index file ."}
{"id": 9539, "prediction": "Checks the id of an entity ."}
{"id": 9541, "prediction": "Gets the binding type ."}
{"id": 9543, "prediction": "Backup all tables"}
{"id": 9545, "prediction": "Writes the index file to the database ."}
{"id": 9547, "prediction": "Creates a typed query ."}
{"id": 9549, "prediction": "Delete the table"}
{"id": 9551, "prediction": "Updates the table ."}
{"id": 9553, "prediction": "Add a sub - query ."}
{"id": 9555, "prediction": "Gets the empty intent stack ."}
{"id": 9557, "prediction": "Selects a random plan ."}
{"id": 9559, "prediction": "Set plan variables ."}
{"id": 9561, "prediction": "Get the parents of this array ."}
{"id": 9563, "prediction": "Grows a byte array at the given offset ."}
{"id": 9565, "prediction": "Move the body ."}
{"id": 9567, "prediction": "Pause the user input ."}
{"id": 9569, "prediction": "Initializes the set of active threads ."}
{"id": 9571, "prediction": "Shuts down the intention selection ."}
{"id": 9573, "prediction": "Resets the state ."}
{"id": 9575, "prediction": "Processes a plan ."}
{"id": 9577, "prediction": "Loads a class from the given class ."}
{"id": 9579, "prediction": "Checks if two objects are equal ."}
{"id": 9581, "prediction": "Parse command line arguments ."}
{"id": 9583, "prediction": "Evaluate an agent ."}
{"id": 9585, "prediction": "Find an object by name ."}
{"id": 9587, "prediction": "Returns the object at the given index ."}
{"id": 9589, "prediction": "Removes the object from the list ."}
{"id": 9591, "prediction": "Returns true if the query matches the query string ."}
{"id": 9593, "prediction": "Converts a string to a byte array ."}
{"id": 9595, "prediction": "Sends a message to the agent ."}
{"id": 9597, "prediction": "Get the goals ."}
{"id": 9599, "prediction": "Adds a belief set to the given tuple ."}
{"id": 9601, "prediction": "Suspend the current thread"}
{"id": 9603, "prediction": "Registers a new NeighbourSet ."}
{"id": 9605, "prediction": "Runs the agent ."}
{"id": 9607, "prediction": "Removes all active agents ."}
{"id": 9609, "prediction": "Shuts down the pool ."}
{"id": 9611, "prediction": "Moves the pointer to the specified point ."}
{"id": 9613, "prediction": "Wait for all pools to finish ."}
{"id": 9615, "prediction": "Returns true if all pools are idle ."}
{"id": 9617, "prediction": "Picks the next expression ."}
{"id": 9619, "prediction": "Create a join expression from an attribute"}
{"id": 9621, "prediction": "Find or create a join from a property ."}
{"id": 9623, "prediction": "Get upload stream ."}
{"id": 9625, "prediction": "Checks if the given parameter has the given value ."}
{"id": 9627, "prediction": "Parse parameters ."}
{"id": 9629, "prediction": "Gets the target file ."}
{"id": 9631, "prediction": "Post an instance of managed class ."}
{"id": 9633, "prediction": "Builds a string representation of the configuration ."}
{"id": 9635, "prediction": "Returns the type of the given field ."}
{"id": 9637, "prediction": "Persist the temporary file ."}
{"id": 9639, "prediction": "Sets the default link templates ."}
{"id": 9641, "prediction": "Handles link headers ."}
{"id": 9643, "prediction": "Parses the link ."}
{"id": 9645, "prediction": "Handle capabilities ."}
{"id": 9647, "prediction": "Register the instance processor ."}
{"id": 9649, "prediction": "Registers an instance processor ."}
{"id": 9651, "prediction": "Returns the instance associated with the specified class ."}
{"id": 9653, "prediction": "Create target file list ."}
{"id": 9655, "prediction": "Initialize the configuration ."}
{"id": 9657, "prediction": "Factory method for creating a ParameterizedTemplateModel instance ."}
{"id": 9659, "prediction": "Set the request path ."}
{"id": 9661, "prediction": "Returns a new instance of the given string ."}
{"id": 9663, "prediction": "Add capture capture to capture ."}
{"id": 9665, "prediction": "Clears the specified logger ."}
{"id": 9667, "prediction": "Parses the EMF model ."}
{"id": 9669, "prediction": "Gets all files in a directory ."}
{"id": 9671, "prediction": "Checks if the resource is resolved ."}
{"id": 9673, "prediction": "Sets the model dirs ."}
{"id": 9675, "prediction": "Sets the model resources ."}
{"id": 9677, "prediction": "Sets a String array of parameters"}
{"id": 9679, "prediction": "Execute an UPDATE statement ."}
{"id": 9681, "prediction": "Merges the given velocity template into the given velocity template ."}
{"id": 9683, "prediction": "Gets the directory ."}
{"id": 9685, "prediction": "Start the web UI ."}
{"id": 9687, "prediction": "Prints the dialog ."}
{"id": 9689, "prediction": "Invokes the proxy method ."}
{"id": 9691, "prediction": "Removes the object from the cache ."}
{"id": 9693, "prediction": "Dumps the request information ."}
{"id": 9695, "prediction": "Populate event stream ."}
{"id": 9697, "prediction": "Retrieves a parameter from the given event stream ."}
{"id": 9699, "prediction": "Get the common directory of two files ."}
{"id": 9701, "prediction": "Converts a file to a relative path ."}
{"id": 9703, "prediction": "Prints an error ."}
{"id": 9705, "prediction": "Adds a param template ."}
{"id": 9707, "prediction": "Initializes the template ."}
{"id": 9709, "prediction": "Enable or disable the save button ."}
{"id": 9711, "prediction": "On delete event ."}
{"id": 9713, "prediction": "Gets the files ."}
{"id": 9715, "prediction": "Returns the summary of the given directory ."}
{"id": 9717, "prediction": "Creates a new instance of the managed class ."}
{"id": 9719, "prediction": "Gets the list of ModelDirs ."}
{"id": 9721, "prediction": "Sets the candidates ."}
{"id": 9723, "prediction": "Displays an error message ."}
{"id": 9725, "prediction": "Parses the given formal parameters ."}
{"id": 9727, "prediction": "Extracts the parameter from a cell ."}
{"id": 8704, "prediction": "Get the cell style for the given poi ."}
{"id": 8706, "prediction": "Gets the alignment style for the given cell ."}
{"id": 8708, "prediction": "Calculates the total height of the sheet"}
{"id": 8710, "prediction": "Gets the input type from the cell ."}
{"id": 8712, "prediction": "Gets an InputStream as a resource ."}
{"id": 8714, "prediction": "Evaluate input ."}
{"id": 8716, "prediction": "Join a string with a separator ."}
{"id": 8718, "prediction": "Gets the tab type ."}
{"id": 8720, "prediction": "Get the default date pattern ."}
{"id": 8722, "prediction": "Gets the tenth separator for the default locale ."}
{"id": 8724, "prediction": "Builds a list of formula for the formula ."}
{"id": 8726, "prediction": "Adds a watch list to the list ."}
{"id": 8728, "prediction": "Parse widget attributes ."}
{"id": 8730, "prediction": "Parses the validation attributes map ."}
{"id": 8732, "prediction": "Parse command attributes ."}
{"id": 8734, "prediction": "Parse validation attributes ."}
{"id": 8736, "prediction": "Parse special attributes ."}
{"id": 8738, "prediction": "Process select items ."}
{"id": 8740, "prediction": "Parses a new comment to a new line"}
{"id": 8742, "prediction": "Remove all characters from the input string ."}
{"id": 8744, "prediction": "Convert a String to an integer ."}
{"id": 8746, "prediction": "Converts a height pixel to a height ."}
{"id": 8748, "prediction": "Parse a date ."}
{"id": 8750, "prediction": "Checks if the given character is continue ."}
{"id": 8752, "prediction": "Compare two cells ."}
{"id": 8754, "prediction": "Clear the hidden columns ."}
{"id": 8756, "prediction": "Delete the cell from the given row"}
{"id": 8758, "prediction": "Refresh the status of a cell ."}
{"id": 8760, "prediction": "Validate that the TWebWebBridge is valid"}
{"id": 8762, "prediction": "Validate all rules for a single cell ."}
{"id": 8764, "prediction": "Validate the given target cell ."}
{"id": 8766, "prediction": "Validate the current row in the current row ."}
{"id": 8768, "prediction": "Refresh all cells in the current table ."}
{"id": 8770, "prediction": "Sets the submit mode ."}
{"id": 8772, "prediction": "Clears the cache ."}
{"id": 8774, "prediction": "Loads header rows from configuration ."}
{"id": 8776, "prediction": "Gets the header column style ."}
{"id": 8778, "prediction": "Loads the header row from the configuration table ."}
{"id": 8780, "prediction": "Clear the workbook ."}
{"id": 8782, "prediction": "Load data ."}
{"id": 8784, "prediction": "Refresh the data for the given row ."}
{"id": 8786, "prediction": "Returns the index of the tab with the given name ."}
{"id": 8788, "prediction": "Prepare the work sheet ."}
{"id": 8790, "prediction": "Save the tab ."}
{"id": 8792, "prediction": "Load the body rows from the cell ."}
{"id": 8794, "prediction": "Refreshes the specified cell ."}
{"id": 8796, "prediction": "Creates dynamic columns ."}
{"id": 8798, "prediction": "Refresh the body rows in the cell ."}
{"id": 8800, "prediction": "Returns true if the current state has been saved ."}
{"id": 8802, "prediction": "Write input stream to output stream"}
{"id": 8804, "prediction": "Write a string ."}
{"id": 8806, "prediction": "Adds a bitmap to the file ."}
{"id": 8808, "prediction": "Removes a parameter ."}
{"id": 8810, "prediction": "Clears the request ."}
{"id": 8812, "prediction": "Calls the service ."}
{"id": 8814, "prediction": "Unbind radio listeners ."}
{"id": 8816, "prediction": "Store image to disk"}
{"id": 8818, "prediction": "Converts an input stream to a string ."}
{"id": 8820, "prediction": "Returns the number of bytes available ."}
{"id": 8822, "prediction": "Reads a number of bytes from the input stream ."}
{"id": 8824, "prediction": "Sends a start start to the output stream ."}
{"id": 8826, "prediction": "Send the content type header ."}
{"id": 8828, "prediction": "Sends the end of the header ."}
{"id": 8830, "prediction": "Sends parts to the given output stream ."}
{"id": 8832, "prediction": "Determine if the URL is a redirect"}
{"id": 8834, "prediction": "Sets the date header ."}
{"id": 8836, "prediction": "Set the content type header ."}
{"id": 8838, "prediction": "Send a file header to the output stream ."}
{"id": 8840, "prediction": "Installs the cache ."}
{"id": 8842, "prediction": "Gets the cache response ."}
{"id": 8844, "prediction": "Resets the bitmap ."}
{"id": 8846, "prediction": "Validates the given keystore ."}
{"id": 8848, "prediction": "Stop the location ."}
{"id": 8850, "prediction": "Disconnects the given URL ."}
{"id": 8852, "prediction": "Unbind this service ."}
{"id": 8854, "prediction": "Open a proxy connection ."}
{"id": 8856, "prediction": "Reset the response ."}
{"id": 8858, "prediction": "Sets the text visibility of the text view ."}
{"id": 8860, "prediction": "Shows SoftInput Method ."}
{"id": 8862, "prediction": "Calculates the width of pixels in pixels"}
{"id": 8864, "prediction": "Clears the cache for the specified URL ."}
{"id": 8866, "prediction": "Cancel the image loading ."}
{"id": 8868, "prediction": "Sets the image ."}
{"id": 8870, "prediction": "Start a new image task ."}
{"id": 8872, "prediction": "Releases a buffer ."}
{"id": 8874, "prediction": "Add a parameter to the request ."}
{"id": 8876, "prediction": "Returns the MD5 hash of the given text ."}
{"id": 8878, "prediction": "Returns the String identifying the given CUbus"}
{"id": 8880, "prediction": "Checks to see if the given result is valid ."}
{"id": 8882, "prediction": "Adds a ending id ."}
{"id": 8884, "prediction": "Prints a description of this token ."}
{"id": 8886, "prediction": "Parses the given Attribute ."}
{"id": 8888, "prediction": "Remove kols from a tag ."}
{"id": 8890, "prediction": "Gets the query string ."}
{"id": 8892, "prediction": "Parses the given JSON string ."}
{"id": 8894, "prediction": "Performs the given list of apps ."}
{"id": 8896, "prediction": "Creates a new GCE code set ."}
{"id": 8898, "prediction": "Creates a GenericCodeList from GC10 ."}
{"id": 8900, "prediction": "Gets a GenericColumnSet for GCB ."}
{"id": 8902, "prediction": "Get the row value from a rowID ."}
{"id": 8904, "prediction": "Get all key IDs for a column set ."}
{"id": 8906, "prediction": "Check if the passed column is a key column ."}
{"id": 8908, "prediction": "Creates a key with the given column ID ."}
{"id": 8910, "prediction": "Add a new column"}
{"id": 8912, "prediction": "Create a new GCC code set ."}
{"id": 8914, "prediction": "Create a GCC code list for GC10 ."}
{"id": 8916, "prediction": "Create a new GenericColumnSet for GCB"}
{"id": 8918, "prediction": "Validate the GCE code set ."}
{"id": 8920, "prediction": "Validate the GC10 code ."}
{"id": 8922, "prediction": "Validate the GC column set ."}
{"id": 8924, "prediction": "Sets the context ."}
{"id": 8926, "prediction": "Get Capture Capture Capture"}
{"id": 8928, "prediction": "Prepend the metadata to a string ."}
{"id": 8930, "prediction": "Creates a JSONObject from a JSON object ."}
{"id": 8932, "prediction": "Sets the user identity ."}
{"id": 8934, "prediction": "Request the location updates ."}
{"id": 8936, "prediction": "Computes the size of the given region ."}
{"id": 8938, "prediction": "Reads a snapshot of the snapshot ."}
{"id": 8940, "prediction": "Gets the time values for the specified identifier ."}
{"id": 8942, "prediction": "Get the pool for the given JMX server"}
{"id": 8944, "prediction": "Checks if a region is already in the JMX server ."}
{"id": 8946, "prediction": "Return a list of host names ."}
{"id": 8948, "prediction": "Determines if the given result sends an error message ."}
{"id": 8950, "prediction": "Appends the given collection of objects to the given collection ."}
{"id": 8952, "prediction": "Creates a bridge listener for the given entry ."}
{"id": 8954, "prediction": "Handle failure ."}
{"id": 8956, "prediction": "Export data from a function ."}
{"id": 8958, "prediction": "Executes the given region ."}
{"id": 9729, "prediction": "Check if the request is an XHR request"}
{"id": 9731, "prediction": "Handle refresh event ."}
{"id": 9733, "prediction": "Gets the annotation on the given property ."}
{"id": 9735, "prediction": "Lookup a server ."}
{"id": 9737, "prediction": "Gets the managed class ."}
{"id": 9739, "prediction": "This method is called when an exception occurs ."}
{"id": 9741, "prediction": "Get a boolean value from the column label ."}
{"id": 9743, "prediction": "This method serializes the HTTP response ."}
{"id": 9745, "prediction": "Add a cookie ."}
{"id": 9747, "prediction": "Returns an iterator over the cookies ."}
{"id": 9749, "prediction": "Adds a field ."}
{"id": 9751, "prediction": "Verify response ."}
{"id": 9753, "prediction": "Ensure that the given URI is a trailing slash ."}
{"id": 9755, "prediction": "Gets the http servlet request ."}
{"id": 9757, "prediction": "Execute a transaction ."}
{"id": 9759, "prediction": "Get all the files in the directory ."}
{"id": 9761, "prediction": "Replies the configuration ."}
{"id": 9763, "prediction": "Gets the list of factories for the given model type ."}
{"id": 9765, "prediction": "Serialize the http response ."}
{"id": 9767, "prediction": "Handles the request ."}
{"id": 9769, "prediction": "Destroy event stream ."}
{"id": 9771, "prediction": "Uploads the Blob upload ."}
{"id": 9773, "prediction": "Extract column parameters from a row"}
{"id": 9775, "prediction": "Schedules a periodic task ."}
{"id": 9777, "prediction": "Recursively scans all repositories ."}
{"id": 9779, "prediction": "Read the application configuration ."}
{"id": 9781, "prediction": "Print the stop banner ."}
{"id": 9783, "prediction": "Register shutdown hook ."}
{"id": 9785, "prediction": "Trigger a trigger event ."}
{"id": 9787, "prediction": "Get the total count of all records ."}
{"id": 9789, "prediction": "getter for variants - gets"}
{"id": 9791, "prediction": "getter for questionType - gets"}
{"id": 9793, "prediction": "getter for token - gets"}
{"id": 9795, "prediction": "setter for depLabel - sets"}
{"id": 9797, "prediction": "setter for semanticType - sets"}
{"id": 9799, "prediction": "setter for sections - sets"}
{"id": 9801, "prediction": "indexed setter for sections - sets an indexed value -"}
{"id": 9803, "prediction": "setter for uri - sets"}
{"id": 9805, "prediction": "setter for types - sets"}
{"id": 9807, "prediction": "setter for targetType - sets"}
{"id": 9809, "prediction": "setter for rank - sets"}
{"id": 9811, "prediction": "setter for string - sets"}
{"id": 9813, "prediction": "setter for candidateAnswers - sets"}
{"id": 9815, "prediction": "indexed setter for candidateAnswerAnswers - sets an indexed value -"}
{"id": 9817, "prediction": "setter for query - sets"}
{"id": 9819, "prediction": "setter for hitList - sets"}
{"id": 9821, "prediction": "indexed setter for hitList - sets an indexed value -"}
{"id": 9823, "prediction": "setter for abstractQuery - sets"}
{"id": 9825, "prediction": "setter for searchId - sets"}
{"id": 9827, "prediction": "getter for offsetInInSection - gets"}
{"id": 9829, "prediction": "getter for offsetInInEndSection - gets"}
{"id": 9831, "prediction": "getter for beginSection - gets"}
{"id": 9833, "prediction": "getter for endSection - gets"}
{"id": 9835, "prediction": "getter for aspect - gets"}
{"id": 9837, "prediction": "getter for double - gets"}
{"id": 9839, "prediction": "getter for sourceRelation - gets"}
{"id": 9841, "prediction": "getter for subject - gets"}
{"id": 9843, "prediction": "getter for predicate - gets"}
{"id": 9845, "prediction": "getter for objectUri - gets"}
{"id": 9847, "prediction": "getter for operator - gets"}
{"id": 9849, "prediction": "getter for operator arguments - gets"}
{"id": 9851, "prediction": "getter for concept - gets"}
{"id": 9853, "prediction": "getter for text - gets"}
{"id": 9855, "prediction": "getter for id - gets"}
{"id": 9857, "prediction": "getter for name - gets"}
{"id": 9859, "prediction": "setter for abbreviation - sets"}
{"id": 9861, "prediction": "getter for variants - gets"}
{"id": 9863, "prediction": "getter for namedEntityTypes - gets"}
{"id": 9865, "prediction": "getter for conceptType - gets"}
{"id": 9867, "prediction": "getter for occurrences - gets"}
{"id": 9869, "prediction": "getter for concepts - gets"}
{"id": 9871, "prediction": "getter for originalText - gets"}
{"id": 9873, "prediction": "getter for arguments - gets"}
{"id": 9875, "prediction": "getter for label - gets"}
{"id": 9877, "prediction": "Returns the next clear bit ."}
{"id": 9879, "prediction": "Free the specified buffer ."}
{"id": 9881, "prediction": "Rehashes the array with new values ."}
{"id": 9883, "prediction": "Checks if the brackets belong to the brackets ."}
{"id": 9885, "prediction": "Convert the HBase to HBase"}
{"id": 9887, "prediction": "Main entry point for the program ."}
{"id": 9889, "prediction": "Validate the polymer ID of the connection"}
{"id": 9891, "prediction": "Checks if the group ID is valid ."}
{"id": 9893, "prediction": "Checks to see if the peptide is a peptide"}
{"id": 9895, "prediction": "Gets the PolymerNotation of the given string"}
{"id": 9897, "prediction": "Returns the HELM2H2 header ."}
{"id": 9899, "prediction": "Convert a connection to a HELM2 connection ."}
{"id": 9901, "prediction": "Convert the annotation section to an HELM2H ."}
{"id": 9903, "prediction": "Gets the PolymerNotation of the given id ."}
{"id": 9905, "prediction": "Convert a string to a string ."}
{"id": 9907, "prediction": "Set the count ."}
{"id": 9909, "prediction": "Determines the MonomerNotationGroup for the given group ."}
{"id": 9911, "prediction": "Gets the value of this interval ."}
{"id": 9913, "prediction": "Sets the nucleotide content of a nucleotide"}
{"id": 9915, "prediction": "Get the current thread statistics ."}
{"id": 9917, "prediction": "Creates an edge graph from a collection of edges ."}
{"id": 9919, "prediction": "Returns a list of nodes that can be sorted ."}
{"id": 9921, "prediction": "Subscribe for a pattern ."}
{"id": 9923, "prediction": "Performs a synchronous operation ."}
{"id": 9925, "prediction": "Poll the given timeout ."}
{"id": 9927, "prediction": "Creates an exception for the given type ."}
{"id": 9929, "prediction": "Creates a worker ."}
{"id": 9931, "prediction": "Register a worker queue ."}
{"id": 9933, "prediction": "Signal the worker queue ."}
{"id": 9935, "prediction": "Wait for a work queue ."}
{"id": 9937, "prediction": "Returns the common work queue ."}
{"id": 9939, "prediction": "Submits a ForkJoinTask ."}
{"id": 9941, "prediction": "Waits until the specified timeout is available ."}
{"id": 9943, "prediction": "Get the thread pool statistics ."}
{"id": 9945, "prediction": "Reverse the elements in the list ."}
{"id": 9947, "prediction": "Folds the left element of the supplied iterable ."}
{"id": 9949, "prediction": "Push a task to the queue ."}
{"id": 9951, "prediction": "Creates a map from keys and values ."}
{"id": 9953, "prediction": "Creates a list of elements from the given values ."}
{"id": 9955, "prediction": "Returns a copy of this set ."}
{"id": 9957, "prediction": "Marshals the value of the bound type ."}
{"id": 9959, "prediction": "Returns a binary search for the given list ."}
{"id": 9961, "prediction": "Sends an email ."}
{"id": 9963, "prediction": "Binds the given handler to the given route ."}
{"id": 9965, "prediction": "Determines whether the user has a role ."}
{"id": 9967, "prediction": "Remove duplicate strings ."}
{"id": 9969, "prediction": "Run the run ."}
{"id": 9971, "prediction": "Gets login ."}
{"id": 9973, "prediction": "Checks the given plain password ."}
{"id": 9975, "prediction": "Retrieves the password for the given user ."}
{"id": 9977, "prediction": "Send a request to the server ."}
{"id": 9979, "prediction": "Returns the value of the specified parameter ."}
{"id": 9981, "prediction": "Get CallInfo Method ."}
{"id": 9983, "prediction": "Converts a CharSequenceSequence into a byte array ."}
{"id": 8960, "prediction": "Construct security object ."}
{"id": 8962, "prediction": "Get region from client cache ."}
{"id": 8964, "prediction": "Returns true if the given timestamp is inserted ."}
{"id": 8966, "prediction": "Converts the given directory to CSV files ."}
{"id": 8968, "prediction": "Reconnect the JMX server ."}
{"id": 8970, "prediction": "Shutdown the member ."}
{"id": 8972, "prediction": "Shutdown the redundancy zone"}
{"id": 8974, "prediction": "Reads results from a page and returns a map of results ."}
{"id": 8976, "prediction": "Checks if the local locator matches the supplied locator ."}
{"id": 8978, "prediction": "Build the checksum map ."}
{"id": 8980, "prediction": "Checks if the given type is a valid type ."}
{"id": 8982, "prediction": "Deserialize a byte array ."}
{"id": 8984, "prediction": "Checks the id for a table ."}
{"id": 8986, "prediction": "Checks if the given element is a supertype ."}
{"id": 8988, "prediction": "Generate the Java code ."}
{"id": 8990, "prediction": "Gets the observable ."}
{"id": 8992, "prediction": "Returns the value or null if the string is not null ."}
{"id": 8994, "prediction": "Checks if the given type is a valid type ."}
{"id": 8996, "prediction": "Read the temperature from the device"}
{"id": 8998, "prediction": "Print a message ."}
{"id": 9000, "prediction": "Gets the icon fonts ."}
{"id": 9002, "prediction": "Creates a new layout layout ."}
{"id": 9004, "prediction": "Raises the power of a px ."}
{"id": 9006, "prediction": "Computes the power of the power of the given exponent ."}
{"id": 9008, "prediction": "Evaluate the sum of the scale ."}
{"id": 9010, "prediction": "Creates a new BigDecimal ."}
{"id": 9012, "prediction": "Calculate the transformation for a given scale ."}
{"id": 9014, "prediction": "Print the number of pi numbers ."}
{"id": 9016, "prediction": "Sets the limits ."}
{"id": 9018, "prediction": "Prints the bar ."}
{"id": 9020, "prediction": "Subtract a complex number ."}
{"id": 9022, "prediction": "Divide a complex number ."}
{"id": 9024, "prediction": "Gets the row vector ."}
{"id": 9026, "prediction": "Sets the values of the matrix ."}
{"id": 9028, "prediction": "Adds a matrix to this matrix ."}
{"id": 9030, "prediction": "Multiplies a matrix ."}
{"id": 9032, "prediction": "Prints the values to the output ."}
{"id": 9034, "prediction": "Validate the coefficients ."}
{"id": 9036, "prediction": "Clears the state ."}
{"id": 9038, "prediction": "Converts a Sld sld sld sld sld sld sld sld sld ."}
{"id": 9040, "prediction": "Validate the given Sld ."}
{"id": 9042, "prediction": "Sets the matrix ."}
{"id": 9044, "prediction": "Returns the inverse matrix ."}
{"id": 9046, "prediction": "Returns the norm of the norm ."}
{"id": 9048, "prediction": "Prints the matrix ."}
{"id": 9050, "prediction": "forward substitution"}
{"id": 9052, "prediction": "Computes the improvement for a given matrix ."}
{"id": 9054, "prediction": "Generate the next Vennumann ."}
{"id": 9056, "prediction": "Computes the next position ."}
{"id": 9058, "prediction": "Computes the slope for the current motion ."}
{"id": 9060, "prediction": "Adds the given amount to the set ."}
{"id": 9062, "prediction": "Raises the power of a pem to a base ."}
{"id": 9064, "prediction": "Get the SldManager ."}
{"id": 9066, "prediction": "Decompose a sequence of bits ."}
{"id": 9068, "prediction": "Validate the float value ."}
{"id": 9070, "prediction": "Validate the double value ."}
{"id": 9072, "prediction": "Creates a SldGwt service ."}
{"id": 9074, "prediction": "Returns the next random value ."}
{"id": 9076, "prediction": "Creates a Sieve ."}
{"id": 9078, "prediction": "Iterate over the elements of the node ."}
{"id": 9080, "prediction": "Checks if the node has changed ."}
{"id": 9082, "prediction": "Sets the configuration ."}
{"id": 9084, "prediction": "Initialize FXMLLLoader"}
{"id": 9086, "prediction": "Get the host port from the service ."}
{"id": 9088, "prediction": "Evaluate the attribute definition with the given attribute ."}
{"id": 9090, "prediction": "Set address ."}
{"id": 9092, "prediction": "Query the names of the service tracker ."}
{"id": 9094, "prediction": "Gets all collaboration members ."}
{"id": 9096, "prediction": "Change user password ."}
{"id": 9098, "prediction": "Get gravatar for email address"}
{"id": 9100, "prediction": "Populate a new Elasticsearch from Elasticsearch"}
{"id": 9102, "prediction": "Create flow step ."}
{"id": 9104, "prediction": "Get flow step ."}
{"id": 9106, "prediction": "Get a list of steps from flow ."}
{"id": 9108, "prediction": "Force delete flow step ."}
{"id": 9110, "prediction": "Closes the BASES server ."}
{"id": 9112, "prediction": "Called when the connection is closed ."}
{"id": 9114, "prediction": "Retrieves a list of personal inventory items ."}
{"id": 9116, "prediction": "Delete a form container"}
{"id": 9118, "prediction": "Gets the form of the form data ."}
{"id": 9120, "prediction": "Acquires a form container ."}
{"id": 9122, "prediction": "Unlocks a form container ."}
{"id": 9124, "prediction": "Convert a list of roles to a list of roles ."}
{"id": 9126, "prediction": "Updates a form definition ."}
{"id": 9128, "prediction": "Get form definition by name"}
{"id": 9130, "prediction": "Delete a form definition ."}
{"id": 9132, "prediction": "Initializes the memcached client ."}
{"id": 9134, "prediction": "Converts a string to a long ."}
{"id": 9136, "prediction": "Gets the field values for the form parameter ."}
{"id": 9138, "prediction": "Create flow step ."}
{"id": 9140, "prediction": "Update flow step ."}
{"id": 9142, "prediction": "Update flow step ."}
{"id": 9144, "prediction": "Move the flow step entry ."}
{"id": 9146, "prediction": "Delete flow step ."}
{"id": 9148, "prediction": "Initialize the session data ."}
{"id": 9150, "prediction": "Get all roles ."}
{"id": 9152, "prediction": "Create a field text ."}
{"id": 9154, "prediction": "Create a field that can be used to create a decimal number ."}
{"id": 9156, "prediction": "Create a new field ."}
{"id": 9158, "prediction": "Updates the field text ."}
{"id": 9160, "prediction": "Updates the field slider ."}
{"id": 9162, "prediction": "Gets the field by name ."}
{"id": 9164, "prediction": "Gets a list of fields matching the specified form type ."}
{"id": 9166, "prediction": "Force delete field ."}
{"id": 9168, "prediction": "Updates the field value ."}
{"id": 9170, "prediction": "Create flow ."}
{"id": 9172, "prediction": "Get a flow by id"}
{"id": 9174, "prediction": "Delete a flow ."}
{"id": 9176, "prediction": "Update field value ."}
{"id": 9178, "prediction": "Gets the id of the form definition ."}
{"id": 9180, "prediction": "Closes the client ."}
{"id": 9182, "prediction": "Gets the error message ."}
{"id": 9184, "prediction": "Gets access token ."}
{"id": 9186, "prediction": "Executes HTTP POST request ."}
{"id": 9188, "prediction": "Gets the response handler ."}
{"id": 9190, "prediction": "Gets the client ."}
{"id": 9192, "prediction": "Closes the connection ."}
{"id": 9194, "prediction": "Send a form item to the flow ."}
{"id": 9196, "prediction": "Handles a message handler ."}
{"id": 9198, "prediction": "Sends a message to the server ."}
{"id": 9200, "prediction": "Execute a native SQL query ."}
{"id": 9202, "prediction": "Applies a license to the license ."}
{"id": 9204, "prediction": "Create a plain text line text ."}
{"id": 9206, "prediction": "Create a MultiChoiceField ."}
{"id": 9208, "prediction": "Updates a plain text field ."}
{"id": 9210, "prediction": "Updates the field date time ."}
{"id": 9212, "prediction": "Update field value ."}
{"id": 9214, "prediction": "Get configuration by key"}
{"id": 9985, "prediction": "Converts a char sequence into a byte array ."}
{"id": 9987, "prediction": "Sets a promise in seconds ."}
{"id": 9989, "prediction": "Executes the given invocation ."}
{"id": 9991, "prediction": "Gets the REST operations ."}
{"id": 9993, "prediction": "Renders the Ajax message ."}
{"id": 9995, "prediction": "Parse the action path ."}
{"id": 9997, "prediction": "Renders empty data tables ."}
{"id": 9999, "prediction": "Sends a request to the server ."}
{"id": 10001, "prediction": "Get the current method name ."}
{"id": 10003, "prediction": "Propagate a MetricsCollection ."}
{"id": 10005, "prediction": "Returns the charset from the given file ."}
{"id": 10007, "prediction": "Copy the input stream to the output stream ."}
{"id": 10009, "prediction": "Copy the contents of the given Reader to the given Writer ."}
{"id": 10011, "prediction": "Copy the contents of the given Reader to the given Reader ."}
{"id": 10013, "prediction": "Compare two input streams ."}
{"id": 10015, "prediction": "Applies a function to the pipeline ."}
{"id": 10017, "prediction": "Unmarshal a string ."}
{"id": 10019, "prediction": "Creates a new instance of PermissionDialog ."}
{"id": 10021, "prediction": "Register core value type ."}
{"id": 10023, "prediction": "Checks if the given string is a mobile value ."}
{"id": 10025, "prediction": "Checks if the given string is a birth day ."}
{"id": 10027, "prediction": "Checks if the given string is a valid date ."}
{"id": 10029, "prediction": "Encodes a string ."}
{"id": 10031, "prediction": "Converts a hex string to a byte array ."}
{"id": 10033, "prediction": "Reads content from input stream ."}
{"id": 10035, "prediction": "Writes a byte array to the given file ."}
{"id": 10037, "prediction": "Serializes a Document to a String ."}
{"id": 10039, "prediction": "Constructs a Document from XML ."}
{"id": 10041, "prediction": "Validates an XML signature ."}
{"id": 10043, "prediction": "Checks if the given class is cache safe ."}
{"id": 10045, "prediction": "Checks if the given class is a primitive wrapper array ."}
{"id": 10047, "prediction": "Checks if the given class type is assignable ."}
{"id": 10049, "prediction": "Gets all interfaces implemented by the given instance ."}
{"id": 10051, "prediction": "Write the configuration to the temp file ."}
{"id": 10053, "prediction": "Puts a permission ."}
{"id": 10055, "prediction": "Bind an extension to the given class ."}
{"id": 10057, "prediction": "Returns the primitive value for the given type ."}
{"id": 10059, "prediction": "Converts the given object to a user defined type ."}
{"id": 10061, "prediction": "Applies the given cookie to the given type ."}
{"id": 10063, "prediction": "Initialize data source ."}
{"id": 10065, "prediction": "Set a parameter ."}
{"id": 10067, "prediction": "Shows the dialog ."}
{"id": 10069, "prediction": "Returns true if any of the given permissions are denied ."}
{"id": 10071, "prediction": "Find record ."}
{"id": 10073, "prediction": "Determines if the given method is declared in the given method ."}
{"id": 10075, "prediction": "Puts the given key into the cache ."}
{"id": 10077, "prediction": "Read arguments ."}
{"id": 10079, "prediction": "Replies if the given class is a protobufuf ."}
{"id": 10081, "prediction": "Gets the protobuf attribute ."}
{"id": 10083, "prediction": "Gets the mapper ."}
{"id": 10085, "prediction": "Converts an object to a JSON string ."}
{"id": 10087, "prediction": "Gets the user record ."}
{"id": 10089, "prediction": "Copy all attributes from the given target object to the given target object ."}
{"id": 10091, "prediction": "Set a property ."}
{"id": 10093, "prediction": "Saves the token to the server ."}
{"id": 10095, "prediction": "Get the class loader ."}
{"id": 10097, "prediction": "Get a resource as a stream ."}
{"id": 10099, "prediction": "Initialize the URI ."}
{"id": 10101, "prediction": "Initializes the path from the given URI ."}
{"id": 10103, "prediction": "Sets the user info ."}
{"id": 10105, "prediction": "Set the port number ."}
{"id": 10107, "prediction": "Set the query string ."}
{"id": 10109, "prediction": "Returns the URI of this scheme ."}
{"id": 10111, "prediction": "Initializes the application ."}
{"id": 10113, "prediction": "Sets the muffin value ."}
{"id": 10115, "prediction": "Set the clipboard contents ."}
{"id": 10117, "prediction": "Load service by type ."}
{"id": 10119, "prediction": "Gets the service parameters ."}
{"id": 10121, "prediction": "Finds the first instance of the given collection with the given service ."}
{"id": 10123, "prediction": "Returns an iterator over the elements ."}
{"id": 10125, "prediction": "Gets the parent logger ."}
{"id": 10127, "prediction": "Retrieves the authorization code for the given URL ."}
{"id": 10129, "prediction": "Visit a class declaration ."}
{"id": 10131, "prediction": "Returns the option value for the given key ."}
{"id": 10133, "prediction": "Gets a DeclarationFilter instance ."}
{"id": 10135, "prediction": "Returns a FilterFilter that matches this DeclarationFilter ."}
{"id": 10137, "prediction": "Marks the given constructor ."}
{"id": 10139, "prediction": "Replace the hyphen hyphen ."}
{"id": 10141, "prediction": "Get the indexes for the given name ."}
{"id": 10143, "prediction": "Convert a collection of protobufs to a collection of objects ."}
{"id": 10145, "prediction": "Sets the value of a POJO field ."}
{"id": 10147, "prediction": "Creates a new instance of the ResultSet ."}
{"id": 10149, "prediction": "Extract the values from a map ."}
{"id": 10151, "prediction": "Invokes the polling process ."}
{"id": 10153, "prediction": "Returns the declared field of the given class or null if not found ."}
{"id": 10155, "prediction": "Gets the declared method for the given class ."}
{"id": 10157, "prediction": "Gets annotated constructors ."}
{"id": 10159, "prediction": "Returns the index of the first occurrence of the given string ignoring case ."}
{"id": 10161, "prediction": "Clean up the state of this object ."}
{"id": 10163, "prediction": "Initialize message queue ."}
{"id": 10165, "prediction": "Initializes the pwt authentication factory ."}
{"id": 10167, "prediction": "Looks up the LocaleInfo for the given code ."}
{"id": 10169, "prediction": "Removes all elements from the queue ."}
{"id": 10171, "prediction": "Removes an element from the list ."}
{"id": 10173, "prediction": "Parse arguments ."}
{"id": 10175, "prediction": "Move the specified coordinates to the specified position ."}
{"id": 10177, "prediction": "Checks if the specified point is contained within this box ."}
{"id": 10179, "prediction": "Returns the union of this rectangle ."}
{"id": 10181, "prediction": "Replace this rectangle with another ."}
{"id": 10183, "prediction": "Get the number of rows in the row ."}
{"id": 10185, "prediction": "Calculate the columns of the area ."}
{"id": 10187, "prediction": "Unwraps the given Throwable from the Throwable ."}
{"id": 10189, "prediction": "This method is called when the code has been changed ."}
{"id": 10191, "prediction": "Renders the instructions for the given address ."}
{"id": 10193, "prediction": "Returns a copy of this query parameter ."}
{"id": 10195, "prediction": "Clear all children of this node ."}
{"id": 10197, "prediction": "Add the instructions to the body ."}
{"id": 10199, "prediction": "Sends a property change event ."}
{"id": 10201, "prediction": "Updates the display flags ."}
{"id": 10203, "prediction": "Evaluate a variable ."}
{"id": 10205, "prediction": "Compare two collections ."}
{"id": 10207, "prediction": "Render the start tag ."}
{"id": 10209, "prediction": "Resets the state ."}
{"id": 10211, "prediction": "Retrieves a value from the map ."}
{"id": 10213, "prediction": "Sets the value at the specified index ."}
{"id": 10215, "prediction": "Removes the given key from the list ."}
{"id": 10217, "prediction": "Sets the setter method for the given property ."}
{"id": 10219, "prediction": "Checks if the given primitive type is assignable to the given primitive type ."}
{"id": 10221, "prediction": "Decodes the decision tree ."}
{"id": 10223, "prediction": "Unify a set of variables ."}
{"id": 10225, "prediction": "Unify a variable ."}
{"id": 10227, "prediction": "Finds the max arguments in the given clause ."}
{"id": 10229, "prediction": "Gather the position information for the given clause ."}
{"id": 10231, "prediction": "Displays a single clause ."}
{"id": 10233, "prediction": "Converts a buffer to a string ."}
{"id": 10235, "prediction": "Sets the value of the given attribute ."}
{"id": 10237, "prediction": "Checks if the given class name exists ."}
{"id": 10239, "prediction": "Checks if the given parent is a subtype of the given parent ."}
{"id": 9216, "prediction": "Create an attachment ."}
{"id": 9218, "prediction": "Delete an attachment ."}
{"id": 9220, "prediction": "Parses a jar file ."}
{"id": 9222, "prediction": "Checks if the element is a parent ."}
{"id": 9224, "prediction": "Determines if the element is a rule ."}
{"id": 9226, "prediction": "Verifies that the element is a rule ."}
{"id": 9228, "prediction": "Converts the given value to the given value ."}
{"id": 9230, "prediction": "Creates CLI instance ."}
{"id": 9232, "prediction": "Parse arguments ."}
{"id": 9234, "prediction": "Remove a footer view ."}
{"id": 9236, "prediction": "Calculates the gradient of a polygon"}
{"id": 9238, "prediction": "Calculates the noise of the noise of the given seed ."}
{"id": 9240, "prediction": "Searches the curve for the given double ."}
{"id": 9242, "prediction": "Processes all plugins ."}
{"id": 9244, "prediction": "Gets account id ."}
{"id": 9246, "prediction": "Get the event serializer for the given input stream ."}
{"id": 9248, "prediction": "Creates a temporary directory ."}
{"id": 9250, "prediction": "Creates the delegate implementation ."}
{"id": 9252, "prediction": "Sets a string property ."}
{"id": 9254, "prediction": "Get the next state from the action ."}
{"id": 9256, "prediction": "Returns the type of the given type ."}
{"id": 9258, "prediction": "Replies the type variable ."}
{"id": 9260, "prediction": "Print stack trace ."}
{"id": 9262, "prediction": "Run the task ."}
{"id": 9264, "prediction": "Returns true if the task is accepted ."}
{"id": 9266, "prediction": "Indicates whether the task is started ."}
{"id": 9268, "prediction": "Stop the task ."}
{"id": 9270, "prediction": "Add a job to the queue ."}
{"id": 9272, "prediction": "Resolves the serialized object ."}
{"id": 9274, "prediction": "Adds a reader to the catalog ."}
{"id": 9276, "prediction": "Creates a new catalog ."}
{"id": 9278, "prediction": "Parse catalog ."}
{"id": 9280, "prediction": "Parses a catalog file ."}
{"id": 9282, "prediction": "Parse all the catalog entries in the catalog ."}
{"id": 9284, "prediction": "Resolve the document to the catalog ."}
{"id": 9286, "prediction": "Resolves the URI for the given URI ."}
{"id": 9288, "prediction": "Make absolute path ."}
{"id": 9290, "prediction": "Returns the encoded byte as a string ."}
{"id": 9292, "prediction": "Creates a new SoftValueRef ."}
{"id": 9294, "prediction": "Adds a throwable to the stack ."}
{"id": 9296, "prediction": "Compares two Timer tasks ."}
{"id": 9298, "prediction": "Returns the object at the given index ."}
{"id": 9300, "prediction": "Restore the SoftObject ."}
{"id": 9302, "prediction": "Returns the entry type for the given name ."}
{"id": 9304, "prediction": "Gets the value of the entry argument ."}
{"id": 9306, "prediction": "Swaps two elements ."}
{"id": 9308, "prediction": "Clean up the timeout ."}
{"id": 9310, "prediction": "Preload the protocol ."}
{"id": 9312, "prediction": "Checks that the given handler is valid ."}
{"id": 9314, "prediction": "Creates the delegate implementation ."}
{"id": 9316, "prediction": "Make a new directional counter ."}
{"id": 9318, "prediction": "Checks if a notification is required ."}
{"id": 9320, "prediction": "Get the object instance for the given reference ."}
{"id": 9322, "prediction": "Splits a string into a delimiter ."}
{"id": 9324, "prediction": "Convert the given object to a string ."}
{"id": 9326, "prediction": "Creates new instance ."}
{"id": 9328, "prediction": "Returns the value associated with the given key ."}
{"id": 9330, "prediction": "Flush the map ."}
{"id": 9332, "prediction": "Sets the resolution ."}
{"id": 9334, "prediction": "Gets all children of the given element ."}
{"id": 9336, "prediction": "Retrieves an optional child element from the given tag ."}
{"id": 9338, "prediction": "Get the unique child content of the given element ."}
{"id": 9340, "prediction": "Set the maximum queue size ."}
{"id": 9342, "prediction": "Sets the blocking mode ."}
{"id": 9344, "prediction": "Resolve the system for the given system id ."}
{"id": 9346, "prediction": "Resolve an external system ."}
{"id": 9348, "prediction": "Creates a resolver ."}
{"id": 9350, "prediction": "Resolve all the system reverse order reversed by the given system id ."}
{"id": 9352, "prediction": "Resolves all the entries in the given system ."}
{"id": 9354, "prediction": "Resolves all sub - directories in the catalog ."}
{"id": 9356, "prediction": "Reads a catalog from the input stream ."}
{"id": 9358, "prediction": "Returns the output stream for the given file ."}
{"id": 9360, "prediction": "Deletes the specified marker ."}
{"id": 9362, "prediction": "Creates a new snapshot entry ."}
{"id": 9364, "prediction": "Gets the logger ."}
{"id": 9366, "prediction": "Gets the class name ."}
{"id": 9368, "prediction": "Returns an iterator of names ."}
{"id": 9370, "prediction": "Returns the compatible constructor for the given argument type ."}
{"id": 9372, "prediction": "Deletes an object ."}
{"id": 9374, "prediction": "Update JNDI cache ."}
{"id": 9376, "prediction": "Returns the set of entries in this set ."}
{"id": 9378, "prediction": "Notifies all registered listeners that a property has been added ."}
{"id": 9380, "prediction": "Notifies all registered listeners that a property has been changed ."}
{"id": 9382, "prediction": "Make a property name ."}
{"id": 9384, "prediction": "Loads properties from the given class ."}
{"id": 9386, "prediction": "Returns whether the entity is resolved ."}
{"id": 9388, "prediction": "Resolve the URL to the given system id ."}
{"id": 9390, "prediction": "Sets the value as a String ."}
{"id": 9392, "prediction": "Encodes the given public key ."}
{"id": 9394, "prediction": "Replaces all occurrences of oldStrings with newStr"}
{"id": 9396, "prediction": "Stops the timer ."}
{"id": 9398, "prediction": "Compares two objects ."}
{"id": 9400, "prediction": "Generates a hash code from an array of objects ."}
{"id": 9402, "prediction": "Set field value ."}
{"id": 9404, "prediction": "Initialize this object ."}
{"id": 9406, "prediction": "Sets the root vertex ."}
{"id": 9408, "prediction": "Visits the given vertex using the given vertex ."}
{"id": 9410, "prediction": "Find the vertex with the given data ."}
{"id": 9412, "prediction": "Normalize a string ."}
{"id": 9414, "prediction": "Parses the given XML stream ."}
{"id": 9416, "prediction": "Create a new element ."}
{"id": 9418, "prediction": "Copy attributes from srcElement to dest ."}
{"id": 9420, "prediction": "Gets child elements ."}
{"id": 9422, "prediction": "Gets child elements of the given node ."}
{"id": 9424, "prediction": "Adds a resource to the holder ."}
{"id": 9426, "prediction": "Read a catalog from a catalog ."}
{"id": 9428, "prediction": "Resolve an InputSource ."}
{"id": 9430, "prediction": "Displays the codebase information ."}
{"id": 9432, "prediction": "Strips package name from package ."}
{"id": 9434, "prediction": "Force the given class to be loaded ."}
{"id": 9436, "prediction": "Recursively find all interfaces of a given class"}
{"id": 9438, "prediction": "Checks if the given class is a primitive wrapper ."}
{"id": 9440, "prediction": "Returns the getter method for the given class ."}
{"id": 9442, "prediction": "Convert a class to a Java class ."}
{"id": 9444, "prediction": "Get filenames for a property name"}
{"id": 9446, "prediction": "Returns an iterator over the set ."}
{"id": 9448, "prediction": "Returns a set of entries in this group ."}
{"id": 9450, "prediction": "Remove a property listener ."}
{"id": 9452, "prediction": "Find the property editor for the given type ."}
{"id": 9454, "prediction": "Converts a string value to an object ."}
{"id": 9456, "prediction": "Returns an ApplicationDeadException if the given Throwable is an exception ."}
{"id": 9458, "prediction": "Performs the work of the work queue ."}
{"id": 9460, "prediction": "Lookup an object by name ."}
{"id": 9462, "prediction": "Append the class information to the classloader ."}
{"id": 9464, "prediction": "Read the properties file ."}
{"id": 9466, "prediction": "Queries relative to properties ."}
{"id": 9468, "prediction": "Get catalog files ."}
{"id": 9470, "prediction": "Queries the usage of a static resource ."}
{"id": 10241, "prediction": "Returns the class for the given class name ."}
{"id": 10243, "prediction": "Creates a new instance of the given constructor ."}
{"id": 10245, "prediction": "Calls a method with the specified parameters ."}
{"id": 10247, "prediction": "Get the constructor for the given class ."}
{"id": 10249, "prediction": "Gets the transactional queue ."}
{"id": 10251, "prediction": "Gets the type from an object ."}
{"id": 10253, "prediction": "Returns the state of this node ."}
{"id": 10255, "prediction": "Adds a supported tz endpoint to the endpoint ."}
{"id": 10257, "prediction": "Adds a dimension to the table ."}
{"id": 10259, "prediction": "Finds all non - anonymous variables from a query ."}
{"id": 10261, "prediction": "Write object to file ."}
{"id": 10263, "prediction": "Creates a new search node ."}
{"id": 10265, "prediction": "Assigns the argument registers to the function ."}
{"id": 10267, "prediction": "Gets the major attribute classification ."}
{"id": 10269, "prediction": "Decide the best choice for the given input properties ."}
{"id": 10271, "prediction": "Creates a new variable ."}
{"id": 10273, "prediction": "Returns the element at the specified index ."}
{"id": 10275, "prediction": "Paints the image ."}
{"id": 10277, "prediction": "Creates a graphics context ."}
{"id": 10279, "prediction": "Creates a GIS image ."}
{"id": 10281, "prediction": "Performs a recursive search on the given range ."}
{"id": 10283, "prediction": "Entry point for debugging ."}
{"id": 10285, "prediction": "Parses the given list of terms ."}
{"id": 10287, "prediction": "Lists a functor ."}
{"id": 10289, "prediction": "Creates a new term ."}
{"id": 10291, "prediction": "Parses a floating point literal ."}
{"id": 10293, "prediction": "Retrieves the code from the repository ."}
{"id": 10295, "prediction": "Initializes the builder ."}
{"id": 10297, "prediction": "Peek the next token from the given kind ."}
{"id": 10299, "prediction": "Rollback the soft resources ."}
{"id": 10301, "prediction": "Reserves a call point to the given name ."}
{"id": 10303, "prediction": "Convert the number of years to a year ."}
{"id": 10305, "prediction": "Returns the number of ticks with the given minutes ."}
{"id": 10307, "prediction": "Returns the number of ticks in the given year"}
{"id": 10309, "prediction": "Returns the number of ticks with the given date ."}
{"id": 10311, "prediction": "Returns the month of the given year ."}
{"id": 10313, "prediction": "Applies an entry to the cache ."}
{"id": 10315, "prediction": "Returns a new entry in the cache ."}
{"id": 10317, "prediction": "Invoked when the action is performed ."}
{"id": 10319, "prediction": "Sets the current state of the current state ."}
{"id": 10321, "prediction": "Creates an instance of WAM resolution ."}
{"id": 10323, "prediction": "Returns the expected probability of the given probabilities ."}
{"id": 10325, "prediction": "Sets the ticks ."}
{"id": 10327, "prediction": "Creates a new URL ."}
{"id": 10329, "prediction": "Returns the HTTP headers for this request ."}
{"id": 10331, "prediction": "Returns the request parameters ."}
{"id": 10333, "prediction": "Gets the page scope ."}
{"id": 10335, "prediction": "Returns the application scope ."}
{"id": 10337, "prediction": "Render the tag ."}
{"id": 10339, "prediction": "Creates a new search node ."}
{"id": 10341, "prediction": "Walk the tree traversal ."}
{"id": 10343, "prediction": "Updates all registered registers ."}
{"id": 10345, "prediction": "Removes a clause from the list of arguments ."}
{"id": 10347, "prediction": "Convert an array to an array ."}
{"id": 10349, "prediction": "Returns the fixity of the given axis ."}
{"id": 10351, "prediction": "Compares two objects ."}
{"id": 10353, "prediction": "Register workflow controller ."}
{"id": 10355, "prediction": "Create a factory factory ."}
{"id": 10357, "prediction": "Returns true if this variable is bound ."}
{"id": 10359, "prediction": "Sets the row attribute ."}
{"id": 10361, "prediction": "Returns the AttributeSet or null if the row is null ."}
{"id": 10363, "prediction": "Creates a new instance of the given type ."}
{"id": 10365, "prediction": "Checks if the given CharSequence is an instance ."}
{"id": 10367, "prediction": "Updates the Registers layout ."}
{"id": 10369, "prediction": "Runs the next search path in reverse order ."}
{"id": 10371, "prediction": "Cache a block"}
{"id": 10373, "prediction": "Sets the rate of the heartbeat ."}
{"id": 10375, "prediction": "Skips the specified number of bytes ."}
{"id": 10377, "prediction": "Gets an int from a byte array ."}
{"id": 10379, "prediction": "Write a 16 bit integer to a byte array ."}
{"id": 10381, "prediction": "get short from byte array"}
{"id": 10383, "prediction": "Get the tree state for the given operator ."}
{"id": 10385, "prediction": "Returns the id of the attribute ."}
{"id": 10387, "prediction": "Sets the value of the given attribute ."}
{"id": 10389, "prediction": "Converts a string array into a list of strings ."}
{"id": 10391, "prediction": "Converts a string to upper case ."}
{"id": 10393, "prediction": "Lists all handlers in the given array ."}
{"id": 10395, "prediction": "Sets the code point address ."}
{"id": 10397, "prediction": "Returns the id of the category attribute ."}
{"id": 10399, "prediction": "Returns the last value of the last path ."}
{"id": 10401, "prediction": "Deserialize an object ."}
{"id": 10403, "prediction": "Returns the modulo of the bucket"}
{"id": 10405, "prediction": "Handle exceptions ."}
{"id": 10407, "prediction": "Classify the given decision tree ."}
{"id": 10409, "prediction": "Returns an iterator over this list ."}
{"id": 10411, "prediction": "Convert an integer value to a Base64 log ."}
{"id": 10413, "prediction": "Convert the given int to a BigInteger ."}
{"id": 10415, "prediction": "Convert the given long value to a log base 64 ."}
{"id": 10417, "prediction": "Returns the character count for the given long value ."}
{"id": 10419, "prediction": "Sets the head instructions ."}
{"id": 10421, "prediction": "Sets the current screen state ."}
{"id": 10423, "prediction": "Get the value of the property ."}
{"id": 10425, "prediction": "Gets the iterator for the given key ."}
{"id": 10427, "prediction": "Sets the throttle rate ."}
{"id": 10429, "prediction": "Finds the properties for the given system property ."}
{"id": 10431, "prediction": "Get properties from classpath ."}
{"id": 10433, "prediction": "Removes the given Functor from the given Functor ."}
{"id": 10435, "prediction": "Sets the substitution ."}
{"id": 10437, "prediction": "Close the connector ."}
{"id": 10439, "prediction": "Fire a connector ."}
{"id": 10441, "prediction": "Commits the transaction ."}
{"id": 10443, "prediction": "Request the write operation for the given transaction ."}
{"id": 10445, "prediction": "Acquires a global write lock ."}
{"id": 10447, "prediction": "Ensures that the session is in the session ."}
{"id": 10449, "prediction": "Inserts the specified element into the queue ."}
{"id": 10451, "prediction": "Puts the specified element into the queue ."}
{"id": 10453, "prediction": "Returns the next object ."}
{"id": 10455, "prediction": "Get the property as an Integer ."}
{"id": 10457, "prediction": "Call a function ."}
{"id": 10459, "prediction": "Overrides the reverse traversal ."}
{"id": 10461, "prediction": "Execute a set of bindings for the given query ."}
{"id": 10463, "prediction": "Captures this object to the specified class ."}
{"id": 10465, "prediction": "Retrieves the value associated with the specified class ."}
{"id": 10467, "prediction": "Get all field names for a given class ."}
{"id": 10469, "prediction": "Insert an item into the queue ."}
{"id": 10471, "prediction": "Creates a new search node ."}
{"id": 10473, "prediction": "Creates a new instance of the given term ."}
{"id": 10475, "prediction": "Creates a TermWalker from the given position ."}
{"id": 10477, "prediction": "Creates a TermWalkWalker for a given term ."}
{"id": 10479, "prediction": "Loads properties from a file ."}
{"id": 10481, "prediction": "Get a Properties object from the given path ."}
{"id": 10483, "prediction": "Initializes the font metrics ."}
{"id": 10485, "prediction": "Add a property change listener ."}
{"id": 10487, "prediction": "Fire a property change event ."}
{"id": 10489, "prediction": "Creates a new fade state ."}
{"id": 10491, "prediction": "Show the left bar ."}
{"id": 10493, "prediction": "Sanitizes the radio controls ."}
{"id": 10495, "prediction": "Waits until the specified timeout expires ."}
{"id": 9472, "prediction": "Resolve a source URL ."}
{"id": 9474, "prediction": "Resolve the class ."}
{"id": 9476, "prediction": "Returns the local name of the given element ."}
{"id": 9478, "prediction": "Returns the namespace URI of the given element ."}
{"id": 9480, "prediction": "Returns an InputStream for the given filename ."}
{"id": 9482, "prediction": "Reads the properties file ."}
{"id": 9484, "prediction": "Adds a new vertex to the graph ."}
{"id": 9486, "prediction": "Returns true if the specified edge has the specified edge ."}
{"id": 9488, "prediction": "Returns the edge at the given destination ."}
{"id": 9490, "prediction": "Returns the cost of this vertex ."}
{"id": 9492, "prediction": "Checks if there are any elements in the queue ."}
{"id": 9494, "prediction": "Internal method to install JVM class ."}
{"id": 9496, "prediction": "Dispatch an action to the thread ."}
{"id": 9498, "prediction": "Creates the path for the given view type ."}
{"id": 9500, "prediction": "Creates a stream to a stream ."}
{"id": 9502, "prediction": "Creates a Stream to one ."}
{"id": 9504, "prediction": "Execute the command ."}
{"id": 9506, "prediction": "Main entry point ."}
{"id": 9508, "prediction": "Get superclass arguments ."}
{"id": 9510, "prediction": "Checks if the database connection is configured ."}
{"id": 9512, "prediction": "Create an array of elements from the given class ."}
{"id": 9514, "prediction": "Creates a collection of items from the given type ."}
{"id": 9516, "prediction": "Returns the left value of the given type ."}
{"id": 9518, "prediction": "Throws an IllegalArgumentException with the given type ."}
{"id": 9520, "prediction": "Create a Try object with the given type ."}
{"id": 9522, "prediction": "Run the given SQL in the database ."}
{"id": 9524, "prediction": "Returns the boolean array as a boolean array ."}
{"id": 9526, "prediction": "On upgrade ."}
{"id": 9528, "prediction": "Restore a CSV table ."}
{"id": 9530, "prediction": "Dumps a CSV file to a CSV file ."}
{"id": 9532, "prediction": "Convert a CSV row to a list of values ."}
{"id": 9534, "prediction": "Convert a Map to a String"}
{"id": 9536, "prediction": "Join an array of strings together ."}
{"id": 9538, "prediction": "Write the index to the table ."}
{"id": 9540, "prediction": "Gets the base DAO model ."}
{"id": 9542, "prediction": "Imports a CSV file into a CSV file ."}
{"id": 9544, "prediction": "Restore all tables from CSV file"}
{"id": 9546, "prediction": "Create a query ."}
{"id": 9548, "prediction": "Renders the select ."}
{"id": 9550, "prediction": "Saves the item in the cache ."}
{"id": 9552, "prediction": "Add a value to the list of items in the array"}
{"id": 9554, "prediction": "Returns the next active stack ."}
{"id": 9556, "prediction": "Adds the given plan to this plan ."}
{"id": 9558, "prediction": "Returns the plan at the specified position ."}
{"id": 9560, "prediction": "Gets the result at the given index ."}
{"id": 9562, "prediction": "Returns the children of this node ."}
{"id": 9564, "prediction": "Creates a logger ."}
{"id": 9566, "prediction": "Set the goals ."}
{"id": 9568, "prediction": "Initializes the allocation pools ."}
{"id": 9570, "prediction": "Starts the process selection ."}
{"id": 9572, "prediction": "Register an extension ."}
{"id": 9574, "prediction": "Load an agent from the catalog ."}
{"id": 9576, "prediction": "Creates the agents in the given catalog ."}
{"id": 9578, "prediction": "Load the given extension ."}
{"id": 9580, "prediction": "Get the usage message ."}
{"id": 9582, "prediction": "Parse the option with the given option ."}
{"id": 9584, "prediction": "Returns the object at the given index ."}
{"id": 9586, "prediction": "Adds an object to the cache ."}
{"id": 9588, "prediction": "Adds an object to the queue ."}
{"id": 9590, "prediction": "Returns the type of the given object ."}
{"id": 9592, "prediction": "Main entry point ."}
{"id": 9594, "prediction": "Send a request to the stack"}
{"id": 9596, "prediction": "Sends a message to the agent ."}
{"id": 9598, "prediction": "Creates a new belief set ."}
{"id": 9600, "prediction": "Evaluate a query"}
{"id": 9602, "prediction": "Gets the field by name ."}
{"id": 9604, "prediction": "Builds a human - readable name ."}
{"id": 9606, "prediction": "Check if the given agent is valid"}
{"id": 9608, "prediction": "Determines the goal of the goal ."}
{"id": 9610, "prediction": "Sets the active agent ."}
{"id": 9612, "prediction": "Initializes this instance ."}
{"id": 9614, "prediction": "Finish all agents ."}
{"id": 9616, "prediction": "Returns the pool ID ."}
{"id": 9618, "prediction": "Sets the expression ."}
{"id": 9620, "prediction": "Joins the given properties ."}
{"id": 9622, "prediction": "Returns whether the response is reached ."}
{"id": 9624, "prediction": "Handles the request ."}
{"id": 9626, "prediction": "Returns the parameter with the given name ."}
{"id": 9628, "prediction": "Configures the transaction manager ."}
{"id": 9630, "prediction": "Writes the given artifact to the given file ."}
{"id": 9632, "prediction": "Gets the constructor for the given implementation class ."}
{"id": 9634, "prediction": "Gets the interface method ."}
{"id": 9636, "prediction": "Get the dependency value for the given type ."}
{"id": 9638, "prediction": "Set the default link ."}
{"id": 9640, "prediction": "Handles the response headers ."}
{"id": 9642, "prediction": "Parses body links ."}
{"id": 9644, "prediction": "Returns the specified URI or null if it does not exist ."}
{"id": 9646, "prediction": "Checks if the given method is allowed ."}
{"id": 9648, "prediction": "Registers an instance factory ."}
{"id": 9650, "prediction": "Register a class processor ."}
{"id": 9652, "prediction": "Adds an argument ."}
{"id": 9654, "prediction": "Convert this context to XML ."}
{"id": 9656, "prediction": "Checks if the given template contains the given template ."}
{"id": 9658, "prediction": "Create a parameterized template from a file ."}
{"id": 9660, "prediction": "Retrieves an observable from the specified start index ."}
{"id": 9662, "prediction": "Sets the value of a field ."}
{"id": 9664, "prediction": "Remove an appender from the logger ."}
{"id": 9666, "prediction": "Reads the parameters from the given request ."}
{"id": 9668, "prediction": "Resolve all proxies ."}
{"id": 9670, "prediction": "Parse a directory ."}
{"id": 9672, "prediction": "Find all EObjects in the given resource set ."}
{"id": 9674, "prediction": "Sets the file extension ."}
{"id": 9676, "prediction": "Reads next record ."}
{"id": 9678, "prediction": "Sets the value of a Boolean parameter ."}
{"id": 9680, "prediction": "Converts a string value to an instance type ."}
{"id": 9682, "prediction": "Gets the model ."}
{"id": 9684, "prediction": "Writes the given value to the given HTTP response ."}
{"id": 9686, "prediction": "Configures the window ."}
{"id": 9688, "prediction": "Writes an input stream to the output stream ."}
{"id": 9690, "prediction": "Attaches the given response to the request ."}
{"id": 9692, "prediction": "Get cookies ."}
{"id": 9694, "prediction": "Gets the list of invocations ."}
{"id": 9696, "prediction": "Sets the remote host ."}
{"id": 9698, "prediction": "Remove a prefix from a given path ."}
{"id": 9700, "prediction": "Convert absolute path to absolute path ."}
{"id": 9702, "prediction": "Returns the depth of the given file ."}
{"id": 9704, "prediction": "Sends a JSON object to the client ."}
{"id": 9706, "prediction": "Adds a list of parameter templates to this list ."}
{"id": 9708, "prediction": "Finds all references in the given template ."}
{"id": 9710, "prediction": "Deletes the dialog ."}
{"id": 9712, "prediction": "Creates a new instance of managed class ."}
{"id": 9714, "prediction": "Get the summary of the statistics ."}
{"id": 9716, "prediction": "Get the summary of the sub summary"}
{"id": 9718, "prediction": "Gets the setup class ."}
{"id": 9720, "prediction": "Gets the model resources ."}
{"id": 9722, "prediction": "Loads XML from input stream ."}
{"id": 9724, "prediction": "Checks if the given parameter is an object type ."}
{"id": 9726, "prediction": "Read a JSON object from the input stream ."}
{"id": 10497, "prediction": "Append the classpath ."}
{"id": 10499, "prediction": "Prints the basic documentation ."}
{"id": 10501, "prediction": "Evaluate a sentence ."}
{"id": 10503, "prediction": "Gets the multi - type data ."}
{"id": 10505, "prediction": "Gets a MultiTypeDataData object ."}
{"id": 10507, "prediction": "Gets the multi type data ."}
{"id": 10509, "prediction": "Get the MultiTypeData for a float ."}
{"id": 10511, "prediction": "Get a MultiTypeData object from a string ."}
{"id": 10513, "prediction": "Convert a MultiTypeData object to a MultiTypeData object ."}
{"id": 10515, "prediction": "Clears the specified key ."}
{"id": 10517, "prediction": "Internal method to insert a long ."}
{"id": 10519, "prediction": "Parses the operators from the given terms ."}
{"id": 10521, "prediction": "Checks that the given fix is not null ."}
{"id": 10523, "prediction": "Returns the right pad for the given string ."}
{"id": 10525, "prediction": "Returns the list of options in this context ."}
{"id": 10527, "prediction": "Adds trailing properties to the Properties object ."}
{"id": 10529, "prediction": "Add a command line option ."}
{"id": 10531, "prediction": "Checks that the given argument is valid ."}
{"id": 10533, "prediction": "List enumeration options ."}
{"id": 10535, "prediction": "Sets the tempmer ."}
{"id": 10537, "prediction": "Returns the stem of the given word"}
{"id": 10539, "prediction": "Creates a new instance of a named type ."}
{"id": 10541, "prediction": "Trace the environment ."}
{"id": 10543, "prediction": "Call internal function ."}
{"id": 10545, "prediction": "Checks to see if the track is backward"}
{"id": 10547, "prediction": "Unwraps all traces from the specified array ."}
{"id": 10549, "prediction": "unify two arrays"}
{"id": 10551, "prediction": "Prints the slot to the given position ."}
{"id": 10553, "prediction": "Checks to see if the given cardinality is a solver ."}
{"id": 10555, "prediction": "Returns an iterator of the operators that are valid ."}
{"id": 10557, "prediction": "Swap the location of a tile in a tile ."}
{"id": 10559, "prediction": "Convert a string to a list of characters ."}
{"id": 10561, "prediction": "Format a log message ."}
{"id": 10563, "prediction": "Enqueue the given element ."}
{"id": 10565, "prediction": "Increment the size of the given record ."}
{"id": 10567, "prediction": "Triggers if the old size is less than the new size ."}
{"id": 10569, "prediction": "List bindings for a given name ."}
{"id": 10571, "prediction": "Removes the environment from the environment ."}
{"id": 10573, "prediction": "Sets the literal ."}
{"id": 10575, "prediction": "Pushes a variable reference ."}
{"id": 10577, "prediction": "Update the maximum column width"}
{"id": 10579, "prediction": "Creates a new node with the given successor ."}
{"id": 10581, "prediction": "Substitute a built in a built - in - tree ."}
{"id": 10583, "prediction": "Process a top level check ."}
{"id": 10585, "prediction": "Evaluate two numbers ."}
{"id": 10587, "prediction": "Called when the server is shutting down ."}
{"id": 10589, "prediction": "Inserts an element into the list ."}
{"id": 10591, "prediction": "Update the minimum ."}
{"id": 10593, "prediction": "Inserts a new node into the chain ."}
{"id": 10595, "prediction": "Returns a set containing all the elements of the given search method ."}
{"id": 10597, "prediction": "Finds all solutions in the given collection ."}
{"id": 10599, "prediction": "Restore the values from the map ."}
{"id": 10601, "prediction": "Put a multi - typed property ."}
{"id": 10603, "prediction": "Capture the getter method ."}
{"id": 10605, "prediction": "Converts a modifier to a string ."}
{"id": 10607, "prediction": "Converts a string to a Date object ."}
{"id": 10609, "prediction": "Checks if the given string is a time format ."}
{"id": 10611, "prediction": "Gets token source ."}
{"id": 10613, "prediction": "Gets the token source for the given input stream ."}
{"id": 10615, "prediction": "Returns true if the given instruction is non - null ."}
{"id": 10617, "prediction": "Gets the children of this tree ."}
{"id": 10619, "prediction": "Gets the children of this operator ."}
{"id": 10621, "prediction": "Retrieves the summary of the specified query parameter ."}
{"id": 10623, "prediction": "Execute query ."}
{"id": 10625, "prediction": "Sets the basic type ."}
{"id": 10627, "prediction": "Print variable binding ."}
{"id": 10629, "prediction": "Starts the server ."}
{"id": 10631, "prediction": "Gets the timestamp ."}
{"id": 10633, "prediction": "Update the track info ."}
{"id": 10635, "prediction": "Render the final output ."}
{"id": 10637, "prediction": "Handles an event request ."}
{"id": 10639, "prediction": "Initialize the packet reader ."}
{"id": 10641, "prediction": "Shutdown the connection ."}
{"id": 10643, "prediction": "Parses the contents of an XML file ."}
{"id": 10645, "prediction": "Sets the cli option ."}
{"id": 10647, "prediction": "Internalize the content ."}
{"id": 10649, "prediction": "Sets the value of a property ."}
{"id": 10651, "prediction": "Process request ."}
{"id": 10653, "prediction": "Initialize the PacketWriter ."}
{"id": 10655, "prediction": "Wait for the next packet ."}
{"id": 10657, "prediction": "Returns all the informations of the given type ."}
{"id": 10659, "prediction": "Adds a listener to the cycle ."}
{"id": 10661, "prediction": "Compares two files ."}
{"id": 10663, "prediction": "Checks if the entry is valid ."}
{"id": 10665, "prediction": "Compares two objects ."}
{"id": 10667, "prediction": "Resize the capacity ."}
{"id": 10669, "prediction": "Removes an entry from the map ."}
{"id": 10671, "prediction": "Remove an entry from the map ."}
{"id": 10673, "prediction": "Creates a delegate for the given set of keys ."}
{"id": 10675, "prediction": "Encodes a byte array ."}
{"id": 10677, "prediction": "Encodes the given byte array ."}
{"id": 10679, "prediction": "Sets the track selector ."}
{"id": 10681, "prediction": "Sets the playback controller ."}
{"id": 10683, "prediction": "Broadcast a list of available songs ."}
{"id": 10685, "prediction": "Handles a volume ."}
{"id": 10687, "prediction": "Handles a track ."}
{"id": 10689, "prediction": "Gets a cached request cache ."}
{"id": 10691, "prediction": "Returns a map containing the set of excluded maps ."}
{"id": 10693, "prediction": "Adapts a Session to a Session ."}
{"id": 10695, "prediction": "Deletes the tree ."}
{"id": 10697, "prediction": "Sets the ping interval ."}
{"id": 10699, "prediction": "Add all options for the given application ."}
{"id": 10701, "prediction": "Parses the command line arguments ."}
{"id": 10703, "prediction": "Parse a command line ."}
{"id": 10705, "prediction": "Starts the TLS connection ."}
{"id": 10707, "prediction": "Request compression compression ."}
{"id": 10709, "prediction": "Notifies the listener that the connection is closed ."}
{"id": 10711, "prediction": "Register a SASLMechanism ."}
{"id": 10713, "prediction": "Gets the outputBehaviorBehavior ."}
{"id": 10715, "prediction": "Log an error message ."}
{"id": 10717, "prediction": "Creates a start event ."}
{"id": 10719, "prediction": "Notify listeners about the specified string ."}
{"id": 10721, "prediction": "Returns true if the given resource matches the given ID ."}
{"id": 10723, "prediction": "Provide a list of resource IDs for the given resource IDs ."}
{"id": 10725, "prediction": "Get the cache key ."}
{"id": 10727, "prediction": "Put a cached item into the cache ."}
{"id": 10729, "prediction": "Adds the given file to the jar ."}
{"id": 10731, "prediction": "Adds a MASMech ."}
{"id": 10733, "prediction": "Creates the debug information ."}
{"id": 10735, "prediction": "Register standard events ."}
{"id": 10737, "prediction": "Register event id ."}
{"id": 10739, "prediction": "Unregister event id from the event"}
{"id": 10741, "prediction": "Creates a new DseSession ."}
{"id": 10743, "prediction": "Start playing a track ."}
{"id": 10745, "prediction": "Create a player command ."}
{"id": 10747, "prediction": "Creates a new playlist ."}
{"id": 10749, "prediction": "Add a query parameter ."}
{"id": 10751, "prediction": "Query for a parameter"}
{"id": 9728, "prediction": "Gets the hint value ."}
{"id": 9730, "prediction": "Checks if the given request is Android ."}
{"id": 9732, "prediction": "Gets all properties with the given annotation type ."}
{"id": 9734, "prediction": "Helper method to log a message"}
{"id": 9736, "prediction": "Checks if the host is parser for the given host ."}
{"id": 9738, "prediction": "Gets the managed method ."}
{"id": 9740, "prediction": "Processes a cell ."}
{"id": 9742, "prediction": "Returns true if the given argument isWrapper ."}
{"id": 9744, "prediction": "Get cookie value by name ."}
{"id": 9746, "prediction": "Remove a cookie ."}
{"id": 9748, "prediction": "Gets the target file producer ."}
{"id": 9750, "prediction": "Compiles the class ."}
{"id": 9752, "prediction": "Gets the value of a file ."}
{"id": 9754, "prediction": "Retrieves the login container ."}
{"id": 9756, "prediction": "Invokes the managed method ."}
{"id": 9758, "prediction": "Execute transactional transaction ."}
{"id": 9760, "prediction": "Gets the last file ."}
{"id": 9762, "prediction": "Checks if the request path starts with the given path ."}
{"id": 9764, "prediction": "Gets the http session ."}
{"id": 9766, "prediction": "Read metadata ."}
{"id": 9768, "prediction": "Closes the log ."}
{"id": 9770, "prediction": "Handle all allowed methods"}
{"id": 9772, "prediction": "Deletes the data from the server ."}
{"id": 9774, "prediction": "Returns the names of the arguments ."}
{"id": 9776, "prediction": "Sets the given timeout ."}
{"id": 9778, "prediction": "Returns the next file ."}
{"id": 9780, "prediction": "Print the welcome message ."}
{"id": 9782, "prediction": "Creates a new instance of the given arguments ."}
{"id": 9784, "prediction": "Triggers the trigger ."}
{"id": 9786, "prediction": "Inserts a row into the table ."}
{"id": 9788, "prediction": "setter for score - sets"}
{"id": 9790, "prediction": "setter for variants - sets"}
{"id": 9792, "prediction": "setter for questionType - sets"}
{"id": 9794, "prediction": "getter for depLabel - gets"}
{"id": 9796, "prediction": "getter for semanticType - gets"}
{"id": 9798, "prediction": "getter for sections - gets"}
{"id": 9800, "prediction": "indexed getter for sections - gets an indexed value -"}
{"id": 9802, "prediction": "getter for uri - gets"}
{"id": 9804, "prediction": "getter for types - gets"}
{"id": 9806, "prediction": "getter for targetType - gets"}
{"id": 9808, "prediction": "getter for rank - gets"}
{"id": 9810, "prediction": "getter for string - gets"}
{"id": 9812, "prediction": "getter for candidateAnswers - gets"}
{"id": 9814, "prediction": "indexed getter for candidateAnswerAnswers - gets an indexed value -"}
{"id": 9816, "prediction": "getter for query - gets"}
{"id": 9818, "prediction": "getter for hitList - gets"}
{"id": 9820, "prediction": "indexed getter for hitList - gets an indexed value -"}
{"id": 9822, "prediction": "getter for AbstractQuery - gets"}
{"id": 9824, "prediction": "getter for searchId - gets"}
{"id": 9826, "prediction": "setter for docId - sets"}
{"id": 9828, "prediction": "setter for offsetInInSection - sets"}
{"id": 9830, "prediction": "setter for offsetInInEndSection - sets"}
{"id": 9832, "prediction": "setter for beginSection - sets"}
{"id": 9834, "prediction": "setter for endSection - sets"}
{"id": 9836, "prediction": "setter for principal - sets"}
{"id": 9838, "prediction": "setter for double - sets"}
{"id": 9840, "prediction": "setter for sourceRelation - sets"}
{"id": 9842, "prediction": "setter for subject - sets"}
{"id": 9844, "prediction": "setter for predicate - sets"}
{"id": 9846, "prediction": "setter for objectUri - sets"}
{"id": 9848, "prediction": "setter for operator - sets"}
{"id": 9850, "prediction": "setter for operator - sets"}
{"id": 9852, "prediction": "getter for score - gets"}
{"id": 9854, "prediction": "setter for text - sets"}
{"id": 9856, "prediction": "setter for id - sets"}
{"id": 9858, "prediction": "getter for abbreviation - gets"}
{"id": 9860, "prediction": "setter for concept - sets"}
{"id": 9862, "prediction": "setter for variants - sets"}
{"id": 9864, "prediction": "setter for namedEntityTypes - sets"}
{"id": 9866, "prediction": "setter for conceptType - sets"}
{"id": 9868, "prediction": "setter for occurrences - sets"}
{"id": 9870, "prediction": "setter for concepts - sets"}
{"id": 9872, "prediction": "setter for originalText - sets"}
{"id": 9874, "prediction": "setter for arguments - sets"}
{"id": 9876, "prediction": "setter for label - sets"}
{"id": 9878, "prediction": "Sets the bit at the specified index ."}
{"id": 9880, "prediction": "Create a new instance of the specified directory ."}
{"id": 9882, "prediction": "Convert a HELM object to a HELM notation"}
{"id": 9884, "prediction": "Adds the information about the given string to this object ."}
{"id": 9886, "prediction": "Add an element to the list ."}
{"id": 9888, "prediction": "Validate the polymer id"}
{"id": 9890, "prediction": "Validate the connection details"}
{"id": 9892, "prediction": "Checks if the given string matches the regular expression ."}
{"id": 9894, "prediction": "Serialize a JSON String to a JSON String"}
{"id": 9896, "prediction": "Gets the current grouping information ."}
{"id": 9898, "prediction": "Convert a polymer to a HELM2 object"}
{"id": 9900, "prediction": "Converts a group to a HELM2 pattern ."}
{"id": 9902, "prediction": "Gets the list of all polymer ids of the groups"}
{"id": 9904, "prediction": "Sets the polymer list of Polymer elements ."}
{"id": 9906, "prediction": "Sets the annotation ."}
{"id": 9908, "prediction": "Decide the MonomerNotation of the given type"}
{"id": 9910, "prediction": "Decides whether the given string is a HELM entity"}
{"id": 9912, "prediction": "Parse a string ."}
{"id": 9914, "prediction": "Define the association ."}
{"id": 9916, "prediction": "Creates an edge graph from a collection of edges ."}
{"id": 9918, "prediction": "Initialize the paths ."}
{"id": 9920, "prediction": "Subscribes a pattern to the given class ."}
{"id": 9922, "prediction": "Unsubscribe the given pattern ."}
{"id": 9924, "prediction": "Sends a message to the server ."}
{"id": 9926, "prediction": "Shutdown the server ."}
{"id": 9928, "prediction": "Unlock the run state"}
{"id": 9930, "prediction": "Add a worker to the pool ."}
{"id": 9932, "prediction": "Remove a worker from the pool ."}
{"id": 9934, "prediction": "Runs a worker ."}
{"id": 9936, "prediction": "Gets the number of tasks in the pool ."}
{"id": 9938, "prediction": "Returns true if the given task has been completed ."}
{"id": 9940, "prediction": "Create a common pool ."}
{"id": 9942, "prediction": "Builds a String from the given statement ."}
{"id": 9944, "prediction": "Creates a new list ."}
{"id": 9946, "prediction": "Returns true if the given iterable evaluates to true ."}
{"id": 9948, "prediction": "Folds a list of elements from a list of elements ."}
{"id": 9950, "prediction": "Creates a new instance of an option ."}
{"id": 9952, "prediction": "Creates an empty list map ."}
{"id": 9954, "prediction": "Creates a map from keys and values ."}
{"id": 9956, "prediction": "Normalize a resource name ."}
{"id": 9958, "prediction": "Creates a new CharSequence based on the given range ."}
{"id": 9960, "prediction": "Returns a binary search for the given list ."}
{"id": 9962, "prediction": "Sends a message ."}
{"id": 9964, "prediction": "Binds the given filter to the given handler ."}
{"id": 9966, "prediction": "Returns the integer value of the given Long ."}
{"id": 9968, "prediction": "Return a string representation of the given string ."}
{"id": 9970, "prediction": "Logs a user ."}
{"id": 9972, "prediction": "Gets login user ."}
{"id": 9974, "prediction": "Save user in cookie ."}
{"id": 9976, "prediction": "Returns a cookie for the given uuid ."}
{"id": 9978, "prediction": "Append file separator ."}
{"id": 9980, "prediction": "Logs a debug message ."}
{"id": 9982, "prediction": "Converts a char array to a byte array ."}
{"id": 10753, "prediction": "Get the list of playlists from an event model ."}
{"id": 10755, "prediction": "Checks whether the daemon is running ."}
{"id": 10757, "prediction": "Invoked when the browser is clicked ."}
{"id": 10759, "prediction": "Entry point for launch ."}
{"id": 10761, "prediction": "Exports this object to a map ."}
{"id": 10763, "prediction": "Get the JSON result as a JSONObject ."}
{"id": 10765, "prediction": "Returns the double value of the given double ."}
{"id": 10767, "prediction": "Creates a command resource ."}
{"id": 10769, "prediction": "Verifies that the given command is supported ."}
{"id": 10771, "prediction": "Execute the given callback ."}
{"id": 10773, "prediction": "Returns all the subclasses of the specified fq ."}
{"id": 10775, "prediction": "Searches for all classes in the given package ."}
{"id": 10777, "prediction": "Creates a list of resources ."}
{"id": 10779, "prediction": "Process a packet ."}
{"id": 10781, "prediction": "Error"}
{"id": 10783, "prediction": "Checks if the given event is target ."}
{"id": 10785, "prediction": "Creates a new set ."}
{"id": 10787, "prediction": "Update state ."}
{"id": 10789, "prediction": "Appends the RMS element to the RSM element ."}
{"id": 10791, "prediction": "Filter the RSM response ."}
{"id": 10793, "prediction": "Reloads the server ."}
{"id": 10795, "prediction": "Returns a collection of all entries in the roster group ."}
{"id": 10797, "prediction": "Sets the offline presence ."}
{"id": 10799, "prediction": "Sets the digest for the given connection ID ."}
{"id": 10801, "prediction": "Creates a new player request ."}
{"id": 10803, "prediction": "Register update listener ."}
{"id": 10805, "prediction": "Reload properties ."}
{"id": 10807, "prediction": "Parses the given list of mechanisms ."}
{"id": 10809, "prediction": "Parses a PacketExtension extension ."}
{"id": 10811, "prediction": "Verifies that the given player matches the given activity ."}
{"id": 10813, "prediction": "Gets the secret key ."}
{"id": 10815, "prediction": "Puts a value into the cache ."}
{"id": 10817, "prediction": "Returns a collection of values ."}
{"id": 10819, "prediction": "Returns the entry for the given key ."}
{"id": 10821, "prediction": "Creates a new hash entry ."}
{"id": 10823, "prediction": "Sets whether the element is present or not ."}
{"id": 10825, "prediction": "Delivers a message ."}
{"id": 10827, "prediction": "Initializes the output directory ."}
{"id": 10829, "prediction": "Write a string to a file ."}
{"id": 10831, "prediction": "Decorate a collection ."}
{"id": 10833, "prediction": "Gets the configuration ."}
{"id": 10835, "prediction": "Create a stop music ."}
{"id": 10837, "prediction": "Get the DSE Cluster ."}
{"id": 10839, "prediction": "Add a packet listener ."}
{"id": 10841, "prediction": "Notifies all registered listeners that a packet has been sent ."}
{"id": 10843, "prediction": "Notifies all the interceptors of the given packet ."}
{"id": 10845, "prediction": "Called when a connection is lost ."}
{"id": 10847, "prediction": "Checks if a node is valid ."}
{"id": 10849, "prediction": "Gets the object at the given index ."}
{"id": 10851, "prediction": "Lookup a node by its index ."}
{"id": 10853, "prediction": "Returns the lowest node at the given index ."}
{"id": 10855, "prediction": "Finds the largest node in the subtree ."}
{"id": 10857, "prediction": "Returns the smallest node at the given index ."}
{"id": 10859, "prediction": "Checks if the given node is red ."}
{"id": 10861, "prediction": "Returns the parent of the given node ."}
{"id": 10863, "prediction": "Returns the right child of the given node ."}
{"id": 10865, "prediction": "Rotate a node ."}
{"id": 10867, "prediction": "Inserts a black node in the tree ."}
{"id": 10869, "prediction": "Checks that the given object is not null ."}
{"id": 10871, "prediction": "Checks if the current thread has the specified key ."}
{"id": 10873, "prediction": "Returns the value associated with the given key ."}
{"id": 10875, "prediction": "Clears the current thread ."}
{"id": 10877, "prediction": "Returns a collection of all the values contained in this node ."}
{"id": 10879, "prediction": "Copy all entries from the given map ."}
{"id": 10881, "prediction": "Removes all entries from the cache ."}
{"id": 10883, "prediction": "Gets a player request ."}
{"id": 10885, "prediction": "Opens a new roster store ."}
{"id": 10887, "prediction": "Returns the subnet address of the given address ."}
{"id": 10889, "prediction": "Imports a track info from a hash map ."}
{"id": 10891, "prediction": "Execute an application ."}
{"id": 10893, "prediction": "Print usage ."}
{"id": 10895, "prediction": "Creates a MUTE event ."}
{"id": 10897, "prediction": "Retrieve a known schema from the schema ."}
{"id": 10899, "prediction": "Returns true if the jar is in the jar ."}
{"id": 10901, "prediction": "Return a list of all schemas ."}
{"id": 10903, "prediction": "Gets the name of the jar file ."}
{"id": 10905, "prediction": "Creates an event listener ."}
{"id": 10907, "prediction": "Iterate over the specified collection ."}
{"id": 10909, "prediction": "Get the track info from an event model ."}
{"id": 10911, "prediction": "Imports a resource ."}
{"id": 10913, "prediction": "Get an image from the specified URL ."}
{"id": 10915, "prediction": "Reverses the target map ."}
{"id": 10917, "prediction": "Start the timer ."}
{"id": 10919, "prediction": "Creates an ending event ."}
{"id": 10921, "prediction": "Updates the track info ."}
{"id": 10923, "prediction": "Verifies if the playback can be performed ."}
{"id": 10925, "prediction": "Escape the given string as a string ."}
{"id": 10927, "prediction": "Serialize this object to a JSON string ."}
{"id": 10929, "prediction": "Handle event ."}
{"id": 10931, "prediction": "Sets the property ."}
{"id": 10933, "prediction": "Add a principal ."}
{"id": 10935, "prediction": "Closes the root window ."}
{"id": 10937, "prediction": "Called when the event has expired ."}
{"id": 10939, "prediction": "Sets the name of the group ."}
{"id": 10941, "prediction": "Checks if the given value contains the given value ."}
{"id": 10943, "prediction": "Removes all entries from the map ."}
{"id": 10945, "prediction": "Checks if two keys are equal ."}
{"id": 10947, "prediction": "Ensure the capacity of the capacity ."}
{"id": 10949, "prediction": "Creates an iterator over the entries ."}
{"id": 10951, "prediction": "Registers the output plugin ."}
{"id": 10953, "prediction": "Notifies the listener that the connection has failed ."}
{"id": 9984, "prediction": "Converts a byte array to a simple char array ."}
{"id": 9986, "prediction": "Returns the LocaleData for the given code ."}
{"id": 9988, "prediction": "Creates a new image from the given file ."}
{"id": 9990, "prediction": "Run the given invocation ."}
{"id": 9992, "prediction": "Renders an error message ."}
{"id": 9994, "prediction": "Replies the template for the given view ."}
{"id": 9996, "prediction": "Renders data tables ."}
{"id": 9998, "prediction": "Sets the items in the dialog ."}
{"id": 10000, "prediction": "Returns a list of all the instances of the given injector ."}
{"id": 10002, "prediction": "Compacts the memory into memory ."}
{"id": 10004, "prediction": "Encodes the given value into a string ."}
{"id": 10006, "prediction": "Copy input stream to output stream ."}
{"id": 10008, "prediction": "Copy the contents of the given InputStream to the Writer ."}
{"id": 10010, "prediction": "Copy the contents of the given Reader to the Writer ."}
{"id": 10012, "prediction": "Copy the given reader to the given output stream ."}
{"id": 10014, "prediction": "Compare two Reader"}
{"id": 10016, "prediction": "Retrieves the SQL string for the specified group name ."}
{"id": 10018, "prediction": "Unzip a zip file ."}
{"id": 10020, "prediction": "This method is called when the user has been reset ."}
{"id": 10022, "prediction": "Checks if the given value matches the regular expression ."}
{"id": 10024, "prediction": "Checks if the given string is a phone number ."}
{"id": 10026, "prediction": "Checks if the given string is a valid URL ."}
{"id": 10028, "prediction": "Apply a filter to the server ."}
{"id": 10030, "prediction": "Decode base64 encoded string ."}
{"id": 10032, "prediction": "Read properties from input stream ."}
{"id": 10034, "prediction": "Reads the content of a file ."}
{"id": 10036, "prediction": "Copy the given source file to target directory ."}
{"id": 10038, "prediction": "Constructs a Document from a XML file ."}
{"id": 10040, "prediction": "Constructs a Document from an input stream ."}
{"id": 10042, "prediction": "Sign a document ."}
{"id": 10044, "prediction": "Checks if the given class is a primitive array ."}
{"id": 10046, "prediction": "Resolves a primitive wrapper for a given class ."}
{"id": 10048, "prediction": "Checks if the given value is assignable ."}
{"id": 10050, "prediction": "Gets all interfaces for the given instance ."}
{"id": 10052, "prediction": "Returns a map of all variables in the uri ."}
{"id": 10054, "prediction": "Creates a Druid plugin with the given properties ."}
{"id": 10056, "prediction": "Replies the context for the given type ."}
{"id": 10058, "prediction": "Convert an object to an object ."}
{"id": 10060, "prediction": "Retrieves a parameter from the context ."}
{"id": 10062, "prediction": "Create a session ."}
{"id": 10064, "prediction": "Sets the shared variable ."}
{"id": 10066, "prediction": "Sets the parameter ."}
{"id": 10068, "prediction": "Returns true if all the permissions are allowed ."}
{"id": 10070, "prediction": "Find record by query ."}
{"id": 10072, "prediction": "Check if a column is new ."}
{"id": 10074, "prediction": "Process a SoftValue ."}
{"id": 10076, "prediction": "Returns true if the specified string matches the specified pattern ."}
{"id": 10078, "prediction": "Gets the protobuf entity ."}
{"id": 10080, "prediction": "Get all Protobuf fields from class ."}
{"id": 10082, "prediction": "Gets the field setter for the given field ."}
{"id": 10084, "prediction": "Gets the JsonFactory instance ."}
{"id": 10086, "prediction": "Sets the borders of the border ."}
{"id": 10088, "prediction": "Copies the given object to the given target object ."}
{"id": 10090, "prediction": "Get the value of a property ."}
{"id": 10092, "prediction": "Add the app to the application ."}
{"id": 10094, "prediction": "Gets the token ."}
{"id": 10096, "prediction": "Get a resource from the classpath"}
{"id": 10098, "prediction": "Get the input stream for the given class ."}
{"id": 10100, "prediction": "Initialize scheme ."}
{"id": 10102, "prediction": "Set scheme scheme ."}
{"id": 10104, "prediction": "Set the host ."}
{"id": 10106, "prediction": "Append the path to the path ."}
{"id": 10108, "prediction": "Set the fragment ."}
{"id": 10110, "prediction": "Creates a prepared statement for the given iterator ."}
{"id": 10112, "prediction": "Read a string from a file ."}
{"id": 10114, "prediction": "Get the contents of the clipboard"}
{"id": 10116, "prediction": "Open a file"}
{"id": 10118, "prediction": "Sets the service parameters ."}
{"id": 10120, "prediction": "Find a parametrized service ."}
{"id": 10122, "prediction": "Parse a query string from the given response ."}
{"id": 10124, "prediction": "Returns the encoding of the given xml string ."}
{"id": 10126, "prediction": "Creates a new instance of Connection ."}
{"id": 10128, "prediction": "Visit a package declaration ."}
{"id": 10130, "prediction": "Visit a type declaration ."}
{"id": 10132, "prediction": "Returns a DeclarationFilter that matches the given mods ."}
{"id": 10134, "prediction": "Returns a new DeclarationFilter with the given DeclarationFilter ."}
{"id": 10136, "prediction": "Gets the value as a map ."}
{"id": 10138, "prediction": "Prepare the mbean query ."}
{"id": 10140, "prediction": "Converts a byte array to a hex string ."}
{"id": 10142, "prediction": "Parses a sql string ."}
{"id": 10144, "prediction": "Sets protobuf value ."}
{"id": 10146, "prediction": "Determines whether this file should be accepted or not ."}
{"id": 10148, "prediction": "Creates a map of expected labels ."}
{"id": 10150, "prediction": "Get the generic supertype of the given type ."}
{"id": 10152, "prediction": "Invoked when a single object is polled ."}
{"id": 10154, "prediction": "Gets the declared methods of the given class ."}
{"id": 10156, "prediction": "Gets all declared methods of the given class ."}
{"id": 10158, "prediction": "Dumps a byte into a byte array ."}
{"id": 10160, "prediction": "Remove all characters from a string ."}
{"id": 10162, "prediction": "Initialize audit ."}
{"id": 10164, "prediction": "Initializes the validator ."}
{"id": 10166, "prediction": "Returns the locale code for the given locale ."}
{"id": 10168, "prediction": "Creates a new instance of the given statement ."}
{"id": 10170, "prediction": "Adds an element to the list ."}
{"id": 10172, "prediction": "Make an input stream ."}
{"id": 10174, "prediction": "Checks if the given tokens match pattern ."}
{"id": 10176, "prediction": "Returns true if this rectangle contains the specified rectangle ."}
{"id": 10178, "prediction": "Returns the intersection of this rectangle ."}
{"id": 10180, "prediction": "Replace this rectangle with another ."}
{"id": 10182, "prediction": "Returns the number of columns in the specified column ."}
{"id": 10184, "prediction": "Returns the bounds of the cell within the specified coordinates ."}
{"id": 10186, "prediction": "Calculates the number of rows in the area ."}
{"id": 10188, "prediction": "Main entry point ."}
{"id": 10190, "prediction": "Copies the code buffer to a new code buffer ."}
{"id": 10192, "prediction": "Initialize the servlet context ."}
{"id": 10194, "prediction": "Add a child to this tree ."}
{"id": 10196, "prediction": "Generate the next solver ."}
{"id": 10198, "prediction": "Add instructions to the parent ."}
{"id": 10200, "prediction": "Register a work panel ."}
{"id": 10202, "prediction": "Creates a new instance of the specified type ."}
{"id": 10204, "prediction": "Optimize a list of WAM instructions ."}
{"id": 10206, "prediction": "Service the request ."}
{"id": 10208, "prediction": "Renders a button ."}
{"id": 10210, "prediction": "Initialize the training data set ."}
{"id": 10212, "prediction": "Returns the index of the given key ."}
{"id": 10214, "prediction": "Remove a value from the map ."}
{"id": 10216, "prediction": "Returns true if the given property has the given property ."}
{"id": 10218, "prediction": "Fetch the value from the given property ."}
{"id": 10220, "prediction": "Initializes the setter method ."}
{"id": 10222, "prediction": "Initialize the lookup table ."}
{"id": 10224, "prediction": "Unify two variables ."}
{"id": 10226, "prediction": "Compiles the given query ."}
{"id": 10228, "prediction": "Allocate local variable registers ."}
{"id": 10230, "prediction": "Displays a clause ."}
{"id": 10232, "prediction": "Puts a 32 - bit integer into a byte buffer ."}
{"id": 10234, "prediction": "Returns the string value associated with this attribute ."}
{"id": 10236, "prediction": "Reads a term ."}
{"id": 10238, "prediction": "Checks if the given class is subtype of the given class ."}
{"id": 10240, "prediction": "Checks if the given parent class is a subtype of the given parent class ."}
{"id": 10242, "prediction": "Creates a new instance of the specified class ."}
{"id": 10244, "prediction": "Calls the given method on the given parameters ."}
{"id": 10246, "prediction": "Calls a static method ."}
{"id": 10248, "prediction": "Find all setters that match the given property name ."}
{"id": 10250, "prediction": "Gets the transactional queue ."}
{"id": 10252, "prediction": "Reset the search algorithm ."}
{"id": 10254, "prediction": "Creates a new instance of the specified type ."}
{"id": 10256, "prediction": "Adds a table to the table ."}
{"id": 10258, "prediction": "Returns a set of free variables ."}
{"id": 10260, "prediction": "Compares two objects ."}
{"id": 10262, "prediction": "Reads a stream from the input stream ."}
{"id": 10264, "prediction": "Generate a trace indent ."}
{"id": 10266, "prediction": "Returns true if the argument is in the last body of the argument ."}
{"id": 10268, "prediction": "Returns true if any of the given examples have the same attributes ."}
{"id": 10270, "prediction": "Creates a new Functor with the given name and arguments ."}
{"id": 10272, "prediction": "Execute action ."}
{"id": 10274, "prediction": "Sets the texture ."}
{"id": 10276, "prediction": "Creates a buffered image ."}
{"id": 10278, "prediction": "Creates a binary image ."}
{"id": 10280, "prediction": "Sets the queue algorithm ."}
{"id": 10282, "prediction": "Creates a new search node ."}
{"id": 10284, "prediction": "Creates a clause ."}
{"id": 10286, "prediction": "Convert a Functor to a Functor ."}
{"id": 10288, "prediction": "Returns an array of term arguments ."}
{"id": 10290, "prediction": "Parse an integer literal ."}
{"id": 10292, "prediction": "Parse a literal literal ."}
{"id": 10294, "prediction": "Internally initialize an operator ."}
{"id": 10296, "prediction": "Consume token ."}
{"id": 10298, "prediction": "Bind this transaction to the current session ."}
{"id": 10300, "prediction": "Collects a collection of elements from the target collection ."}
{"id": 10302, "prediction": "Calculates the time of day and day ticks ."}
{"id": 10304, "prediction": "Returns the number of ticks with the given hours ."}
{"id": 10306, "prediction": "Calculates the number of ticks in seconds ."}
{"id": 10308, "prediction": "Returns the number of ticks in the given month"}
{"id": 10310, "prediction": "Calculates the millis start of the given year ."}
{"id": 10312, "prediction": "Reads a byte array ."}
{"id": 10314, "prediction": "Returns the entry for the given key ."}
{"id": 10316, "prediction": "Rehashes the table ."}
{"id": 10318, "prediction": "Sets the next available state ."}
{"id": 10320, "prediction": "Sets whether this property is finished ."}
{"id": 10322, "prediction": "Returns an iterator over the elements in this set ."}
{"id": 10324, "prediction": "Returns the p - distribution for the given distribution ."}
{"id": 10326, "prediction": "Performs the action on the request ."}
{"id": 10328, "prediction": "Returns information about the request ."}
{"id": 10330, "prediction": "Gets the cookies ."}
{"id": 10332, "prediction": "Gets the request scope ."}
{"id": 10334, "prediction": "Gets the session scope ."}
{"id": 10336, "prediction": "Gets the user principal ."}
{"id": 10338, "prediction": "Convert a property to a HTML table ."}
{"id": 10340, "prediction": "Sets the current screen state ."}
{"id": 10342, "prediction": "Compares two objects ."}
{"id": 10344, "prediction": "Notify all registered listeners ."}
{"id": 10346, "prediction": "Returns true if the top level is in the top level ."}
{"id": 10348, "prediction": "Sets the arguments ."}
{"id": 10350, "prediction": "Returns true if the input variable is in the label ."}
{"id": 10352, "prediction": "Report a property change event ."}
{"id": 10354, "prediction": "Gets the enum attribute factory for the given class ."}
{"id": 10356, "prediction": "Returns the storage cell for this variable ."}
{"id": 10358, "prediction": "Set column attribute ."}
{"id": 10360, "prediction": "Returns the AttributeSet or null if the column is null ."}
{"id": 10362, "prediction": "Inserts the given cell into the given cell ."}
{"id": 10364, "prediction": "Creates a new instance of a type pattern ."}
{"id": 10366, "prediction": "Creates the initial context ."}
{"id": 10368, "prediction": "Returns the value of this variable ."}
{"id": 10370, "prediction": "Joins the two paths with the given reverse path ."}
{"id": 10372, "prediction": "Get a single properties from a resource ."}
{"id": 10374, "prediction": "Read a byte array ."}
{"id": 10376, "prediction": "Groups all disjunctive expressions from the given expressions ."}
{"id": 10378, "prediction": "Write an int to a byte array ."}
{"id": 10380, "prediction": "Get a 16 bit integer from a byte array ."}
{"id": 10382, "prediction": "Write a short to a byte array ."}
{"id": 10384, "prediction": "Returns an iterator of all the operators of this tree ."}
{"id": 10386, "prediction": "Returns the value of the specified attribute ."}
{"id": 10388, "prediction": "Convert a string to a list of strings"}
{"id": 10390, "prediction": "Convert name to camelCase"}
{"id": 10392, "prediction": "Returns the current configuration ."}
{"id": 10394, "prediction": "Resolve a call point ."}
{"id": 10396, "prediction": "Checks if this category is subcategory ."}
{"id": 10398, "prediction": "Get the value at the specified level ."}
{"id": 10400, "prediction": "Writes the object to the output stream ."}
{"id": 10402, "prediction": "Computes the Hadoop distance between the two points ."}
{"id": 10404, "prediction": "Add an error message ."}
{"id": 10406, "prediction": "Writes the given string to the output stream ."}
{"id": 10408, "prediction": "Compares two objects ."}
{"id": 10410, "prediction": "Returns the log base of the given value ."}
{"id": 10412, "prediction": "Convert an integer value to a log base64 ."}
{"id": 10414, "prediction": "Returns the log base 64 - bit integer ."}
{"id": 10416, "prediction": "Returns the number of characters in the given integer"}
{"id": 10418, "prediction": "Calculates the number of characters for a given number ."}
{"id": 10420, "prediction": "Emits the given instruction to the given code point ."}
{"id": 10422, "prediction": "Evaluate the given predicate ."}
{"id": 10424, "prediction": "Get the properties for the given key ."}
{"id": 10426, "prediction": "Creates an array of array properties ."}
{"id": 10428, "prediction": "Evaluate a numeric type ."}
{"id": 10430, "prediction": "Get the properties from the system properties ."}
{"id": 10432, "prediction": "Retrieves the properties from the CWD resource ."}
{"id": 10434, "prediction": "Get the value of this variable assignment ."}
{"id": 10436, "prediction": "Gets the priority queue ."}
{"id": 10438, "prediction": "Append an event to the server ."}
{"id": 10440, "prediction": "Initialize printers ."}
{"id": 10442, "prediction": "Rolls back the transaction ."}
{"id": 10444, "prediction": "Adds a write operation to the cache ."}
{"id": 10446, "prediction": "Release the global write lock ."}
{"id": 10448, "prediction": "Enter a scope node ."}
{"id": 10450, "prediction": "Retrieves an element from the queue ."}
{"id": 10452, "prediction": "Inserts a data item into the queue ."}
{"id": 10454, "prediction": "Get the property as a boolean ."}
{"id": 10456, "prediction": "Get the property as a Long ."}
{"id": 10458, "prediction": "Sets the visitor visit ."}
{"id": 10460, "prediction": "Retrieves the code from the given call ."}
{"id": 10462, "prediction": "Decodes the given variable ."}
{"id": 10464, "prediction": "Restores the fields of this object ."}
{"id": 10466, "prediction": "Associates the specified class with the specified value ."}
{"id": 10468, "prediction": "Execute the command line ."}
{"id": 10470, "prediction": "Removes the data from the queue ."}
{"id": 10472, "prediction": "Creates a new priority queue for the given node ."}
{"id": 10474, "prediction": "Creates a new GoalWalkerWalker for the given term ."}
{"id": 10476, "prediction": "Creates a positional walker from the given position ."}
{"id": 10478, "prediction": "Load properties from input stream ."}
{"id": 10480, "prediction": "Loads properties from a URL ."}
{"id": 10482, "prediction": "Compute the grid size ."}
{"id": 10484, "prediction": "Add a listener to the list of listeners ."}
{"id": 10486, "prediction": "Remove a property change listener ."}
{"id": 10488, "prediction": "Creates a new instance of the specified type ."}
{"id": 10490, "prediction": "Show the horizontal bar ."}
{"id": 10492, "prediction": "Show the right bar ."}
{"id": 10494, "prediction": "Waits until the specified condition is complete ."}
{"id": 10496, "prediction": "Execute the command line ."}
{"id": 10498, "prediction": "Creates a new instance of the given type ."}
{"id": 10500, "prediction": "Initializes the console reader ."}
{"id": 10502, "prediction": "Evaluate the query ."}
{"id": 10504, "prediction": "Get a MultiTypeData object from a byte array ."}
{"id": 10506, "prediction": "Get a MultiTypeDataData from a Short ."}
{"id": 10508, "prediction": "Gets the multi type data ."}
{"id": 10510, "prediction": "Gets the multi type data ."}
{"id": 10512, "prediction": "Gets the multi - type data ."}
{"id": 10514, "prediction": "Sets an attribute ."}
{"id": 10516, "prediction": "Expands the given key ."}
{"id": 10518, "prediction": "Compares two objects ."}
{"id": 10520, "prediction": "Gets the operators matching the given name ."}
{"id": 10522, "prediction": "Creates a new node ."}
{"id": 10524, "prediction": "Gets the string representation of this parser ."}
{"id": 10526, "prediction": "Get the usage of the command line options ."}
{"id": 10528, "prediction": "Adds the options to the Properties object ."}
{"id": 10530, "prediction": "Takes a set of arguments and converts them to a set of arguments ."}
{"id": 10532, "prediction": "Compare two Iterators ."}
{"id": 10534, "prediction": "Returns the options ."}
{"id": 10536, "prediction": "Gets the actual temp stream for the given entity ."}
{"id": 10538, "prediction": "Main entry point ."}
{"id": 10540, "prediction": "Resets the state of this instruction ."}
{"id": 10542, "prediction": "Returns a trace frame that represents a choice frame ."}
{"id": 10544, "prediction": "Returns the next stack frame ."}
{"id": 10546, "prediction": "Sends a trace to the destination ."}
{"id": 10548, "prediction": "Recursively tidy up the path to the specified point ."}
{"id": 10550, "prediction": "Unify a constant ."}
{"id": 10552, "prediction": "Creates a random state that will be used to generate a random state ."}
{"id": 10554, "prediction": "Returns a new state for the given operator ."}
{"id": 10556, "prediction": "Pretty prints a formatted string ."}
{"id": 10558, "prediction": "Swap two tiles ."}
{"id": 10560, "prediction": "Creates a new state with the given character list ."}
{"id": 10562, "prediction": "Converts the given level to a log4j ."}
{"id": 10564, "prediction": "Enqueue an element ."}
{"id": 10566, "prediction": "Decrement the size of a record ."}
{"id": 10568, "prediction": "Return an enumeration of the given name ."}
{"id": 10570, "prediction": "Add an environment to the environment ."}
{"id": 10572, "prediction": "Runs the GCTillable ."}
{"id": 10574, "prediction": "Resolve a mixin reference ."}
{"id": 10576, "prediction": "Set the maximum row height ."}
{"id": 10578, "prediction": "Performs an action on the session ."}
{"id": 10580, "prediction": "Execute the action forward ."}
{"id": 10582, "prediction": "Initialise the symbol table ."}
{"id": 10584, "prediction": "Gets the string representation of a function ."}
{"id": 10586, "prediction": "Starts the running state ."}
{"id": 10588, "prediction": "Called when the state is terminated ."}
{"id": 10590, "prediction": "Convert n to log log"}
{"id": 10592, "prediction": "Compares two nodes ."}
{"id": 10594, "prediction": "Restart the cache ."}
{"id": 10596, "prediction": "Returns a collection of all elements of the given search method ."}
{"id": 10598, "prediction": "Returns the next element in the map ."}
{"id": 10600, "prediction": "Retrieves the value of the specified property ."}
{"id": 10602, "prediction": "Adds a property to the map ."}
{"id": 10604, "prediction": "Removes the element from the queue ."}
{"id": 10606, "prediction": "Converts a string to an integer ."}
{"id": 10608, "prediction": "Checks if a string is a valid date ."}
{"id": 10610, "prediction": "Checks if a string is a valid date time ."}
{"id": 10612, "prediction": "Returns a token source for the given file ."}
{"id": 10614, "prediction": "Checks if the given instruction is constant ."}
{"id": 10616, "prediction": "Returns true if the given instruction is a non - null non - null non - null non - empty non - null non - empty non - null argument ."}
{"id": 10618, "prediction": "Returns the argument at the given index ."}
{"id": 10620, "prediction": "Returns a string representation of the arguments ."}
{"id": 10622, "prediction": "Retrieves a list of records from the given parameters ."}
{"id": 10624, "prediction": "Emits the given MAMM machine to the given machine ."}
{"id": 10626, "prediction": "Analyzes the input stream ."}
{"id": 10628, "prediction": "Expands all the results in a set of solutions ."}
{"id": 10630, "prediction": "Reads the packet ."}
{"id": 10632, "prediction": "Calculate the uuid for the current timestamp ."}
{"id": 10634, "prediction": "Updates the volume ."}
{"id": 10636, "prediction": "Handles a resource request ."}
{"id": 10638, "prediction": "Fires a start request ."}
{"id": 10640, "prediction": "Start the server ."}
{"id": 10642, "prediction": "Resets the parser ."}
{"id": 10644, "prediction": "Process packet ."}
{"id": 10646, "prediction": "Creates a chat message ."}
{"id": 10648, "prediction": "Reset the given map ."}
{"id": 10650, "prediction": "Adds a new filter to the list of filters ."}
{"id": 10652, "prediction": "Resets all properties ."}
{"id": 10654, "prediction": "Send a packet to the server ."}
{"id": 10656, "prediction": "Open a stream"}
{"id": 10658, "prediction": "Returns true if the descriptor contains the given descriptor ."}
{"id": 10660, "prediction": "Shuts down the timer ."}
{"id": 10662, "prediction": "Clean the specified byte buffer ."}
{"id": 10664, "prediction": "Mask the given key ."}
{"id": 10666, "prediction": "Returns the entry for the given key ."}
{"id": 10668, "prediction": "Add all keys to the map ."}
{"id": 10670, "prediction": "Removes an entry from the cache ."}
{"id": 10672, "prediction": "Adds an entry to the bucket ."}
{"id": 10674, "prediction": "Encodes the given value into a string ."}
{"id": 10676, "prediction": "Encodes the given string ."}
{"id": 10678, "prediction": "Iterate over the collection of elements ."}
{"id": 10680, "prediction": "Sets the progress controller ."}
{"id": 10682, "prediction": "Sets the volume of the controller ."}
{"id": 10684, "prediction": "Handle command resources ."}
{"id": 10686, "prediction": "Handle progress ."}
{"id": 10688, "prediction": "Gets the thread cache ."}
{"id": 10690, "prediction": "Get the alt field from stream id ."}
{"id": 10692, "prediction": "Returns the shard path for the given id ."}
{"id": 10694, "prediction": "Invokes the given method with the given name ."}
{"id": 10696, "prediction": "Updates all fields in the entity ."}
{"id": 10698, "prediction": "Schedule a ping task ."}
{"id": 10700, "prediction": "Checks if the given option has an option ."}
{"id": 10702, "prediction": "Print usage information ."}
{"id": 10704, "prediction": "Initialize the packet ."}
{"id": 10706, "prediction": "Gets the compression handler ."}
{"id": 10708, "prediction": "Start the stream compression ."}
{"id": 10710, "prediction": "Notifies all listeners that the connection has been registered ."}
{"id": 10712, "prediction": "Returns a list of registered SASL mechanisms ."}
{"id": 10714, "prediction": "Log a formatted message ."}
{"id": 10716, "prediction": "Print a message to a PrintStream"}
{"id": 10718, "prediction": "Creates a start event ."}
{"id": 10720, "prediction": "Checks if the given resource matches the given resource ."}
{"id": 10722, "prediction": "Checks if the given list of resources are present ."}
{"id": 10724, "prediction": "Gets cached data from cache ."}
{"id": 10726, "prediction": "Removes the specified key from the cache ."}
{"id": 10728, "prediction": "Gets the location of the CFS ."}
{"id": 10730, "prediction": "Adds a jar to the jar ."}
{"id": 10732, "prediction": "Adds a list of KasMechs to the system ."}
{"id": 10734, "prediction": "Activate the security proxy ."}
{"id": 10736, "prediction": "Register an event listener ."}
{"id": 10738, "prediction": "Performs lock ."}
{"id": 10740, "prediction": "Checks if the given event is running ."}
{"id": 10742, "prediction": "Creates a player error ."}
{"id": 10744, "prediction": "Stops the player ."}
{"id": 10746, "prediction": "Creates a new playlist ."}
{"id": 10748, "prediction": "Appends the URL to the postfix ."}
{"id": 10750, "prediction": "Query the value of a parameter"}
{"id": 10752, "prediction": "Add a query parameter ."}
{"id": 10754, "prediction": "Launch the button ."}
{"id": 10756, "prediction": "Checks if a given URL exists ."}
{"id": 10758, "prediction": "Creates an image for the given path ."}
{"id": 10760, "prediction": "Returns a copy of this array with the specified values ."}
{"id": 10762, "prediction": "Gets a JSON result ."}
{"id": 10764, "prediction": "Returns the integer value as a Integer ."}
{"id": 10766, "prediction": "Returns the string representation of the given value ."}
{"id": 10768, "prediction": "Verifies that the given command is a valid command ."}
{"id": 10770, "prediction": "Verifies that the given command is valid ."}
{"id": 10772, "prediction": "Returns all subclasses of the given class ."}
{"id": 10774, "prediction": "Searches for the given class and jars ."}
{"id": 10776, "prediction": "Search for classes ."}
{"id": 10778, "prediction": "Returns the size of this map ."}
{"id": 10780, "prediction": "Returns the volume of a given event ."}
{"id": 10782, "prediction": "Create an error response ."}
{"id": 10784, "prediction": "Sets the login enabled ."}
{"id": 10786, "prediction": "Sets the name of the user ."}
{"id": 10788, "prediction": "Returns a list of all roster groups in the roster ."}
{"id": 10790, "prediction": "Parses a query element ."}
{"id": 10792, "prediction": "Creates a LeavingEvent ."}
{"id": 10794, "prediction": "Create a roster entry ."}
{"id": 10796, "prediction": "Gets the presence resource for a user ."}
{"id": 10798, "prediction": "Notifies listeners that the roster changed ."}
{"id": 10800, "prediction": "Generate a resource ."}
{"id": 10802, "prediction": "Gets the time of the current event ."}
{"id": 10804, "prediction": "Initialize the properties file ."}
{"id": 10806, "prediction": "Parses a stream error ."}
{"id": 10808, "prediction": "Parses a collection of compression methods ."}
{"id": 10810, "prediction": "Decode a string to a type"}
{"id": 10812, "prediction": "Gets the state from the given resource model ."}
{"id": 10814, "prediction": "Check if the subdomain is allowed"}
{"id": 10816, "prediction": "Returns a set of key - value pairs ."}
{"id": 10818, "prediction": "Purges this reference to the specified reference ."}
{"id": 10820, "prediction": "Returns the hash code for the given key ."}
{"id": 10822, "prediction": "Controls whether the event is present or not ."}
{"id": 10824, "prediction": "Update the presence resource ."}
{"id": 10826, "prediction": "Generate script ."}
{"id": 10828, "prediction": "Loads properties from a file ."}
{"id": 10830, "prediction": "Returns the progress of the given event ."}
{"id": 10832, "prediction": "Find service resolver ."}
{"id": 10834, "prediction": "Gets the thread pool ."}
{"id": 10836, "prediction": "Verifies that the event is stopped ."}
{"id": 10838, "prediction": "Adds a connection listener ."}
{"id": 10840, "prediction": "Adds a listener to the packet ."}
{"id": 10842, "prediction": "Adds a new interceptor to the packet ."}
{"id": 10844, "prediction": "Converts a value to an object ."}
{"id": 10846, "prediction": "Gets the current thread id ."}
{"id": 10848, "prediction": "Retrieves the value associated with the given key ."}
{"id": 10850, "prediction": "Returns a valid node that is equal to the given value ."}
{"id": 10852, "prediction": "Compares two objects ."}
{"id": 10854, "prediction": "Returns the most significant node at the given index ."}
{"id": 10856, "prediction": "Returns the most valid node at the given index ."}
{"id": 10858, "prediction": "Copies the given node to the given node ."}
{"id": 10860, "prediction": "Check if a node is black ."}
{"id": 10862, "prediction": "Returns the parent node at the given index ."}
{"id": 10864, "prediction": "Returns the left child of the given node ."}
{"id": 10866, "prediction": "Rotate a node ."}
{"id": 10868, "prediction": "Reduce a deleted node ."}
{"id": 10870, "prediction": "Insert a new value into the map ."}
{"id": 10872, "prediction": "Checks if the current thread is contained in the current thread ."}
{"id": 10874, "prediction": "Removes the specified key from the map ."}
{"id": 10876, "prediction": "Returns a set of key - value pairs ."}
{"id": 10878, "prediction": "Returns a set of all entries that have been filtered ."}
{"id": 10880, "prediction": "Removes expired entries from the cache ."}
{"id": 10882, "prediction": "Activate properties ."}
{"id": 10884, "prediction": "Initializes the roster store ."}
{"id": 10886, "prediction": "Scans a set of IPv4 addresses ."}
{"id": 10888, "prediction": "Export this record as a string ."}
{"id": 10890, "prediction": "Adds all applications ."}
{"id": 10892, "prediction": "Prints the list ."}
{"id": 10894, "prediction": "Entry point ."}
{"id": 10896, "prediction": "Creates a MUTE event ."}
{"id": 10898, "prediction": "Write a file to a file"}
{"id": 10900, "prediction": "Add an option to the application ."}
{"id": 10902, "prediction": "Gets the field by name ."}
{"id": 10904, "prediction": "Converts a map into an immutable map ."}
{"id": 10906, "prediction": "Sets the state of this iterator ."}
{"id": 10908, "prediction": "Performs an iteration on the given iterator ."}
{"id": 10910, "prediction": "Exports data to a map ."}
{"id": 10912, "prediction": "Returns the error image for the specified line ."}
{"id": 10914, "prediction": "Get a JSON string from a URL ."}
{"id": 10916, "prediction": "Returns the multiplication of this matrix ."}
{"id": 10918, "prediction": "Return the object to the pool ."}
{"id": 10920, "prediction": "Get current track info ."}
{"id": 10922, "prediction": "Shuffles a playlist ."}
{"id": 10924, "prediction": "Export the data to the queue ."}
{"id": 10926, "prediction": "Called when a challenge is received ."}
{"id": 10928, "prediction": "Processes all output extensions ."}
{"id": 10930, "prediction": "Joins all queues ."}
{"id": 10932, "prediction": "Remove a property from the map ."}
{"id": 10934, "prediction": "Remove the principal ."}
{"id": 10936, "prediction": "This method is called when the user s user needs to be updated ."}
{"id": 10938, "prediction": "Checks if the given resource is a permanent ."}
{"id": 10940, "prediction": "Returns true if the given key matches the given key ."}
{"id": 10942, "prediction": "Adds a value to the map ."}
{"id": 10944, "prediction": "Returns the hash code for the given key ."}
{"id": 10946, "prediction": "Checks if two values are equal ."}
{"id": 10948, "prediction": "Calculates the new capacity for the given capacity ."}
{"id": 10950, "prediction": "Loads the data from an input stream ."}
{"id": 10952, "prediction": "Initialize the Addon ."}
{"id": 10954, "prediction": "Notifies the listener that the connection has been created ."}
